/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 10.1.22-MariaDB : Database - stj_ecphp_v2
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`stj_ecphp_v2` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `stj_ecphp_v2`;

/*Table structure for table `manipulationtracking` */

DROP TABLE IF EXISTS `manipulationtracking`;

CREATE TABLE `manipulationtracking` (
  `SeqNo` bigint(20) NOT NULL AUTO_INCREMENT,
  `data` longtext,
  `clientid` varchar(3) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `manipulationtracking` */

LOCK TABLES `manipulationtracking` WRITE;

UNLOCK TABLES;

/*Table structure for table `storeprice` */

DROP TABLE IF EXISTS `storeprice`;

CREATE TABLE `storeprice` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `ShopCode` varchar(10) DEFAULT NULL,
  `ShopName` varchar(40) DEFAULT NULL,
  `Date` date DEFAULT NULL,
  `PurchasePriceNoTax` double DEFAULT NULL,
  `PurchasePriceTax` double DEFAULT NULL,
  `PurchasePriceYesTax` double DEFAULT NULL,
  `StandardPriceNoTax` double DEFAULT NULL,
  `StandardPriceTax` double DEFAULT NULL,
  `StandardPriceYesTax` double DEFAULT NULL,
  `SaleOffPurchasePriceNoTax` double DEFAULT NULL,
  `SaleOffPurchasePriceTax` double DEFAULT NULL,
  `SaleOffPurchasePriceYesTax` double DEFAULT NULL,
  `SaleOffStandardPriceNoTax` double DEFAULT NULL,
  `SaleOffStandardPriceTax` double DEFAULT NULL,
  `SaleOffStandardPriceYesTax` double DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  KEY `SeqNo` (`SeqNo`),
  KEY `RSeqNo` (`RSeqNo`),
  KEY `ShopCode` (`ShopCode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `storeprice` */

LOCK TABLES `storeprice` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_account_vip` */

DROP TABLE IF EXISTS `tbl_account_vip`;

CREATE TABLE `tbl_account_vip` (
  `acc_id` bigint(10) NOT NULL AUTO_INCREMENT,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `acc_name` varchar(255) NOT NULL,
  `acc_password` varchar(255) NOT NULL,
  `acc_status` tinyint(1) NOT NULL,
  `acc_activation_date` date NOT NULL,
  `acc_deactivation_date` date NOT NULL,
  `acc_discount_rate` varchar(5) NOT NULL,
  `last_active` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`acc_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_account_vip` */

LOCK TABLES `tbl_account_vip` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_affiliate` */

DROP TABLE IF EXISTS `tbl_affiliate`;

CREATE TABLE `tbl_affiliate` (
  `affiliate_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `affiliate_name` varchar(50) NOT NULL,
  `affiliate_campaign_name` varchar(50) NOT NULL,
  `affiliate_source` varchar(50) NOT NULL,
  `affiliate_media` varchar(50) NOT NULL,
  `affiliate_link` varchar(500) NOT NULL,
  PRIMARY KEY (`affiliate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_affiliate` */

LOCK TABLES `tbl_affiliate` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_aterial` */

DROP TABLE IF EXISTS `tbl_aterial`;

CREATE TABLE `tbl_aterial` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `aterial_code` varchar(20) NOT NULL,
  `aterial_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `aterial_status` tinyint(4) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`aterial_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_aterial` */

LOCK TABLES `tbl_aterial` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_author` */

DROP TABLE IF EXISTS `tbl_author`;

CREATE TABLE `tbl_author` (
  `id_` int(5) NOT NULL AUTO_INCREMENT,
  `createdate_` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedate_` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `author_` varchar(255) DEFAULT NULL,
  `facebook_` varchar(200) DEFAULT NULL,
  `twitter_` varchar(200) DEFAULT NULL,
  `instagram_` varchar(200) DEFAULT NULL,
  `youtube_` varchar(200) DEFAULT NULL,
  `line_` varchar(200) DEFAULT NULL,
  `avatar_` varchar(200) DEFAULT NULL,
  `author_order` int(11) DEFAULT '0',
  `author_position` varchar(200) DEFAULT NULL,
  `author_comment` varchar(200) DEFAULT NULL,
  KEY `id_` (`id_`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_author` */

LOCK TABLES `tbl_author` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_banner` */

DROP TABLE IF EXISTS `tbl_banner`;

CREATE TABLE `tbl_banner` (
  `banner_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `banner_name` text,
  `banner_status` tinyint(4) DEFAULT NULL,
  `banner_showtop` tinyint(4) DEFAULT NULL,
  `banner_image` text,
  `banner_link` text,
  `item_code` varchar(255) DEFAULT NULL,
  `item_name` varchar(500) DEFAULT NULL,
  `order_num` int(11) DEFAULT NULL,
  `banner_image_mobile` text,
  `banner_description` varchar(2000) DEFAULT NULL,
  `is_youtube_iframe` tinyint(1) DEFAULT NULL,
  `banner_video` text,
  `is_open_in_new_tab` tinyint(1) DEFAULT NULL,
  `unlimited` tinyint(1) DEFAULT '1',
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `banner_video_upload` text,
  `display_video` int(1) DEFAULT NULL,
  PRIMARY KEY (`banner_id`),
  KEY `banner_showtop` (`banner_showtop`),
  KEY `banner_status` (`banner_status`),
  KEY `item_code` (`item_code`),
  KEY `is_youtube_iframe` (`is_youtube_iframe`),
  KEY `order_num` (`order_num`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_banner` */

LOCK TABLES `tbl_banner` WRITE;

insert  into `tbl_banner`(`banner_id`,`banner_name`,`banner_status`,`banner_showtop`,`banner_image`,`banner_link`,`item_code`,`item_name`,`order_num`,`banner_image_mobile`,`banner_description`,`is_youtube_iframe`,`banner_video`,`is_open_in_new_tab`,`unlimited`,`start_date`,`end_date`,`banner_video_upload`,`display_video`) values (1,'',1,0,'20210930015934_slide_1_image.jpg','','TOP',NULL,0,'20210930015934_slide_1_image_mobile.jpg','',0,NULL,0,1,'2021-09-30 00:00:00','2021-09-30 00:00:00',NULL,0);

UNLOCK TABLES;

/*Table structure for table `tbl_blog` */

DROP TABLE IF EXISTS `tbl_blog`;

CREATE TABLE `tbl_blog` (
  `id_` bigint(11) NOT NULL AUTO_INCREMENT,
  `create_` varchar(40) DEFAULT NULL,
  `modify_` varchar(200) DEFAULT NULL,
  `author_` varchar(200) DEFAULT NULL,
  `title_` varchar(255) DEFAULT NULL,
  `date_` varchar(40) DEFAULT NULL,
  `short_` text,
  `content_` text,
  `image_` varchar(200) DEFAULT NULL,
  `status_` tinyint(2) DEFAULT NULL,
  PRIMARY KEY (`id_`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_blog` */

LOCK TABLES `tbl_blog` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_brands` */

DROP TABLE IF EXISTS `tbl_brands`;

CREATE TABLE `tbl_brands` (
  `SeqNo` varchar(20) DEFAULT '',
  `RSeqNo` varchar(20) DEFAULT '',
  `brand_id` int(11) NOT NULL AUTO_INCREMENT,
  `brand_name` varchar(100) DEFAULT NULL,
  `brand_menu_type` tinyint(1) DEFAULT '1',
  `hot_brand` tinyint(1) DEFAULT '1',
  `brand_code` varchar(50) NOT NULL,
  `brand_banner` varchar(255) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT '',
  `create_date` varchar(40) DEFAULT '',
  `brand_memo` text,
  `brand_status` tinyint(2) DEFAULT NULL,
  `group_id` int(11) DEFAULT NULL,
  `brand_logo` text,
  `slug_url` text,
  `ecsite` tinyint(1) DEFAULT '1',
  `show_order` int(11) DEFAULT NULL,
  `brand_header` text,
  `is_show_as_menu` tinyint(4) DEFAULT NULL,
  `brand_name_display` varchar(255) DEFAULT NULL,
  `search_keyword` varchar(500) DEFAULT NULL,
  `brand_title_sale_off` varchar(255) DEFAULT NULL,
  `brand_katagana` varchar(255) DEFAULT NULL,
  `is_show_top_page` tinyint(4) DEFAULT NULL,
  `is_show_pickup` tinyint(1) DEFAULT NULL,
  `brand_banner2` varchar(255) DEFAULT NULL,
  `url_to_direct` text,
  PRIMARY KEY (`brand_code`),
  KEY `brand_id` (`brand_id`),
  KEY `ecsite` (`ecsite`),
  KEY `hot_brand` (`hot_brand`),
  KEY `brand_menu_type` (`brand_menu_type`),
  KEY `brand_status` (`brand_status`),
  KEY `is_show_as_menu` (`is_show_as_menu`),
  KEY `is_show_top_page` (`is_show_top_page`),
  KEY `search_keyword` (`search_keyword`(255)),
  KEY `SeqNo` (`SeqNo`),
  KEY `show_order` (`show_order`)
) ENGINE=InnoDB AUTO_INCREMENT=77 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_brands` */

LOCK TABLES `tbl_brands` WRITE;

insert  into `tbl_brands`(`SeqNo`,`RSeqNo`,`brand_id`,`brand_name`,`brand_menu_type`,`hot_brand`,`brand_code`,`brand_banner`,`TimeStamp`,`create_date`,`brand_memo`,`brand_status`,`group_id`,`brand_logo`,`slug_url`,`ecsite`,`show_order`,`brand_header`,`is_show_as_menu`,`brand_name_display`,`search_keyword`,`brand_title_sale_off`,`brand_katagana`,`is_show_top_page`,`is_show_pickup`,`brand_banner2`,`url_to_direct`) values ('001D09FF122C4','',72,'BUCO',1,1,'BUCO',NULL,'2013-07-23 0017:45:48','2008/05/30',NULL,1,5,NULL,NULL,1,0,'',1,'BUCO',NULL,'','',1,0,NULL,NULL),('0019B9FE115A68','',75,'DOUBLE DIAMOND',1,1,'D-D',NULL,'2013-07-23 0017:45:50','2010/08/30',NULL,1,6,NULL,NULL,1,0,'',1,'DOUBLE DIAMOND',NULL,'','',1,0,NULL,NULL),('0019B9FE115A56','',73,'JOE McCOY',1,1,'JOE McCOY',NULL,'2013-07-23 0017:45:49','2009/06/29',NULL,1,3,NULL,NULL,1,0,'',1,'JOE McCOY',NULL,'','',1,0,NULL,NULL),('001D09FF122C23','',76,'LEWIS LEATHERS',1,1,'L/LEATHERS',NULL,'2021-10-02 0012:43:27','2008/08/01',NULL,1,1,NULL,NULL,1,0,'',1,'LEWIS LEATHERS',NULL,'','',1,0,NULL,NULL),('001D09FF122C1','',71,'MILITARY',1,1,'MILITARY','20210929203100brand_71_banner.png','2013-07-23 0017:45:48','2008/05/30',NULL,1,1,NULL,NULL,1,0,'',1,'MILITARY',NULL,'','',1,0,NULL,NULL),('001D09FF122C8','',74,'NOVELTY GOODS',1,1,'NOVELTY',NULL,'2013-07-23 0017:45:49','2008/07/03',NULL,1,5,NULL,NULL,1,0,'',0,'NOVELTY GOODS',NULL,'','',0,0,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_brands_group` */

DROP TABLE IF EXISTS `tbl_brands_group`;

CREATE TABLE `tbl_brands_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_code` varchar(200) DEFAULT NULL,
  `group_name` varchar(255) DEFAULT NULL,
  `group_status` tinyint(2) DEFAULT NULL,
  `show_order` tinyint(2) DEFAULT NULL,
  `brand_group_banner` varchar(500) DEFAULT NULL,
  `brand_group_banner_2` varchar(500) DEFAULT NULL,
  `brand_group_parent_name` varchar(500) DEFAULT NULL,
  `description` text COMMENT 'lam cho harmony eir',
  `brand_group_banner_details` text,
  `display_banner_slide` int(1) DEFAULT NULL,
  `select_size` int(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `display_banner_slide` (`display_banner_slide`),
  KEY `group_code` (`group_code`),
  KEY `group_status` (`group_status`),
  KEY `select_size` (`select_size`),
  KEY `show_order` (`show_order`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_brands_group` */

LOCK TABLES `tbl_brands_group` WRITE;

insert  into `tbl_brands_group`(`id`,`group_code`,`group_name`,`group_status`,`show_order`,`brand_group_banner`,`brand_group_banner_2`,`brand_group_parent_name`,`description`,`brand_group_banner_details`,`display_banner_slide`,`select_size`) values (2,'BUCO','BUCO',1,1,'brand_group_BUCO_banner.jpg','brand_group_BUCO_banner2.webp','','',',brand_group_BUCO_202109291632915016956_banner.png,brand_group_BUCO_202109301632959325960_banner.png,brand_group_BUCO_202111161637034376272_banner.png,brand_group_BUCO_202111161637034391530_banner.png,brand_group_BUCO_202111161637034406352_banner.png,brand_group_BUCO_202111161637034633733_banner.png,brand_group_BUCO_202111161637034635062_banner.png,brand_group_BUCO_202111161637034658002_banner.png,brand_group_BUCO_202111161637034682089_banner.png,brand_group_BUCO_202111161637034696392_banner.png,brand_group_BUCO_202111161637034696889_banner.png,brand_group_BUCO_202111161637034720104_banner.png,brand_group_BUCO_202111161637034733849_banner.png,brand_group_BUCO_202112221640159520587_banner.webp,brand_group_BUCO_202112221640159520595_banner.webp,brand_group_BUCO_202112221640161440578_banner.jpg,brand_group_BUCO_202112221640161552384_banner.jpg,brand_group_BUCO_202112221640161552389_banner.webp,brand_group_BUCO_202112221640161655817_banner.jpg,brand_group_BUCO_202112221640161655823_banner.jpg,brand_group_BUCO_202112221640161678946_banner.jpg,brand_group_BUCO_202112221640161678954_banner.webp',0,0),(3,'JOE McCOY','JOE McCOY',1,1,NULL,'brand_group_JOE McCOY_banner2.png','','',',brand_group_JOE McCOY_202109301632959359615_banner.png',0,0),(4,'OTHER BRAND','OTHER BRAND',0,1,NULL,'brand_group_OTHER BRAND_banner2.png','','',',brand_group_OTHER BRAND_202109301632959383840_banner.png',0,0),(5,'THE REAL MCCOY\'S','THE REAL MCCOY\'S',1,0,NULL,'brand_group_THE REAL MCCOY\'S_banner2.png','THE REAL MCCOY\'S','',',brand_group_THE REAL MCCOY\'S_202112221640162964884_banner.png',0,0);

UNLOCK TABLES;

/*Table structure for table `tbl_calendar` */

DROP TABLE IF EXISTS `tbl_calendar`;

CREATE TABLE `tbl_calendar` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `jyear` int(4) DEFAULT NULL,
  `jmonth` int(2) DEFAULT NULL,
  `jday` int(2) DEFAULT NULL,
  `jwday` int(2) DEFAULT NULL,
  `jholiday` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_calendar` */

LOCK TABLES `tbl_calendar` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_campaign` */

DROP TABLE IF EXISTS `tbl_campaign`;

CREATE TABLE `tbl_campaign` (
  `campaign_id` bigint(10) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `campaign_code` varchar(200) DEFAULT NULL,
  `campaign_title` varchar(500) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `status` int(4) DEFAULT '1',
  `startdate` varchar(40) DEFAULT NULL,
  `enddate` varchar(40) DEFAULT NULL,
  `unlimit` int(4) DEFAULT '0',
  `starttime` varchar(40) DEFAULT NULL,
  `endtime` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`campaign_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_campaign` */

LOCK TABLES `tbl_campaign` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_campaign_detail` */

DROP TABLE IF EXISTS `tbl_campaign_detail`;

CREATE TABLE `tbl_campaign_detail` (
  `campaign_detail_id` bigint(10) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `campaign_id` bigint(10) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `campaign_image` text,
  `uploader_code` varchar(100) DEFAULT NULL,
  `voter` bigint(10) DEFAULT '0',
  `status` int(4) DEFAULT '0',
  `uploader_name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`campaign_detail_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_campaign_detail` */

LOCK TABLES `tbl_campaign_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_campaign_vote` */

DROP TABLE IF EXISTS `tbl_campaign_vote`;

CREATE TABLE `tbl_campaign_vote` (
  `campaign_id` bigint(10) NOT NULL,
  `voter_code` varchar(100) NOT NULL,
  `voter_name` varchar(200) DEFAULT NULL,
  `voted_date` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`campaign_id`,`voter_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_campaign_vote` */

LOCK TABLES `tbl_campaign_vote` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_cashpayrange` */

DROP TABLE IF EXISTS `tbl_cashpayrange`;

CREATE TABLE `tbl_cashpayrange` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `MoneyBegin` float DEFAULT '0',
  `MoneyEnd` float DEFAULT '0',
  `MoneyShip` float DEFAULT '0',
  `CreatedDate` datetime DEFAULT NULL,
  `ModifiedDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_cashpayrange` */

LOCK TABLES `tbl_cashpayrange` WRITE;

insert  into `tbl_cashpayrange`(`id`,`MoneyBegin`,`MoneyEnd`,`MoneyShip`,`CreatedDate`,`ModifiedDate`) values (3,0,0,0,'2021-09-28 19:38:02','2021-09-28 17:39:37');

UNLOCK TABLES;

/*Table structure for table `tbl_cashpaysetting` */

DROP TABLE IF EXISTS `tbl_cashpaysetting`;

CREATE TABLE `tbl_cashpaysetting` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `isUsePay` tinyint(1) DEFAULT '0',
  `MoneyMax` float DEFAULT '0',
  `MoneyMaxSet` float DEFAULT '0',
  `MoneyArise` float DEFAULT '0',
  `MoneyShip` float DEFAULT '0',
  `isafford` tinyint(1) DEFAULT '0',
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `isIncludeShip` tinyint(1) DEFAULT '0',
  `isYesTax` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_cashpaysetting` */

LOCK TABLES `tbl_cashpaysetting` WRITE;

insert  into `tbl_cashpaysetting`(`id`,`isUsePay`,`MoneyMax`,`MoneyMaxSet`,`MoneyArise`,`MoneyShip`,`isafford`,`timestamp`,`isIncludeShip`,`isYesTax`) values (1,0,0,0,0,0,0,'2021-09-28 17:39:37',0,0);

UNLOCK TABLES;

/*Table structure for table `tbl_category_guide` */

DROP TABLE IF EXISTS `tbl_category_guide`;

CREATE TABLE `tbl_category_guide` (
  `category_guide_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `product_category_id` bigint(11) DEFAULT NULL,
  `category_guide_name` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`category_guide_id`),
  KEY `product_category_id` (`product_category_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_category_guide` */

LOCK TABLES `tbl_category_guide` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_colors` */

DROP TABLE IF EXISTS `tbl_colors`;

CREATE TABLE `tbl_colors` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `TimeStamp` varchar(20) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `color_code` varchar(20) NOT NULL,
  `color_name` text NOT NULL,
  `color_status` tinyint(4) DEFAULT NULL,
  `color_memo` text,
  `color_display` text,
  `color_html_code` varchar(20) DEFAULT NULL,
  `color_abbre` varchar(20) DEFAULT NULL,
  `color_displayorder` int(11) DEFAULT '0',
  `color_keyword` text,
  PRIMARY KEY (`color_code`),
  KEY `color_displayorder` (`color_displayorder`),
  KEY `color_status` (`color_status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_colors` */

LOCK TABLES `tbl_colors` WRITE;

insert  into `tbl_colors`(`SeqNo`,`RSeqNo`,`TimeStamp`,`create_date`,`color_code`,`color_name`,`color_status`,`color_memo`,`color_display`,`color_html_code`,`color_abbre`,`color_displayorder`,`color_keyword`) values ('001D09FF122C295','','2013-07-23 0017:49:1','2008-08-29 00:00:00','-','-',NULL,NULL,NULL,NULL,'-',0,NULL),('001D09FF122C6','','2013-07-23 0017:49:1','2008-05-30 00:00:00','000','000',NULL,NULL,NULL,NULL,'000',0,NULL),('01200000000000000645','','2018-09-26 0018:26:3','2018-09-26 00:00:00','000-NOCLR','NO COLOR',NULL,NULL,NULL,NULL,'NO COLOR',0,NULL),('03000000000000000693','','2021-02-03 0012:27:4','2021-02-03 00:00:00','001-NP','NO PIN',NULL,NULL,NULL,NULL,'NO PIN',0,NULL),('03000000000000000684','','2020-10-21 0017:22:2','2020-10-21 00:00:00','001-TRICO','TRICOLOR',NULL,NULL,NULL,NULL,'TRICOLOR',0,NULL),('001D09FF122C276','','2013-07-23 0017:49:1','2008-07-02 00:00:00','010-IVO','IVORY',NULL,NULL,NULL,NULL,'IVORY',0,NULL),('001D09FF122C102','','2013-07-23 0017:49:1','2008-07-01 00:00:00','010-MC','McCOY',NULL,NULL,NULL,NULL,'McCOY',0,NULL),('0019B9FE115A418','','2013-07-23 0017:49:1','2011-06-22 00:00:00','010-MLK','MILK',NULL,NULL,NULL,NULL,'MILK',0,NULL),('01200000000000000560','','2017-03-13 0019:01:4','2017-03-13 00:00:00','010-OAT','OAT',NULL,NULL,NULL,NULL,'OAT',0,NULL),('01200000000000000550','','2017-03-10 0018:21:0','2017-03-10 00:00:00','010-PLN','PLAIN',NULL,NULL,NULL,NULL,'PLAIN',0,NULL),('001D09FF122C100','','2013-07-23 0017:49:1','2008-07-01 00:00:00','010-WHT','WHITE',NULL,NULL,NULL,NULL,'WHITE',0,NULL),('0019B9FE115A398','','2013-07-23 0017:49:1','2011-01-11 00:00:00','011-ERU','ECRU',NULL,NULL,NULL,NULL,'ECRU',0,NULL),('0019B9FE115A489','','2013-07-23 0017:49:1','2013-01-08 00:00:00','011-MLK','MILK',NULL,NULL,NULL,NULL,'MILK',0,NULL),('001D09FF122C101','','2013-07-23 0017:49:1','2008-07-01 00:00:00','011-USAF','U.S.A.F.\n',NULL,NULL,NULL,NULL,'U.S.A.F.\n',0,NULL),('03000000000000000692','','2021-01-05 0013:45:1','2021-01-05 00:00:00','011-W.P','WHITE PLAIN',NULL,NULL,NULL,NULL,'WHITE PLAIN',0,NULL),('001D09FF122C296','','2013-07-23 0017:49:1','2008-09-06 00:00:00','012-BCHLM','BUCO HELMET',NULL,NULL,NULL,NULL,'BUCO HELMET',0,NULL),('01200000000000000628','','2018-09-26 0015:36:1','2018-09-26 00:00:00','012-ECR','ECRU',NULL,NULL,NULL,NULL,'ECRU',0,NULL),('01000000000000000612','','2018-03-06 0018:22:0','2018-03-06 00:00:00','013-OATML','OATMEAL',NULL,NULL,NULL,NULL,'OATMEAL',0,NULL),('0019B9FE115A459','','2013-07-23 0017:49:1','2012-04-25 00:00:00','013-USN','USN',NULL,NULL,NULL,NULL,'USN',0,NULL),('00300000000000000463','','2013-12-11 0017:35:3','2013-12-11 00:00:00','013-WHTBLK','WHITE×BLACK',NULL,NULL,NULL,NULL,'WHITE×BLACK',0,NULL),('03000000000000000677','','2020-03-07 0018:27:2','2020-03-07 00:00:00','014-IVORY','IVORY',NULL,NULL,NULL,NULL,'IVORY',0,NULL),('0019B9FE115A473','','2013-07-23 0017:49:1','2012-06-19 00:00:00','016-OATGRE','OAT×GREEN',NULL,NULL,NULL,NULL,'OAT×GREEN',0,NULL),('01000000000000000499','','2014-11-25 0020:09:4','2014-11-25 00:00:00','019-WHTRED','WHITE×RED',NULL,NULL,NULL,NULL,'WHITE×RED',0,NULL),('01100000000000000508','','2015-05-26 0016:18:4','2015-05-26 00:00:00','020-CHL','CHALE',NULL,NULL,NULL,NULL,'CHALE',0,NULL),('001D09FF122C133','','2013-07-23 0017:49:1','2008-07-01 00:00:00','020-GRY','GRAY',NULL,NULL,NULL,NULL,'GRAY',0,NULL),('001D09FF122C155','','2013-07-23 0017:49:1','2008-07-01 00:00:00','020-SLV','SILVER',NULL,NULL,NULL,NULL,'SILVER',0,NULL),('01100000000000000591','','2017-09-25 0019:06:5','2017-09-25 00:00:00','020-SNWGRY','SNOW GRAY',NULL,NULL,NULL,NULL,'SNOW GRAY',0,NULL),('01000000000000000616','','2018-03-06 0019:01:5','2018-03-06 00:00:00','021-M.GRAY','MEDIUM GRAY',NULL,NULL,NULL,NULL,'MEDIUM GRAY',0,NULL),('01000000000000000617','','2018-03-06 0019:16:4','2018-03-06 00:00:00','022-S.GRAY','SNOW GRAY',NULL,NULL,NULL,NULL,'SNOW GRAY',0,NULL),('001D09FF122C170','','2013-07-23 0017:49:1','2008-07-01 00:00:00','023-CHL','CHALE',NULL,NULL,NULL,NULL,'CHALE',0,NULL),('01100000000000000590','','2017-09-25 0018:50:0','2017-09-25 00:00:00','023-CHR','CHORE',NULL,NULL,NULL,NULL,'CHORE',0,NULL),('03000000000000000687','','2020-10-21 0018:38:1','2020-10-21 00:00:00','023-STEEL','STEEL',NULL,NULL,NULL,NULL,'STEEL',0,NULL),('01200000000000000643','','2018-09-26 0018:17:3','2018-09-26 00:00:00','024-CLDGRY','CLOUD GRAY',NULL,NULL,NULL,NULL,'CLOUD GRAY',0,NULL),('01000000000000000606','','2018-03-06 0012:46:3','2018-03-06 00:00:00','025-CHL','CHALE',NULL,NULL,NULL,NULL,'CHALE',0,NULL),('01000000000000000614','','2018-03-06 0018:53:2','2018-03-06 00:00:00','026-SAPPR','SALT&PEPPER',NULL,NULL,NULL,NULL,'SALT&PEPPER',0,NULL),('03000000000000000669','','2020-03-07 0016:56:4','2020-03-07 00:00:00','027-SG','SILVER GRAY',NULL,NULL,NULL,NULL,'SILVER GRAY',0,NULL),('03000000000000000686','','2020-10-21 0017:27:1','2020-10-21 00:00:00','028-ASHGRY','ASH GRAY',NULL,NULL,NULL,NULL,'ASH GRAY',0,NULL),('001D09FF122C129','','2013-07-23 0017:49:1','2008-07-01 00:00:00','030-BLK','BLACK\n',NULL,NULL,NULL,NULL,'BLACK\n',0,NULL),('01700000000000000524','','2021-01-05 0013:44:4','2016-02-19 00:00:00','031-B.P','BLACK PLAIN',NULL,NULL,NULL,NULL,'BLACK PLAIN',0,NULL),('0019B9FE115A429','','2013-07-23 0017:49:1','2011-06-24 00:00:00','031-DBLK','D.BLACK',NULL,NULL,NULL,NULL,'D.BLACK',0,NULL),('01000000000000000615','','2018-03-06 0018:56:4','2018-03-06 00:00:00','032-CHACOL','CHARCOAL',NULL,NULL,NULL,NULL,'CHARCOAL',0,NULL),('01700000000000000612','','2018-04-17 0013:08:4','2018-04-17 00:00:00','033-DB','DEERSKIN BLACK',NULL,NULL,NULL,NULL,'DEERSKIN BLACK',0,NULL),('001D09FF122C171','','2013-07-23 0017:49:1','2008-07-01 00:00:00','040-BEG','BEIGE',NULL,NULL,NULL,NULL,'BEIGE',0,NULL),('001D09FF122C119','','2013-07-23 0017:49:1','2008-07-01 00:00:00','040-KHK','KHAKI\n',NULL,NULL,NULL,NULL,'KHAKI\n',0,NULL),('001D09FF122C252','','2013-07-23 0017:49:1','2008-07-02 00:00:00','041-BEG','BEIGE',NULL,NULL,NULL,NULL,'BEIGE',0,NULL),('01700000000000000485','','2014-06-30 0018:56:0','2014-06-30 00:00:00','042-PLAIN','KHAKI-PLAIN',NULL,NULL,NULL,NULL,'KHAKI-PLAIN',0,NULL),('01200000000000000635','','2018-09-26 0016:13:5','2018-09-26 00:00:00','042-TAN','TAN',NULL,NULL,NULL,NULL,'TAN',0,NULL),('01200000000000000678','','2019-10-09 0018:06:4','2019-10-09 00:00:00','043-O.KHK','O.KHAKI',NULL,NULL,NULL,NULL,'O.KHAKI',0,NULL),('01000000000000000590','','2017-09-25 0011:44:1','2017-09-25 00:00:00','044-CRZ','CRAZY',NULL,NULL,NULL,NULL,'CRAZY',0,NULL),('001D09FF122C194','','2013-07-23 0017:49:1','2008-07-01 00:00:00','044-KHK','KHAKI',NULL,NULL,NULL,NULL,'KHAKI',0,NULL),('001D09FF122C193','','2013-07-23 0017:49:1','2008-07-01 00:00:00','045-KHK','KHAKI',NULL,NULL,NULL,NULL,'KHAKI',0,NULL),('01000000000000000544','','2016-10-26 0018:39:5','2016-10-26 00:00:00','050-BLLDG','BULLDOG',NULL,NULL,NULL,NULL,'BULLDOG',0,NULL),('001D09FF122C151','','2013-07-23 0017:49:1','2008-07-01 00:00:00','050-BRN','BROWN',NULL,NULL,NULL,NULL,'BROWN',0,NULL),('01100000000000000592','','2017-09-26 0018:05:4','2017-09-26 00:00:00','050-DCHD','DACHSHUND',NULL,NULL,NULL,NULL,'DACHSHUND',0,NULL),('01100000000000000593','','2017-09-26 0018:06:2','2017-09-26 00:00:00','050-ELPT','ELEPHANT',NULL,NULL,NULL,NULL,'ELEPHANT',0,NULL),('01000000000000000545','','2016-10-26 0018:40:1','2016-10-26 00:00:00','050-HPP','HIPPO',NULL,NULL,NULL,NULL,'HIPPO',0,NULL),('01700000000000000527','','2017-09-26 0018:02:5','2016-03-31 00:00:00','050-KANGA','KANGAROO',NULL,NULL,NULL,NULL,'KANGAROO',0,NULL),('01700000000000000614','','2018-09-22 0012:09:5','2018-09-22 00:00:00','050-KIRIN','Giraffe',NULL,NULL,NULL,NULL,'Giraffe',0,NULL),('01100000000000000594','','2017-09-26 0018:06:3','2017-09-26 00:00:00','050-LION','LION',NULL,NULL,NULL,NULL,'LION',0,NULL),('001D09FF122C156','','2013-07-23 0017:49:1','2008-07-01 00:00:00','050-NAT','NATURAL',NULL,NULL,NULL,NULL,'NATURAL',0,NULL),('01000000000000000547','','2016-10-26 0018:40:3','2016-10-26 00:00:00','050-PIG','PIG',NULL,NULL,NULL,NULL,'PIG',0,NULL),('01700000000000000528','','2017-09-26 0018:03:0','2016-03-31 00:00:00','050-ROBA','DONKEY',NULL,NULL,NULL,NULL,'DONKEY',0,NULL),('01700000000000000526','','2017-09-26 0018:02:4','2016-03-31 00:00:00','050-SAI','RHINO',NULL,NULL,NULL,NULL,'RHINO',0,NULL),('001D09FF122C222','','2013-07-23 0017:49:1','2008-07-02 00:00:00','050-SLBRN','SEAL BROWN',NULL,NULL,NULL,NULL,'SEAL BROWN',0,NULL),('01700000000000000613','','2018-09-22 0012:08:5','2018-09-22 00:00:00','050-USHI','BULL',NULL,NULL,NULL,NULL,'BULL',0,NULL),('01700000000000000615','','2018-09-22 0012:10:3','2018-09-22 00:00:00','050-YAGI','GOAT',NULL,NULL,NULL,NULL,'GOAT',0,NULL),('001D09FF122C158','','2013-07-23 0017:49:1','2008-07-01 00:00:00','051-SLBRN','SEAL BROWN',NULL,NULL,NULL,NULL,'SEAL BROWN',0,NULL),('00300000000000000464','','2013-12-11 0017:36:3','2013-12-11 00:00:00','053-BRNBLK','BROWN×BLACK',NULL,NULL,NULL,NULL,'BROWN×BLACK',0,NULL),('01000000000000000623','','2018-09-25 0010:57:0','2018-09-25 00:00:00','053-RWSEN','RAW SIENNA',NULL,NULL,NULL,NULL,'RAW SIENNA',0,NULL),('01200000000000000634','','2018-09-26 0015:48:2','2018-09-26 00:00:00','054-CSTNT','CHESTNUT',NULL,NULL,NULL,NULL,'CHESTNUT',0,NULL),('03000000000000000697','','2021-05-14 0018:27:5','2021-05-14 00:00:00','055-BRONZE','BRONZE',NULL,NULL,NULL,NULL,'BRONZE',0,NULL),('01000000000000000674','','2019-10-07 0016:19:2','2019-10-07 00:00:00','056-CYTBRN','COYOTE BROWN',NULL,NULL,NULL,NULL,'COYOTE BROWN',0,NULL),('01000000000000000537','','2016-10-25 0019:54:0','2016-10-25 00:00:00','060-MSTD','MUSTARD',NULL,NULL,NULL,NULL,'MUSTARD',0,NULL),('001D09FF122C154','','2013-07-23 0017:49:1','2008-07-01 00:00:00','060-YLW','YELLOW',NULL,NULL,NULL,NULL,'YELLOW',0,NULL),('0019B9FE115A448','','2013-07-23 0017:49:1','2012-01-11 00:00:00','061-MST','MUSTARD',NULL,NULL,NULL,NULL,'MUSTARD',0,NULL),('01500000000000000539','','2016-10-26 0013:35:3','2016-10-26 00:00:00','070-GOLD','GOLD',NULL,NULL,NULL,NULL,'GOLD',0,NULL),('001D09FF122C153','','2013-07-23 0017:49:1','2008-07-01 00:00:00','070-ORG','ORANGE',NULL,NULL,NULL,NULL,'ORANGE',0,NULL),('03000000000000000699','','2021-11-16 0016:59:1','2021-11-16 00:00:00','071-TANGER','TANGERINE',NULL,NULL,NULL,NULL,'TANGERINE',0,NULL),('01100000000000000516','','2015-10-27 0020:09:3','2015-10-27 00:00:00','080-ORG','ORANGE',NULL,NULL,NULL,NULL,'ORANGE',0,NULL),('001D09FF122C164','','2013-07-23 0017:49:1','2008-07-01 00:00:00','080-PNK','PINK',NULL,NULL,NULL,NULL,'PINK',0,NULL),('03000000000000000704','','2021-11-17 0011:10:5','2021-11-17 00:00:00','081-SALMON','SALMON',NULL,NULL,NULL,NULL,'SALMON',0,NULL),('01200000000000000633','','2018-09-26 0015:47:4','2018-09-26 00:00:00','082-CRL','CORAL',NULL,NULL,NULL,NULL,'CORAL',0,NULL),('03000000000000000702','','','2021-11-16 00:00:00','083-FLAMIN','FLAMINGO',NULL,NULL,NULL,NULL,'FLAMINGO',0,NULL),('001D09FF122C162','','2013-07-23 0017:49:1','2008-07-01 00:00:00','090-RED','RED',NULL,NULL,NULL,NULL,'RED',0,NULL),('01200000000000000644','','2018-09-26 0018:20:0','2018-09-26 00:00:00','091-CHRY','CHERRY',NULL,NULL,NULL,NULL,'CHERRY',0,NULL),('03000000000000000694','','2021-05-14 0017:59:4','2021-05-14 00:00:00','093-BRKRED','BRICK RED',NULL,NULL,NULL,NULL,'BRICK RED',0,NULL),('001D09FF122C135','','2013-07-23 0017:49:1','2008-07-01 00:00:00','100-BRG','BURGUNDY',NULL,NULL,NULL,NULL,'BURGUNDY',0,NULL),('01000000000000000613','','2018-03-06 0018:50:3','2018-03-06 00:00:00','101-CRSON','CRIMSON',NULL,NULL,NULL,NULL,'CRIMSON',0,NULL),('0019B9FE115A462','','2013-07-23 0017:49:1','2012-06-19 00:00:00','101-MLK','MILK',NULL,NULL,NULL,NULL,'MILK',0,NULL),('03000000000000000700','','2021-11-16 0017:59:3','2021-11-16 00:00:00','102-MAROON','MAROON',NULL,NULL,NULL,NULL,'MAROON',0,NULL),('001D09FF122C202','','2013-07-23 0017:49:1','2008-07-01 00:00:00','110-SAX','SAXE',NULL,NULL,NULL,NULL,'SAXE',0,NULL),('03000000000000000703','','2021-11-17 0011:03:2','2021-11-17 00:00:00','111-TEAL','TEAL',NULL,NULL,NULL,NULL,'TEAL',0,NULL),('001D09FF122C134','','2013-07-23 0017:49:1','2008-07-01 00:00:00','120-BLU','BLUE',NULL,NULL,NULL,NULL,'BLUE',0,NULL),('01100000000000000589','','2017-09-25 0017:51:5','2017-09-25 00:00:00','120-LGTBLU','LIGHT BLUE',NULL,NULL,NULL,NULL,'LIGHT BLUE',0,NULL),('00200000000000000466','','2014-04-21 0011:55:2','2014-04-21 00:00:00','121-PLAIN','PLAIN',NULL,NULL,NULL,NULL,'PLAIN',0,NULL),('03000000000000000688','','2020-10-21 0018:38:4','2020-10-21 00:00:00','121-RBLUE','R.BLUE',NULL,NULL,NULL,NULL,'R.BLUE',0,NULL),('01000000000000000676','','2019-10-07 0018:49:4','2019-10-07 00:00:00','122-INKBLE','INK BLUE',NULL,NULL,NULL,NULL,'INK BLUE',0,NULL),('01100000000000000619','','2018-09-26 0014:03:1','2018-09-26 00:00:00','123-LTBLE','LIGHT BLUE',NULL,NULL,NULL,NULL,'LIGHT BLUE',0,NULL),('03000000000000000685','','2020-10-21 0017:25:5','2020-10-21 00:00:00','124-MDBLUE','MD BLUE',NULL,NULL,NULL,NULL,'MD BLUE',0,NULL),('001D09FF122C176','','2013-07-23 0017:49:1','2008-07-01 00:00:00','130-PPL','PURPLE',NULL,NULL,NULL,NULL,'PURPLE',0,NULL),('001D09FF122C138','','2013-07-23 0017:49:1','2008-07-01 00:00:00','140-DNM','DENIM',NULL,NULL,NULL,NULL,'DENIM',0,NULL),('001D09FF122C172','','2013-07-23 0017:49:1','2008-07-01 00:00:00','140-IND','INDIGO',NULL,NULL,NULL,NULL,'INDIGO',0,NULL),('01100000000000000505','','2015-05-26 0013:40:3','2015-05-26 00:00:00','140-NPL','N.PLAIN',NULL,NULL,NULL,NULL,'N.PLAIN',0,NULL),('001D09FF122C117','','2013-07-23 0017:49:1','2008-07-01 00:00:00','140-NVY','NAVY\n',NULL,NULL,NULL,NULL,'NAVY\n',0,NULL),('001D09FF122C118','','2013-07-23 0017:49:1','2008-07-01 00:00:00','141-CS','CUSTOM\n',NULL,NULL,NULL,NULL,'CUSTOM\n',0,NULL),('001D09FF122C283','','2013-07-23 0017:49:1','2008-07-02 00:00:00','141-IND','INDIGO',NULL,NULL,NULL,NULL,'INDIGO',0,NULL),('001D09FF122C149','','2013-07-23 0017:49:1','2008-07-01 00:00:00','141-NVY','NAVY',NULL,NULL,NULL,NULL,'NAVY',0,NULL),('0019B9FE115A302','','2013-07-23 0017:49:1','2008-11-26 00:00:00','141-NVYWHT','NAVY×WHITE',NULL,NULL,NULL,NULL,'NAVY×WHITE',0,NULL),('01200000000000000632','','2018-09-26 0015:47:1','2018-09-26 00:00:00','142-MQNVY','MQ NAVY',NULL,NULL,NULL,NULL,'MQ NAVY',0,NULL),('01700000000000000484','','2014-06-30 0018:55:0','2014-06-30 00:00:00','142-PLAIN','NAVY-PLAIN',NULL,NULL,NULL,NULL,'NAVY-PLAIN',0,NULL),('03000000000000000701','','2021-11-16 0018:23:0','2021-11-16 00:00:00','143-D.BLUE','D.BLUE',NULL,NULL,NULL,NULL,'D.BLUE',0,NULL),('001D09FF122C205','','2013-07-23 0017:49:1','2008-07-01 00:00:00','143-WAB','WABASH',NULL,NULL,NULL,NULL,'WABASH',0,NULL),('01700000000000000656','','2019-07-26 0016:15:0','2019-07-26 00:00:00','149-K.NAVY','旧NAVY',NULL,NULL,NULL,NULL,'旧NAVY',0,NULL),('0019B9FE115A474','','2019-07-26 0016:15:0','2012-06-19 00:00:00','149-NVYRED','NAVY×RED',NULL,NULL,NULL,NULL,'NAVY×RED',0,NULL),('01000000000000000536','','2016-10-25 0019:35:0','2016-10-25 00:00:00','150-GRN','GREEN',NULL,NULL,NULL,NULL,'GREEN',0,NULL),('01100000000000000598','','2018-03-05 0014:13:4','2018-03-05 00:00:00','150-OLV','OLIVE',NULL,NULL,NULL,NULL,'OLIVE',0,NULL),('01000000000000000611','','2018-03-06 0013:03:5','2018-03-06 00:00:00','152-O.D','O.D #7',NULL,NULL,NULL,NULL,'O.D #7',0,NULL),('01000000000000000670','','2019-10-07 0014:37:5','2019-10-07 00:00:00','153-OG107','OG107',NULL,NULL,NULL,NULL,'OG107',0,NULL),('01000000000000000669','','2019-10-07 0014:34:1','2019-10-07 00:00:00','154-SGGRN','SAGE GREEN',NULL,NULL,NULL,NULL,'SAGE GREEN',0,NULL),('0019B9FE115A417','','2013-07-23 0017:49:1','2011-06-21 00:00:00','160-0GRE','O.GREEN',NULL,NULL,NULL,NULL,'O.GREEN',0,NULL),('001D09FF122C131','','2013-07-23 0017:49:1','2008-07-01 00:00:00','160-GRN','GREEN\n',NULL,NULL,NULL,NULL,'GREEN\n',0,NULL),('01100000000000000512','','2015-10-27 0017:24:4','2015-10-27 00:00:00','160-OG107','OG107',NULL,NULL,NULL,NULL,'OG107',0,NULL),('0019B9FE115A332','','2013-07-23 0017:49:1','2009-06-30 00:00:00','160-OGRN','O.GREEN107',NULL,NULL,NULL,NULL,'O.GREEN107',0,NULL),('001D09FF122C121','','2013-07-23 0017:49:1','2008-07-01 00:00:00','160-OLV','OLIVE\n',NULL,NULL,NULL,NULL,'OLIVE\n',0,NULL),('001D09FF122C112','','2013-07-23 0017:49:1','2008-07-01 00:00:00','160-PL','PLAIN\n',NULL,NULL,NULL,NULL,'PLAIN\n',0,NULL),('01000000000000000591','','2017-09-25 0012:15:2','2017-09-25 00:00:00','160-SAGRN','SAGE GREEN',NULL,NULL,NULL,NULL,'SAGE GREEN',0,NULL),('001D09FF122C113','','2013-07-23 0017:49:1','2008-07-01 00:00:00','161-DC','DECAL\n',NULL,NULL,NULL,NULL,'DECAL\n',0,NULL),('001D09FF122C253','','2013-07-23 0017:49:1','2008-07-02 00:00:00','161-GRN','GREEN',NULL,NULL,NULL,NULL,'GREEN',0,NULL),('01000000000000000657','','2019-03-26 0018:57:5','2019-03-26 00:00:00','161-MINT','MINT',NULL,NULL,NULL,NULL,'MINT',0,NULL),('001D09FF122C115','','2013-07-23 0017:49:1','2008-07-01 00:00:00','162-CS','CUSTOM\n',NULL,NULL,NULL,NULL,'CUSTOM\n',0,NULL),('01000000000000000677','','2019-10-07 0018:50:0','2019-10-07 00:00:00','162-FOREST','FOREST',NULL,NULL,NULL,NULL,'FOREST',0,NULL),('01200000000000000631','','2018-09-26 0015:46:3','2018-09-26 00:00:00','163-PLGRN','PALE GREEN',NULL,NULL,NULL,NULL,'PALE GREEN',0,NULL),('03000000000000000682','','2020-10-21 0017:02:5','2020-10-21 00:00:00','164-KGREEN','K.GREEN',NULL,NULL,NULL,NULL,'K.GREEN',0,NULL),('01000000000000000589','','2017-09-25 0011:15:5','2017-09-25 00:00:00','165-GRNBRW','GREEN×BROWN',NULL,NULL,NULL,NULL,'GREEN×BROWN',0,NULL),('03000000000000000698','','2021-11-16 0016:57:5','2021-11-16 00:00:00','165-SHAMR','SHAMROCK',NULL,NULL,NULL,NULL,'SHAMROCK',0,NULL),('01000000000000000671','','2019-10-07 0014:48:1','2019-10-07 00:00:00','181-GOLD','GOLD',NULL,NULL,NULL,NULL,'GOLD',0,NULL),('03000000000000000680','','2020-10-21 0016:52:2','2020-10-21 00:00:00','201-CS','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000656','','2019-06-01 0017:38:2','2019-03-26 00:00:00','203-BLKxBL','BLACK×BLUE',NULL,NULL,NULL,NULL,'BLACK×BLUE',0,NULL),('01000000000000000678','','2019-10-07 0018:54:1','2019-10-07 00:00:00','203-CST','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01700000000000000652','','2019-06-01 0017:38:2','2019-06-01 00:00:00','203-PLAIN','PLAIN',NULL,NULL,NULL,NULL,'PLAIN',0,NULL),('01200000000000000637','','2018-09-26 0017:01:3','2018-09-26 00:00:00','204-CSTM','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000650','','2019-03-26 0011:20:4','2019-03-26 00:00:00','204-K.PLN','K.PLAIN',NULL,NULL,NULL,NULL,'K.PLAIN',0,NULL),('03000000000000000689','','2020-10-31 0018:27:3','2020-10-31 00:00:00','204-USN','USN',NULL,NULL,NULL,NULL,'USN',0,NULL),('01000000000000000622','','2020-03-07 0016:19:1','2018-09-25 00:00:00','205-CS','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01700000000000000654','','2019-06-01 0017:40:2','2019-06-01 00:00:00','205-PLAIN','PLAIN',NULL,NULL,NULL,NULL,'PLAIN',0,NULL),('01200000000000000636','','2018-09-26 0016:57:2','2018-09-26 00:00:00','212-CSTM','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000624','','2018-09-25 0011:06:0','2018-09-25 00:00:00','214-CS','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000651','','2019-03-26 0011:21:0','2019-03-26 00:00:00','214-N.PLN','N.PLAIN',NULL,NULL,NULL,NULL,'N.PLAIN',0,NULL),('01100000000000000618','','2018-09-26 0011:17:4','2018-09-26 00:00:00','215-CS','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000652','','2019-03-26 0011:21:3','2019-03-26 00:00:00','215-O.PLN','O.PLAIN',NULL,NULL,NULL,NULL,'O.PLAIN',0,NULL),('01100000000000000620','','2018-09-26 0014:07:2','2018-09-26 00:00:00','215-PLN','PLAIN',NULL,NULL,NULL,NULL,'PLAIN',0,NULL),('01000000000000000649','','2019-03-26 0011:11:3','2019-03-26 00:00:00','216-CST','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000672','','2019-10-07 0014:52:3','2019-10-07 00:00:00','218-CST','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01100000000000000599','','2018-03-05 0014:18:2','2018-03-05 00:00:00','240-CST','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01100000000000000600','','2018-03-05 0015:22:0','2018-03-05 00:00:00','253-CST','CUSTOM',NULL,NULL,NULL,NULL,'CUSTOM',0,NULL),('01000000000000000607','','2018-03-06 0012:49:1','2018-03-06 00:00:00','254-DCL','DECAL',NULL,NULL,NULL,NULL,'DECAL',0,NULL),('03000000000000000683','','2021-05-14 0018:18:1','2020-10-21 00:00:00','301-MIKRED','MILK×RED',NULL,NULL,NULL,NULL,'MILK×RED',0,NULL),('03000000000000000681','','2020-10-21 0017:01:0','2020-10-21 00:00:00','301-WHTBLE','WHITE×BLUE',NULL,NULL,NULL,NULL,'WHITE×BLUE',0,NULL),('01200000000000000640','','2018-09-26 0017:31:2','2018-09-26 00:00:00','301-WHTBLK','WHITE×BLACK',NULL,NULL,NULL,NULL,'WHITE×BLACK',0,NULL),('03000000000000000695','','2021-05-14 0018:18:0','2021-05-14 00:00:00','301-WHTGRY','WHITE×GRAY',NULL,NULL,NULL,NULL,'WHITE×GRAY',0,NULL),('01000000000000000675','','2019-10-07 0018:37:3','2019-10-07 00:00:00','301-WHTNVY','WHITEＸNAVY',NULL,NULL,NULL,NULL,'WHITEＸNAVY',0,NULL),('03000000000000000675','','2020-03-07 0018:18:3','2020-03-07 00:00:00','302-GRAPUR','GRAY×PURPLE',NULL,NULL,NULL,NULL,'GRAY×PURPLE',0,NULL),('01200000000000000638','','2018-09-26 0017:16:4','2018-09-26 00:00:00','302-GRYNVY','GRAY×NAVY',NULL,NULL,NULL,NULL,'GRAY×NAVY',0,NULL),('01000000000000000662','','2019-03-28 0013:16:5','2019-03-28 00:00:00','303-BKxBK','BLACK×BLACK',NULL,NULL,NULL,NULL,'BLACK×BLACK',0,NULL),('03000000000000000670','','2020-03-07 0017:25:3','2020-03-07 00:00:00','303-BLBR','BLACK×BRONZE',NULL,NULL,NULL,NULL,'BLACK×BRONZE',0,NULL),('01200000000000000673','','2019-10-08 0016:20:4','2019-10-08 00:00:00','303-WHTBLK','WHITEＸBLACK',NULL,NULL,NULL,NULL,'WHITEＸBLACK',0,NULL),('01000000000000000663','','2019-03-28 0013:18:0','2019-03-28 00:00:00','305-BKxBR','BLACK×BROWN',NULL,NULL,NULL,NULL,'BLACK×BROWN',0,NULL),('01200000000000000642','','2018-09-26 0018:07:5','2018-09-26 00:00:00','306-MSTNVY','MUSTARD×NAVY',NULL,NULL,NULL,NULL,'MUSTARD×NAVY',0,NULL),('01000000000000000660','','2019-03-26 0019:09:4','2019-03-26 00:00:00','307-ORGxBK','ORANGE×BLACK',NULL,NULL,NULL,NULL,'ORANGE×BLACK',0,NULL),('03000000000000000672','','2020-03-07 0018:15:0','2020-03-07 00:00:00','309-REDBLA','RED×BLACK',NULL,NULL,NULL,NULL,'RED×BLACK',0,NULL),('01000000000000000673','','2019-10-07 0015:15:4','2019-10-07 00:00:00','309-REDBLE','REDＸBLUE',NULL,NULL,NULL,NULL,'REDＸBLUE',0,NULL),('01200000000000000674','','2019-10-08 0016:27:5','2019-10-08 00:00:00','309-REDNVY','REDＸNAVY',NULL,NULL,NULL,NULL,'REDＸNAVY',0,NULL),('03000000000000000676','','2020-03-07 0018:19:2','2020-03-07 00:00:00','309-SCAMIN','SCARLET×MINT',NULL,NULL,NULL,NULL,'SCARLET×MINT',0,NULL),('03000000000000000671','','2020-03-07 0017:44:5','2020-03-07 00:00:00','310-BUBL','BURGUNDY×BLACK',NULL,NULL,NULL,NULL,'BURGUNDY×BLACK',0,NULL),('03000000000000000673','','2020-03-07 0018:15:5','2020-03-07 00:00:00','310-CRINAY','CRIMSON×NAVY',NULL,NULL,NULL,NULL,'CRIMSON×NAVY',0,NULL),('01000000000000000661','','2019-03-26 0019:10:2','2019-03-26 00:00:00','312-IBLxYL','INK BLUE×YELLOW',NULL,NULL,NULL,NULL,'INK BLUE×YELLOW',0,NULL),('01200000000000000675','','2019-10-08 0016:31:0','2019-10-08 00:00:00','312-WHTBLE','WHITEＸBLUE',NULL,NULL,NULL,NULL,'WHITEＸBLUE',0,NULL),('03000000000000000696','','2021-05-14 0018:19:2','2021-05-14 00:00:00','314-NVYRED','NAVY×RED',NULL,NULL,NULL,NULL,'NAVY×RED',0,NULL),('03000000000000000674','','2020-03-07 0018:16:1','2020-03-07 00:00:00','316-FORBLA','FOREST×BLACK',NULL,NULL,NULL,NULL,'FOREST×BLACK',0,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_colorsgroup` */

DROP TABLE IF EXISTS `tbl_colorsgroup`;

CREATE TABLE `tbl_colorsgroup` (
  `colorgroup_code` int(11) NOT NULL AUTO_INCREMENT,
  `colorgroup_name` text,
  `colorgroup_html_code` varchar(20) DEFAULT NULL,
  `color_code` text,
  `display_order` int(2) DEFAULT NULL,
  KEY `colorgroup_code` (`colorgroup_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_colorsgroup` */

LOCK TABLES `tbl_colorsgroup` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_contractcondition` */

DROP TABLE IF EXISTS `tbl_contractcondition`;

CREATE TABLE `tbl_contractcondition` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `ContracConditionCode` varchar(15) DEFAULT NULL,
  `ContracConditionName` varchar(50) DEFAULT NULL,
  `ContractType` varchar(20) DEFAULT NULL,
  `IsRentalTime_Basic` tinyint(1) DEFAULT NULL,
  `IsRentalTime_Option` tinyint(1) DEFAULT NULL,
  `IsRentalTime_Not` tinyint(1) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `RentalTime1` bigint(20) DEFAULT NULL,
  `RentalTime2` bigint(20) DEFAULT NULL,
  `IsRentalTime_Period` tinyint(1) DEFAULT NULL,
  `IsRentalTime_After1Month` tinyint(1) DEFAULT NULL,
  `RentalDate1` date DEFAULT NULL,
  `RentalDate2` date DEFAULT NULL,
  `IsRentalFee_Detail` tinyint(1) DEFAULT NULL,
  `IsRentalFee_Free` tinyint(1) DEFAULT NULL,
  `IsRentalFee_DetailDiscount` tinyint(1) DEFAULT NULL,
  `RentalFee` double DEFAULT NULL,
  `RentalDiscountRate` double DEFAULT NULL,
  `IsExtend_Basic` tinyint(1) DEFAULT NULL,
  `IsExtend_Option` tinyint(1) DEFAULT NULL,
  `IsExtend_Period` tinyint(1) DEFAULT NULL,
  `IsExtend_Free` tinyint(1) DEFAULT NULL,
  `ExtendRate1` double DEFAULT NULL,
  `ExtendRate2` double DEFAULT NULL,
  `ExtendNum1` bigint(20) DEFAULT NULL,
  `ExtendNum2` bigint(20) DEFAULT NULL,
  `ExtendNum3` bigint(20) DEFAULT NULL,
  `IsExtend_Free2` tinyint(1) DEFAULT NULL,
  `IsExtend_Option2` tinyint(1) DEFAULT NULL,
  `ExtendUnitFee` double DEFAULT NULL,
  `IsShortDiscount_Basic` tinyint(1) DEFAULT NULL,
  `IsShortDiscount_Option` tinyint(1) DEFAULT NULL,
  `IsShortDiscount_Not` tinyint(1) DEFAULT NULL,
  `DiscountRate1` double DEFAULT NULL,
  `DiscountRate2` double DEFAULT NULL,
  `IsPaymentTime_Basic` tinyint(1) DEFAULT NULL,
  `IsPaymentTime_Option` tinyint(1) DEFAULT NULL,
  `PaymentTime` bigint(20) DEFAULT NULL,
  `IsPrePayment` tinyint(1) DEFAULT NULL,
  `IsAftPayment` tinyint(1) DEFAULT NULL,
  `IsNotPayment` tinyint(1) DEFAULT NULL,
  `IsClean_Basic` tinyint(1) DEFAULT NULL,
  `IsClean_Option` tinyint(1) DEFAULT NULL,
  `CleanFee` double DEFAULT NULL,
  `IsCleanPay_Basic` tinyint(1) DEFAULT NULL,
  `IsCleanPay_Option` tinyint(1) DEFAULT NULL,
  `CleanPayTime` bigint(20) DEFAULT NULL,
  `IsDeliveryFee_Input` tinyint(1) DEFAULT NULL,
  `IsDeliveryFee_Fixed` tinyint(1) DEFAULT NULL,
  `IsDeliveryFee_Not` tinyint(1) DEFAULT NULL,
  `DeliveryFee` double DEFAULT NULL,
  `IsDeliveryFee_Input2` tinyint(1) DEFAULT NULL,
  `IsLateInterest_Basic` tinyint(1) DEFAULT NULL,
  `IsLateInterest_Option` tinyint(1) DEFAULT NULL,
  `LateInterestNum` bigint(20) DEFAULT NULL,
  `LateInterestRate` double DEFAULT NULL,
  `IsLateInterest_Not` tinyint(1) DEFAULT NULL,
  `IsLateInterest_Input` tinyint(1) DEFAULT NULL,
  `IsUsePoint` tinyint(1) DEFAULT NULL,
  `IsShowSaleList` tinyint(1) DEFAULT NULL,
  `IsStatisticSale` tinyint(1) DEFAULT NULL,
  `IsCommission_Other` tinyint(1) DEFAULT NULL,
  `IsCommission_Rental` tinyint(1) DEFAULT NULL,
  `IsCommission_RentalExtend` tinyint(1) DEFAULT NULL,
  `IsCommission_Not` tinyint(1) DEFAULT NULL,
  `CommissionRate` double DEFAULT NULL,
  `CommissionFee` double DEFAULT NULL,
  `IsClean_Not` tinyint(1) DEFAULT NULL,
  `IsCommission_Contract` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_contractcondition` */

LOCK TABLES `tbl_contractcondition` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_coordinate_book` */

DROP TABLE IF EXISTS `tbl_coordinate_book`;

CREATE TABLE `tbl_coordinate_book` (
  `coordinate_id` bigint(10) NOT NULL AUTO_INCREMENT,
  `create_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `coordinate_name` varchar(255) DEFAULT NULL,
  `coordinate_status` tinyint(1) DEFAULT NULL,
  `coordinate_image` varchar(255) DEFAULT NULL,
  `coordinate_thumb` varchar(255) DEFAULT NULL,
  `coordinate_descrip` text,
  `coordinate_url` varchar(255) DEFAULT NULL,
  `product` text,
  `product_relate` text,
  `product_search` text,
  `product_relate_search` text,
  PRIMARY KEY (`coordinate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_coordinate_book` */

LOCK TABLES `tbl_coordinate_book` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_coupon` */

DROP TABLE IF EXISTS `tbl_coupon`;

CREATE TABLE `tbl_coupon` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreateDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `coupon_code` varchar(32) DEFAULT NULL,
  `coupon_name` text,
  `startdate` datetime DEFAULT NULL,
  `enddate` datetime DEFAULT NULL,
  `benifit_type` tinyint(2) DEFAULT NULL,
  `isafford` tinyint(1) DEFAULT NULL,
  `islimit` tinyint(1) DEFAULT NULL,
  `isafford_item` tinyint(1) DEFAULT NULL,
  `benifit_money` float DEFAULT NULL,
  `benifit_rate` int(11) DEFAULT NULL,
  `oder_money_min_afford` float DEFAULT NULL,
  `num_use_limit` int(11) DEFAULT NULL,
  `item_list` text,
  `is_member` tinyint(2) DEFAULT '0',
  `list_rank` varchar(200) DEFAULT NULL,
  `list_month` varchar(200) DEFAULT NULL,
  `list_customercode` longtext,
  `customercode_from` varchar(20) DEFAULT NULL,
  `customername_from` varchar(200) DEFAULT NULL,
  `customercode_to` varchar(20) DEFAULT NULL,
  `customername_to` varchar(200) DEFAULT NULL,
  `coupon_image` varchar(200) DEFAULT NULL,
  `product_list` text,
  `oder_quan_min_afford` float DEFAULT NULL,
  `is_productsale` tinyint(1) DEFAULT '1',
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_coupon` */

LOCK TABLES `tbl_coupon` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_createseqno` */

DROP TABLE IF EXISTS `tbl_createseqno`;

CREATE TABLE `tbl_createseqno` (
  `seq_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `seqnumber` bigint(20) DEFAULT '0',
  `tablename` varchar(100) DEFAULT '',
  PRIMARY KEY (`seq_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_createseqno` */

LOCK TABLES `tbl_createseqno` WRITE;

insert  into `tbl_createseqno`(`seq_id`,`seqnumber`,`tablename`) values (1,51,'retailsale'),(2,4,'retailcustomer'),(3,10,'retailsalesdetail');

UNLOCK TABLES;

/*Table structure for table `tbl_credit_card` */

DROP TABLE IF EXISTS `tbl_credit_card`;

CREATE TABLE `tbl_credit_card` (
  `credit_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `credit_type` varchar(200) DEFAULT NULL,
  `credit_number` varchar(200) DEFAULT NULL,
  `credit_name` varchar(200) DEFAULT NULL,
  `credit_security` varchar(200) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `customer_id` varchar(50) DEFAULT NULL,
  `expiration_month` varchar(2) DEFAULT NULL,
  `expiration_year` varchar(2) DEFAULT NULL,
  `credit_pays_num` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`credit_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_credit_card` */

LOCK TABLES `tbl_credit_card` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customer_rank` */

DROP TABLE IF EXISTS `tbl_customer_rank`;

CREATE TABLE `tbl_customer_rank` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `customer_lever1` text,
  `customer_lever2` text,
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customer_rank` */

LOCK TABLES `tbl_customer_rank` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customer_rankup` */

DROP TABLE IF EXISTS `tbl_customer_rankup`;

CREATE TABLE `tbl_customer_rankup` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `Rank_Code` varchar(10) DEFAULT NULL,
  `Rank_Name` varchar(20) DEFAULT NULL,
  `Rank_Display` varchar(4) DEFAULT NULL,
  `Default_Type` varchar(4) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customer_rankup` */

LOCK TABLES `tbl_customer_rankup` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customer_rankup_log` */

DROP TABLE IF EXISTS `tbl_customer_rankup_log`;

CREATE TABLE `tbl_customer_rankup_log` (
  `log_rank_id` int(11) NOT NULL AUTO_INCREMENT,
  `log_customer_rankup` text,
  `create_date` varchar(20) DEFAULT NULL,
  `log_customer_rank_type` text,
  PRIMARY KEY (`log_rank_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customer_rankup_log` */

LOCK TABLES `tbl_customer_rankup_log` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customer_rankup_type` */

DROP TABLE IF EXISTS `tbl_customer_rankup_type`;

CREATE TABLE `tbl_customer_rankup_type` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `RankFrom` varchar(20) DEFAULT NULL,
  `RankTo` varchar(20) DEFAULT NULL,
  `RankNumber` int(4) DEFAULT NULL,
  `RankType` varchar(20) DEFAULT NULL,
  `RankMoney` float DEFAULT '0',
  `TimeStamp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customer_rankup_type` */

LOCK TABLES `tbl_customer_rankup_type` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customer_setpointbyrank` */

DROP TABLE IF EXISTS `tbl_customer_setpointbyrank`;

CREATE TABLE `tbl_customer_setpointbyrank` (
  `setpointbyrank` bigint(20) NOT NULL AUTO_INCREMENT,
  `rank_code` varchar(20) DEFAULT NULL,
  `point_rate` varchar(20) DEFAULT NULL,
  `create_date` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`setpointbyrank`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customer_setpointbyrank` */

LOCK TABLES `tbl_customer_setpointbyrank` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_customers` */

DROP TABLE IF EXISTS `tbl_customers`;

CREATE TABLE `tbl_customers` (
  `customer_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `customer_name` varchar(200) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `customer_status` int(4) DEFAULT '0',
  `first_name` varchar(200) DEFAULT NULL,
  `last_name` varchar(200) DEFAULT NULL,
  `email` varchar(200) NOT NULL,
  `customer_code` varchar(13) NOT NULL,
  `birthday` varchar(50) DEFAULT NULL,
  `passwords` varchar(50) DEFAULT NULL,
  `address` varchar(500) DEFAULT NULL,
  `phone` varchar(50) DEFAULT NULL,
  `city` varchar(50) DEFAULT NULL,
  `province` varchar(50) DEFAULT NULL,
  `town` varchar(255) DEFAULT NULL,
  `email_encode` varchar(50) DEFAULT NULL,
  `card_type` varchar(50) DEFAULT NULL,
  `card_number` varchar(50) DEFAULT NULL,
  `card_expried` varchar(10) DEFAULT NULL,
  `card_ccv` varchar(3) DEFAULT NULL,
  `card_name` varchar(50) DEFAULT NULL,
  `card_save` tinyint(4) DEFAULT '0',
  `postcode` varchar(50) DEFAULT NULL,
  `state` varchar(50) DEFAULT NULL,
  `address2` varchar(500) DEFAULT NULL,
  `emailmagazine` int(4) DEFAULT NULL,
  `note` text,
  `points` varchar(20) DEFAULT NULL,
  `rank` varchar(20) DEFAULT NULL,
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `barcode` varchar(20) DEFAULT NULL,
  `cus_pay_id` text,
  `cus_from_applejam` int(4) DEFAULT NULL,
  `withdraw_date` datetime DEFAULT NULL,
  `clickactived` int(4) DEFAULT '0',
  `uprank_dateEC` datetime DEFAULT NULL,
  `email2` varchar(200) DEFAULT NULL,
  `email2_encode` varchar(50) DEFAULT NULL,
  `customer_nickname` varchar(200) DEFAULT NULL,
  `customer_hospital` varchar(255) DEFAULT NULL,
  `question` varchar(10) DEFAULT NULL,
  `customer_identification` varchar(500) DEFAULT NULL,
  `cellphone` varchar(50) DEFAULT NULL,
  `gender` varchar(10) DEFAULT NULL,
  `isblack` int(4) DEFAULT '0',
  `customer_job` varchar(250) DEFAULT NULL,
  `customer_jobother` varchar(250) DEFAULT NULL,
  `ishomeaddress` varchar(10) DEFAULT NULL,
  `shopcode` varchar(20) DEFAULT NULL,
  `shopname` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`customer_code`),
  KEY `customer_id` (`customer_id`),
  KEY `customer_status` (`customer_status`),
  KEY `email` (`email`),
  KEY `passwords` (`passwords`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customers` */

LOCK TABLES `tbl_customers` WRITE;

insert  into `tbl_customers`(`customer_id`,`customer_name`,`create_date`,`modified_date`,`customer_status`,`first_name`,`last_name`,`email`,`customer_code`,`birthday`,`passwords`,`address`,`phone`,`city`,`province`,`town`,`email_encode`,`card_type`,`card_number`,`card_expried`,`card_ccv`,`card_name`,`card_save`,`postcode`,`state`,`address2`,`emailmagazine`,`note`,`points`,`rank`,`SeqNo`,`RSeqNo`,`TimeStamp`,`barcode`,`cus_pay_id`,`cus_from_applejam`,`withdraw_date`,`clickactived`,`uprank_dateEC`,`email2`,`email2_encode`,`customer_nickname`,`customer_hospital`,`question`,`customer_identification`,`cellphone`,`gender`,`isblack`,`customer_job`,`customer_jobother`,`ishomeaddress`,`shopcode`,`shopname`) values (00000000000000000001,'','2021-09-28','2021-09-28',2,'ジャム佐藤テスト','じゃむさとうてすと','fukui@strawberry-jam.co.jp','33300001','1900-01-01','da39a3ee5e6b4b0d3255bfef95601890afd80709','問屋町','１','福井市',NULL,'','2e72c7e8575cbc05eafc95c7a46f4f43a0d4a193',NULL,NULL,NULL,NULL,NULL,0,'9188231','神奈川県','１２３',0,NULL,NULL,'','33300001',NULL,'2021-09-28 19:05:54','3338000000018',NULL,0,NULL,0,NULL,NULL,NULL,'','','','','','',0,'','','','',''),(00000000000000000002,'','2021-09-28','2021-09-28',2,'test','test','kimcuchtk3@gmail.com','33300002','1900-01-01','da39a3ee5e6b4b0d3255bfef95601890afd80709','神宮前','099884643','渋谷区',NULL,'','345213bc83a5c5fc00a21039e48444055fd646b1',NULL,NULL,NULL,NULL,NULL,0,'1500001','東京都','123',0,NULL,NULL,'','33300002',NULL,'2021-09-28 20:02:54','3338000000025',NULL,0,NULL,0,NULL,NULL,NULL,'','','','','','',0,'','','','',''),(00000000000000000003,'','2021-09-28','2021-09-28',2,'huy','huy','abc@gmail.com','33300003','1900-01-01','da39a3ee5e6b4b0d3255bfef95601890afd80709','博労町','123','渋谷区',NULL,'','c0d0a32c405c68cb538e3891a3e3bce98887f012',NULL,NULL,NULL,NULL,NULL,0,'150001','東京都','',0,NULL,NULL,'','33300003',NULL,'2021-09-28 20:31:00','3338000000032',NULL,0,NULL,0,NULL,NULL,NULL,'','','','','','',0,'','','','',''),(00000000000000000004,'','2021-09-29','2021-09-29',2,'永安テスト','永安テスト','t-nagayasu@strawberry-jam.co.jp','33300004','1900-01-01','da39a3ee5e6b4b0d3255bfef95601890afd80709','神宮前1-1-1','09016585068','渋谷区',NULL,'','d1082faa83ab5a6ce546ccd2809354362e5384e6',NULL,NULL,NULL,NULL,NULL,0,'1500001','東京都','',0,NULL,NULL,'','33300004',NULL,'2021-09-29 17:08:55','3338000000049',NULL,0,NULL,0,NULL,NULL,NULL,'','','','','','',0,'','','','','');

UNLOCK TABLES;

/*Table structure for table `tbl_customers_shipaddress` */

DROP TABLE IF EXISTS `tbl_customers_shipaddress`;

CREATE TABLE `tbl_customers_shipaddress` (
  `shipaddress_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `customer_id` varchar(20) NOT NULL,
  `customer_code` varchar(20) NOT NULL,
  `shipping_customer_name` varchar(200) DEFAULT NULL COMMENT 'first_name from customer',
  `shipping_customer_namekana` varchar(200) DEFAULT NULL COMMENT 'last_name from customer',
  `shipping_postcode` varchar(50) DEFAULT NULL,
  `shipping_state` varchar(50) DEFAULT NULL,
  `shipping_city` varchar(50) DEFAULT NULL,
  `shipping_address` varchar(500) DEFAULT NULL,
  `shipping_address2` varchar(500) DEFAULT NULL,
  `shipping_phone` varchar(50) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`shipaddress_id`),
  KEY `shipaddress_id` (`shipaddress_id`),
  KEY `customer_id` (`customer_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_customers_shipaddress` */

LOCK TABLES `tbl_customers_shipaddress` WRITE;

insert  into `tbl_customers_shipaddress`(`shipaddress_id`,`customer_id`,`customer_code`,`shipping_customer_name`,`shipping_customer_namekana`,`shipping_postcode`,`shipping_state`,`shipping_city`,`shipping_address`,`shipping_address2`,`shipping_phone`,`TimeStamp`,`create_date`,`modified_date`) values (1,'00000000000000000001','33300001','ジャム佐藤テスト','じゃむさとうてすと','9188231','神奈川県','福井市','問屋町','１２３','１',NULL,NULL,NULL),(2,'00000000000000000001','33300001','ジャム佐藤テスト','じゃむさとうてすと','9188231','福井県','福井市','問屋町3-715','','08030992394',NULL,NULL,NULL),(3,'00000000000000000002','33300002','test','test','1500001','東京都','渋谷区','神宮前','123','099884643',NULL,NULL,NULL),(4,'00000000000000000001','33300001','ジャム佐藤テスト','じゃむさとうてすと','9188231','福井県','福井市','問屋町','','08030992394',NULL,NULL,NULL),(5,'00000000000000000004','33300004','永安テスト','永安テスト','1500001','東京都','渋谷区','神宮前1-1-1','','09016585068',NULL,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_deliverydate` */

DROP TABLE IF EXISTS `tbl_deliverydate`;

CREATE TABLE `tbl_deliverydate` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `area_code` bigint(11) DEFAULT NULL,
  `area_name` varchar(50) DEFAULT NULL,
  `days` int(2) DEFAULT NULL,
  `shipping_range1` float DEFAULT '0',
  `shipping_range2` float DEFAULT '0',
  `shipping_range3` float DEFAULT '0',
  `shipping_range4` float DEFAULT '0',
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `area_code_eng` bigint(11) DEFAULT NULL,
  `area_name_eng` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_deliverydate` */

LOCK TABLES `tbl_deliverydate` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_deliverydate_cord3` */

DROP TABLE IF EXISTS `tbl_deliverydate_cord3`;

CREATE TABLE `tbl_deliverydate_cord3` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `method_code` bigint(11) DEFAULT NULL,
  `method_name` varchar(255) DEFAULT NULL,
  `area_code` bigint(11) DEFAULT NULL,
  `area_name` text,
  `days` int(2) DEFAULT '0',
  `shipping_range` float DEFAULT '0',
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_deliverydate_cord3` */

LOCK TABLES `tbl_deliverydate_cord3` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_deliveryrange` */

DROP TABLE IF EXISTS `tbl_deliveryrange`;

CREATE TABLE `tbl_deliveryrange` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `range1` float DEFAULT '0',
  `range2` float DEFAULT '0',
  `range3` float DEFAULT '0',
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_deliveryrange` */

LOCK TABLES `tbl_deliveryrange` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_deliverytime` */

DROP TABLE IF EXISTS `tbl_deliverytime`;

CREATE TABLE `tbl_deliverytime` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_deliverytime` */

LOCK TABLES `tbl_deliverytime` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_design` */

DROP TABLE IF EXISTS `tbl_design`;

CREATE TABLE `tbl_design` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `design_code` varchar(20) NOT NULL,
  `design_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `design_status` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`design_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_design` */

LOCK TABLES `tbl_design` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_export_setting` */

DROP TABLE IF EXISTS `tbl_export_setting`;

CREATE TABLE `tbl_export_setting` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `is_periodic` tinyint(4) DEFAULT '0',
  `host` varchar(50) NOT NULL DEFAULT '',
  `folder` varchar(100) NOT NULL DEFAULT '',
  `username` varchar(50) NOT NULL DEFAULT '',
  `password` varchar(50) NOT NULL DEFAULT '',
  `periodic` tinyint(4) DEFAULT '0',
  `filename` varchar(50) NOT NULL DEFAULT '',
  `export_object` tinyint(4) DEFAULT '0',
  `day_export` varchar(50) NOT NULL DEFAULT '',
  `time_export` varchar(50) NOT NULL DEFAULT '',
  `last_update` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_export_setting` */

LOCK TABLES `tbl_export_setting` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_extend_ecomerce` */

DROP TABLE IF EXISTS `tbl_extend_ecomerce`;

CREATE TABLE `tbl_extend_ecomerce` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `goods_color_code` varchar(255) DEFAULT NULL COMMENT 'id',
  `goods_name` varchar(255) DEFAULT NULL COMMENT 'title',
  `description` longtext COMMENT 'description',
  `availability` text,
  `econdition` text,
  `price` float DEFAULT NULL,
  `link` text,
  `images_link` text,
  `brand` varchar(255) DEFAULT NULL,
  `additional_images_link` longtext,
  `age_group` varchar(255) DEFAULT NULL,
  `color` varchar(255) DEFAULT NULL,
  `gender` varchar(50) DEFAULT NULL,
  `item_group_id` varchar(255) DEFAULT NULL,
  `google_product_categroy` text,
  `material` text,
  `pattern` varchar(255) DEFAULT NULL,
  `product_Type` varchar(255) DEFAULT NULL,
  `sale_price` float DEFAULT NULL,
  `sale_price_effective_date` text,
  `shipping` varchar(255) DEFAULT NULL,
  `shipping_weight` varchar(255) DEFAULT NULL,
  `size` text,
  `custom_Label_0` varchar(255) DEFAULT NULL,
  `custom_Label_1` varchar(255) DEFAULT NULL,
  `custom_Label_2` varchar(255) DEFAULT NULL,
  `custom_Label_3` varchar(255) DEFAULT NULL,
  `custom_Label_4` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `goods_color_code` (`goods_color_code`),
  KEY `item_group_id` (`item_group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_extend_ecomerce` */

LOCK TABLES `tbl_extend_ecomerce` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_feature` */

DROP TABLE IF EXISTS `tbl_feature`;

CREATE TABLE `tbl_feature` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `feature_code` varchar(20) NOT NULL,
  `feature_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `feature_status` tinyint(4) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`feature_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_feature` */

LOCK TABLES `tbl_feature` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_footwidthshape` */

DROP TABLE IF EXISTS `tbl_footwidthshape`;

CREATE TABLE `tbl_footwidthshape` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `footwidthshape_code` varchar(20) NOT NULL,
  `footwidthshape_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `footwidthshape_status` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`footwidthshape_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_footwidthshape` */

LOCK TABLES `tbl_footwidthshape` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_gift` */

DROP TABLE IF EXISTS `tbl_gift`;

CREATE TABLE `tbl_gift` (
  `gift_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `gift_code` varchar(50) DEFAULT NULL COMMENT 'Ten goi qua',
  `gift_name` varchar(255) DEFAULT NULL COMMENT 'Ma  goi qua',
  `product_quantity` bigint(20) DEFAULT NULL COMMENT 'So Luong san pham co the mua trong [unit]  goi qua',
  `unit` varchar(20) DEFAULT NULL COMMENT 'so luong bo san pham',
  `gift_description` text COMMENT 'Mo ta cua goi qua',
  `is_gift_description_template` tinyint(1) DEFAULT NULL COMMENT 'Day la mo ta mac dinh cho cac  goi qua khac',
  `gift_image` text COMMENT 'anh cua goi qua',
  `gift_bag_code` varchar(50) DEFAULT NULL COMMENT '(goods_code) Ma loai vo de goi hop qua',
  `gift_bag_price` float DEFAULT NULL COMMENT '(goods_price) tien mua giay^'' de goi hop qua',
  `delivery_type` tinyint(1) DEFAULT NULL COMMENT 'loai chuyen phat',
  `delivery_cost` float DEFAULT NULL,
  `gift_status` tinyint(1) DEFAULT '1',
  `create_date` datetime DEFAULT NULL COMMENT 'Ngay tao',
  `modify_date` datetime DEFAULT NULL,
  `show_order` int(11) DEFAULT NULL,
  `number_gift` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`gift_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_gift` */

LOCK TABLES `tbl_gift` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_gift_detail` */

DROP TABLE IF EXISTS `tbl_gift_detail`;

CREATE TABLE `tbl_gift_detail` (
  `gift_detail_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `gift_id` bigint(20) DEFAULT NULL COMMENT 'reference to gift id',
  `gift_code` varchar(50) DEFAULT NULL COMMENT 'reference to gift code',
  `goods_code` varchar(50) DEFAULT NULL COMMENT 'ma san pham',
  `color_codes` varchar(2000) DEFAULT NULL COMMENT 'Danh sach color cua san pham (cach nhau bang dau phay [,])',
  `size_codes` varchar(2000) DEFAULT NULL COMMENT 'Danh sach size cua san pham (cach nhau bang dau phay [,])',
  `price_notax` float DEFAULT NULL COMMENT 'chac ko can dung den.... (gia san pham)',
  `wrapping_bag_code` varchar(50) DEFAULT NULL COMMENT '(goods_code) ma giay goi qua` (cung la 1 loai san pham)',
  `wrapping_bag_price` float DEFAULT NULL COMMENT 'chac ko dung den.... (Gia cua giay goi qua)',
  `total_price_goods_wrapping` float DEFAULT NULL COMMENT 'tong gia tien (cua giay goi qua + qua`), nghe noi ko dung lam gi, chi de hien thi ma thoi',
  `line_no` tinyint(3) DEFAULT NULL COMMENT 'Dong (so thu tu hien thi trong back end)',
  `create_date` datetime DEFAULT NULL COMMENT 'ngay tao',
  `modify_date` datetime DEFAULT NULL COMMENT 'ngay chinh sua',
  PRIMARY KEY (`gift_detail_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_gift_detail` */

LOCK TABLES `tbl_gift_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_gift_product_detail` */

DROP TABLE IF EXISTS `tbl_gift_product_detail`;

CREATE TABLE `tbl_gift_product_detail` (
  `gift_product_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `gift_id` bigint(20) DEFAULT NULL,
  `gift_code` varchar(50) DEFAULT NULL,
  `gift_detail_id` bigint(20) DEFAULT NULL,
  `goods_code` varchar(50) DEFAULT NULL,
  `color_code` varchar(50) DEFAULT NULL,
  `size_code` varchar(50) DEFAULT NULL,
  `line_no` tinyint(3) DEFAULT NULL,
  PRIMARY KEY (`gift_product_id`),
  KEY `goods_code` (`goods_code`),
  KEY `color_code` (`color_code`),
  KEY `size_code` (`size_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_gift_product_detail` */

LOCK TABLES `tbl_gift_product_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_heelheight` */

DROP TABLE IF EXISTS `tbl_heelheight`;

CREATE TABLE `tbl_heelheight` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `heelheight_code` varchar(20) NOT NULL,
  `heelheight_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `heelheight_status` tinyint(4) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`heelheight_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_heelheight` */

LOCK TABLES `tbl_heelheight` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_history_login_admin` */

DROP TABLE IF EXISTS `tbl_history_login_admin`;

CREATE TABLE `tbl_history_login_admin` (
  `id` bigint(10) NOT NULL AUTO_INCREMENT,
  `created_at` varchar(255) NOT NULL,
  `gip` varchar(255) NOT NULL,
  `login_success` tinyint(1) NOT NULL,
  `login_failed` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_history_login_admin` */

LOCK TABLES `tbl_history_login_admin` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_holiday` */

DROP TABLE IF EXISTS `tbl_holiday`;

CREATE TABLE `tbl_holiday` (
  `holiday_id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `holiday_name` varchar(255) DEFAULT NULL,
  `holiday_date` date DEFAULT NULL,
  `holiday_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `holiday_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`holiday_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_holiday` */

LOCK TABLES `tbl_holiday` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_imagecomment` */

DROP TABLE IF EXISTS `tbl_imagecomment`;

CREATE TABLE `tbl_imagecomment` (
  `imgcomment_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `imgcomment_name` text,
  `img_comment` text,
  `product_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`imgcomment_id`),
  KEY `product_id` (`product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_imagecomment` */

LOCK TABLES `tbl_imagecomment` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_instagram_account` */

DROP TABLE IF EXISTS `tbl_instagram_account`;

CREATE TABLE `tbl_instagram_account` (
  `insta_acc_id` int(11) NOT NULL AUTO_INCREMENT,
  `insta_client_id` varchar(100) DEFAULT NULL,
  `insta_user_id` varchar(100) DEFAULT NULL,
  `insta_access_token` varchar(100) DEFAULT NULL,
  `insta_name_display` varchar(500) DEFAULT NULL,
  `insta_status` tinyint(1) DEFAULT NULL,
  `insta_link` varchar(1000) DEFAULT NULL,
  `cookie` varchar(1000) DEFAULT 'ds_user_id=<value>;sessionid=<value>;',
  `last_run` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`insta_acc_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_instagram_account` */

LOCK TABLES `tbl_instagram_account` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_instagram_api` */

DROP TABLE IF EXISTS `tbl_instagram_api`;

CREATE TABLE `tbl_instagram_api` (
  `ins_id` int(11) NOT NULL AUTO_INCREMENT,
  `ins_name` varchar(250) DEFAULT NULL,
  `ins_exp_date` varchar(40) DEFAULT NULL,
  `ins_token` mediumtext,
  PRIMARY KEY (`ins_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_instagram_api` */

LOCK TABLES `tbl_instagram_api` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_instagram_data` */

DROP TABLE IF EXISTS `tbl_instagram_data`;

CREATE TABLE `tbl_instagram_data` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT 'id he thong tu tang',
  `instagram_id` varchar(50) CHARACTER SET utf8 DEFAULT NULL COMMENT 'id get duoc tu api instagram',
  `instagram_user_id` varchar(50) CHARACTER SET utf8 DEFAULT NULL COMMENT 'id tai khoan instagram',
  `instagram_access_token` varchar(100) CHARACTER SET utf8 DEFAULT NULL COMMENT 'access token cua tai khoan instgram',
  `instagram_images` text CHARACTER SET utf8 COMMENT 'Anh load tu instagram',
  `instagram_caption_text` text CHARACTER SET utf8 COMMENT 'caption text',
  `instagram_tags` text CHARACTER SET utf8,
  `instagram_link` varchar(500) CHARACTER SET utf8 DEFAULT NULL,
  `instagram_created_time` varchar(50) CHARACTER SET utf8 DEFAULT NULL,
  `instagram_created_time_decode` varchar(50) CHARACTER SET utf8 DEFAULT NULL,
  `goods_code` varchar(500) CHARACTER SET utf8 DEFAULT NULL COMMENT 'product code chinh',
  `goods_codes` varchar(1000) CHARACTER SET utf8 DEFAULT NULL COMMENT 'product nhung san pham lien quan',
  `is_onsite` tinyint(1) DEFAULT NULL,
  `instagram_account_link` varchar(1000) CHARACTER SET utf8 DEFAULT NULL,
  `is_video` tinyint(1) DEFAULT '0',
  `instagram_images_download` varchar(500) DEFAULT NULL COMMENT 'Anh load tu instagram',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_instagram_data` */

LOCK TABLES `tbl_instagram_data` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_keyword` */

DROP TABLE IF EXISTS `tbl_keyword`;

CREATE TABLE `tbl_keyword` (
  `keyword_id` int(11) NOT NULL AUTO_INCREMENT,
  `keyword_code` varchar(50) DEFAULT NULL,
  `keyword_name` varchar(100) DEFAULT NULL,
  `show_order` int(11) DEFAULT NULL,
  `keyword_status` tinyint(2) DEFAULT NULL,
  `keyword_content` text,
  `is_keyword` tinyint(1) DEFAULT '0',
  `TimeStamp` varchar(255) DEFAULT NULL,
  `keyword_english` varchar(255) DEFAULT NULL,
  `keyword_image` text NOT NULL,
  `keyword_image_mobile` text NOT NULL,
  `keyword_content_html` text NOT NULL,
  `keyword_role` tinyint(2) DEFAULT NULL,
  KEY `keyword_id` (`keyword_id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_keyword` */

LOCK TABLES `tbl_keyword` WRITE;

insert  into `tbl_keyword`(`keyword_id`,`keyword_code`,`keyword_name`,`show_order`,`keyword_status`,`keyword_content`,`is_keyword`,`TimeStamp`,`keyword_english`,`keyword_image`,`keyword_image_mobile`,`keyword_content_html`,`keyword_role`) values (2,'','店舗BLOG',0,1,'\'\'',1,'2021-09-30 14:35:40','','','','',1),(6,'','RECRUIT',0,1,'\'\'',1,'2021-09-30 13:36:13','','','','',0),(12,'','新商品入荷',1,1,'\'\'',1,'2021-09-30 14:35:26','','','','',1),(13,'','test',2,1,'\'zzzzz\'',1,'2021-10-04 18:10:44','','','','',0);

UNLOCK TABLES;

/*Table structure for table `tbl_konbini_info_config` */

DROP TABLE IF EXISTS `tbl_konbini_info_config`;

CREATE TABLE `tbl_konbini_info_config` (
  `id` int(11) NOT NULL,
  `muf_code` varchar(5) NOT NULL COMMENT 'n01_muf_code',
  `billing_content_kana` varchar(255) DEFAULT NULL COMMENT 's08_billing_content_kana',
  `billing_content_kanji` varchar(255) DEFAULT NULL COMMENT 's09_billing_content_kanji',
  `expiration_date` int(2) DEFAULT NULL COMMENT 'n11_expiration_date',
  `payment_type` varchar(255) DEFAULT NULL COMMENT 's15_payment_type',
  `success_url` text COMMENT 's19_success_url',
  `error_url` text COMMENT 's20_error_url',
  `detailed_print_content_kana` varchar(255) DEFAULT NULL COMMENT 's21_detailed_print_content_kana',
  `detailed_print_content_kanji` varchar(255) DEFAULT NULL COMMENT 's22_detailed_print_content_kanji',
  `detailed_display_content_kana_1` varchar(255) DEFAULT NULL COMMENT 's23_detailed_display_content_kana_1',
  `detailed_display_content_kanji_1` varchar(255) DEFAULT NULL COMMENT 's24_detailed_display_content_kanji_1',
  `detailed_display_content_kana_2` varchar(255) DEFAULT NULL COMMENT 's25_detailed_display_content_kana_2',
  `detailed_display_content_kanji_2` varchar(255) DEFAULT NULL COMMENT 's26_detailed_display_content_kanji_2',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_konbini_info_config` */

LOCK TABLES `tbl_konbini_info_config` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_konbini_pay_notification` */

DROP TABLE IF EXISTS `tbl_konbini_pay_notification`;

CREATE TABLE `tbl_konbini_pay_notification` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `order_id` int(11) DEFAULT NULL,
  `itakusya_no` int(5) DEFAULT NULL,
  `kokyaku_no` varchar(15) DEFAULT NULL,
  `kakunin_no` int(6) DEFAULT NULL,
  `kokyaku_name` varchar(24) DEFAULT NULL,
  `seikyu_kingaku` decimal(10,2) DEFAULT NULL,
  `syunou_status` int(2) DEFAULT NULL,
  `touroku_date_time` datetime DEFAULT NULL,
  `kigen_date` int(8) DEFAULT NULL,
  `seikyu_channel_cd` varchar(4) DEFAULT NULL,
  `syomei_cd` varchar(32) DEFAULT NULL,
  `uketsuke_no` varchar(13) DEFAULT NULL,
  `uketsuke_no_s` varchar(13) DEFAULT NULL,
  `uketsuke_no_w` int(11) DEFAULT NULL,
  `kokyaku_tel_no` varchar(13) DEFAULT NULL,
  `kakunin_no_w` int(6) DEFAULT NULL,
  `haraikomihyou_url` text,
  `syunoukikan_no` int(5) DEFAULT NULL,
  `free_info` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_konbini_pay_notification` */

LOCK TABLES `tbl_konbini_pay_notification` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_konbini_pay_request` */

DROP TABLE IF EXISTS `tbl_konbini_pay_request`;

CREATE TABLE `tbl_konbini_pay_request` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `order_id` int(11) DEFAULT NULL,
  `muf_code` int(5) DEFAULT NULL COMMENT 'N01',
  `customer_code` varchar(15) DEFAULT NULL COMMENT 'N02',
  `authorization_number` int(6) DEFAULT NULL COMMENT 'N03',
  `total_amount` decimal(10,2) DEFAULT NULL COMMENT 'N04',
  `basic_amount` decimal(10,2) DEFAULT NULL COMMENT 'N05',
  `arrears_amount` decimal(10,2) DEFAULT NULL COMMENT 'N06',
  `taxation_amount` decimal(10,2) DEFAULT NULL COMMENT 'N07',
  `billing_content_kana` varchar(50) DEFAULT NULL COMMENT 'S08',
  `billing_content_kanji` varchar(50) DEFAULT NULL COMMENT 'S09',
  `customer_name_kana` varchar(50) DEFAULT NULL COMMENT 'S10',
  `expiration_date` datetime DEFAULT NULL COMMENT 'N11',
  `transition_normal_url` text COMMENT 'S12',
  `transition_abnormal_url` text COMMENT 'S13',
  `free_text` varchar(200) DEFAULT NULL COMMENT 'S14',
  `payment_type` varchar(4) DEFAULT 'C001' COMMENT 'S15',
  `customer_phone` varchar(20) DEFAULT NULL COMMENT 'S16',
  `customer_name_kanji` varchar(50) DEFAULT NULL COMMENT 'S17',
  `infomation` varchar(50) DEFAULT NULL COMMENT 'S18',
  `success_url` text COMMENT 'S19',
  `error_url` text COMMENT 'S20',
  `detailed_print_content_kana` varchar(50) DEFAULT NULL COMMENT 'S21',
  `detailed_print_content_kanji` varchar(50) DEFAULT NULL COMMENT 'S22',
  `detailed_display_content_kana_1` varchar(255) DEFAULT NULL COMMENT 'S23',
  `detailed_display_content_kanji_1` varchar(255) DEFAULT NULL COMMENT 'S24',
  `detailed_display_content_kana_2` varchar(255) DEFAULT NULL COMMENT 'S25',
  `detailed_display_content_kanji_2` varchar(255) DEFAULT NULL COMMENT 'S26',
  `destination_url_mobile` text COMMENT 'S27',
  `free_infomation` text COMMENT 'S28',
  `forwarding_mail_address` varchar(100) DEFAULT NULL COMMENT 'S29',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_konbini_pay_request` */

LOCK TABLES `tbl_konbini_pay_request` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_konbini_pay_respone` */

DROP TABLE IF EXISTS `tbl_konbini_pay_respone`;

CREATE TABLE `tbl_konbini_pay_respone` (
  `id` int(11) DEFAULT NULL,
  `order_id` int(11) DEFAULT NULL,
  `itakusya_no` int(5) DEFAULT NULL,
  `kokyaku_no` varchar(15) DEFAULT NULL,
  `kakunin_no` int(6) DEFAULT NULL,
  `cn_cd` int(17) DEFAULT NULL,
  `kokyaku_name` varchar(24) DEFAULT NULL,
  `syunou_kingaku` decimal(10,2) DEFAULT NULL,
  `syunou_status` int(2) DEFAULT NULL,
  `syunou_date_time` datetime DEFAULT NULL,
  `syunou_nyuryoku_kbn` int(2) DEFAULT NULL,
  `syunou_channel_kbn` int(2) DEFAULT NULL,
  `syunou_channel_cd` int(4) DEFAULT NULL,
  `cvstenpo_cd` varchar(7) DEFAULT NULL,
  `syomei_cd` varchar(32) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_konbini_pay_respone` */

LOCK TABLES `tbl_konbini_pay_respone` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_leather` */

DROP TABLE IF EXISTS `tbl_leather`;

CREATE TABLE `tbl_leather` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `leather_code` varchar(200) NOT NULL,
  `leather_name` varchar(255) NOT NULL,
  `leather_status` tinyint(4) NOT NULL,
  `leather_parent_name` varchar(500) NOT NULL,
  `description` text NOT NULL,
  `leather_banner` varchar(500) NOT NULL,
  `leather_banner_details` text NOT NULL,
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_leather` */

LOCK TABLES `tbl_leather` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_lifestyle` */

DROP TABLE IF EXISTS `tbl_lifestyle`;

CREATE TABLE `tbl_lifestyle` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `lifestyle_code` varchar(20) NOT NULL,
  `lifestyle_name` varchar(50) NOT NULL,
  `display_order` int(11) NOT NULL,
  `lifestyle_status` tinyint(4) NOT NULL DEFAULT '1',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`lifestyle_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_lifestyle` */

LOCK TABLES `tbl_lifestyle` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_lookbook_group` */

DROP TABLE IF EXISTS `tbl_lookbook_group`;

CREATE TABLE `tbl_lookbook_group` (
  `group_id` int(11) NOT NULL AUTO_INCREMENT,
  `group_code` varchar(50) NOT NULL,
  `group_name` varchar(50) NOT NULL,
  `group_status` tinyint(1) NOT NULL,
  `barcode_related` text NOT NULL,
  `barcode_related_search` text NOT NULL,
  `for_customer` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_lookbook_group` */

LOCK TABLES `tbl_lookbook_group` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_lookbook_keyword` */

DROP TABLE IF EXISTS `tbl_lookbook_keyword`;

CREATE TABLE `tbl_lookbook_keyword` (
  `keyword_id` int(11) NOT NULL AUTO_INCREMENT,
  `keyword_code` varchar(50) DEFAULT NULL,
  `keyword_name` varchar(100) DEFAULT NULL,
  `keyword_related` text,
  KEY `keyword_id` (`keyword_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_lookbook_keyword` */

LOCK TABLES `tbl_lookbook_keyword` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_logs` */

DROP TABLE IF EXISTS `tbl_mail_logs`;

CREATE TABLE `tbl_mail_logs` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `modules` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `to_name` varchar(255) DEFAULT NULL,
  `to_mail` varchar(255) DEFAULT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `body_mail` text,
  `send_status` int(2) DEFAULT '0',
  `time_stamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mail_exception` text,
  `mail_from` int(2) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `time_stamp` (`time_stamp`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_logs` */

LOCK TABLES `tbl_mail_logs` WRITE;

insert  into `tbl_mail_logs`(`id`,`modules`,`code`,`to_name`,`to_mail`,`subject`,`body_mail`,`send_status`,`time_stamp`,`mail_exception`,`mail_from`) values (1,'cart','3330000001','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000001<br>お支払い合計：¥ 16,500<br>お支払い方法：銀行振込<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>-------------------------------------------------<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：神奈川県福井市問屋町 １２３<br>電話番号：１<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：神奈川県福井市問屋町 １２３<br>電話番号：１<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-28 17:05:58','',0),(2,'cart','3330000002','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000002<br>お支払い合計：¥ 16,932<br>お支払い方法：代金引換<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: ASH GRAY<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 432<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,932<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：神奈川県福井市問屋町 １２３<br>電話番号：１<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-28 17:07:28','',0),(3,'cart','3330000044','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000044<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 12:01:19','',0),(4,'cart','3330000045','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000045<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 12:07:12','',0),(5,'cart','3330000046','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000046<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: ASH GRAY<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 12:15:35','',0),(6,'cart','3330000047','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000047<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 13:46:52','',0),(7,'cart','3330000048','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000048<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 13:48:04','',0),(8,'cart','3330000049','永安テスト','t-nagayasu@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','永安テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000049<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：永安テスト様<br>郵便番号：〒1500001<br>住所　　：東京都渋谷区神宮前1-1-1 <br>電話番号：09016585068<br>メールアドレス：t-nagayasu@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：永安テスト様<br>郵便番号：〒1500001<br>住所　　：東京都渋谷区神宮前1-1-1 <br>電話番号：09016585068<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 15:09:37','',0),(9,'cart','3330000050','永安テスト','t-nagayasu@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','永安テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000050<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: ASH GRAY<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：永安テスト様<br>郵便番号：〒1500001<br>住所　　：東京都渋谷区神宮前1-1-1 <br>電話番号：09016585068<br>メールアドレス：t-nagayasu@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：永安テスト様<br>郵便番号：〒1500001<br>住所　　：東京都渋谷区神宮前1-1-1 <br>電話番号：09016585068<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:\"></a><br>',1,'2021-09-29 15:13:39','',0),(10,'cart','3330000051','ジャム佐藤テスト','fukui@strawberry-jam.co.jp','【The Real McCoy\'s ONLINE STORE】 ご注文ありがとうございます ','ジャム佐藤テスト様<br>この度はご注文いただき誠にありがとうございます。<br>下記ご注文内容にお間違いがないかご確認下さい。<br><br>************************************************ <br>ご請求金額<br>************************************************<br>ご注文番号：3330000051<br>お支払い合計：¥ 16,500<br>お支払い方法：クレジットカード<br>メッセージ：<br><br>************************************************ <br>ご注文商品明細<br>************************************************<br>商品コード: MC21018<br>商品名: 9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT<br>色: MILK<br>サイズ: S<br>単価： ¥ 16,500<br>数量：1<br>-------------------------------------------------<br>小計（税込） ¥ 16,500(うち消費税 ¥ 1,222)<br>手数料 ¥ 0<br>送　料 ¥ 0<br>============================================<br>合　計 ¥ 16,500<br><br>************************************************ <br>ご注文者情報<br>************************************************<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町3-715 <br>電話番号：08030992394<br>メールアドレス：fukui@strawberry-jam.co.jp<br><br>************************************************ <br>配送情報<br>************************************************<br>◎お届け先<br>お名前　：ジャム佐藤テスト様<br>郵便番号：〒9188231<br>住所　　：福井県福井市問屋町3-715 <br>電話番号：08030992394<br> 配送日時：通常配送<br> 配送希望時間：<br>============================================<br><br>このメッセージはお客様へのお知らせ専用ですので、<br>このメッセージへの返信としてご質問をお送りいただいても回答できません。<br>ご了承ください。<br>ご質問やご不明な点がございましたら、<a href=\"https://realmccoys.strawberry-jam.vn/contact.html\">こちら</a>からお願いいたします。<br><br>----------------------------------<br><br>株式会社　ザ・リアルマッコイズ・インターナショナル<br>URL：<a href=\"https://realmccoys.strawberry-jam.vn\">https://realmccoys.strawberry-jam.vn</a><br>〒651-0082<br>兵庫県神戸市中央区小野浜町8-51<br>tel: 078-333-0066<br>email:<a href=\"mailto:mail@realmccoys.co.jp\">mail@realmccoys.co.jp</a><br>',1,'2021-09-30 09:18:23','',0);

UNLOCK TABLES;

/*Table structure for table `tbl_mail_magazine_register` */

DROP TABLE IF EXISTS `tbl_mail_magazine_register`;

CREATE TABLE `tbl_mail_magazine_register` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `email_name` varchar(255) NOT NULL,
  `register_date` varchar(20) DEFAULT NULL,
  `email_status` varchar(20) NOT NULL,
  `chronology` varchar(20) DEFAULT NULL,
  `gender` varchar(20) DEFAULT NULL COMMENT '0: Female; 1: Male',
  `stop_date` varchar(40) DEFAULT NULL,
  `reregister_date` text,
  `first_name` varchar(50) DEFAULT NULL,
  `last_name` varchar(50) DEFAULT NULL,
  `birthday` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_magazine_register` */

LOCK TABLES `tbl_mail_magazine_register` WRITE;

insert  into `tbl_mail_magazine_register`(`id`,`email_name`,`register_date`,`email_status`,`chronology`,`gender`,`stop_date`,`reregister_date`,`first_name`,`last_name`,`birthday`) values (1,'fukui@strawberry-jam.co.jp','2021-09-22 21:01:48','1','','',NULL,NULL,NULL,NULL,NULL),(2,'minhcntt29091997@gmail.com','2021-12-10 17:33:14','1','','',NULL,NULL,NULL,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_mail_notsend` */

DROP TABLE IF EXISTS `tbl_mail_notsend`;

CREATE TABLE `tbl_mail_notsend` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `modules` varchar(255) DEFAULT NULL,
  `code` varchar(255) DEFAULT NULL,
  `to_name` varchar(255) DEFAULT NULL,
  `to_mail` varchar(255) DEFAULT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `body_mail` text,
  `send_status` int(2) DEFAULT '0',
  `time_stamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `mail_exception` text,
  `send_count` int(2) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_notsend` */

LOCK TABLES `tbl_mail_notsend` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_remind_order` */

DROP TABLE IF EXISTS `tbl_mail_remind_order`;

CREATE TABLE `tbl_mail_remind_order` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `product_id` int(11) DEFAULT NULL,
  `product_no` varchar(200) DEFAULT NULL,
  `product_name` varchar(200) DEFAULT NULL,
  `color_code` varchar(11) DEFAULT NULL,
  `color_name` varchar(200) DEFAULT NULL,
  `size_code` varchar(11) DEFAULT NULL,
  `size_name` varchar(200) DEFAULT NULL,
  `customer_id` int(11) DEFAULT NULL,
  `customer_name` varchar(200) DEFAULT NULL,
  `customer_email` varchar(200) DEFAULT NULL,
  `mail_title_1` text,
  `mail_content_1` text,
  `mail_title_2` text,
  `mail_content_2` text,
  `is_sent_email_remind` tinyint(2) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `mailing_date` datetime DEFAULT NULL,
  `mail_from` varchar(200) DEFAULT NULL,
  `mail_from_address` varchar(200) DEFAULT NULL,
  `time_send_contact_2` datetime DEFAULT NULL,
  `customer_message` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_remind_order` */

LOCK TABLES `tbl_mail_remind_order` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_remind_order_history` */

DROP TABLE IF EXISTS `tbl_mail_remind_order_history`;

CREATE TABLE `tbl_mail_remind_order_history` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `mail_remind_id` int(11) DEFAULT NULL,
  `mail_address` varchar(2000) DEFAULT NULL,
  `sending_time` datetime DEFAULT NULL,
  `current_stock_num` bigint(20) DEFAULT NULL,
  `current_shop_code` varchar(1000) DEFAULT NULL,
  `current_actual_num` int(11) DEFAULT NULL,
  `current_is_actual_num` tinyint(1) DEFAULT NULL,
  `current_is_actual_zero` tinyint(1) DEFAULT NULL,
  `current_is_shop_stock` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_remind_order_history` */

LOCK TABLES `tbl_mail_remind_order_history` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_remind_order_tmp` */

DROP TABLE IF EXISTS `tbl_mail_remind_order_tmp`;

CREATE TABLE `tbl_mail_remind_order_tmp` (
  `mail_tmp_id` int(11) DEFAULT NULL,
  `guide_pc` text,
  `guide_mobile` text,
  `mail_from` varchar(200) DEFAULT NULL,
  `mail_address` varchar(200) DEFAULT NULL,
  `mail_title_1` varchar(250) DEFAULT NULL,
  `mail_content_1` text COMMENT 'de sau nay co nhieu loai mail thi luu chung: 	- 1: Mail thong bao khi co hang ton trong kho',
  `mail_title_2` varchar(250) DEFAULT NULL,
  `mail_content_2` text,
  `is_send_mail_notify` tinyint(4) DEFAULT NULL,
  `mail_password` varchar(200) DEFAULT NULL,
  `time_dont_send_mail_from` time DEFAULT NULL,
  `time_dont_send_mail_to` time DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_remind_order_tmp` */

LOCK TABLES `tbl_mail_remind_order_tmp` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_remind_wish_list_tmp` */

DROP TABLE IF EXISTS `tbl_mail_remind_wish_list_tmp`;

CREATE TABLE `tbl_mail_remind_wish_list_tmp` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `is_auto_send` tinyint(1) DEFAULT NULL,
  `time_auto_send_mail` int(11) DEFAULT NULL COMMENT 'Sau bao nhieu ngay, tu ngay ng dung click vao bookmark item thi gui mail',
  `mail_subject` text,
  `mail_content` text,
  `mail_backup_address` varchar(500) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_remind_wish_list_tmp` */

LOCK TABLES `tbl_mail_remind_wish_list_tmp` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mail_sample` */

DROP TABLE IF EXISTS `tbl_mail_sample`;

CREATE TABLE `tbl_mail_sample` (
  `email_id` int(11) NOT NULL AUTO_INCREMENT,
  `email_title` varchar(200) DEFAULT NULL,
  `email_objects` varchar(200) DEFAULT NULL,
  `email_contents` text,
  `email_status` tinyint(4) DEFAULT NULL,
  `create_date` varchar(20) DEFAULT NULL,
  `modified_date` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`email_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mail_sample` */

LOCK TABLES `tbl_mail_sample` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_maintenance` */

DROP TABLE IF EXISTS `tbl_maintenance`;

CREATE TABLE `tbl_maintenance` (
  `maintenance_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `maintenance_image` text,
  `maintenance_description` text,
  `maintenance_type` tinyint(4) DEFAULT '0',
  `startdate` varchar(40) DEFAULT NULL,
  `enddate` varchar(40) DEFAULT NULL,
  `starttime` varchar(40) DEFAULT NULL,
  `endtime` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`maintenance_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_maintenance` */

LOCK TABLES `tbl_maintenance` WRITE;

insert  into `tbl_maintenance`(`maintenance_id`,`maintenance_image`,`maintenance_description`,`maintenance_type`,`startdate`,`enddate`,`starttime`,`endtime`) values (1,'','',0,'2021/11/12','2021/11/12','00:00','00:00');

UNLOCK TABLES;

/*Table structure for table `tbl_material` */

DROP TABLE IF EXISTS `tbl_material`;

CREATE TABLE `tbl_material` (
  `MaterialID` bigint(20) NOT NULL AUTO_INCREMENT,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `MaterialCode` varchar(15) DEFAULT NULL,
  `MaterialName` varchar(50) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `Memo` text,
  `Standard` varchar(20) DEFAULT NULL,
  `SupplierCode` varchar(10) DEFAULT NULL,
  `SupplierName` varchar(20) DEFAULT NULL,
  `MaterialTypeCode` varchar(5) DEFAULT NULL,
  `MaterialTypeName` varchar(20) DEFAULT NULL,
  `UnitCode` varchar(5) DEFAULT NULL,
  `UnitName` varchar(10) DEFAULT NULL,
  `PurchasePrice` double DEFAULT NULL,
  `CurrencyRate` double DEFAULT NULL,
  `CurrencyPrice` double DEFAULT NULL,
  `UpCartSite` double DEFAULT NULL,
  PRIMARY KEY (`MaterialID`),
  KEY `MaterialCode` (`MaterialCode`),
  KEY `MaterialTypeCode` (`MaterialTypeCode`),
  KEY `SupplierCode` (`SupplierCode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_material` */

LOCK TABLES `tbl_material` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_materials` */

DROP TABLE IF EXISTS `tbl_materials`;

CREATE TABLE `tbl_materials` (
  `materials_code` varchar(60) DEFAULT NULL,
  `materials_name` varchar(765) DEFAULT NULL,
  `display_name` text,
  `display_order` double DEFAULT NULL,
  `materials_description` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_materials` */

LOCK TABLES `tbl_materials` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_media` */

DROP TABLE IF EXISTS `tbl_media`;

CREATE TABLE `tbl_media` (
  `media_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `media_title` varchar(200) DEFAULT NULL,
  `media_short_description` text,
  `media_contents` text,
  `create_date` varchar(40) DEFAULT NULL,
  `created_by` varchar(200) DEFAULT NULL,
  `edited_by` varchar(200) DEFAULT NULL,
  `media_status` tinyint(2) DEFAULT NULL,
  `media_date` varchar(40) DEFAULT NULL,
  `media_image` varchar(200) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  `related_goods_code` text,
  `related_goods_code_for_search` text COMMENT 'Code for getting related products once viewing page media detail',
  `media_number` varchar(20) DEFAULT NULL,
  `media_page` varchar(20) DEFAULT NULL,
  `category_code` varchar(200) DEFAULT NULL,
  `shop_code` varchar(10) DEFAULT NULL COMMENT 'lay thong tin shop nao viet media nay',
  `keyword_id` int(11) DEFAULT NULL COMMENT 'lay keyword tuong ung',
  `keyword_list` text COMMENT 'luu danh sach tu khoa',
  `published_date` datetime DEFAULT NULL,
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `unlimited` int(1) DEFAULT '1',
  `media_url` text,
  `url_check` tinyint(4) DEFAULT NULL,
  `gift_goods_code` text,
  `gift_goods_code_for_search` text,
  PRIMARY KEY (`media_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_media` */

LOCK TABLES `tbl_media` WRITE;

insert  into `tbl_media`(`media_id`,`media_title`,`media_short_description`,`media_contents`,`create_date`,`created_by`,`edited_by`,`media_status`,`media_date`,`media_image`,`modified_date`,`related_goods_code`,`related_goods_code_for_search`,`media_number`,`media_page`,`category_code`,`shop_code`,`keyword_id`,`keyword_list`,`published_date`,`start_date`,`end_date`,`unlimited`,`media_url`,`url_check`,`gift_goods_code`,`gift_goods_code_for_search`) values (1,'WOOL CASHMERE CARDIGAN','WOOL CASHMERE CARDIGAN','<div style=\"text-align: center;\"><b>WOOL CASHMERE CARDIGAN</b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC0803000000.JPG\"><img alt=\"DSC0803000000.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC0803000000-thumb-500x750-83645.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div style=\"text-align: center;\"><b>STYLE No./MC21115</b></div>\r\n<div style=\"text-align: center;\"><b>COLOR/CHALE,OLIVE</b></div>\r\n<div>\r\n<div style=\"text-align: center;\"><b>SIZE/S.M.L.XL</b></div>\r\n<div style=\"text-align: center;\"><b>PRICE/￥38,500（TAX‐IN)</b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><span><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC081466666.jpg\"><img alt=\"DSC081466666.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC081466666-thumb-500x750-83633.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></span></div>\r\n<div style=\"text-align: center;\"><span><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/6.jpg\"><img alt=\"6.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/6-thumb-500x750-83635.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></span></div>\r\n<div style=\"text-align: center;\"><span><span>無地のカーディガンをカシミア混の糸で作成。</span></span></div>\r\n<div style=\"text-align: center;\"><span><span>リブの本数は60年代のヴィンテージを元に設計しています。</span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"><span><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC080555555.jpg\"><img alt=\"DSC080555555.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC080555555-thumb-500x750-83626.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></span></div>\r\n<div style=\"text-align: center;\"><span><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC081225555.jpg\"><img alt=\"DSC081225555.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC081225555-thumb-500x750-83637.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></span></div>\r\n<div style=\"text-align: center;\"><span><span>レザージャケットやミリタリーだけでなく</span></span></div>\r\n<div style=\"text-align: center;\"><span><span>カジュアルのアウタージャケットにも最適な冬のレイヤーアイテムです。</span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div style=\"text-align: center;\"><span><span> </span></span></div>\r\n<div>\r\n<div style=\"text-align: center;\"><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC0816777000.JPG\"><img alt=\"DSC0816777000.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC0816777000-thumb-500x750-83647.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></div>\r\n<div style=\"text-align: center;\">MODEL:175cm / SIZE:M</div>\r\n<div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\">宜しくお願い致します。</div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div style=\"text-align: center;\"><a href=\"https://www.realmccoys.co.jp/catalog/products/detail.php?product_id=4898&amp;pg=\" target=\"_blank\" rel=\"noopener\">WEBでの購入はコチラ</a></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div>\r\n<div style=\"text-align: center;\"><span><a href=\"https://www.instagram.com/therealmccoys.jp/\" target=\"_blank\" rel=\"noopener\"><img alt=\"インスタ2.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/06/%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF2-thumb-500x71-82334.jpg\" width=\"500\" height=\"71\" class=\"mt-image-center\" /></a></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div style=\"text-align: center;\"><b>OUR STORES</b></div>\r\n<div style=\"text-align: center;\"><span><b>SENDAI</b></span>：022-796-9286</div>\r\n<div style=\"text-align: center;\"><span><b>TOKYO</b></span>：03-6427-4300</div>\r\n<div style=\"text-align: center;\"><span><b>KANAZAWA</b></span>：076-260-7030</div>\r\n<div style=\"text-align: center;\"><span><b>KYOTO</b></span>：075-708-5456</div>\r\n<div style=\"text-align: center;\"><b>OSAKA</b>：06-4391-8430</div>\r\n<div style=\"text-align: center;\"><span><b>KOBE</b></span>：078-331-0620</div>\r\n<div style=\"text-align: center;\"><b>FUKUOKA</b>：092-738-7977</div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>','2021-09-30','','',1,'2021/09/30','media_thubnail_1.jpg','2021-12-20 00:00:00','','','','','','',12,'店舗BLOG\r\n新商品入荷','2021-09-30 09:45:55','2021-09-30 00:00:00','2021-09-30 00:00:00',1,'',0,'',''),(2,'BUCO MECHANIC KNIT CAP / LOGO','BUCO MECHANIC KNIT CAP / LOGO','<div align=\"center\" center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\" style=\"text-align: left;\"><span><b>BUCO MECHANIC KNIT CAP / LOGO</b></span></div>\r\n<div align=\"center\" center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\" style=\"text-align: left;\"><span><b> </b></span></div>\r\n<div align=\"center\" center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\">\r\n<div align=\"center\" center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\" style=\"text-align: left;\"><span> </span></div>\r\n<div align=\"center\" center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\" style=\"text-align: left;\"><span>STYLE No. /BA21103</span></div>\r\n<div center=\"\" arial=\"\" helvetica=\"\" w3=\"\" pro=\"\">\r\n<div align=\"center\" style=\"text-align: left;\"><span>COLOR /　NAVY</span></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span>SIZE / F</span></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span>PRICE / ￥11,0</span><span>00 (TAX-IN)</span></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span> </span></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span> </span></div>\r\n<div align=\"center\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/BA211031%20-%20%E3%82%B3%E3%83%94%E3%83%BC.JPG\"><span class=\"mt-enclosure mt-enclosure-image\"><img alt=\"BA211031 - コピー.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/09/BA211031%20-%20%E3%82%B3%E3%83%94%E3%83%BC-thumb-450x337-83391.jpg\" width=\"450\" height=\"337\" class=\"mt-image-center\" /></span></a>\r\n<div align=\"center\" style=\"text-align: left;\">BUCO MECHANIC KNIT CAP / LOGOです。</div>\r\n<div align=\"center\" style=\"text-align: left;\"><span> </span></div>\r\n<div align=\"center\" style=\"text-align: left;\">WOOL100％の保温性に優れたニットキャップで、防寒用としてライダースジャケット</div>\r\n<div align=\"center\" style=\"text-align: left;\">は勿論ですが、カジュアルなコーディネイトとも相性のいいF/Wの定番アイテムです。</div>\r\n<div align=\"center\" style=\"text-align: left;\"></div>\r\n<div align=\"center\" style=\"text-align: left;\"></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/BA211032%20-%20%E3%82%B3%E3%83%94%E3%83%BC.JPG\"><img alt=\"BA211032 - コピー.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/09/BA211032%20-%20%E3%82%B3%E3%83%94%E3%83%BC-thumb-450x599-83393.jpg\" width=\"450\" height=\"599\" class=\"mt-image-center\" /></a></span></div>\r\n<div align=\"center\" style=\"text-align: left;\">今シーズンはBUCOのロゴ入りオーバルタイプのワッペンが目を引く仕様になっています。</div>\r\n<div align=\"center\" style=\"text-align: left;\"></div>\r\n<div align=\"center\" style=\"text-align: left;\"></div>\r\n<div align=\"center\" style=\"text-align: left;\"><span class=\"mt-enclosure mt-enclosure-image\"><img alt=\"BA211034 - コピー.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/09/BA211034%20-%20%E3%82%B3%E3%83%94%E3%83%BC-thumb-450x337-83395.jpg\" width=\"450\" height=\"337\" class=\"mt-image-center\" /></span></div>\r\n<div align=\"center\" style=\"text-align: left;\">元々バイク関連のアクセサリーから始まったブランドのアイテムだけあって</div>\r\n<div align=\"center\" style=\"text-align: left;\">バイクライディングや、文字通りこれからの時期のバイクメンテナンス作業</div>\r\n<div align=\"center\" style=\"text-align: left;\">にもピッタリハマる商品です。</div>\r\n<div align=\"center\" style=\"text-align: left;\"></div>\r\n<div align=\"center\">\r\n<div align=\"center\" style=\"text-align: left;\"><span>是非店頭で試してみてください。</span></div>\r\n<div style=\"text-align: left;\"><span> </span></div>\r\n<div style=\"text-align: left;\"><span> </span></div>\r\n<div style=\"text-align: left;\"><span> </span></div>\r\n<div style=\"text-align: left;\"><span><b><span><a href=\"https://www.realmccoys.co.jp/catalog/products/detail.php?product_id=4886&amp;pg=\" target=\"_self\">WEBでの購入はこちら</a></span></b></span></div>\r\n<div style=\"text-align: left;\"></div>\r\n<div style=\"text-align: left;\"></div>\r\n<div>\r\n<div>\r\n<div>\r\n<div><a href=\"https://www.instagram.com/therealmccoys.jp/\" target=\"_blank\" rel=\"noopener\"><img alt=\"インスタ2.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/06/%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF2-thumb-500x71-82334.jpg\" width=\"500\" height=\"71\" class=\"mt-image-center\" /></a>\r\n<p align=\"left\" style=\"text-align: left;\"> </p>\r\n<p align=\"left\" style=\"text-align: center;\"><strong>OUR STORES</strong></p>\r\n<p align=\"left\" style=\"text-align: center;\"><span>THE REAL McCOY\'S TOKYO       TEL:03-6427-4300</span></p>\r\n<p align=\"left\" style=\"text-align: center;\"><span>THE REAL McCOY\'S OSAKA       TEL:06-4391-8430</span></p>\r\n<p align=\"left\" style=\"text-align: center;\"><b>THE REAL McCOY\'S KYOTO       TEL:075-708-5456</b></p>\r\n<p align=\"left\" style=\"text-align: center;\"><span>THE REAL McCOY\'S KOBE          TEL:078-331-0620</span></p>\r\n<p align=\"left\" style=\"text-align: center;\"><b>THE REAL McCOY\'S FUKUOKA   TEL:092-738-7977</b></p>\r\n<p align=\"left\" style=\"text-align: center;\"><b></b></p>\r\n<p align=\"left\" style=\"text-align: center;\"><strong><b></b></strong></p>\r\n<p align=\"left\" style=\"text-align: center;\"><strong><b></b></strong></p>\r\n<p align=\"left\" style=\"text-align: center;\"><b>　THE REAL McCOY\'S SENDAI　      TEL:022-796-9286</b></p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>','2021-10-01','','',1,'2021/10/01','media_thubnail_2.jpg','2021-10-28 00:00:00','','','','','','',2,'店舗BLOG','2021-10-01 19:17:50','2021-10-01 00:00:00','2021-10-01 00:00:00',1,'',0,'',''),(3,'BUCO HORSEHIDE ENGINEER BOOTS / BUTTOCK','BUCO HORSEHIDE ENGINEER BOOTS / BUTTOCK','<div style=\"text-align: center;\"><span><b> </b></span></div>\r\n<div style=\"text-align: center;\"><span><b>BUCO HORSEHIDE ENGINEER BOOTS</b></span></div>\r\n<div style=\"text-align: center;\"><span><b> -BUTTOCK-</b></span></div>\r\n<div style=\"text-align: center;\"><span><b> </b></span></div>\r\n<div style=\"text-align: center;\"><span><b> </b></span></div>\r\n<div style=\"text-align: center;\"><span><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC082060.JPG\"><img alt=\"DSC082060.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC082060-thumb-500x750-83660.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></span></div>\r\n<div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><b>STYLE No./BA10010</b></div>\r\n<div style=\"text-align: center;\"><b>COLOR/BLACK</b></div>\r\n<div style=\"text-align: center;\"><b>SIZE/6 1/2,7,7 1/2,8,8 1/2,9,9 1/2,10,10 1/2,11</b></div>\r\n<div style=\"text-align: center;\"><b>PRICE/￥15,4000（TAX-IN)</b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC08294.JPG\"><img alt=\"DSC08294.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC08294-thumb-500x750-83663.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></b></div>\r\n<div style=\"text-align: center;\">\r\n<div><span> </span></div>\r\n<div><span>希少な馬革の中でも、さらに希少な馬の臀部にあたるバトックを使用し</span></div>\r\n<div><span>アッパーのクリンピングやセパレートソールなど</span></div>\r\n<div><span>旧きよき時代の意匠を踏襲するエンジニアブーツです。</span></div>\r\n<div></div>\r\n</div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC08324.JPG\"><img alt=\"DSC08324.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC08324-thumb-500x750-83665.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></b></div>\r\n<div style=\"text-align: center;\"><b><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC08330.JPG\"><img alt=\"DSC08330.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC08330-thumb-500x750-83667.jpg\" width=\"500\" height=\"750\" class=\"mt-image-center\" /></a></span></b></div>\r\n<div style=\"text-align: center;\"><b><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC08297.JPG\"><img alt=\"DSC08297.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC08297-thumb-500x749-83669.jpg\" width=\"500\" height=\"749\" class=\"mt-image-center\" /></a></span></b></div>\r\n<div style=\"text-align: center;\"><span> </span></div>\r\n<div style=\"text-align: center;\"><span>一般的に知られているコードバンとは違った光沢がありますが</span></div>\r\n<div style=\"text-align: center;\"><span>こちらも履き込むことで馬革本来の艶が蘇ってくる革質が特徴で</span></div>\r\n<div style=\"text-align: center;\"><span>表面が磨かれることでさらに味わい深い美しい艶を放ちます。</span></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC0819100.jpg\"><img alt=\"DSC0819100.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC0819100-thumb-500x642-83680.jpg\" width=\"500\" height=\"642\" class=\"mt-image-center\" /></a></span></b></div>\r\n<div style=\"text-align: center;\">\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\"> </span></span></div>\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\">日本人の足形を考慮したナローなフォルムで</span></span></div>\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\">シルエットはクラシカルでシャープなスタイルのDワイズ</span></span></div>\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\">反り返り、そしてヴァンプにできるシワが魅力的です。</span></span></div>\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\">履き込むごとに芯地の茶色い部分が浮き出て</span></span></div>\r\n<div><span><span class=\"mt-enclosure mt-enclosure-image\">見事な経年変化を見せます。</span></span></div>\r\n<div></div>\r\n</div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><span><span class=\"mt-enclosure mt-enclosure-image\"><b><img alt=\"DSC08271.JPG\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/10/DSC08271-thumb-500x749-83673.jpg\" width=\"500\" height=\"749\" class=\"mt-image-center\" /></b></span></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"http://www.realmccoys.co.jp/blog/shop/images/DSC08361000.jpg\"><br /></a></span>宜しくお願い致します。</div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div style=\"text-align: center;\">\r\n<div>\r\n<div></div>\r\n<div></div>\r\n<div></div>\r\n</div>\r\n</div>\r\n<div>\r\n<div style=\"text-align: center;\"><a href=\"https://www.realmccoys.co.jp/catalog/products/detail.php?product_id=2528&amp;pg=\" target=\"_blank\" rel=\"noopener\">WEBでの購入はコチラ</a></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div>\r\n<div style=\"text-align: center;\"><span><a href=\"https://www.instagram.com/therealmccoys.jp/\" target=\"_blank\" rel=\"noopener\"><img alt=\"インスタ2.jpg\" src=\"http://www.realmccoys.co.jp/blog/shop/assets_c/2021/06/%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF2-thumb-500x71-82334.jpg\" width=\"500\" height=\"71\" class=\"mt-image-center\" /></a></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div>\r\n<div style=\"text-align: center;\"><b>OUR STORES</b></div>\r\n<div style=\"text-align: center;\"><span><b>SENDAI</b></span>：022-796-9286</div>\r\n<div style=\"text-align: center;\"><span><b>TOKYO</b></span>：03-6427-4300</div>\r\n<div style=\"text-align: center;\"><span><b>KANAZAWA</b></span>：076-260-7030</div>\r\n<div style=\"text-align: center;\"><span><b>KYOTO</b></span>：075-708-5456</div>\r\n<div style=\"text-align: center;\"><b>OSAKA</b>：06-4391-8430</div>\r\n<div style=\"text-align: center;\"><span><b>KOBE</b></span>：078-331-0620</div>\r\n<div style=\"text-align: center;\"><b>FUKUOKA</b>：092-738-7977</div>\r\n<div></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>','2021-10-28','','',1,'2021/10/28','media_thubnail_3.jpg','2021-10-28 00:00:00','','','','','','',2,'新商品入荷\r\n店舗BLOG','2021-10-28 11:53:20','2021-10-28 00:00:00','2021-10-28 00:00:00',1,'',0,'',''),(4,'UNDERWEAR, QUILTED, CWU 9/P','UNDERWEAR, QUILTED, CWU 9/P','<div style=\"text-align: center;\"><b>UNDERWEAR, QUILTED, CWU 9/P</b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\">STYLE NO </div>\r\n<div style=\"text-align: center;\"><strong>:　</strong><b>MJ21116</b></div>\r\n<div style=\"text-align: center;\"><strong> COLOR　:　SAGE GREEN</strong></div>\r\n<div style=\"text-align: center;\"><strong>SIZE </strong></div>\r\n<div style=\"text-align: center;\">: S.M.L.XL</div>\r\n<div style=\"text-align: center;\"><strong>PRICE : </strong> <b> </b><b>¥ 44,000 （TAX IN）</b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\">ＵＳエアフォース用のフライトＪＫＴ 「ＣＷＵ-7Ｐ」の</div>\r\n<div style=\"text-align: center;\">インナー用に開発された「ＣＷＵ-9Ｐ」。</div>\r\n<div style=\"text-align: center;\">元々はインナー用のキルティングですが</div>\r\n<div style=\"text-align: center;\">軽めに羽織れる機能的なアウターとして提案しています。</div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\">素材はナイロンタフタのキルトを採用しています。</div>\r\n<div style=\"text-align: center;\">ナイロンタフタとは、細めのナイロン糸を平織で織った生地で</div>\r\n<div style=\"text-align: center;\">軽くて柔らかく、光沢があり、袖通しの非常に良い素材です。</div>\r\n<div style=\"text-align: center;\">程よい厚みのキルティングは、適度な保温力も魅力。</div>\r\n<div style=\"text-align: center;\">秋はアウターに、冬はインナーとして重宝します。</div>\r\n<div style=\"text-align: center;\">ご来店お待ちしております。</div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><span style=\"font-weight: 400;\"><span><b>ＭＯＤＥＬ ： 177ｃｍ / ＳＩＺＥ ： M</b></span></span></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"></div>\r\n<div style=\"text-align: center;\"><a href=\"https://www.realmccoys.co.jp/catalog/products/detail.php?product_id=4878\">WEBでの購入はこちら</a></div>\r\n<div style=\"text-align: center;\"><b> </b></div>\r\n<div style=\"text-align: center;\"><strong> </strong></div>\r\n<div style=\"text-align: center;\"><strong> </strong></div>\r\n<div style=\"text-align: center;\"><strong>OUR STORES</strong></div>\r\n<div style=\"text-align: center;\"><strong> </strong></div>\r\n<div style=\"text-align: center;\"><strong>SENDAI ： 022-796-9286</strong></div>\r\n<div style=\"text-align: center;\"><strong>TOKYO ： 03-6427-4300</strong></div>\r\n<div style=\"text-align: center;\"><strong>KANAZAWA ： 076-260-7030</strong></div>\r\n<div style=\"text-align: center;\"><strong>KYOTO ： 075-708-5456</strong></div>\r\n<div style=\"text-align: center;\"><strong>OSAKA ： 06-4391-8430</strong></div>\r\n<div style=\"text-align: center;\"><strong>KOBE ： 078-331-0620</strong></div>\r\n<div style=\"text-align: center;\"><strong>FUKUOKA ： 092-738-7977</strong></div>','2021-10-28','','',1,'2021/10/28','media_thubnail_4.jpg','2021-10-28 00:00:00','','','','','','',2,'店舗BLOG','2021-10-28 11:55:40','2021-10-28 00:00:00','2021-10-28 00:00:00',1,'',0,'','');

UNLOCK TABLES;

/*Table structure for table `tbl_media_category` */

DROP TABLE IF EXISTS `tbl_media_category`;

CREATE TABLE `tbl_media_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_code` varchar(200) DEFAULT NULL,
  `category_name` varchar(255) DEFAULT NULL,
  `status` tinyint(2) DEFAULT NULL,
  `show_order` tinyint(2) DEFAULT NULL,
  `category_image` varchar(200) DEFAULT NULL,
  `category_date` varchar(40) DEFAULT NULL,
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_media_category` */

LOCK TABLES `tbl_media_category` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_modalwindow` */

DROP TABLE IF EXISTS `tbl_modalwindow`;

CREATE TABLE `tbl_modalwindow` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `modalwindow_code` varchar(20) NOT NULL,
  `target_person` tinyint(4) NOT NULL,
  `modalwindow_status` tinyint(4) NOT NULL,
  `modalwindow_from` datetime NOT NULL,
  `modalwindow_to` datetime NOT NULL,
  `no_period` tinyint(1) NOT NULL,
  `description` text NOT NULL,
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_modalwindow` */

LOCK TABLES `tbl_modalwindow` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_mypagemaker` */

DROP TABLE IF EXISTS `tbl_mypagemaker`;

CREATE TABLE `tbl_mypagemaker` (
  `mypagemaker_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `mypagemaker` tinyint(4) DEFAULT NULL,
  `settop` tinyint(4) DEFAULT NULL,
  `rankup` tinyint(4) DEFAULT NULL,
  `rankupmeter` tinyint(4) DEFAULT NULL,
  `issue_coupon` tinyint(4) DEFAULT NULL,
  `access_bonus` tinyint(4) DEFAULT NULL,
  `refer_friend` tinyint(4) DEFAULT NULL,
  `roulette_draw` tinyint(4) DEFAULT NULL,
  `register_gift` tinyint(4) DEFAULT NULL,
  `point_setting` tinyint(4) DEFAULT NULL,
  `purchase_history` tinyint(4) DEFAULT NULL,
  `purchase_history_date` varchar(40) DEFAULT NULL,
  `purchase_history_display` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`mypagemaker_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_mypagemaker` */

LOCK TABLES `tbl_mypagemaker` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_news` */

DROP TABLE IF EXISTS `tbl_news`;

CREATE TABLE `tbl_news` (
  `news_id` bigint(8) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `news_title` varchar(200) DEFAULT NULL,
  `news_short_description` text,
  `news_contents` text,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `created_by` varchar(200) DEFAULT NULL,
  `edited_by` varchar(200) NOT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `news_date` varchar(40) DEFAULT NULL,
  `news_image` varchar(200) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `public_date` datetime DEFAULT NULL,
  `keyword` text,
  `news_type` varchar(15) DEFAULT NULL,
  `keyword_id` int(11) DEFAULT NULL,
  `keyword_list` text,
  `top` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`news_id`),
  KEY `status` (`status`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_news` */

LOCK TABLES `tbl_news` WRITE;

insert  into `tbl_news`(`news_id`,`news_title`,`news_short_description`,`news_contents`,`create_date`,`modified_date`,`created_by`,`edited_by`,`status`,`news_date`,`news_image`,`category_id`,`public_date`,`keyword`,`news_type`,`keyword_id`,`keyword_list`,`top`) values (00000002,'THE REAL McCOY\'S BOOK 2022','【THE REAL McCOY\'S BOOK 2022 発売のご案内】\r\n','<p>【THE REAL McCOY\'S BOOK 2022 発売のご案内】</p>\r\n<p><img src=\"https://realmccoys.strawberry-jam.vn/source/10261251_61777b36430d4.jpg\" alt=\"\" width=\"269\" height=\"370\" /><br />･THE REAL McCOY\'S BOOK 2022<br /><br /><span>STYLE NO</span><span>RB2022</span><span> </span><strong>¥ 1,100<span> </span></strong><span>（TAX IN)</span></p>','2021-09-30','2021-10-27','','',1,'2021/10/26','news_thubnail_2.jpg',0,'2021-10-26 13:58:00','','',6,'RECRUIT',NULL),(00000003,'製品入荷情報','製品入荷情報','<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tbody>\r\n<tr>\r\n<th>\r\n<h3>BUCO JH-1 JACKET / BROWN<span>STYLE No.BJ21001<img src=\"http://www.realmccoys.co.jp/_common/img/ic_1.gif\" alt=\"New\" width=\"31\" height=\"12\" /></span></h3>\r\n</th>\r\n<td rowspan=\"2\"><a><img src=\"http://www.realmccoys.co.jp/blog/whats_new/images/01261902_600fe8ccd8af8.jpg\" alt=\"\" width=\"109\" /></a></td>\r\n</tr>\r\n<tr>\r\n<td class=\"detail\"></td>\r\n</tr>\r\n<tr>\r\n<th>\r\n<h3>BUCO STRIPE RACING JERSEY<span>STYLE No.BC18104<img src=\"http://www.realmccoys.co.jp/_common/img/ic_2.gif\" alt=\"Re-Arrival\" width=\"68\" height=\"12\" /></span></h3>\r\n</th>\r\n<td rowspan=\"2\"><a><img src=\"http://www.realmccoys.co.jp/blog/whats_new/images/10151622_5f87f8a5814cf.jpg\" alt=\"\" width=\"109\" /></a></td>\r\n</tr>\r\n</tbody>\r\n</table>','2021-10-28','2021-10-28','','',1,'2021/10/28','news_thubnail_3.jpg',0,'2021-10-28 11:39:00','','',0,'',NULL),(00000004,'2021FW新商品入荷状況','2021FW新商品入荷状況','<span style=\"font-weight: bold;\"><span style=\"font-weight: bold;\"><span><b>【2021FW新商品入荷状況】</b></span></span></span>\r\n<div></div>\r\n<div><span class=\"mt-enclosure mt-enclosure-image\"><a href=\"https://www.realmccoys.co.jp/catalog/products/list.php?category_id=0&amp;mastercat=0&amp;childcat=&amp;product_season=&amp;name=21FW&amp;search.x=50&amp;search.y=19\" target=\"_blank\" rel=\"noopener\"><img alt=\"21FW.jpgのサムネール画像\" src=\"http://www.realmccoys.co.jp/blog/whats_new/assets_c/2021/09/21FW-thumb-500x403-83378-thumb-500x403-83379.jpg\" width=\"500\" height=\"403\" class=\"mt-image-none\" /></a></span></div>\r\n<div></div>\r\n<div><span>続々と今季秋冬商品が入荷しております。</span></div>\r\n<div><span>上記画像をクリック、もしくは画像の通りKEY WORDで「21FW」と検索して頂くと入荷済の新商品が確認可能です。</span></div>\r\n<div><span>宜しくお願い致します。</span></div>','2021-10-28','2021-10-28','','',1,'2021/10/28','news_thubnail_4.jpg',0,'2021-10-28 12:45:00','','',0,'',NULL),(00000005,'製品入荷情報','製品入荷情報','​\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tbody>\r\n<tr>\r\n<th>\r\n<h3>BEO GAM CAMOUFLAGE SHIRT<span>STYLE No.MJ21013<img src=\"http://www.realmccoys.co.jp/_common/img/ic_1.gif\" alt=\"New\" width=\"31\" height=\"12\" /></span></h3>\r\n</th>\r\n<td rowspan=\"2\"><a><img src=\"http://www.realmccoys.co.jp/blog/whats_new/images/06161739_60c9b8a79b4e3.jpg\" alt=\"\" width=\"109\" /></a></td>\r\n</tr>\r\n<tr>\r\n<td class=\"detail\"></td>\r\n</tr>\r\n<tr>\r\n<th>\r\n<h3>BEO GAM CAMOUFLAGE SHORTS<span>STYLE No.MP21006<img src=\"http://www.realmccoys.co.jp/_common/img/ic_1.gif\" alt=\"New\" width=\"31\" height=\"12\" /></span></h3>\r\n</th>\r\n<td rowspan=\"2\"><a><img src=\"http://www.realmccoys.co.jp/blog/whats_new/images/06161745_60c9ba1216c27.jpg\" alt=\"\" width=\"109\" /></a></td>\r\n</tr>\r\n<tr></tr>\r\n</tbody>\r\n</table>','2021-10-28','2021-12-20','','',1,'2021/10/28',NULL,0,'2021-10-28 12:52:00','','',0,'',NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_news_category` */

DROP TABLE IF EXISTS `tbl_news_category`;

CREATE TABLE `tbl_news_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_code` varchar(200) DEFAULT NULL,
  `category_name` varchar(255) DEFAULT NULL,
  `status` tinyint(2) DEFAULT NULL,
  `show_order` tinyint(2) DEFAULT NULL,
  KEY `id` (`id`),
  KEY `category_code` (`category_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_news_category` */

LOCK TABLES `tbl_news_category` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_nppaysetting` */

DROP TABLE IF EXISTS `tbl_nppaysetting`;

CREATE TABLE `tbl_nppaysetting` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `isUsePay` tinyint(1) DEFAULT '0',
  `note` text,
  `MoneyShip` float DEFAULT '0',
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_nppaysetting` */

LOCK TABLES `tbl_nppaysetting` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_order_detail` */

DROP TABLE IF EXISTS `tbl_order_detail`;

CREATE TABLE `tbl_order_detail` (
  `order_detail_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_id` int(11) NOT NULL,
  `order_code` varchar(255) NOT NULL,
  `product_id` int(11) NOT NULL,
  `attributes` varchar(1000) DEFAULT NULL,
  `goods_code` varchar(20) DEFAULT NULL,
  `barcode` varchar(50) DEFAULT NULL,
  `product_name` varchar(100) NOT NULL,
  `quantity` int(11) NOT NULL,
  `sale_price` bigint(20) DEFAULT NULL,
  `unit_cost` float NOT NULL DEFAULT '0',
  `color_id` int(11) DEFAULT NULL,
  `color_code` varchar(10) DEFAULT NULL,
  `color_name` varchar(255) DEFAULT NULL,
  `size_id` int(11) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT NULL,
  `size_name` varchar(255) DEFAULT NULL,
  `product_image` varchar(255) DEFAULT NULL,
  `Seqno` varchar(15) NOT NULL,
  `is_cancel` tinyint(4) DEFAULT '0',
  `product_detail_price` float DEFAULT '0',
  `product_detail_saleoff_price` float DEFAULT '0',
  `product_detail_price_no_tax` float DEFAULT '0',
  `product_detail_saleoff_price_no_tax` float DEFAULT '0',
  `sale_off_product` int(11) DEFAULT '0',
  `is_pre_order` int(2) DEFAULT '0',
  `type_no` int(4) DEFAULT '1',
  `is_gift` tinyint(4) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `doublepoint` float DEFAULT NULL,
  `sale_rate` float DEFAULT NULL,
  `gift_code` varchar(50) DEFAULT NULL,
  `gift_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Seqno`),
  KEY `idx_order_detail_order_id` (`order_code`),
  KEY `color_code` (`color_code`),
  KEY `color_id` (`color_id`),
  KEY `goods_code` (`goods_code`),
  KEY `order_id` (`order_id`),
  KEY `product_id` (`product_id`),
  KEY `size_code` (`size_code`),
  KEY `size_id` (`size_id`),
  KEY `order_detail_id` (`order_detail_id`),
  KEY `product_name` (`product_name`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_order_detail` */

LOCK TABLES `tbl_order_detail` WRITE;

insert  into `tbl_order_detail`(`order_detail_id`,`order_id`,`order_code`,`product_id`,`attributes`,`goods_code`,`barcode`,`product_name`,`quantity`,`sale_price`,`unit_cost`,`color_id`,`color_code`,`color_name`,`size_id`,`size_code`,`size_name`,`product_image`,`Seqno`,`is_cancel`,`product_detail_price`,`product_detail_saleoff_price`,`product_detail_price_no_tax`,`product_detail_saleoff_price_no_tax`,`sale_off_product`,`is_pre_order`,`type_no`,`is_gift`,`timestamp`,`doublepoint`,`sale_rate`,`gift_code`,`gift_name`) values (1,1,'3330000001',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000001',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:05:54',1,NULL,'',''),(2,2,'3330000002',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','333000000000002',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:07:25',1,NULL,'',''),(3,3,'3330000044',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000003',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:01:16',1,NULL,'',''),(4,4,'3330000045',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000004',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:07:09',1,NULL,'',''),(5,5,'3330000046',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','333000000000005',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:15:32',1,NULL,'',''),(6,6,'3330000047',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000006',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 13:46:49',1,NULL,'',''),(7,7,'3330000048',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000007',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 13:48:02',1,NULL,'',''),(8,8,'3330000049',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000008',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 15:09:33',1,NULL,'',''),(9,9,'3330000050',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','333000000000009',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 15:13:37',1,NULL,'',''),(10,10,'3330000051',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',0,16500,0,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','333000000000010',0,16500,16500,15000,15000,0,0,1,0,'2021-09-30 09:18:20',1,NULL,'','');

UNLOCK TABLES;

/*Table structure for table `tbl_order_detail_tmp` */

DROP TABLE IF EXISTS `tbl_order_detail_tmp`;

CREATE TABLE `tbl_order_detail_tmp` (
  `order_detail_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_id` int(11) NOT NULL,
  `order_code` varchar(255) NOT NULL,
  `product_id` int(11) NOT NULL,
  `attributes` varchar(1000) DEFAULT NULL,
  `goods_code` varchar(20) DEFAULT NULL,
  `barcode` varchar(50) DEFAULT NULL,
  `product_name` varchar(100) NOT NULL,
  `quantity` int(11) NOT NULL,
  `sale_price` bigint(20) DEFAULT NULL,
  `unit_cost` float NOT NULL DEFAULT '0',
  `color_id` int(11) DEFAULT NULL,
  `color_code` varchar(10) DEFAULT NULL,
  `color_name` varchar(255) DEFAULT NULL,
  `size_id` int(11) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT NULL,
  `size_name` varchar(255) DEFAULT NULL,
  `product_image` varchar(255) DEFAULT NULL,
  `Seqno` varchar(15) DEFAULT NULL,
  `is_cancel` tinyint(4) DEFAULT '0',
  `product_detail_price` float DEFAULT '0',
  `product_detail_saleoff_price` float DEFAULT '0',
  `product_detail_price_no_tax` float DEFAULT '0',
  `product_detail_saleoff_price_no_tax` float DEFAULT '0',
  `sale_off_product` int(11) DEFAULT '0',
  `is_pre_order` int(2) DEFAULT '0',
  `type_no` int(4) DEFAULT '1',
  `is_gift` tinyint(4) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `doublepoint` float DEFAULT NULL,
  `sale_rate` float DEFAULT NULL,
  `gift_code` varchar(50) DEFAULT NULL,
  `gift_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`order_detail_id`),
  KEY `idx_order_detail_order_id` (`order_code`),
  KEY `color_code` (`color_code`),
  KEY `color_id` (`color_id`),
  KEY `goods_code` (`goods_code`),
  KEY `order_id` (`order_id`),
  KEY `product_id` (`product_id`),
  KEY `size_code` (`size_code`),
  KEY `size_id` (`size_id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_order_detail_tmp` */

LOCK TABLES `tbl_order_detail_tmp` WRITE;

insert  into `tbl_order_detail_tmp`(`order_detail_id`,`order_id`,`order_code`,`product_id`,`attributes`,`goods_code`,`barcode`,`product_name`,`quantity`,`sale_price`,`unit_cost`,`color_id`,`color_code`,`color_name`,`size_id`,`size_code`,`size_name`,`product_image`,`Seqno`,`is_cancel`,`product_detail_price`,`product_detail_saleoff_price`,`product_detail_price_no_tax`,`product_detail_saleoff_price_no_tax`,`sale_off_product`,`is_pre_order`,`type_no`,`is_gift`,`timestamp`,`doublepoint`,`sale_rate`,`gift_code`,`gift_name`) values (1,1,'3330000001',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:05:54',1,NULL,'',''),(2,2,'3330000002',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:07:25',1,NULL,'',''),(3,3,'3330000003',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:18:32',1,NULL,'',''),(4,4,'3330000004',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:19:35',1,NULL,'',''),(5,5,'3330000005',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:20:09',1,NULL,'',''),(6,6,'3330000006',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 17:21:19',1,NULL,'',''),(7,7,'3330000007',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 18:02:54',1,NULL,'',''),(8,8,'3330000008',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-28 18:06:17',1,NULL,'',''),(9,9,'3330000044',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:01:15',1,NULL,'',''),(10,10,'3330000045',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:07:09',1,NULL,'',''),(11,11,'3330000046',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 12:15:32',1,NULL,'',''),(12,12,'3330000047',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 13:46:49',1,NULL,'',''),(13,13,'3330000048',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 13:48:02',1,NULL,'',''),(14,14,'3330000049',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 15:09:33',1,NULL,'',''),(15,15,'3330000050',1387,'','MC21018','0300000354838','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'028-ASHGRY','ASH GRAY',0,'S','S','product_MC21018_028-ASHGRY_202109221632296527251.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-29 15:13:37',1,NULL,'',''),(16,16,'3330000051',1387,'','MC21018','0300000354791','9oz. LOOPWHEEL RAGLAN SLEEVE SWEATSHIRT',1,16500,16500,0,'011-MLK','MILK',0,'S','S','product_MC21018_011-MLK_202109221632296434614.jpg','',0,16500,16500,15000,15000,0,0,1,0,'2021-09-30 09:18:20',1,NULL,'','');

UNLOCK TABLES;

/*Table structure for table `tbl_orders` */

DROP TABLE IF EXISTS `tbl_orders`;

CREATE TABLE `tbl_orders` (
  `order_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_code` varchar(255) DEFAULT NULL,
  `total_amount` float NOT NULL DEFAULT '0',
  `total_quantity` bigint(11) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `shipped_on` varchar(10) DEFAULT NULL,
  `status` int(11) NOT NULL DEFAULT '1',
  `comments` text,
  `customer_code` varchar(20) DEFAULT NULL,
  `customer_name` varchar(255) DEFAULT NULL,
  `customer_namekana` varchar(255) DEFAULT NULL,
  `customer_phone` varchar(20) DEFAULT NULL,
  `shipping_address` varchar(255) DEFAULT NULL,
  `customer_email` varchar(50) DEFAULT NULL,
  `shipping_postcode` varchar(50) DEFAULT NULL,
  `shipping_state` varchar(50) DEFAULT NULL,
  `shipping_city` varchar(50) DEFAULT NULL,
  `shipping_address2` varchar(500) DEFAULT NULL,
  `shipping_customer_name` varchar(200) DEFAULT NULL,
  `shipping_customer_namekana` varchar(200) DEFAULT NULL,
  `shipping_phone` varchar(50) DEFAULT NULL,
  `payment_method` varchar(50) DEFAULT NULL,
  `usepoint` bigint(11) DEFAULT NULL,
  `shipping_date` varchar(50) DEFAULT NULL,
  `shipping_time` varchar(50) DEFAULT NULL,
  `shipping_cost` float DEFAULT '0',
  `shipping_fee` float DEFAULT '0',
  `delivery_id` varchar(50) DEFAULT NULL,
  `delivery_company` varchar(255) DEFAULT NULL,
  `invoice_code` varchar(50) DEFAULT NULL,
  `point_target` int(11) DEFAULT '0',
  `point_issueunit` int(11) DEFAULT '0',
  `point_issuemoney` float DEFAULT '0',
  `point_issuepercent` float DEFAULT '0',
  `point_limit` float DEFAULT '0',
  `point_useunit` int(11) DEFAULT '0',
  `point_userate` float DEFAULT '0',
  `point_useunitpoint` int(11) DEFAULT '0',
  `point_useunitmoney` float DEFAULT '0',
  `point_usetarget` int(11) DEFAULT '0',
  `thistimeissuedpoint` int(11) DEFAULT '0',
  `thistimeusepoint` int(11) DEFAULT '0',
  `thistimeusemoney` float DEFAULT '0',
  `couponmoney` float DEFAULT '0',
  `usecoupon` tinyint(1) DEFAULT '0',
  `issuepointbycoupon` tinyint(1) DEFAULT '0',
  `couponinfo` text,
  `pay_id` text,
  `shipping_range_info` text,
  `konbini_no` int(5) DEFAULT '0',
  `konbini_payment_status` int(2) DEFAULT NULL,
  `konbini_code` varchar(255) DEFAULT NULL,
  `konbini_billing_amount` float DEFAULT '0',
  `konbini_expected_pay_date` date DEFAULT NULL,
  `is_customer_withdraw` tinyint(1) DEFAULT NULL,
  `customer_withdraw_date` datetime DEFAULT NULL,
  `other_pay_money` float DEFAULT '0',
  `debt_money_pay_date` varchar(50) DEFAULT NULL,
  `preorder` int(2) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `ismail4d` int(2) DEFAULT '0' COMMENT 'check send mail khi import tu 4D',
  `islogin` int(2) DEFAULT '0' COMMENT '2018-11-16 xem KH mua login hay guest',
  `np_transaction_id` varchar(255) DEFAULT NULL,
  `np_credit_result` varchar(255) DEFAULT NULL,
  `comments2` text,
  `ec_prefix` varchar(5) DEFAULT NULL,
  `chkToSales` tinyint(4) DEFAULT '0',
  `thistimerate` int(11) DEFAULT '1',
  `is_send_email` int(2) DEFAULT '0' COMMENT 'check send email to customer review',
  `rcustomerrank` varchar(255) DEFAULT NULL,
  `rankrate` float DEFAULT '0',
  `shipping_days` int(11) DEFAULT NULL,
  `customer_opinion` text,
  `special_point` int(11) NOT NULL DEFAULT '0',
  `IsNoPointForSaleOffType` tinyint(1) DEFAULT '0',
  `order_affiliate_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`order_id`),
  KEY `customer_code` (`customer_code`),
  KEY `order_code` (`order_code`),
  KEY `status` (`status`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_orders` */

LOCK TABLES `tbl_orders` WRITE;

insert  into `tbl_orders`(`order_id`,`order_code`,`total_amount`,`total_quantity`,`created_on`,`shipped_on`,`status`,`comments`,`customer_code`,`customer_name`,`customer_namekana`,`customer_phone`,`shipping_address`,`customer_email`,`shipping_postcode`,`shipping_state`,`shipping_city`,`shipping_address2`,`shipping_customer_name`,`shipping_customer_namekana`,`shipping_phone`,`payment_method`,`usepoint`,`shipping_date`,`shipping_time`,`shipping_cost`,`shipping_fee`,`delivery_id`,`delivery_company`,`invoice_code`,`point_target`,`point_issueunit`,`point_issuemoney`,`point_issuepercent`,`point_limit`,`point_useunit`,`point_userate`,`point_useunitpoint`,`point_useunitmoney`,`point_usetarget`,`thistimeissuedpoint`,`thistimeusepoint`,`thistimeusemoney`,`couponmoney`,`usecoupon`,`issuepointbycoupon`,`couponinfo`,`pay_id`,`shipping_range_info`,`konbini_no`,`konbini_payment_status`,`konbini_code`,`konbini_billing_amount`,`konbini_expected_pay_date`,`is_customer_withdraw`,`customer_withdraw_date`,`other_pay_money`,`debt_money_pay_date`,`preorder`,`timestamp`,`ismail4d`,`islogin`,`np_transaction_id`,`np_credit_result`,`comments2`,`ec_prefix`,`chkToSales`,`thistimerate`,`is_send_email`,`rcustomerrank`,`rankrate`,`shipping_days`,`customer_opinion`,`special_point`,`IsNoPointForSaleOffType`,`order_affiliate_name`) values (1,'3330000001',0,0,'2021-09-28 19:05:54','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','１','問屋町','fukui@strawberry-jam.co.jp','9188231','神奈川県','福井市','１２３','ジャム佐藤テスト','じゃむさとうてすと','１','Banktransfer',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000001',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-28 17:05:54',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(2,'3330000002',0,0,'2021-09-28 19:07:25','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','１','問屋町','fukui@strawberry-jam.co.jp','9188231','神奈川県','福井市','１２３','ジャム佐藤テスト','じゃむさとうてすと','１','Cash',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000002',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-28 17:07:25',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(3,'3330000044',0,0,'2021-09-29 14:01:15','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000044',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 12:01:15',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(4,'3330000045',0,0,'2021-09-29 14:07:09','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000045',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 12:07:09',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(5,'3330000046',0,0,'2021-09-29 14:15:32','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000046',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 12:15:32',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(6,'3330000047',0,0,'2021-09-29 15:46:49','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000047',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 13:46:49',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(7,'3330000048',0,0,'2021-09-29 15:48:02','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000048',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 13:48:02',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(8,'3330000049',0,0,'2021-09-29 17:09:33','',3,'','33300004','永安テスト','永安テスト','09016585068','神宮前1-1-1','t-nagayasu@strawberry-jam.co.jp','1500001','東京都','渋谷区','','永安テスト','永安テスト','09016585068','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000049',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 15:09:33',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(9,'3330000050',0,0,'2021-09-29 17:13:37','',3,'','33300004','永安テスト','永安テスト','09016585068','神宮前1-1-1','t-nagayasu@strawberry-jam.co.jp','1500001','東京都','渋谷区','','永安テスト','永安テスト','09016585068','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000050',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-29 15:13:37',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL),(10,'3330000051',0,0,'2021-09-30 11:18:20','',3,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','','',0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000051',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,'',0,'2021-09-30 09:18:20',0,0,NULL,NULL,'','',0,1,0,'',0,0,'',0,1,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_orders_tmp` */

DROP TABLE IF EXISTS `tbl_orders_tmp`;

CREATE TABLE `tbl_orders_tmp` (
  `order_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_code` varchar(255) DEFAULT NULL,
  `total_amount` float NOT NULL DEFAULT '0',
  `total_quantity` bigint(11) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `shipped_on` varchar(10) DEFAULT NULL,
  `status` int(11) NOT NULL DEFAULT '1',
  `comments` text,
  `customer_code` varchar(20) DEFAULT NULL,
  `customer_name` varchar(255) DEFAULT NULL,
  `customer_namekana` varchar(255) DEFAULT NULL,
  `customer_phone` varchar(20) DEFAULT NULL,
  `shipping_address` varchar(255) DEFAULT NULL,
  `customer_email` varchar(50) DEFAULT NULL,
  `shipping_postcode` varchar(50) DEFAULT NULL,
  `shipping_state` varchar(50) DEFAULT NULL,
  `shipping_city` varchar(50) DEFAULT NULL,
  `shipping_address2` varchar(500) DEFAULT NULL,
  `shipping_customer_name` varchar(200) DEFAULT NULL,
  `shipping_customer_namekana` varchar(200) DEFAULT NULL,
  `shipping_phone` varchar(50) DEFAULT NULL,
  `payment_method` varchar(50) DEFAULT NULL,
  `usepoint` bigint(11) DEFAULT NULL,
  `shipping_date` varchar(50) DEFAULT NULL,
  `shipping_time` varchar(50) DEFAULT NULL,
  `shipping_cost` float DEFAULT '0',
  `shipping_fee` float DEFAULT '0',
  `delivery_id` varchar(50) DEFAULT NULL,
  `delivery_company` varchar(255) DEFAULT NULL,
  `invoice_code` varchar(50) DEFAULT NULL,
  `point_target` int(11) DEFAULT '0',
  `point_issueunit` int(11) DEFAULT '0',
  `point_issuemoney` float DEFAULT '0',
  `point_issuepercent` float DEFAULT '0',
  `point_limit` float DEFAULT '0',
  `point_useunit` int(11) DEFAULT '0',
  `point_userate` float DEFAULT '0',
  `point_useunitpoint` int(11) DEFAULT '0',
  `point_useunitmoney` float DEFAULT '0',
  `point_usetarget` int(11) DEFAULT '0',
  `thistimeissuedpoint` int(11) DEFAULT '0',
  `thistimeusepoint` int(11) DEFAULT '0',
  `thistimeusemoney` float DEFAULT '0',
  `couponmoney` float DEFAULT '0',
  `usecoupon` tinyint(1) DEFAULT '0',
  `issuepointbycoupon` tinyint(1) DEFAULT '0',
  `couponinfo` text,
  `pay_id` text,
  `shipping_range_info` text,
  `konbini_no` int(5) DEFAULT '0',
  `konbini_payment_status` int(2) DEFAULT NULL,
  `konbini_code` varchar(255) DEFAULT NULL,
  `konbini_billing_amount` float DEFAULT '0',
  `konbini_expected_pay_date` date DEFAULT NULL,
  `is_customer_withdraw` tinyint(1) DEFAULT NULL,
  `customer_withdraw_date` datetime DEFAULT NULL,
  `other_pay_money` float DEFAULT '0',
  `debt_money_pay_date` varchar(50) DEFAULT NULL,
  `preorder` int(2) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `ismail4d` int(2) DEFAULT '0' COMMENT 'check send mail khi import tu 4D',
  `islogin` int(2) DEFAULT '0' COMMENT '2018-11-16 xem KH mua login hay guest',
  `np_transaction_id` varchar(255) DEFAULT NULL,
  `np_credit_result` varchar(255) DEFAULT NULL,
  `comments2` text,
  `ec_prefix` varchar(5) DEFAULT NULL,
  `chkToSales` tinyint(4) DEFAULT '0',
  `thistimerate` int(11) DEFAULT '1',
  `isReal` tinyint(1) DEFAULT '0',
  `rcustomerrank` varchar(255) DEFAULT NULL,
  `rankrate` float DEFAULT '0',
  `shipping_days` int(11) DEFAULT NULL,
  `customer_opinion` text,
  `special_point` int(11) NOT NULL DEFAULT '0',
  `IsNoPointForSaleOffType` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`order_id`),
  KEY `customer_code` (`customer_code`),
  KEY `order_code` (`order_code`),
  KEY `status` (`status`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_orders_tmp` */

LOCK TABLES `tbl_orders_tmp` WRITE;

insert  into `tbl_orders_tmp`(`order_id`,`order_code`,`total_amount`,`total_quantity`,`created_on`,`shipped_on`,`status`,`comments`,`customer_code`,`customer_name`,`customer_namekana`,`customer_phone`,`shipping_address`,`customer_email`,`shipping_postcode`,`shipping_state`,`shipping_city`,`shipping_address2`,`shipping_customer_name`,`shipping_customer_namekana`,`shipping_phone`,`payment_method`,`usepoint`,`shipping_date`,`shipping_time`,`shipping_cost`,`shipping_fee`,`delivery_id`,`delivery_company`,`invoice_code`,`point_target`,`point_issueunit`,`point_issuemoney`,`point_issuepercent`,`point_limit`,`point_useunit`,`point_userate`,`point_useunitpoint`,`point_useunitmoney`,`point_usetarget`,`thistimeissuedpoint`,`thistimeusepoint`,`thistimeusemoney`,`couponmoney`,`usecoupon`,`issuepointbycoupon`,`couponinfo`,`pay_id`,`shipping_range_info`,`konbini_no`,`konbini_payment_status`,`konbini_code`,`konbini_billing_amount`,`konbini_expected_pay_date`,`is_customer_withdraw`,`customer_withdraw_date`,`other_pay_money`,`debt_money_pay_date`,`preorder`,`timestamp`,`ismail4d`,`islogin`,`np_transaction_id`,`np_credit_result`,`comments2`,`ec_prefix`,`chkToSales`,`thistimerate`,`isReal`,`rcustomerrank`,`rankrate`,`shipping_days`,`customer_opinion`,`special_point`,`IsNoPointForSaleOffType`) values (1,'3330000001',16500,1,'2021-09-28 19:05:54','',4,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','１','問屋町','fukui@strawberry-jam.co.jp','9188231','神奈川県','福井市','１２３','ジャム佐藤テスト','じゃむさとうてすと','１','Banktransfer',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000001',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:05:54',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(2,'3330000002',16500,1,'2021-09-28 19:07:25','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','１','問屋町','fukui@strawberry-jam.co.jp','9188231','神奈川県','福井市','１２３','ジャム佐藤テスト','じゃむさとうてすと','１','Cash',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000002',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:07:25',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(3,'3330000003',16500,1,'2021-09-28 19:18:32','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000003',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:18:32',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(4,'3330000004',16500,1,'2021-09-28 19:19:35','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000004',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:19:35',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(5,'3330000005',16500,1,'2021-09-28 19:20:09','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000005',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:20:09',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(6,'3330000006',16500,1,'2021-09-28 19:21:19','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000006',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 17:21:19',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(7,'3330000007',16500,1,'2021-09-28 20:02:54','',1,'','33300002','test','test','099884643','神宮前','kimcuchtk3@gmail.com','1500001','東京都','渋谷区','123','test','test','099884643','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000007',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 18:02:54',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(8,'3330000008',16500,1,'2021-09-28 20:06:17','',1,'','33300002','test','test','099884643','神宮前','kimcuchtk3@gmail.com','1500001','東京都','渋谷区','123','test','test','099884643','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000008',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-28 18:06:17',0,0,NULL,NULL,NULL,'',0,1,0,'',0,0,'',0,1),(9,'3330000044',16500,1,'2021-09-29 14:01:15','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000044',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 12:01:15',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(10,'3330000045',16500,1,'2021-09-29 14:07:09','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000045',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 12:07:09',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(11,'3330000046',16500,1,'2021-09-29 14:15:32','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000046',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 12:15:32',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(12,'3330000047',16500,1,'2021-09-29 15:46:49','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000047',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 13:46:49',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(13,'3330000048',16500,1,'2021-09-29 15:48:01','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000048',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 13:48:01',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(14,'3330000049',16500,1,'2021-09-29 17:09:33','',1,'','33300004','永安テスト','永安テスト','09016585068','神宮前1-1-1','t-nagayasu@strawberry-jam.co.jp','1500001','東京都','渋谷区','','永安テスト','永安テスト','09016585068','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000049',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 15:09:33',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(15,'3330000050',16500,1,'2021-09-29 17:13:37','',1,'','33300004','永安テスト','永安テスト','09016585068','神宮前1-1-1','t-nagayasu@strawberry-jam.co.jp','1500001','東京都','渋谷区','','永安テスト','永安テスト','09016585068','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000050',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-29 15:13:37',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1),(16,'3330000051',16500,1,'2021-09-30 11:18:20','',1,'','33300001','ジャム佐藤テスト','じゃむさとうてすと','08030992394','問屋町3-715','fukui@strawberry-jam.co.jp','9188231','福井県','福井市','','ジャム佐藤テスト','じゃむさとうてすと','08030992394','card',0,'通常配送','',0,0,'','',NULL,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,'','3330000051',NULL,0,NULL,NULL,0,NULL,NULL,NULL,0,NULL,0,'2021-09-30 09:18:20',0,0,NULL,NULL,NULL,'',0,1,1,'',0,0,'',0,1);

UNLOCK TABLES;

/*Table structure for table `tbl_payjp_logs` */

DROP TABLE IF EXISTS `tbl_payjp_logs`;

CREATE TABLE `tbl_payjp_logs` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `data_log` text,
  `time_stamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_payjp_logs` */

LOCK TABLES `tbl_payjp_logs` WRITE;

insert  into `tbl_payjp_logs`(`id`,`data_log`,`time_stamp`) values (1,'error: The card information you entered is incorrect.','2021-09-28 17:18:32'),(2,'error: The card information you entered is incorrect.','2021-09-28 17:19:35'),(3,'error: The card information you entered is incorrect.','2021-09-28 17:20:09'),(4,'error: The card information you entered is incorrect.','2021-09-28 17:21:19'),(5,'error: The card information you entered is incorrect.','2021-09-28 18:02:54'),(6,'error: The card information you entered is incorrect.','2021-09-28 18:06:17'),(7,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 12:01:15'),(8,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 12:07:09'),(9,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 12:15:32'),(10,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 13:46:49'),(11,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 13:48:02'),(12,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 15:09:33'),(13,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-29 15:13:37'),(14,'{\"status\":\"success\",\"infomation\":\"\"}','2021-09-30 09:18:20');

UNLOCK TABLES;

/*Table structure for table `tbl_paytypeuse` */

DROP TABLE IF EXISTS `tbl_paytypeuse`;

CREATE TABLE `tbl_paytypeuse` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `pay_type` varchar(255) DEFAULT NULL,
  `pay_use` tinyint(1) DEFAULT NULL,
  `pay_order` int(11) DEFAULT NULL,
  `pay_content` text,
  `created` datetime DEFAULT NULL,
  `updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_paytypeuse` */

LOCK TABLES `tbl_paytypeuse` WRITE;

insert  into `tbl_paytypeuse`(`id`,`pay_type`,`pay_use`,`pay_order`,`pay_content`,`created`,`updated`) values (1,'cash',0,2,'partial/cash.phtml','2018-09-17 12:01:21','2018-09-17 08:00:56'),(2,'card',1,1,'partial/card.phtml','2018-09-17 12:01:21','2018-09-17 09:04:28'),(3,'amazon',0,3,'partial/amazon.phtml','2018-09-17 12:01:21','2018-09-17 09:05:34'),(4,'banktransfer',1,4,'partial/banktransfer.phtml','2018-09-17 12:01:21','2018-09-17 09:06:04'),(5,'rakutenpay',0,5,'partial/rakutenpay.phtml','2018-09-17 12:01:21','2018-09-17 09:36:36'),(6,'yahoopay',0,6,'partial/yahoopay.phtml','2018-09-19 12:01:21','2018-09-19 05:30:58'),(7,'nppay',0,7,'partial/nppay.phtml','2018-11-19 10:53:31','2018-11-19 06:53:10'),(8,'yamamoto',0,8,'partial/yamamoto.phtml','2019-11-19 09:11:19','2019-11-19 05:11:19'),(9,'easypay',0,9,'partial/easypay.phtml','2020-05-13 13:01:21','2020-05-13 02:01:21'),(10,'paypal',0,10,'partial/paypal.phtml','2020-05-13 13:01:21','2020-05-13 02:01:21');

UNLOCK TABLES;

/*Table structure for table `tbl_pickup4u` */

DROP TABLE IF EXISTS `tbl_pickup4u`;

CREATE TABLE `tbl_pickup4u` (
  `pickup4u_id` int(11) NOT NULL AUTO_INCREMENT,
  `pickup4u_text` text,
  PRIMARY KEY (`pickup4u_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_pickup4u` */

LOCK TABLES `tbl_pickup4u` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_pointdetail1` */

DROP TABLE IF EXISTS `tbl_pointdetail1`;

CREATE TABLE `tbl_pointdetail1` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `Days` varchar(3) DEFAULT NULL,
  `Magnification` double DEFAULT NULL,
  `No_` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `RSeqNo` (`RSeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_pointdetail1` */

LOCK TABLES `tbl_pointdetail1` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_pointdetail2` */

DROP TABLE IF EXISTS `tbl_pointdetail2`;

CREATE TABLE `tbl_pointdetail2` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `ShopCode` varchar(10) DEFAULT NULL,
  `ShopName` varchar(40) DEFAULT NULL,
  `No_` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `RSeqNo` (`RSeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_pointdetail2` */

LOCK TABLES `tbl_pointdetail2` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_pointexception` */

DROP TABLE IF EXISTS `tbl_pointexception`;

CREATE TABLE `tbl_pointexception` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `StartDate` date DEFAULT NULL,
  `EndDate` date DEFAULT NULL,
  `Spot_Magnification` double DEFAULT NULL,
  `IsSpot` tinyint(1) DEFAULT NULL,
  `Monthly` longtext,
  `Shop` longtext,
  `Magnification` longtext,
  `MergeKey` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_pointexception` */

LOCK TABLES `tbl_pointexception` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_preferences` */

DROP TABLE IF EXISTS `tbl_preferences`;

CREATE TABLE `tbl_preferences` (
  `DigitsAfterCommaForPriceR` int(11) DEFAULT '0',
  `IsInTaxCalculate` tinyint(1) DEFAULT '0',
  `CustomerPaymentType` int(11) DEFAULT '0',
  `CustomerTaxType` int(11) DEFAULT '0',
  `CustomerTaxRoundType` int(11) DEFAULT '0',
  `CustomerInvoiceFormat` int(11) DEFAULT '0',
  `CustomerBillFormat` int(11) DEFAULT '0',
  `CustomerTransferType` int(11) DEFAULT '0',
  `CustomerInvoicePriceType` int(11) DEFAULT '0',
  `TaxRoundType` int(11) DEFAULT '0',
  `IsRoundByGoodsSupplier` tinyint(1) DEFAULT '0',
  `MoneyRoundType` tinyint(1) DEFAULT '0',
  `PriceRoundType` tinyint(1) DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_preferences` */

LOCK TABLES `tbl_preferences` WRITE;

insert  into `tbl_preferences`(`DigitsAfterCommaForPriceR`,`IsInTaxCalculate`,`CustomerPaymentType`,`CustomerTaxType`,`CustomerTaxRoundType`,`CustomerInvoiceFormat`,`CustomerBillFormat`,`CustomerTransferType`,`CustomerInvoicePriceType`,`TaxRoundType`,`IsRoundByGoodsSupplier`,`MoneyRoundType`,`PriceRoundType`) values (0,0,1,1,1,2,2,1,1,1,0,3,3);

UNLOCK TABLES;

/*Table structure for table `tbl_preferencesfromec` */

DROP TABLE IF EXISTS `tbl_preferencesfromec`;

CREATE TABLE `tbl_preferencesfromec` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `RankTypeMoney` varchar(10) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_preferencesfromec` */

LOCK TABLES `tbl_preferencesfromec` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_prepointsettings` */

DROP TABLE IF EXISTS `tbl_prepointsettings`;

CREATE TABLE `tbl_prepointsettings` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `PointMoneyType` int(11) DEFAULT NULL,
  `MoneyForCalIssuePoint` double DEFAULT NULL,
  `PointForCalIssuePoint` double DEFAULT NULL,
  `MinMoneyForCalIssuePoint` double DEFAULT NULL,
  `UnitUsePoint` double DEFAULT NULL,
  `UsePoint_Point` double DEFAULT NULL,
  `UsePoint_Money` double DEFAULT NULL,
  `UsePointMoneyType` int(11) DEFAULT NULL,
  `ValidPointTime` bigint(20) DEFAULT NULL,
  `ValidPointTimeUnit` int(11) DEFAULT NULL,
  `PercentForCalIssuePoint` double DEFAULT NULL,
  `IsPointForSpecialGoods` tinyint(1) DEFAULT NULL,
  `IsPointForUsePoint` tinyint(1) DEFAULT NULL,
  `IsNoPointForVoucherUse` tinyint(1) DEFAULT NULL,
  `IsNoPointForSaleOffType` tinyint(1) DEFAULT NULL,
  `UsePointStartdate` date DEFAULT NULL,
  `PurMoneyForCalIssuePoint` double DEFAULT NULL,
  `PurPointForCalIssuePoint` double DEFAULT NULL,
  `PurPercentForCalIssuePoint` double DEFAULT NULL,
  `PurMinMoneyForCalIssuePoint` double DEFAULT NULL,
  `PurPointMoneyType` int(11) DEFAULT NULL,
  `RankRate_A` float DEFAULT '0',
  `RankRate_B` float DEFAULT '0',
  `RankRate_C` float DEFAULT '0',
  `RankRate_D` float DEFAULT '0',
  `RankRate_E` float DEFAULT '0',
  `TimeStamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_prepointsettings` */

LOCK TABLES `tbl_prepointsettings` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_prepointsettings_auto` */

DROP TABLE IF EXISTS `tbl_prepointsettings_auto`;

CREATE TABLE `tbl_prepointsettings_auto` (
  `pointsettings_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `rate` float DEFAULT NULL,
  `isallproduct` tinyint(1) DEFAULT '0',
  `list_item` text,
  `list_brand` text,
  `list_product` longtext,
  `applydate` datetime DEFAULT NULL,
  `created_date` varchar(20) DEFAULT NULL,
  `modified_date` varchar(20) DEFAULT NULL,
  `enddate` datetime DEFAULT NULL,
  PRIMARY KEY (`pointsettings_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_prepointsettings_auto` */

LOCK TABLES `tbl_prepointsettings_auto` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_product_sets` */

DROP TABLE IF EXISTS `tbl_product_sets`;

CREATE TABLE `tbl_product_sets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sets_code` varchar(50) NOT NULL,
  `sets_name_display` varchar(255) DEFAULT NULL,
  `sets_price_no_tax` float DEFAULT NULL,
  `sets_total_product_price_no_tax` float DEFAULT NULL,
  `sets_products` varchar(255) DEFAULT NULL,
  `sets_url` varchar(255) DEFAULT NULL,
  `sets_status` tinyint(1) DEFAULT NULL,
  `sets_image_details` text,
  `sets_comments` text,
  `sets_prihtml1` text,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`sets_code`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_product_sets` */

LOCK TABLES `tbl_product_sets` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products` */

DROP TABLE IF EXISTS `tbl_products`;

CREATE TABLE `tbl_products` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `goods_code` varchar(50) NOT NULL DEFAULT '',
  `product_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `slug_url` text,
  `product_name` varchar(200) DEFAULT NULL,
  `product_name_display` varchar(255) DEFAULT NULL,
  `GoodsNameDisplay` varchar(255) DEFAULT NULL,
  `brand_id` int(11) DEFAULT NULL,
  `brand_code` varchar(50) DEFAULT NULL,
  `brand_code_2` varchar(50) DEFAULT NULL,
  `brand_name` varchar(100) DEFAULT NULL,
  `product_category_id` int(11) DEFAULT NULL,
  `product_itemcode` varchar(10) DEFAULT '',
  `product_itemname` varchar(200) DEFAULT '',
  `product_detail` longtext,
  `product_detail_short` longtext,
  `price` float DEFAULT NULL,
  `price_no_tax` float DEFAULT NULL,
  `product_saleoff_price_no_tax` float DEFAULT NULL,
  `product_saleoff_price` float DEFAULT NULL,
  `product_image` varchar(255) DEFAULT NULL,
  `product_setmain` tinyint(4) DEFAULT NULL,
  `product_image_details` text,
  `create_date` varchar(40) DEFAULT NULL,
  `sale_off_product` tinyint(4) DEFAULT '0',
  `set_id` int(11) DEFAULT NULL,
  `hot_product` int(4) DEFAULT '0',
  `new_product` tinyint(4) DEFAULT NULL,
  `product_status` tinyint(4) DEFAULT '0',
  `MaterialID` bigint(11) DEFAULT NULL,
  `MaterialName` varchar(50) DEFAULT NULL,
  `hashtag_name` varchar(500) DEFAULT NULL,
  `link_img_instagram` text,
  `caption_instagram` text,
  `hashtag_instagram` text,
  `prihtml` text,
  `PurchasePriceNoTax` float DEFAULT '0',
  `PurchasePriceYesTax` float DEFAULT NULL,
  `SaleOffPurchasePriceNoTax` float DEFAULT '0',
  `SaleOffPurchasePriceYesTax` float DEFAULT NULL,
  `is_sold_out` tinyint(4) DEFAULT NULL,
  `prihtml1` text,
  `is_show_option` tinyint(2) DEFAULT NULL,
  `is_recommended_item` tinyint(2) DEFAULT NULL,
  `is_pre_order` tinyint(1) DEFAULT '0',
  `country_code` varchar(10) DEFAULT NULL,
  `country_name` varchar(20) DEFAULT NULL,
  `is_fixed_all_option_name` tinyint(1) DEFAULT NULL,
  `is_color_show` tinyint(1) DEFAULT '0',
  `is_contact` tinyint(1) DEFAULT '0',
  `is_comming_soon` tinyint(1) DEFAULT '0',
  `season_code` varchar(20) DEFAULT NULL,
  `season_name` text,
  `active_date` datetime DEFAULT NULL,
  `option_title` text NOT NULL,
  `product_image_server` text,
  `is_coupon_unavailable` tinyint(4) DEFAULT NULL,
  `product_recovery` text,
  `delivery_days_add` int(11) DEFAULT NULL,
  `is_package` tinyint(4) DEFAULT NULL,
  `packet_limit` int(11) DEFAULT NULL,
  `no_wrapping` tinyint(4) DEFAULT '0',
  `product_image_360` text,
  `is_main_image` tinyint(1) DEFAULT '0',
  `is_hide_while_out_of_stock` tinyint(1) DEFAULT NULL,
  `no_display_list` tinyint(4) DEFAULT '0',
  `search_keywords` text,
  `StoreCommentO` text,
  `is_popularity` tinyint(1) DEFAULT '0',
  `is_classic` tinyint(1) DEFAULT '0',
  `is_flash_sale` tinyint(1) DEFAULT '0',
  `flash_sale_from` datetime DEFAULT NULL,
  `flash_sale_to` datetime DEFAULT NULL,
  `is_restock_item` tinyint(1) DEFAULT '0',
  `is_restock_item_always` tinyint(1) DEFAULT NULL,
  `restock_from` datetime DEFAULT NULL,
  `restock_to` datetime DEFAULT NULL,
  `memo` text,
  `date_expired` varchar(40) DEFAULT NULL,
  `is_show_link_destination` tinyint(1) DEFAULT '0',
  `link_destination` varchar(255) DEFAULT NULL,
  `shop_list` text,
  `stone` text,
  `materials` text,
  `one_of_kind` tinyint(4) DEFAULT NULL,
  `exclusive` tinyint(4) DEFAULT NULL,
  `order_made` tinyint(4) DEFAULT NULL,
  `tips` varchar(500) DEFAULT NULL,
  `pointrate` float DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `SectionCode` varchar(10) DEFAULT '',
  `SectionName` varchar(40) DEFAULT '',
  `Memo3` text,
  `Memo4` text,
  `is_magazine` tinyint(4) DEFAULT '0',
  `onsale` tinyint(1) DEFAULT '0',
  `is_myess` tinyint(1) DEFAULT '0',
  `unbundled_product` tinyint(1) DEFAULT '0',
  `multiple_item_code` varchar(10000) DEFAULT NULL,
  `is_not_sold_out` tinyint(1) NOT NULL DEFAULT '0',
  `is_active_first` tinyint(1) DEFAULT '0',
  `is_free_ship` tinyint(1) DEFAULT '0',
  `free_ship_from` datetime DEFAULT NULL,
  `free_ship_to` datetime DEFAULT NULL,
  `aterial_code` varchar(50) DEFAULT NULL,
  `design_code` varchar(50) DEFAULT NULL,
  `heelheight_code` varchar(50) DEFAULT NULL,
  `lifestyle_code` varchar(50) DEFAULT NULL,
  `footwidthshape_code` varchar(50) DEFAULT NULL,
  `feature_code` varchar(50) DEFAULT NULL,
  `date_new_start` varchar(50) DEFAULT NULL,
  `family_sale_type` tinyint(1) DEFAULT NULL,
  `ShapeCode2` varchar(10) DEFAULT NULL,
  `ShapeName2` varchar(40) DEFAULT NULL,
  `sale_rate` float DEFAULT NULL,
  `gender_men` tinyint(1) DEFAULT '0',
  `gender_women` tinyint(1) DEFAULT '0',
  `gender_unisex` tinyint(1) DEFAULT '0',
  `sold_out_text` tinyint(1) DEFAULT '0',
  `check_point_setting` tinyint(1) DEFAULT '0',
  `googles_description` text,
  `googles_product_category_code` varchar(20) DEFAULT NULL,
  `googles_product_type` text,
  `googles_condition` varchar(20) DEFAULT NULL,
  `googles_age_group` varchar(20) DEFAULT NULL,
  `googles_color` text,
  `googles_pattern` text,
  PRIMARY KEY (`goods_code`),
  KEY `product_id` (`product_id`),
  KEY `brand_code` (`brand_code`),
  KEY `hot_product` (`hot_product`),
  KEY `is_sold_out` (`is_sold_out`),
  KEY `MaterialID` (`MaterialID`),
  KEY `new_product` (`new_product`),
  KEY `product_category_id` (`product_category_id`),
  KEY `product_itemcode` (`product_itemcode`),
  KEY `product_status` (`product_status`),
  KEY `is_hide_while_out_of_stock` (`is_hide_while_out_of_stock`),
  KEY `SeqNo` (`SeqNo`),
  KEY `brand_code_2` (`brand_code_2`),
  KEY `brand_id` (`brand_id`),
  KEY `is_classic` (`is_classic`),
  KEY `is_comming_soon` (`is_comming_soon`),
  KEY `is_contact` (`is_contact`),
  KEY `is_coupon_unavailable` (`is_coupon_unavailable`),
  KEY `is_fixed_all_option_name` (`is_fixed_all_option_name`),
  KEY `is_flash_sale` (`is_flash_sale`),
  KEY `is_main_image` (`is_main_image`),
  KEY `is_myess` (`is_myess`),
  KEY `is_package` (`is_package`),
  KEY `is_popularity` (`is_popularity`),
  KEY `is_pre_order` (`is_pre_order`),
  KEY `is_recommended_item` (`is_recommended_item`),
  KEY `is_restock_item` (`is_restock_item`),
  KEY `is_restock_item_always` (`is_restock_item_always`),
  KEY `is_show_link_destination` (`is_show_link_destination`),
  KEY `is_show_option` (`is_show_option`),
  KEY `onsale` (`onsale`),
  KEY `product_name` (`product_name`),
  KEY `product_name_display` (`product_name_display`),
  KEY `product_setmain` (`product_setmain`),
  KEY `sale_off_product` (`sale_off_product`),
  KEY `season_code` (`season_code`),
  KEY `SectionCode` (`SectionCode`),
  KEY `unbundled_product` (`unbundled_product`),
  FULLTEXT KEY `idx_ft_product_name_description` (`product_name`,`goods_code`)
) ENGINE=InnoDB AUTO_INCREMENT=2394 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products` */

LOCK TABLES `tbl_products` WRITE;

insert  into `tbl_products`(`SeqNo`,`RSeqNo`,`goods_code`,`product_id`,`slug_url`,`product_name`,`product_name_display`,`GoodsNameDisplay`,`brand_id`,`brand_code`,`brand_code_2`,`brand_name`,`product_category_id`,`product_itemcode`,`product_itemname`,`product_detail`,`product_detail_short`,`price`,`price_no_tax`,`product_saleoff_price_no_tax`,`product_saleoff_price`,`product_image`,`product_setmain`,`product_image_details`,`create_date`,`sale_off_product`,`set_id`,`hot_product`,`new_product`,`product_status`,`MaterialID`,`MaterialName`,`hashtag_name`,`link_img_instagram`,`caption_instagram`,`hashtag_instagram`,`prihtml`,`PurchasePriceNoTax`,`PurchasePriceYesTax`,`SaleOffPurchasePriceNoTax`,`SaleOffPurchasePriceYesTax`,`is_sold_out`,`prihtml1`,`is_show_option`,`is_recommended_item`,`is_pre_order`,`country_code`,`country_name`,`is_fixed_all_option_name`,`is_color_show`,`is_contact`,`is_comming_soon`,`season_code`,`season_name`,`active_date`,`option_title`,`product_image_server`,`is_coupon_unavailable`,`product_recovery`,`delivery_days_add`,`is_package`,`packet_limit`,`no_wrapping`,`product_image_360`,`is_main_image`,`is_hide_while_out_of_stock`,`no_display_list`,`search_keywords`,`StoreCommentO`,`is_popularity`,`is_classic`,`is_flash_sale`,`flash_sale_from`,`flash_sale_to`,`is_restock_item`,`is_restock_item_always`,`restock_from`,`restock_to`,`memo`,`date_expired`,`is_show_link_destination`,`link_destination`,`shop_list`,`stone`,`materials`,`one_of_kind`,`exclusive`,`order_made`,`tips`,`pointrate`,`TimeStamp`,`SectionCode`,`SectionName`,`Memo3`,`Memo4`,`is_magazine`,`onsale`,`is_myess`,`unbundled_product`,`multiple_item_code`,`is_not_sold_out`,`is_active_first`,`is_free_ship`,`free_ship_from`,`free_ship_to`,`aterial_code`,`design_code`,`heelheight_code`,`lifestyle_code`,`footwidthshape_code`,`feature_code`,`date_new_start`,`family_sale_type`,`ShapeCode2`,`ShapeName2`,`sale_rate`,`gender_men`,`gender_women`,`gender_unisex`,`sold_out_text`,`check_point_setting`,`googles_description`,`googles_product_category_code`,`googles_product_type`,`googles_condition`,`googles_age_group`,`googles_color`,`googles_pattern`) values ('01100000000000005154',NULL,'BA14101',1741,'ba14101','BUCO MOTORCYCLE GLOVE / DEERSKIN','','',72,'BUCO','','',47,'AC05','GLOVE','<p>フィット感の高いディアスキングローブをリリース</p>\r\n<p>■マテリアル/ニュージーランド産ディアスキン:クローム鞣し</p>','',16500,15000,15000,16500,'20210922025042_product_BA14101_image.jpg',0,'product_BA14101_030-BLK_202109221632289862554.jpg,product_BA14101_060-YLW_202109221632289873590.jpg,','2014/06/11',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',4750,5225,4750,5225,0,'',0,0,0,'','',0,0,0,0,'14FW','2014 F/W','2021-09-22 15:02:05','',NULL,0,'',0,0,0,0,NULL,0,0,0,'','ггггг',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-10-28 17:57:16','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,NULL,NULL,NULL,NULL,NULL,NULL,NULL),('01500000000000005672',NULL,'BA17001',1728,'ba17001','BUCO HORSEHIDE PADDED WALLET','','',72,'BUCO','','',42,'AC06','WALLET','■ホースハイド','',66000,60000,60000,66000,'20210922030418_product_BA17001_image.jpg',0,'product_BA17001_030-BLK_202109221632290684628.jpg,product_BA17001_030-BLK_202109221632290684899.jpg,','2016/10/26',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',17450,19195,17450,19195,0,'',0,0,0,'','',0,0,0,0,'17SS','2017 S/S','2021-09-22 15:06:25','',NULL,0,'',0,0,0,0,NULL,0,0,0,'','ггггг',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-11-27 17:40:30','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,'','','','','','',''),('03000000000000006673',NULL,'BA21102',1467,'ba21102','BUCO GAUNTLET GLOVE','','',72,'BUCO','','BUCO',47,'AC05','GLOVE','・レザー:　ホースハイド/クロム鞣し、アニリンフィニッシュ<br />\r・ライニング:　アクリルボア','',35200,32000,32000,35200,'20211124020334_product_BA21102_image.png',0,'product_BA21102_030-BLK_202112081638935047980.jpg,product_BA21102_030-BLK_202112081638935049274.jpg,product_BA21102_030-BLK_202112081638935049708.jpg,product_BA21102_030-BLK_202112081638935050120.jpg,product_BA21102_030-BLK_202112081638935048678.jpg,product_BA21102_030-BLK_202112081638935050546.jpg,','2021/05/14',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',9643,10607,9643,10607,0,'',0,0,0,'','',0,1,0,0,'21FWSE','2021 F/W SEASONAL','2021-12-04 11:28:06','',NULL,0,'',0,0,0,0,NULL,1,0,0,'','ггггг',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-12-08 12:44:30','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,'','','','','','',''),('03000000000000006628',NULL,'MC21104',1419,'mc21104','MILITARY PRINT SWEATSHIRT / HMC TANKER','','',71,'MILITARY','','MILITARY',17,'SW02','L/S SWEAT','','',27500,25000,25000,27500,'20210922024406_product_MC21104_image.jpg',0,'product_MC21104_013-OATML_202112041638585490635.jpg,product_MC21104_013-OATML_202112041638585491295.jpg,product_MC21104_013-OATML_202112041638585491891.jpg,product_MC21104_013-OATML_202112041638585492305.jpg,product_MC21104_013-OATML_202112041638585492742.jpg,','2021/05/14',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',5549,6103,5549,6103,0,'',0,0,0,'','',0,0,0,0,'21FWSE','2021 F/W SEASONAL','2021-12-18 18:27:45','',NULL,0,'',0,0,0,0,NULL,0,0,0,'','',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-12-20 17:40:04','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,'','','','','','',''),('03000000000000006606',NULL,'MJ21109',1396,'mj21109','TYPE MA-1 REAL McCOY MFG. CO. / DECAL','','',71,'MILITARY','','MILITARY',37,'JKT04','NYLON JACKET(MIL)','','',90200,82000,82000,90200,'20211208052039_product_MJ21109_image.jpg',0,'product_MJ21109_154-SGGRN_202112081638951669835.jpg,product_MJ21109_154-SGGRN_202112081638951670452.jpg,product_MJ21109_154-SGGRN_202112081638951671048.jpg,product_MJ21109_154-SGGRN_202112081638951671496.jpg,product_MJ21109_154-SGGRN_202112081638951668417.jpg,product_MJ21109_154-SGGRN_202112081638951668932.jpg,product_MJ21109_154-SGGRN_202112081638951669411.jpg,,','2021/05/14',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',26013,28614,26013,28614,0,'',0,0,0,'','',0,0,0,0,'21FWSE','2021 F/W SEASONAL','2021-12-08 17:21:41','',NULL,0,'',0,0,0,0,NULL,0,0,0,'','',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-12-20 17:32:47','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,'','','','','','',''),('03000000000000006613',NULL,'MJ21130',1403,'mj21130','PARKA, EXTREME COLD WEATHER (GEN I)','','',71,'MILITARY','','',37,'JKT04','NYLON JACKET(MIL)','<p><span>・シェル:　ナイロンタフタ</span><br /><span>・ライニング:　ナイロンリップストップ</span><br /><span>・中綿:　高機能ポリエステル綿</span><br /><span>・フロントファスナー:　ビスロンファスナー</span><br /><span>・ポケットファスナー:　撥水テープファスナー</span></p>','',77000,70000,70000,77000,'20210922043521_product_MJ21130_image.jpg',0,'product_MJ21130_154-SGGRN_202112041638588375493.jpg,product_MJ21130_154-SGGRN_202112041638588376163.jpg,product_MJ21130_154-SGGRN_202112041638588376800.jpg,product_MJ21130_154-SGGRN_202112041638588377284.jpg,product_MJ21130_154-SGGRN_202112041638588377868.jpg,product_MJ21130_154-SGGRN_202112041638588378311.jpg,product_MJ21130_154-SGGRN_202112041638588378704.jpg,product_MJ21130_056-CYTBRN_202112041638588318085.jpg,product_MJ21130_056-CYTBRN_202112041638588318820.jpg,product_MJ21130_056-CYTBRN_202112041638588319444.jpg,product_MJ21130_056-CYTBRN_202112041638588319897.jpg,product_MJ21130_056-CYTBRN_202112041638588320334.jpg,product_MJ21130_056-CYTBRN_202112041638588320759.jpg,product_MJ21130_056-CYTBRN_202112041638588321131.jpg','2021/05/14',0,0,1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'',18914,20805,18914,20805,0,'',0,0,0,'','',0,0,0,0,'21FWSE','2021 F/W SEASONAL','2021-12-04 12:26:26','',NULL,0,'',0,0,0,0,NULL,0,0,0,'','',0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00',0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','',0,'','  ','','',0,0,0,'',0,'2021-12-06 19:33:18','','','','',0,0,0,0,NULL,0,0,0,'0000-00-00 00:00:00','0000-00-00 00:00:00','','','','','','','',0,'','',0,0,0,0,0,0,'','','','','','','');

UNLOCK TABLES;

/*Table structure for table `tbl_products_category` */

DROP TABLE IF EXISTS `tbl_products_category`;

CREATE TABLE `tbl_products_category` (
  `SeqNo` varchar(20) DEFAULT '',
  `RSeqNo` varchar(20) DEFAULT '',
  `product_category_id` int(11) NOT NULL AUTO_INCREMENT,
  `OrderNumber` int(11) DEFAULT NULL,
  `Name` varchar(100) DEFAULT NULL,
  `IsDisplay` tinyint(4) DEFAULT NULL,
  `IsShowAsMenu` tinyint(4) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `category_banner` varchar(255) DEFAULT NULL,
  `ItemCode` varchar(10) NOT NULL,
  `TimeStamp` varchar(255) DEFAULT '',
  `memo` text,
  `slug_url` varchar(255) DEFAULT NULL,
  `category_status` tinyint(2) DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `show_order` int(3) DEFAULT NULL,
  `ecsite` tinyint(1) DEFAULT '1',
  `category_group_id` int(11) DEFAULT NULL,
  `name_display` varchar(255) DEFAULT NULL,
  `name_display_en` varchar(255) DEFAULT NULL,
  `category_header` text,
  `category_logo` varchar(255) DEFAULT NULL,
  `DisplayBannerOnTop` tinyint(4) DEFAULT NULL,
  `modified_date` datetime DEFAULT NULL,
  PRIMARY KEY (`ItemCode`),
  KEY `product_category_id` (`product_category_id`),
  KEY `IsDisplay` (`IsDisplay`),
  KEY `IsShowAsMenu` (`IsShowAsMenu`),
  KEY `slug_url` (`slug_url`),
  KEY `category_group_id` (`category_group_id`),
  KEY `category_status` (`category_status`),
  KEY `OrderNumber` (`OrderNumber`),
  KEY `show_order` (`show_order`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_category` */

LOCK TABLES `tbl_products_category` WRITE;

insert  into `tbl_products_category`(`SeqNo`,`RSeqNo`,`product_category_id`,`OrderNumber`,`Name`,`IsDisplay`,`IsShowAsMenu`,`create_date`,`category_banner`,`ItemCode`,`TimeStamp`,`memo`,`slug_url`,`category_status`,`parent_id`,`show_order`,`ecsite`,`category_group_id`,`name_display`,`name_display_en`,`category_header`,`category_logo`,`DisplayBannerOnTop`,`modified_date`) values ('01500000000000000035','',46,NULL,'帽子',1,NULL,'2016-08-10 00:00:00',NULL,'AC01','2021-09-16 0016:27:16',NULL,'AC01',NULL,NULL,NULL,1,NULL,'帽子',NULL,NULL,NULL,NULL,NULL),('01500000000000000036','',45,NULL,'SHOES/BOOTS',1,NULL,'2016-08-10 00:00:00',NULL,'AC02','2021-10-04 0012:25:20',NULL,'AC02',NULL,NULL,NULL,1,NULL,'SHOES/BOOTS',NULL,NULL,NULL,NULL,NULL),('01500000000000000037','',44,NULL,'BAG',1,NULL,'2016-08-10 00:00:00',NULL,'AC03','2021-10-02 0013:45:46',NULL,'AC03',NULL,NULL,NULL,1,NULL,'BAG',NULL,NULL,NULL,NULL,NULL),('01500000000000000038','',43,NULL,'BELT',1,NULL,'2016-08-10 00:00:00',NULL,'AC04','2021-10-04 0012:27:03',NULL,'AC04',NULL,NULL,NULL,1,NULL,'BELT',NULL,NULL,NULL,NULL,NULL),('01500000000000000039','',47,NULL,'GLOVE',1,NULL,'2016-08-10 00:00:00',NULL,'AC05','2021-10-04 0012:27:03',NULL,'AC05',NULL,NULL,NULL,1,NULL,'GLOVE',NULL,NULL,NULL,NULL,NULL),('01500000000000000040','',42,NULL,'WALLET',NULL,NULL,'2016-08-10 00:00:00',NULL,'AC06','2021-10-02 0013:45:42',NULL,'AC06',NULL,NULL,NULL,1,NULL,'WALLET',NULL,NULL,NULL,NULL,NULL),('01500000000000000041','',41,NULL,'ACCESSORY ASSORT',NULL,NULL,'2016-08-10 00:00:00',NULL,'AC07','2021-10-02 0013:45:29',NULL,'AC07',NULL,NULL,NULL,1,NULL,'ACCESSORY ASSORT',NULL,NULL,NULL,NULL,NULL),('01500000000000000042','',40,0,'NOVELTY',1,1,'2016-08-10 00:00:00','category_40_banner.jpg','AC08','2021-10-02 0013:45:28','0','AC08',NULL,NULL,NULL,1,1,'NOVELTY','','','category_40_logo.jpg',0,'2021-11-16 15:17:57'),('01500000000000000043','',38,NULL,'BOOK',NULL,NULL,'2016-08-10 00:00:00',NULL,'AC09','2021-10-02 0013:45:26',NULL,'AC09',NULL,NULL,NULL,1,NULL,'BOOK',NULL,NULL,NULL,NULL,NULL),('01500000000000000044','',31,0,'LEATHER JACKET(MIL)',1,0,'2016-08-10 00:00:00',NULL,'JKT01','2021-10-02 0013:44:07','0','JKT01',NULL,NULL,NULL,1,1,'LEATHER JACKET (MILITARY)','','','category_31_logo.jpg',0,'2021-10-02 16:15:40'),('01500000000000000045','',30,0,'LEATHER JACKET(BUCO)',1,1,'2016-08-10 00:00:00','category_30_banner.jpg','JKT02','2021-10-02 0013:43:53','0','JKT02',NULL,NULL,NULL,1,1,'LEATHER JACKET(BUCO)','','','category_30_logo.jpg',0,'2021-09-29 20:50:12'),('01500000000000000046','',29,0,'LEATHER JACKET(JOE)',1,1,'2016-08-10 00:00:00',NULL,'JKT03','2021-10-02 0013:43:34','0','JKT03',NULL,NULL,NULL,1,1,'LEATHER JACKET(JOE)','','',NULL,0,'2021-09-29 20:37:58'),('01500000000000000047','',37,0,'NYLON JACKET(MIL)',1,1,'2016-08-10 00:00:00',NULL,'JKT04','2021-10-02 0013:45:24','0','JKT04',NULL,NULL,NULL,1,1,'NYLON JACKET【MILITARY】','','',NULL,0,'2021-10-02 16:16:30'),('01500000000000000048','',36,0,'COTTON JACKET(MIL)',1,1,'2016-08-10 00:00:00',NULL,'JKT05','2021-10-02 0013:45:12','0','JKT05',NULL,NULL,NULL,1,1,'COTTON JACKET(MIL)','','',NULL,0,'2021-09-29 20:38:21'),('01500000000000000049','',35,0,'WOOL JACKET(MIL)',1,1,'2016-08-10 00:00:00',NULL,'JKT06','2021-10-02 0013:45:06','0','JKT06',NULL,NULL,NULL,1,1,'WOOL JACKET(MIL)','','',NULL,0,'2021-09-29 20:38:31'),('01500000000000000050','',34,0,'BUCO JACKET(レザー以外)',1,1,'2016-08-10 00:00:00',NULL,'JKT07','2021-10-02 0013:44:52','0','JKT07',NULL,NULL,NULL,1,1,'BUCO JACKET(レザー以外)','','',NULL,0,'2021-09-29 20:39:11'),('01500000000000000051','',33,0,'JOE JACKET(レザー以外)',1,1,'2016-08-10 00:00:00',NULL,'JKT08','2021-10-02 0013:44:35','0','JKT08',NULL,NULL,NULL,1,1,'JOE JACKET(レザー以外)','','',NULL,0,'2021-09-29 20:38:43'),('01500000000000000052','',32,0,'JACKET ASSORT',1,1,'2016-08-10 00:00:00','category_32_banner.png','JKT09','2021-10-02 0013:44:22','0','JKT09',NULL,NULL,NULL,1,1,'JACKET ASSORT','','',NULL,0,'2021-11-16 12:02:27'),('01400000000000000065','',51,NULL,'Lewis Leathers',NULL,NULL,'2016-08-31 00:00:00',NULL,'JKT10','2021-10-02 0013:36:38',NULL,'JKT10',NULL,NULL,NULL,1,NULL,'Lewis Leathers',NULL,NULL,NULL,NULL,NULL),('01500000000000000064','',18,NULL,'KNIT SWEATER',1,NULL,'2016-08-10 00:00:00',NULL,'KN','2021-10-02 0013:38:01',NULL,'KN',NULL,NULL,NULL,1,NULL,'KNIT SWEATER',NULL,NULL,NULL,NULL,NULL),('01500000000000000053','',28,NULL,'JEANS',NULL,NULL,'2016-08-10 00:00:00',NULL,'PT01','2021-10-02 0013:43:15',NULL,'PT01',NULL,NULL,NULL,1,NULL,'JEANS',NULL,NULL,NULL,NULL,NULL),('01500000000000000054','',27,NULL,'SHORTS',NULL,NULL,'2016-08-10 00:00:00',NULL,'PT02','2021-10-02 0013:42:55',NULL,'PT02',NULL,NULL,NULL,1,NULL,'SHORTS',NULL,NULL,NULL,NULL,NULL),('01500000000000000055','',26,NULL,'PANTS ASSORT',NULL,NULL,'2016-08-10 00:00:00',NULL,'PT03','2021-10-02 0013:42:03',NULL,'PT03',NULL,NULL,NULL,1,NULL,'PANTS ASSORT',NULL,NULL,NULL,NULL,NULL),('01500000000000000056','',25,NULL,'S/S SHIRTS',NULL,NULL,'2016-08-10 00:00:00',NULL,'SH01','2021-10-02 0013:41:39',NULL,'SH01',NULL,NULL,NULL,1,NULL,'S/S SHIRTS',NULL,NULL,NULL,NULL,NULL),('01500000000000000057','',24,NULL,'L/S SHIRTS',NULL,NULL,'2016-08-10 00:00:00',NULL,'SH02','2021-10-02 0013:41:18',NULL,'SH02',NULL,NULL,NULL,1,NULL,'L/S SHIRTS',NULL,NULL,NULL,NULL,NULL),('01500000000000000058','',23,NULL,'S/S SWEAT',NULL,NULL,'2016-08-10 00:00:00',NULL,'SW01','2021-10-02 0013:40:58',NULL,'SW01',NULL,NULL,NULL,1,NULL,'S/S SWEAT',NULL,NULL,NULL,NULL,NULL),('01500000000000000059','',17,0,'L/S SWEAT',1,1,'2016-08-10 00:00:00',NULL,'SW02','2021-10-02 0013:40:40','0','SW02',NULL,NULL,NULL,1,0,'L/S SWEAT','','',NULL,0,'2021-09-16 16:30:16'),('01500000000000000060','',21,NULL,'SWEAT PANTS',NULL,NULL,'2016-08-10 00:00:00',NULL,'SW03','2021-10-02 0013:40:38',NULL,'SW03',NULL,NULL,NULL,1,NULL,'SWEAT PANTS',NULL,NULL,NULL,NULL,NULL),('01500000000000000061','',20,NULL,'S/S TEE',1,NULL,'2016-08-10 00:00:00',NULL,'T01','2021-10-02 0013:38:37',NULL,'T01',NULL,NULL,NULL,1,NULL,'S/S TEE',NULL,NULL,NULL,NULL,NULL),('01500000000000000062','',19,NULL,'L/S TEE',1,NULL,'2016-08-10 00:00:00',NULL,'T02','2021-10-02 0013:38:19',NULL,'T02',NULL,NULL,NULL,1,NULL,'L/S TEE',NULL,NULL,NULL,NULL,NULL),('01500000000000000063','',39,0,'その他',1,0,'2016-08-10 00:00:00','category_39_banner.jpg','Z','2021-10-02 0013:45:27','0','Z',NULL,NULL,NULL,1,0,'その他','','','category_39_logo.jpg',0,'2021-09-29 20:48:34');

UNLOCK TABLES;

/*Table structure for table `tbl_products_category_group` */

DROP TABLE IF EXISTS `tbl_products_category_group`;

CREATE TABLE `tbl_products_category_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_group_code` varchar(200) DEFAULT NULL,
  `category_group_name` varchar(255) DEFAULT NULL,
  `category_group_status` tinyint(2) DEFAULT NULL,
  `category_group_show_order` tinyint(2) DEFAULT NULL,
  `category_group_parent_name` varchar(255) DEFAULT NULL,
  `description` text,
  `category_group_banner` text,
  `is_show_sub_menu` tinyint(1) DEFAULT NULL,
  `category_group_header` text,
  `instagram_link` varchar(500) DEFAULT NULL,
  `instagram_access_token` varchar(500) DEFAULT NULL,
  `slug_url` varchar(500) DEFAULT NULL,
  `is_get_list_manual` tinyint(1) DEFAULT '0',
  `goodcode_list_manual` text,
  PRIMARY KEY (`id`),
  KEY `category_group_code` (`category_group_code`),
  KEY `category_group_show_order` (`category_group_show_order`),
  KEY `category_group_status` (`category_group_status`),
  KEY `is_get_list_manual` (`is_get_list_manual`),
  KEY `is_show_sub_menu` (`is_show_sub_menu`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_category_group` */

LOCK TABLES `tbl_products_category_group` WRITE;

insert  into `tbl_products_category_group`(`id`,`category_group_code`,`category_group_name`,`category_group_status`,`category_group_show_order`,`category_group_parent_name`,`description`,`category_group_banner`,`is_show_sub_menu`,`category_group_header`,`instagram_link`,`instagram_access_token`,`slug_url`,`is_get_list_manual`,`goodcode_list_manual`) values (1,'OUTER WEAR','OUTER WEAR',1,0,'',NULL,NULL,1,'','','','',0,''),(2,'test','テスト',1,0,'',NULL,NULL,0,'','','','',0,'');

UNLOCK TABLES;

/*Table structure for table `tbl_products_category_small` */

DROP TABLE IF EXISTS `tbl_products_category_small`;

CREATE TABLE `tbl_products_category_small` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_small_code` varchar(200) DEFAULT NULL,
  `category_small_name` varchar(255) DEFAULT NULL,
  `category_small_status` tinyint(2) DEFAULT NULL,
  `category_small_show_order` tinyint(2) DEFAULT NULL,
  `category_small_parent_name` varchar(255) DEFAULT NULL,
  `category_small_banner` text,
  `category_small_header` text,
  `slug_url` varchar(500) DEFAULT NULL,
  `goodcode_list_manual` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_category_small` */

LOCK TABLES `tbl_products_category_small` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_details` */

DROP TABLE IF EXISTS `tbl_products_details`;

CREATE TABLE `tbl_products_details` (
  `SeqNo` varchar(20) NOT NULL DEFAULT '',
  `RSeqNo` varchar(20) DEFAULT '',
  `product_detail_id` int(11) DEFAULT NULL,
  `product_id` bigint(20) NOT NULL,
  `barcode` varchar(20) DEFAULT NULL,
  `color_id` int(11) NOT NULL,
  `color_code` varchar(10) DEFAULT '',
  `color_display` text,
  `color_name` text NOT NULL,
  `color_html_code` varchar(50) DEFAULT NULL,
  `size_id` int(11) NOT NULL,
  `size_code` varchar(10) DEFAULT '',
  `size_display` text,
  `size_name` text NOT NULL,
  `size_description` varchar(500) DEFAULT NULL,
  `product_detail_price_no_tax` float NOT NULL DEFAULT '0',
  `product_detail_price` float NOT NULL DEFAULT '0',
  `product_detail_saleoff_price_no_tax` float NOT NULL DEFAULT '0',
  `product_detail_saleoff_price` float NOT NULL DEFAULT '0',
  `product_detail_status` tinyint(4) DEFAULT '0',
  `product_detail_top` tinyint(4) DEFAULT '0',
  `product_detail_order` int(11) DEFAULT NULL,
  `num_rank` bigint(20) DEFAULT '0',
  `color_slug_url` text,
  `order_status` int(4) DEFAULT NULL,
  `is_main_color` tinyint(1) DEFAULT '0',
  `num_order` bigint(20) DEFAULT '0',
  `Individual_Color_Name` text,
  `product_detail_color_status` tinyint(4) DEFAULT '0',
  `product_ranking` int(11) DEFAULT NULL,
  `product_goods_code` varchar(50) DEFAULT NULL,
  `product_detail_price2` float DEFAULT '0',
  `product_detail_saleoff_price2` float DEFAULT '0',
  `is_last_one` tinyint(1) DEFAULT '0',
  `display_top` varchar(200) DEFAULT NULL,
  `param_used_when_import` tinyint(1) DEFAULT '0',
  `Individual_Size_Name` text,
  `urlbycolor` text,
  PRIMARY KEY (`SeqNo`),
  KEY `rseqno` (`RSeqNo`),
  KEY `colorcode` (`color_code`),
  KEY `sizecode` (`size_code`),
  KEY `order_status` (`order_status`),
  KEY `goods_code` (`product_goods_code`),
  KEY `product_detail_status` (`product_detail_status`),
  KEY `is_last_one` (`is_last_one`),
  KEY `num_order` (`num_order`),
  KEY `product_detail_color_status` (`product_detail_color_status`),
  KEY `product_detail_id` (`product_detail_id`),
  KEY `product_detail_order` (`product_detail_order`),
  KEY `product_detail_price` (`product_detail_price`),
  KEY `product_detail_price_no_tax` (`product_detail_price_no_tax`),
  KEY `product_detail_saleoff_price` (`product_detail_saleoff_price`),
  KEY `product_detail_saleoff_price_no_tax` (`product_detail_saleoff_price_no_tax`),
  KEY `product_id` (`product_id`),
  KEY `product_ranking` (`product_ranking`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_details` */

LOCK TABLES `tbl_products_details` WRITE;

insert  into `tbl_products_details`(`SeqNo`,`RSeqNo`,`product_detail_id`,`product_id`,`barcode`,`color_id`,`color_code`,`color_display`,`color_name`,`color_html_code`,`size_id`,`size_code`,`size_display`,`size_name`,`size_description`,`product_detail_price_no_tax`,`product_detail_price`,`product_detail_saleoff_price_no_tax`,`product_detail_saleoff_price`,`product_detail_status`,`product_detail_top`,`product_detail_order`,`num_rank`,`color_slug_url`,`order_status`,`is_main_color`,`num_order`,`Individual_Color_Name`,`product_detail_color_status`,`product_ranking`,`product_goods_code`,`product_detail_price2`,`product_detail_saleoff_price2`,`is_last_one`,`display_top`,`param_used_when_import`,`Individual_Size_Name`,`urlbycolor`) values ('01000000000000032731','01500000000000005672',NULL,0,'0100000327319',0,'140-NVY',NULL,'NAVY\n',NULL,0,'F',NULL,'F',NULL,60000,66000,60000,66000,1,1,0,0,'140-nvy',0,0,0,'',1,NULL,'BA17001',0,0,0,NULL,0,'',NULL),('01100000000000027902','01100000000000005154',NULL,0,'0110000279020',0,'030-BLK',NULL,'BLACK\n',NULL,0,'L',NULL,'L',NULL,15000,16500,15000,16500,0,1,0,0,'030-blk',0,0,0,'',0,NULL,'BA14101',0,0,0,'',0,'',NULL),('01100000000000027903','01100000000000005154',NULL,0,'0110000279037',0,'030-BLK',NULL,'BLACK\n',NULL,0,'M',NULL,'M',NULL,15000,16500,15000,16500,0,1,0,0,'030-blk',0,0,0,'',0,NULL,'BA14101',0,0,0,'',0,'',NULL),('01100000000000027904','01100000000000005154',NULL,0,'0110000279044',0,'060-YLW',NULL,'YELLOW',NULL,0,'L',NULL,'L',NULL,15000,16500,15000,16500,0,1,0,0,'060-ylw',0,0,0,'',0,NULL,'BA14101',0,0,0,'',0,'',NULL),('01100000000000027905','01100000000000005154',NULL,0,'0110000279051',0,'060-YLW',NULL,'YELLOW',NULL,0,'M',NULL,'M',NULL,15000,16500,15000,16500,0,1,0,0,'060-ylw',0,0,0,'',0,NULL,'BA14101',0,0,0,'',0,'',NULL),('01500000000000030786','01500000000000005672',NULL,0,'0150000307866',0,'030-BLK',NULL,'BLACK\n',NULL,0,'F',NULL,'F',NULL,60000,66000,60000,66000,0,1,0,0,'030-blk',0,0,0,'',0,NULL,'BA17001',0,0,0,'',0,'',NULL),('03000000000000035858','03000000000000006606',NULL,0,'0300000358584',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'L',NULL,'L',NULL,82000,90200,82000,90200,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21109',0,0,0,'',0,'',NULL),('03000000000000035859','03000000000000006606',NULL,0,'0300000358591',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'M',NULL,'M',NULL,82000,90200,82000,90200,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21109',0,0,0,'',0,'',NULL),('03000000000000035860','03000000000000006606',NULL,0,'0300000358607',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'S',NULL,'S',NULL,82000,90200,82000,90200,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21109',0,0,0,'',0,'',NULL),('03000000000000035861','03000000000000006606',NULL,0,'0300000358614',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'XL',NULL,'XL',NULL,82000,90200,82000,90200,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21109',0,0,0,'',0,'',NULL),('03000000000000035885','03000000000000006613',NULL,0,'0300000358850',0,'056-CYTBRN',NULL,'COYOTE BROWN',NULL,0,'L',NULL,'L',NULL,70000,77000,70000,77000,0,1,0,0,'056-cytbrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000035886','03000000000000006613',NULL,0,'0300000358867',0,'056-CYTBRN',NULL,'COYOTE BROWN',NULL,0,'M',NULL,'M',NULL,70000,77000,70000,77000,0,1,0,0,'056-cytbrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000035887','03000000000000006613',NULL,0,'0300000358874',0,'056-CYTBRN',NULL,'COYOTE BROWN',NULL,0,'S',NULL,'S',NULL,70000,77000,70000,77000,0,1,0,0,'056-cytbrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000035888','03000000000000006613',NULL,0,'0300000358881',0,'056-CYTBRN',NULL,'COYOTE BROWN',NULL,0,'XL',NULL,'XL',NULL,70000,77000,70000,77000,0,1,0,0,'056-cytbrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000035966','03000000000000006628',NULL,0,'0300000359666',0,'013-OATML',NULL,'OATMEAL',NULL,0,'L',NULL,'L',NULL,25000,27500,25000,27500,0,1,0,0,'013-oatml',0,0,0,'',0,NULL,'MC21104',0,0,0,'',0,'',NULL),('03000000000000035967','03000000000000006628',NULL,0,'0300000359673',0,'013-OATML',NULL,'OATMEAL',NULL,0,'M',NULL,'M',NULL,25000,27500,25000,27500,0,1,0,0,'013-oatml',0,0,0,'',0,NULL,'MC21104',0,0,0,'',0,'',NULL),('03000000000000035968','03000000000000006628',NULL,0,'0300000359680',0,'013-OATML',NULL,'OATMEAL',NULL,0,'S',NULL,'S',NULL,25000,27500,25000,27500,0,1,0,0,'013-oatml',0,0,0,'',0,NULL,'MC21104',0,0,0,'',0,'',NULL),('03000000000000035969','03000000000000006628',NULL,0,'0300000359697',0,'013-OATML',NULL,'OATMEAL',NULL,0,'XL',NULL,'XL',NULL,25000,27500,25000,27500,0,1,0,0,'013-oatml',0,0,0,'',0,NULL,'MC21104',0,0,0,'',0,'',NULL),('03000000000000036261','03000000000000006673',NULL,0,'0300000362611',0,'030-BLK',NULL,'BLACK\n',NULL,0,'0812',NULL,'8 1/2',NULL,32000,35200,32000,35200,0,1,0,0,'030-blk',0,1,0,'',0,NULL,'BA21102',0,0,0,'',0,'',NULL),('03000000000000036262','03000000000000006673',NULL,0,'0300000362628',0,'030-BLK',NULL,'BLACK\n',NULL,0,'0900',NULL,'9',NULL,32000,35200,32000,35200,0,1,0,0,'030-blk',0,1,0,'',0,NULL,'BA21102',0,0,0,'',0,'',NULL),('03000000000000036263','03000000000000006673',NULL,0,'0300000362635',0,'030-BLK',NULL,'BLACK\n',NULL,0,'0912',NULL,'9 1/2',NULL,32000,35200,32000,35200,0,1,0,0,'030-blk',0,1,0,'',0,NULL,'BA21102',0,0,0,'',0,'',NULL),('03000000000000036269','03000000000000006613',NULL,0,'0300000362697',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'L',NULL,'L',NULL,70000,77000,70000,77000,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000036270','03000000000000006613',NULL,0,'0300000362703',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'M',NULL,'M',NULL,70000,77000,70000,77000,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000036271','03000000000000006613',NULL,0,'0300000362710',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'S',NULL,'S',NULL,70000,77000,70000,77000,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000036272','03000000000000006613',NULL,0,'0300000362727',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'XL',NULL,'XL',NULL,70000,77000,70000,77000,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21130',0,0,0,'',0,'',NULL),('03000000000000036279','03000000000000006606',NULL,0,'0300000362796',0,'154-SGGRN',NULL,'SAGE GREEN',NULL,0,'XS',NULL,'XS',NULL,82000,90200,82000,90200,0,1,0,0,'154-sggrn',0,0,0,'',0,NULL,'MJ21109',0,0,0,'',0,'',NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_products_draft` */

DROP TABLE IF EXISTS `tbl_products_draft`;

CREATE TABLE `tbl_products_draft` (
  `product_draft_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `product_name` varchar(200) DEFAULT NULL,
  `product_category_id` int(11) DEFAULT NULL,
  `product_itemcode` varchar(10) DEFAULT '',
  `product_itemname` varchar(200) DEFAULT '',
  `product_detail_short` longtext,
  `product_detail` longtext,
  `price_no_tax` float DEFAULT NULL,
  `price` float DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `hot_product` int(4) DEFAULT '0',
  `brand_id` int(11) DEFAULT NULL,
  `brand_name` varchar(100) DEFAULT NULL,
  `goods_code` varchar(50) NOT NULL DEFAULT '',
  `brand_code` varchar(50) DEFAULT NULL,
  `sale_off_product` tinyint(4) DEFAULT '0',
  `set_id` int(11) DEFAULT NULL,
  `product_setmain` tinyint(4) DEFAULT NULL,
  `product_image` varchar(255) DEFAULT NULL,
  `product_image_details` text,
  `new_product` tinyint(4) DEFAULT NULL,
  `product_saleoff_price_no_tax` float DEFAULT NULL,
  `product_saleoff_price` float DEFAULT NULL,
  `product_status` tinyint(4) DEFAULT NULL,
  `MaterialID` bigint(11) DEFAULT NULL,
  `MaterialName` varchar(50) DEFAULT NULL,
  `hashtag_name` varchar(500) DEFAULT NULL,
  `slug_url` text,
  `link_img_instagram` text,
  `caption_instagram` text,
  `hashtag_instagram` text,
  `prihtml` text,
  `PurchasePriceNoTax` float DEFAULT NULL,
  `PurchasePriceYesTax` float DEFAULT NULL,
  `SaleOffPurchasePriceNoTax` float DEFAULT NULL,
  `SaleOffPurchasePriceYesTax` float DEFAULT NULL,
  `product_id` bigint(20) NOT NULL,
  `SeqNo_old` varchar(20) DEFAULT NULL,
  `RSeqNo_old` varchar(20) DEFAULT NULL,
  `product_name_old` varchar(200) DEFAULT NULL,
  `product_category_id_old` int(11) DEFAULT NULL,
  `product_itemcode_old` varchar(10) DEFAULT '',
  `product_itemname_old` varchar(200) DEFAULT '',
  `product_detail_short_old` longtext,
  `product_detail_old` longtext,
  `price_no_tax_old` float DEFAULT NULL,
  `price_old` float DEFAULT NULL,
  `create_date_old` varchar(40) DEFAULT NULL,
  `hot_product_old` int(4) DEFAULT '0',
  `brand_id_old` int(11) DEFAULT NULL,
  `brand_name_old` varchar(100) DEFAULT NULL,
  `goods_code_old` varchar(50) NOT NULL DEFAULT '',
  `brand_code_old` varchar(50) DEFAULT NULL,
  `sale_off_product_old` tinyint(4) DEFAULT '0',
  `set_id_old` int(11) DEFAULT NULL,
  `product_setmain_old` tinyint(4) DEFAULT NULL,
  `product_image_old` varchar(255) DEFAULT NULL,
  `product_image_details_old` text,
  `new_product_old` tinyint(4) DEFAULT NULL,
  `product_saleoff_price_no_tax_old` float DEFAULT NULL,
  `product_saleoff_price_old` float DEFAULT NULL,
  `product_status_old` tinyint(4) DEFAULT NULL,
  `MaterialID_old` bigint(11) DEFAULT NULL,
  `MaterialName_old` varchar(50) DEFAULT NULL,
  `hashtag_name_old` varchar(500) DEFAULT NULL,
  `slug_url_old` text,
  `link_img_instagram_old` text,
  `caption_instagram_old` text,
  `hashtag_instagram_old` text,
  `prihtml_old` text,
  `PurchasePriceNoTax_old` float DEFAULT NULL,
  `PurchasePriceYesTax_old` float DEFAULT NULL,
  `SaleOffPurchasePriceNoTax_old` float DEFAULT NULL,
  `SaleOffPurchasePriceYesTax_old` float DEFAULT NULL,
  `apply_date` timestamp NULL DEFAULT NULL,
  `is_updated` int(11) DEFAULT '0',
  `is_sold_out` tinyint(4) DEFAULT NULL,
  `prihtml1` text,
  `product_name_display` varchar(255) DEFAULT NULL,
  `is_show_option` tinyint(2) DEFAULT NULL,
  `is_recommended_item` tinyint(2) DEFAULT NULL,
  `is_pre_order` tinyint(1) DEFAULT NULL,
  `country_code` varchar(10) DEFAULT NULL,
  `country_name` varchar(20) DEFAULT NULL,
  `is_fixed_all_option_name` tinyint(1) DEFAULT NULL,
  `is_color_show` tinyint(1) DEFAULT NULL,
  `is_contact` tinyint(1) DEFAULT NULL,
  `is_comming_soon` tinyint(1) DEFAULT NULL,
  `season_code` varchar(20) DEFAULT NULL,
  `season_name` text,
  `memo` text,
  `active_date` datetime DEFAULT NULL,
  `option_title` text,
  `product_recovery` text,
  `search_keywords` text,
  `is_sold_out_old` tinyint(4) DEFAULT NULL,
  `prihtml1_old` text,
  `product_name_display_old` varchar(255) DEFAULT NULL,
  `is_show_option_old` tinyint(2) DEFAULT NULL,
  `is_recommended_item_old` tinyint(2) DEFAULT NULL,
  `is_pre_order_old` tinyint(1) DEFAULT NULL,
  `country_code_old` varchar(10) DEFAULT NULL,
  `country_name_old` varchar(20) DEFAULT NULL,
  `is_fixed_all_option_name_old` tinyint(1) DEFAULT NULL,
  `is_color_show_old` tinyint(1) DEFAULT NULL,
  `is_contact_old` tinyint(1) DEFAULT NULL,
  `is_comming_soon_old` tinyint(1) DEFAULT NULL,
  `season_code_old` varchar(20) DEFAULT NULL,
  `season_name_old` text,
  `memo_old` text,
  `active_date_old` datetime DEFAULT NULL,
  `option_title_old` text,
  `product_recovery_old` text,
  `search_keywords_old` text,
  `is_free_ship` tinyint(1) DEFAULT '0',
  `free_ship_from` datetime DEFAULT NULL,
  `free_ship_to` datetime DEFAULT NULL,
  `is_free_ship_old` tinyint(1) DEFAULT '0',
  `free_ship_from_old` datetime DEFAULT NULL,
  `free_ship_to_old` datetime DEFAULT NULL,
  `delivery_days_add` datetime DEFAULT NULL,
  `delivery_days_add_old` datetime DEFAULT NULL,
  `is_coupon_unavailable` tinyint(1) DEFAULT '0',
  `is_coupon_unavailable_old` tinyint(1) DEFAULT '0',
  `gender_men` tinyint(1) DEFAULT '0',
  `gender_men_old` tinyint(1) DEFAULT '0',
  `gender_women` tinyint(1) DEFAULT '0',
  `gender_women_old` tinyint(1) DEFAULT '0',
  `gender_unisex` tinyint(1) DEFAULT '0',
  `gender_unisex_old` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`product_draft_id`),
  KEY `product_draft_id` (`product_draft_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_draft` */

LOCK TABLES `tbl_products_draft` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_draft_details` */

DROP TABLE IF EXISTS `tbl_products_draft_details`;

CREATE TABLE `tbl_products_draft_details` (
  `SeqNo` varchar(20) NOT NULL DEFAULT '',
  `RSeqNo` varchar(20) DEFAULT '',
  `product_draft_id` bigint(20) NOT NULL,
  `product_id` bigint(20) NOT NULL,
  `product_detail_id` int(11) DEFAULT NULL,
  `products_draft_detail_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `barcode` varchar(20) DEFAULT NULL,
  `color_id` int(11) NOT NULL,
  `color_code` varchar(10) DEFAULT '',
  `color_display` text,
  `color_name` text NOT NULL,
  `size_id` int(11) NOT NULL,
  `size_code` varchar(10) DEFAULT '',
  `size_display` text,
  `size_name` text NOT NULL,
  `product_detail_price_no_tax` float DEFAULT NULL,
  `product_detail_price` float NOT NULL,
  `product_detail_saleoff_price_no_tax` float DEFAULT NULL,
  `product_detail_saleoff_price` float DEFAULT NULL,
  `product_detail_status` tinyint(4) DEFAULT '0',
  `product_detail_top` tinyint(4) DEFAULT '0',
  `product_detail_order` int(11) DEFAULT NULL,
  `num_rank` bigint(20) DEFAULT '0',
  `color_slug_url` text,
  `order_status` int(4) DEFAULT NULL,
  `is_main_color` tinyint(1) DEFAULT NULL,
  `barcode_old` varchar(20) DEFAULT NULL,
  `color_id_old` int(11) NOT NULL,
  `color_code_old` varchar(10) DEFAULT '',
  `color_display_old` text,
  `color_name_old` text NOT NULL,
  `size_id_old` int(11) NOT NULL,
  `size_code_old` varchar(10) DEFAULT '',
  `size_display_old` text,
  `size_name_old` text NOT NULL,
  `product_detail_price_no_tax_old` float DEFAULT NULL,
  `product_detail_price_old` float NOT NULL,
  `product_detail_saleoff_price_no_tax_old` float DEFAULT NULL,
  `product_detail_saleoff_price_old` float DEFAULT NULL,
  `product_detail_status_old` tinyint(4) DEFAULT '0',
  `product_detail_top_old` tinyint(4) DEFAULT '0',
  `product_detail_order_old` int(11) DEFAULT NULL,
  `num_rank_old` bigint(20) DEFAULT '0',
  `color_slug_url_old` text,
  `order_status_old` int(4) DEFAULT NULL,
  `is_main_color_old` tinyint(1) DEFAULT NULL,
  `product_detail_price2` float DEFAULT '0',
  `product_detail_saleoff_price2` float DEFAULT '0',
  `product_detail_price2_old` float DEFAULT '0',
  `product_detail_saleoff_price2_old` float DEFAULT '0',
  PRIMARY KEY (`products_draft_detail_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_draft_details` */

LOCK TABLES `tbl_products_draft_details` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_draft_shop` */

DROP TABLE IF EXISTS `tbl_products_draft_shop`;

CREATE TABLE `tbl_products_draft_shop` (
  `product_shop_id` int(20) NOT NULL AUTO_INCREMENT,
  `product_goods_code` varchar(20) DEFAULT NULL,
  `shop_SeqNo` varchar(20) DEFAULT NULL COMMENT 'Luu shop code, luoi ko sua ten truong',
  `product_draft_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`product_shop_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_draft_shop` */

LOCK TABLES `tbl_products_draft_shop` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_draft_size_guide` */

DROP TABLE IF EXISTS `tbl_products_draft_size_guide`;

CREATE TABLE `tbl_products_draft_size_guide` (
  `SeqNo` bigint(20) NOT NULL AUTO_INCREMENT,
  `goodscode` varchar(20) DEFAULT NULL,
  `category_guide_id` bigint(11) DEFAULT NULL,
  `category_guide_name` varchar(250) DEFAULT NULL,
  `size_list` text,
  `index_list` text,
  `SeqNo_old` bigint(20) NOT NULL DEFAULT '0',
  `goodscode_old` varchar(20) DEFAULT NULL,
  `category_guide_id_old` bigint(11) DEFAULT NULL,
  `category_guide_name_old` varchar(250) DEFAULT NULL,
  `size_list_old` text,
  `index_list_old` text,
  `product_draft_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_draft_size_guide` */

LOCK TABLES `tbl_products_draft_size_guide` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_group` */

DROP TABLE IF EXISTS `tbl_products_group`;

CREATE TABLE `tbl_products_group` (
  `product_group_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_group_code` varchar(50) CHARACTER SET utf8 NOT NULL,
  `list_product_goodscode` varchar(10000) DEFAULT NULL,
  PRIMARY KEY (`product_group_code`),
  KEY `product_group_id` (`product_group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_products_group` */

LOCK TABLES `tbl_products_group` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_group_item` */

DROP TABLE IF EXISTS `tbl_products_group_item`;

CREATE TABLE `tbl_products_group_item` (
  `product_group_item_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_group_code` varchar(50) NOT NULL,
  `product_barcode` varchar(20) DEFAULT NULL,
  `product_goods_code` varchar(50) DEFAULT NULL,
  `product_name_display` varchar(255) DEFAULT NULL,
  `product_name` varchar(200) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT '',
  `size_display` text,
  `size_name` text,
  PRIMARY KEY (`product_group_item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_products_group_item` */

LOCK TABLES `tbl_products_group_item` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_group_item_related` */

DROP TABLE IF EXISTS `tbl_products_group_item_related`;

CREATE TABLE `tbl_products_group_item_related` (
  `product_group_item_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_group_code` varchar(50) NOT NULL,
  `product_barcode` varchar(20) DEFAULT NULL,
  `product_goods_code` varchar(50) DEFAULT NULL,
  `product_name_display` varchar(255) DEFAULT NULL,
  `product_name` varchar(200) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT '',
  `size_display` text,
  `size_name` text,
  PRIMARY KEY (`product_group_item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_products_group_item_related` */

LOCK TABLES `tbl_products_group_item_related` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_group_related` */

DROP TABLE IF EXISTS `tbl_products_group_related`;

CREATE TABLE `tbl_products_group_related` (
  `product_group_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_group_code` varchar(50) CHARACTER SET utf8 NOT NULL,
  `list_product_goodscode` varchar(10000) DEFAULT NULL,
  PRIMARY KEY (`product_group_code`),
  KEY `product_group_id` (`product_group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_products_group_related` */

LOCK TABLES `tbl_products_group_related` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_hashtag` */

DROP TABLE IF EXISTS `tbl_products_hashtag`;

CREATE TABLE `tbl_products_hashtag` (
  `hashtag_id` bigint(3) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `hashtag_code` varchar(200) DEFAULT NULL,
  `hashtag_title` varchar(500) DEFAULT NULL,
  `hashtag_title_en` varchar(500) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `status` int(4) DEFAULT '1',
  `start_date` datetime DEFAULT NULL,
  `end_date` datetime DEFAULT NULL,
  `unlimited` int(4) DEFAULT '1',
  `banner` varchar(200) DEFAULT NULL,
  `keyword` text,
  `note` varchar(500) DEFAULT NULL,
  `prihtml` text,
  `slug` varchar(500) DEFAULT NULL,
  `url` varchar(500) DEFAULT NULL,
  `is_show_menu` tinyint(1) DEFAULT NULL,
  `category_group_id_str` varchar(500) DEFAULT NULL,
  `group_category_code` varchar(200) DEFAULT NULL,
  `show_order` int(11) DEFAULT NULL,
  `is_members_only` tinyint(1) DEFAULT '0',
  `is_show_link_destination` tinyint(1) DEFAULT '0',
  `link_destination` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`hashtag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_hashtag` */

LOCK TABLES `tbl_products_hashtag` WRITE;

insert  into `tbl_products_hashtag`(`hashtag_id`,`hashtag_code`,`hashtag_title`,`hashtag_title_en`,`create_date`,`modified_date`,`status`,`start_date`,`end_date`,`unlimited`,`banner`,`keyword`,`note`,`prihtml`,`slug`,`url`,`is_show_menu`,`category_group_id_str`,`group_category_code`,`show_order`,`is_members_only`,`is_show_link_destination`,`link_destination`) values (001,'001','TYPE D-1 / PATCH POCKET MODIFY','','2021-09-29','2021-12-22',1,'2021-09-29 00:00:00','2021-09-29 00:00:00',1,'banner_hashtag_1.jpg','MJ21103','','<div class=\"richtext font-size--sm line-height--4 wd--font-size--m wd--line-height--4 \">\r\n<p>The U.S Army D-1 mechanic jacket was issued during the same period as the B-6 flight jacket. It was designed for grounds crew often working in harsh weather conditions, however, because of it\'s relatively simple and less bulky design, it was soon adopted by pilots who would wear it over their A-2 flight jackets for layering warmth whilst still retaining ease of movement.</p>\r\n<p>Staying true to it\'s vintage counterpart, the body of the Type D-1 is made from a 10mm mouton with leather details that are made up of pigment and anline finished horsehide and aniline finished cowhide creating a unique contrast of four different colour leathers.</p>\r\n<p>In order to stay true to our vintage sample, leather trimmings of the seams and the front zipper are hand-painted in seal brown, the same colour as the body. The silhouette is also slightly shorter length and a more relaxed fit, proving why it was a more favoured jacket by pilots.</p>\r\n</div>\r\n<a href=\"https://realmccoys.strawberry-jam.vn/products/mj21103/051-slbrn\">SHOP NOW</a>','type-d1-patch-pocket-modify','TYPE D-1 / PATCH POCKET MODIFY',1,'-1999;',NULL,0,0,0,'');

UNLOCK TABLES;

/*Table structure for table `tbl_products_hashtag_detail` */

DROP TABLE IF EXISTS `tbl_products_hashtag_detail`;

CREATE TABLE `tbl_products_hashtag_detail` (
  `hashtag_detail_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `hashtag_id` bigint(20) DEFAULT NULL,
  `goods_code` varchar(50) DEFAULT NULL,
  `color_code` varchar(10) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`hashtag_detail_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_hashtag_detail` */

LOCK TABLES `tbl_products_hashtag_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_material` */

DROP TABLE IF EXISTS `tbl_products_material`;

CREATE TABLE `tbl_products_material` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `products_material_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `product_id` bigint(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `MaterialCode` varchar(10) DEFAULT NULL,
  `MaterialName` varchar(50) DEFAULT NULL,
  `Area` varchar(50) DEFAULT NULL,
  `MixedRate` double DEFAULT NULL,
  `Fabric` varchar(80) DEFAULT NULL,
  `Area2` varchar(20) DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `color_code` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `products_material_id` (`products_material_id`),
  KEY `color_code` (`color_code`),
  KEY `MaterialCode` (`MaterialCode`),
  KEY `product_id` (`product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_material` */

LOCK TABLES `tbl_products_material` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_options` */

DROP TABLE IF EXISTS `tbl_products_options`;

CREATE TABLE `tbl_products_options` (
  `SeqNo` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `option_name` varchar(255) DEFAULT NULL,
  `option_value` varchar(255) DEFAULT NULL,
  `option_index` tinyint(3) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  PRIMARY KEY (`SeqNo`)
) ENGINE=MyISAM AUTO_INCREMENT=1583 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_options` */

LOCK TABLES `tbl_products_options` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_products_shop` */

DROP TABLE IF EXISTS `tbl_products_shop`;

CREATE TABLE `tbl_products_shop` (
  `product_shop_id` int(20) NOT NULL AUTO_INCREMENT,
  `product_goods_code` varchar(20) DEFAULT NULL,
  `shop_SeqNo` varchar(20) DEFAULT NULL COMMENT 'Luu shop code, luoi ko sua ten truong',
  PRIMARY KEY (`product_shop_id`)
) ENGINE=InnoDB AUTO_INCREMENT=14647 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_shop` */

LOCK TABLES `tbl_products_shop` WRITE;

insert  into `tbl_products_shop`(`product_shop_id`,`product_goods_code`,`shop_SeqNo`) values (13637,'BA14101',''),(13842,'BA17001',''),(14122,'MJ21130',''),(14171,'BA21102',''),(14432,'MJ21109',''),(14434,'MC21104','');

UNLOCK TABLES;

/*Table structure for table `tbl_products_size_guide` */

DROP TABLE IF EXISTS `tbl_products_size_guide`;

CREATE TABLE `tbl_products_size_guide` (
  `SeqNo` bigint(20) NOT NULL AUTO_INCREMENT,
  `goodscode` varchar(20) DEFAULT NULL,
  `category_guide_id` bigint(11) DEFAULT NULL,
  `category_guide_name` varchar(250) DEFAULT NULL,
  `size_list` text,
  `index_list` text,
  `rseqno` varchar(20) DEFAULT NULL,
  `size_list_full` text,
  PRIMARY KEY (`SeqNo`),
  KEY `category_guide_name` (`category_guide_name`),
  KEY `goodscode` (`goodscode`)
) ENGINE=InnoDB AUTO_INCREMENT=10917 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_products_size_guide` */

LOCK TABLES `tbl_products_size_guide` WRITE;

insert  into `tbl_products_size_guide`(`SeqNo`,`goodscode`,`category_guide_id`,`category_guide_name`,`size_list`,`index_list`,`rseqno`,`size_list_full`) values (1677,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1678,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1679,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1680,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1681,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1682,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1683,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1684,'MJ21109',0,'','XSɵдSɵдMɵдLɵдXLɵ','XSɵ0дSɵ0дMɵ0дLɵ0дXLɵ0','MJ21109',''),(1733,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1734,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1735,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1736,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1737,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1738,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1739,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1740,'MJ21130',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MJ21130',''),(1861,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1862,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1863,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1864,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1865,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1866,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1867,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(1868,'MC21104',0,'','SɵдMɵдLɵдXLɵ','Sɵ0дMɵ0дLɵ0дXLɵ0','MC21104',''),(2245,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2246,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2247,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2248,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2249,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2250,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2251,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(2252,'BA21102',0,'','0812ɵд0900ɵд0912ɵ','0812ɵ0д0900ɵ0д0912ɵ0','BA21102',''),(4325,'BA17001',0,'縦×横','Fɵ19.5cm x 10cm','Fɵ0','BA17001',''),(5365,'BA14101',0,'縦幅','Mɵ24дLɵ23.5','Mɵ0дLɵ0','BA14101','M|M|23.5|0дL|L|24|0'),(5366,'BA14101',0,'横幅','Mɵ23дLɵ20','Mɵ0дLɵ0','BA14101','M|M|20|0дL|L|23|0');

UNLOCK TABLES;

/*Table structure for table `tbl_rec_list` */

DROP TABLE IF EXISTS `tbl_rec_list`;

CREATE TABLE `tbl_rec_list` (
  `rec_session_time` varchar(255) NOT NULL,
  `rec_list_product` text,
  `rec_create_date` date DEFAULT NULL,
  PRIMARY KEY (`rec_session_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_rec_list` */

LOCK TABLES `tbl_rec_list` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_recent_view` */

DROP TABLE IF EXISTS `tbl_recent_view`;

CREATE TABLE `tbl_recent_view` (
  `recent_id` int(11) NOT NULL AUTO_INCREMENT,
  `goods_code` varchar(50) DEFAULT NULL,
  `color_code` varchar(50) DEFAULT NULL,
  `ip` varchar(50) DEFAULT NULL,
  `recent_time` datetime DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`recent_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_recent_view` */

LOCK TABLES `tbl_recent_view` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_rental` */

DROP TABLE IF EXISTS `tbl_rental`;

CREATE TABLE `tbl_rental` (
  `order_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_code` varchar(255) DEFAULT NULL,
  `total_amount` float NOT NULL DEFAULT '0',
  `total_quantity` bigint(11) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `shipped_on` varchar(10) DEFAULT NULL,
  `status` int(11) NOT NULL DEFAULT '1',
  `comments` text,
  `customer_code` varchar(20) DEFAULT NULL,
  `customer_name` varchar(255) DEFAULT NULL,
  `customer_namekana` varchar(255) DEFAULT NULL,
  `customer_phone` varchar(20) DEFAULT NULL,
  `shipping_address` varchar(255) DEFAULT NULL,
  `customer_email` varchar(50) DEFAULT NULL,
  `shipping_postcode` varchar(50) DEFAULT NULL,
  `shipping_state` varchar(50) DEFAULT NULL,
  `shipping_city` varchar(50) DEFAULT NULL,
  `shipping_address2` varchar(500) DEFAULT NULL,
  `shipping_customer_name` varchar(200) DEFAULT NULL,
  `shipping_customer_namekana` varchar(200) DEFAULT NULL,
  `shipping_phone` varchar(50) DEFAULT NULL,
  `payment_method` varchar(50) DEFAULT NULL,
  `usepoint` bigint(11) DEFAULT NULL,
  `shipping_date` varchar(50) DEFAULT NULL,
  `shipping_time` varchar(50) DEFAULT NULL,
  `shipping_cost` float DEFAULT '0',
  `shipping_fee` float DEFAULT '0',
  `delivery_id` varchar(50) DEFAULT NULL,
  `delivery_company` varchar(255) DEFAULT NULL,
  `invoice_code` varchar(50) DEFAULT NULL,
  `point_target` int(11) DEFAULT '0',
  `point_issueunit` int(11) DEFAULT '0',
  `point_issuemoney` float DEFAULT '0',
  `point_issuepercent` float DEFAULT '0',
  `point_limit` float DEFAULT '0',
  `point_useunit` int(11) DEFAULT '0',
  `point_userate` float DEFAULT '0',
  `point_useunitpoint` int(11) DEFAULT '0',
  `point_useunitmoney` float DEFAULT '0',
  `point_usetarget` int(11) DEFAULT '0',
  `thistimeissuedpoint` int(11) DEFAULT '0',
  `thistimeusepoint` int(11) DEFAULT '0',
  `thistimeusemoney` float DEFAULT '0',
  `couponmoney` float DEFAULT '0',
  `usecoupon` tinyint(1) DEFAULT '0',
  `issuepointbycoupon` tinyint(1) DEFAULT '0',
  `couponinfo` text,
  `pay_id` text,
  `shipping_range_info` text,
  `konbini_no` int(5) DEFAULT '0',
  `konbini_payment_status` int(2) DEFAULT NULL,
  `konbini_code` varchar(255) DEFAULT NULL,
  `konbini_billing_amount` float DEFAULT '0',
  `konbini_expected_pay_date` date DEFAULT NULL,
  `is_customer_withdraw` tinyint(1) DEFAULT NULL,
  `customer_withdraw_date` datetime DEFAULT NULL,
  `other_pay_money` float DEFAULT '0',
  `debt_money_pay_date` varchar(50) DEFAULT NULL,
  `preorder` int(2) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `ismail4d` int(2) DEFAULT '0' COMMENT 'check send mail khi import tu 4D',
  `islogin` int(2) DEFAULT '0' COMMENT '2018-11-16 xem KH mua login hay guest',
  `np_transaction_id` varchar(255) DEFAULT NULL,
  `np_credit_result` varchar(255) DEFAULT NULL,
  `comments2` text,
  `ec_prefix` varchar(5) DEFAULT NULL,
  `chkToSales` tinyint(4) DEFAULT '0',
  `thistimerate` int(11) DEFAULT '1',
  `is_send_email` int(2) DEFAULT '0' COMMENT 'check send email to customer review',
  `rcustomerrank` varchar(255) DEFAULT NULL,
  `rankrate` float DEFAULT '0',
  `shipping_days` int(11) DEFAULT NULL,
  `section_code` varchar(20) DEFAULT NULL,
  `section_name` varchar(40) DEFAULT NULL,
  `lending_date` date DEFAULT NULL,
  `return_date` date DEFAULT NULL,
  `ExtendedDays` int(11) DEFAULT NULL,
  `ExtensionFee` float DEFAULT NULL,
  `BasicRentalFee` float DEFAULT NULL,
  `DeliveryFee` varchar(20) DEFAULT NULL,
  `ContracConditionCode` varchar(20) DEFAULT NULL,
  `ContracConditionName` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`order_id`),
  KEY `customer_code` (`customer_code`),
  KEY `order_code` (`order_code`),
  KEY `status` (`status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_rental` */

LOCK TABLES `tbl_rental` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_rental_detail` */

DROP TABLE IF EXISTS `tbl_rental_detail`;

CREATE TABLE `tbl_rental_detail` (
  `order_detail_id` int(11) NOT NULL AUTO_INCREMENT,
  `order_id` int(11) NOT NULL,
  `order_code` varchar(255) NOT NULL,
  `product_id` int(11) NOT NULL,
  `attributes` varchar(1000) NOT NULL,
  `goods_code` varchar(20) DEFAULT NULL,
  `barcode` varchar(50) DEFAULT NULL,
  `product_name` varchar(100) NOT NULL,
  `quantity` int(11) NOT NULL,
  `sale_price` bigint(20) DEFAULT NULL,
  `unit_cost` float NOT NULL DEFAULT '0',
  `color_id` int(11) DEFAULT NULL,
  `color_code` varchar(10) DEFAULT NULL,
  `color_name` varchar(255) DEFAULT NULL,
  `size_id` int(11) DEFAULT NULL,
  `size_code` varchar(10) DEFAULT NULL,
  `size_name` varchar(255) DEFAULT NULL,
  `product_image` varchar(255) DEFAULT NULL,
  `Seqno` varchar(15) NOT NULL,
  `is_cancel` tinyint(4) DEFAULT '0',
  `product_detail_price` float DEFAULT '0',
  `product_detail_saleoff_price` float DEFAULT '0',
  `product_detail_price_no_tax` float DEFAULT '0',
  `product_detail_saleoff_price_no_tax` float DEFAULT '0',
  `sale_off_product` int(11) DEFAULT '0',
  `is_pre_order` int(2) DEFAULT '0',
  `type_no` int(4) DEFAULT '1',
  `is_gift` tinyint(4) DEFAULT '0',
  `timestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `doublepoint` float DEFAULT NULL,
  `item_code` varchar(20) DEFAULT NULL,
  `item_name` varchar(40) DEFAULT NULL,
  `brand_code` varchar(20) DEFAULT NULL,
  `brand_name` varchar(40) DEFAULT NULL,
  `ExtensionFee` float DEFAULT NULL,
  `ExtendedDays` int(11) DEFAULT NULL,
  `onsale` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`Seqno`),
  KEY `idx_order_detail_order_id` (`order_code`),
  KEY `color_code` (`color_code`),
  KEY `color_id` (`color_id`),
  KEY `goods_code` (`goods_code`),
  KEY `order_id` (`order_id`),
  KEY `product_id` (`product_id`),
  KEY `size_code` (`size_code`),
  KEY `size_id` (`size_id`),
  KEY `order_detail_id` (`order_detail_id`),
  KEY `product_name` (`product_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_rental_detail` */

LOCK TABLES `tbl_rental_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_review` */

DROP TABLE IF EXISTS `tbl_review`;

CREATE TABLE `tbl_review` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `goods_code` varchar(20) DEFAULT NULL,
  `color_code` varchar(20) DEFAULT NULL,
  `color_name` varchar(250) DEFAULT NULL,
  `size_name` varchar(250) DEFAULT NULL,
  `order_detail_id` int(11) DEFAULT NULL,
  `order_id` int(11) DEFAULT NULL,
  `customer_code` varchar(20) DEFAULT NULL,
  `customer_name` varchar(250) DEFAULT NULL,
  `review_comment` text,
  `review_numstar` int(2) DEFAULT '0',
  `review_images` text,
  `status` int(2) DEFAULT '0' COMMENT '0: draf  1: saved',
  `ispublic` int(2) DEFAULT '0' COMMENT '1: approve 2: hide 0: not approve 3: deleted',
  `date_create` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `date_modifire` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `product_name` varchar(250) DEFAULT NULL,
  `product_id` bigint(20) DEFAULT NULL,
  `product_image` varchar(250) DEFAULT NULL,
  `order_code` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_review` */

LOCK TABLES `tbl_review` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_review_setting` */

DROP TABLE IF EXISTS `tbl_review_setting`;

CREATE TABLE `tbl_review_setting` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `show_front` int(11) DEFAULT NULL,
  `allow_attack` int(11) DEFAULT NULL,
  `send_email_to_admin` int(11) DEFAULT NULL,
  `allow_public` int(11) DEFAULT NULL,
  `number_star_public` int(11) DEFAULT NULL,
  `send_email_to_customer` int(11) DEFAULT NULL,
  `send_email_date` int(11) DEFAULT NULL,
  `send_email_time` varchar(10) DEFAULT NULL,
  `send_email_title` varchar(250) DEFAULT NULL,
  `send_email_body` text,
  `admin_email` varchar(250) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_review_setting` */

LOCK TABLES `tbl_review_setting` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_search_key` */

DROP TABLE IF EXISTS `tbl_search_key`;

CREATE TABLE `tbl_search_key` (
  `search_key_id` int(11) NOT NULL AUTO_INCREMENT,
  `search_key` varchar(1000) DEFAULT NULL,
  `related_keys` text,
  `related_keys_search` text,
  `goods_codes` text,
  `lineno` int(11) DEFAULT '0',
  PRIMARY KEY (`search_key_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_search_key` */

LOCK TABLES `tbl_search_key` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_search_key_detail` */

DROP TABLE IF EXISTS `tbl_search_key_detail`;

CREATE TABLE `tbl_search_key_detail` (
  `search_key_item_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `search_key_id` int(11) DEFAULT NULL,
  `product_category_ids` text,
  `item_codes` text,
  `item_code_search` text,
  `brand_ids` text,
  `brand_codes` text,
  `brand_code_search` text,
  PRIMARY KEY (`search_key_item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_search_key_detail` */

LOCK TABLES `tbl_search_key_detail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_searchprice` */

DROP TABLE IF EXISTS `tbl_searchprice`;

CREATE TABLE `tbl_searchprice` (
  `searchprice_id` int(11) NOT NULL AUTO_INCREMENT,
  `price_start` int(11) DEFAULT NULL,
  `end_price` int(11) DEFAULT NULL,
  KEY `searchprice_id` (`searchprice_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_searchprice` */

LOCK TABLES `tbl_searchprice` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale` */

DROP TABLE IF EXISTS `tbl_secret_sale`;

CREATE TABLE `tbl_secret_sale` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_code` varchar(50) DEFAULT NULL,
  `secret_sale_name` varchar(255) DEFAULT NULL,
  `secret_sale_password` varchar(50) DEFAULT NULL,
  `secret_sale_allow_guest` tinyint(1) DEFAULT '1',
  `secret_sale_ignore_point` tinyint(1) DEFAULT '0',
  `secret_sale_banner` text,
  `secret_sale_kind` tinyint(1) DEFAULT '1',
  `saleoff_all_product` float DEFAULT NULL,
  `secret_sale_status` tinyint(1) DEFAULT NULL,
  `date_from_all` timestamp NULL DEFAULT NULL,
  `date_to_all` timestamp NULL DEFAULT NULL,
  `saleoff_rank_a` float DEFAULT NULL,
  `date_from_rank_a` timestamp NULL DEFAULT NULL,
  `date_to_rank_a` timestamp NULL DEFAULT NULL,
  `saleoff_rank_b` float DEFAULT NULL,
  `date_from_rank_b` timestamp NULL DEFAULT NULL,
  `date_to_rank_b` timestamp NULL DEFAULT NULL,
  `saleoff_rank_c` float DEFAULT NULL,
  `date_from_rank_c` timestamp NULL DEFAULT NULL,
  `date_to_rank_c` timestamp NULL DEFAULT NULL,
  `saleoff_rank_d` float DEFAULT NULL,
  `date_from_rank_d` timestamp NULL DEFAULT NULL,
  `date_to_rank_d` timestamp NULL DEFAULT NULL,
  `saleoff_rank_e` float DEFAULT NULL,
  `date_from_rank_e` timestamp NULL DEFAULT NULL,
  `date_to_rank_e` timestamp NULL DEFAULT NULL,
  `saleoff_kind` tinyint(1) DEFAULT '1',
  `secret_sale_header` text,
  `only_customer_allow` text,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `secret_stores` text,
  `use_customer_allow` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`secret_sale_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale` */

LOCK TABLES `tbl_secret_sale` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale_brand` */

DROP TABLE IF EXISTS `tbl_secret_sale_brand`;

CREATE TABLE `tbl_secret_sale_brand` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_brand_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_id` int(11) DEFAULT NULL,
  `brand_code` varchar(50) DEFAULT NULL,
  `saleoff_brand` float DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `brand_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`secret_sale_brand_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale_brand` */

LOCK TABLES `tbl_secret_sale_brand` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale_brand_product` */

DROP TABLE IF EXISTS `tbl_secret_sale_brand_product`;

CREATE TABLE `tbl_secret_sale_brand_product` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_brand_product_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_id` int(11) DEFAULT NULL,
  `brand_code` varchar(50) DEFAULT NULL,
  `goods_code` varchar(50) DEFAULT NULL,
  `saleoff_brand_product` float DEFAULT NULL,
  `brand_product_notsale` tinyint(1) DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `product_name` varchar(50) DEFAULT NULL,
  `product_price` float DEFAULT NULL,
  `product_price_after_sale` float DEFAULT NULL,
  PRIMARY KEY (`secret_sale_brand_product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale_brand_product` */

LOCK TABLES `tbl_secret_sale_brand_product` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale_item` */

DROP TABLE IF EXISTS `tbl_secret_sale_item`;

CREATE TABLE `tbl_secret_sale_item` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_item_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_id` int(11) DEFAULT NULL,
  `item_code` varchar(50) DEFAULT NULL,
  `saleoff_item` float DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `item_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`secret_sale_item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale_item` */

LOCK TABLES `tbl_secret_sale_item` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale_item_product` */

DROP TABLE IF EXISTS `tbl_secret_sale_item_product`;

CREATE TABLE `tbl_secret_sale_item_product` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_item_product_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_id` int(11) DEFAULT NULL,
  `item_code` varchar(50) DEFAULT NULL,
  `goods_code` varchar(50) DEFAULT NULL,
  `saleoff_item_product` float DEFAULT NULL,
  `item_product_notsale` tinyint(1) DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `product_name` varchar(50) DEFAULT NULL,
  `product_price` float DEFAULT NULL,
  `product_price_after_sale` float DEFAULT NULL,
  PRIMARY KEY (`secret_sale_item_product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale_item_product` */

LOCK TABLES `tbl_secret_sale_item_product` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_secret_sale_product` */

DROP TABLE IF EXISTS `tbl_secret_sale_product`;

CREATE TABLE `tbl_secret_sale_product` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `secret_sale_product_id` int(11) NOT NULL AUTO_INCREMENT,
  `secret_sale_id` int(11) DEFAULT NULL,
  `goods_code` varchar(50) DEFAULT NULL,
  `saleoff_product` float DEFAULT NULL,
  `TimeStampSync` varchar(255) DEFAULT NULL,
  `product_name` varchar(50) DEFAULT NULL,
  `product_price` float DEFAULT NULL,
  `product_price_after_sale` float DEFAULT NULL,
  PRIMARY KEY (`secret_sale_product_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_secret_sale_product` */

LOCK TABLES `tbl_secret_sale_product` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_sendemail` */

DROP TABLE IF EXISTS `tbl_sendemail`;

CREATE TABLE `tbl_sendemail` (
  `email_id` int(11) NOT NULL AUTO_INCREMENT,
  `email_title` varchar(200) DEFAULT NULL,
  `email_senddate` date DEFAULT NULL,
  `email_sendtime` time DEFAULT NULL,
  `email_objects` varchar(200) DEFAULT NULL,
  `email_contents` text,
  `email_status` tinyint(4) DEFAULT NULL,
  `email_send_immediately` tinyint(4) DEFAULT NULL,
  `create_date` varchar(20) DEFAULT NULL,
  `modified_date` varchar(20) DEFAULT NULL,
  `list_email` longtext,
  `number_emailunformat` bigint(20) DEFAULT NULL,
  `list_items` text,
  `list_gender` text,
  `list_chronology` text,
  `list_customer` text,
  PRIMARY KEY (`email_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sendemail` */

LOCK TABLES `tbl_sendemail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_sendemail_queue` */

DROP TABLE IF EXISTS `tbl_sendemail_queue`;

CREATE TABLE `tbl_sendemail_queue` (
  `queue_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `email` varchar(200) DEFAULT NULL,
  `send_email_id` varchar(40) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `queue_status` int(4) DEFAULT '0',
  `is_mail_bcc_sent` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`queue_id`),
  KEY `status` (`queue_status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sendemail_queue` */

LOCK TABLES `tbl_sendemail_queue` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_sendemail_sever` */

DROP TABLE IF EXISTS `tbl_sendemail_sever`;

CREATE TABLE `tbl_sendemail_sever` (
  `server_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `numbersended` int(11) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `status` int(4) DEFAULT '0',
  PRIMARY KEY (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sendemail_sever` */

LOCK TABLES `tbl_sendemail_sever` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_set_of_products` */

DROP TABLE IF EXISTS `tbl_set_of_products`;

CREATE TABLE `tbl_set_of_products` (
  `set_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `set_code` varchar(255) DEFAULT NULL,
  `set_name` varchar(255) DEFAULT NULL,
  `set_image` varchar(255) DEFAULT NULL,
  `set_content` text,
  `set_content_for_search` text,
  `set_status` tinyint(1) DEFAULT NULL,
  `set_year_id` bigint(11) DEFAULT NULL,
  `set_season_id` bigint(11) DEFAULT NULL,
  `set_url` varchar(255) DEFAULT NULL,
  `set_type` tinyint(1) DEFAULT NULL COMMENT '1: lookbook; 2: styling',
  `create_date` datetime DEFAULT NULL,
  `set_description` text,
  `set_content_for_front` text,
  `set_image_2` varchar(255) DEFAULT NULL,
  `set_order` int(11) DEFAULT NULL,
  `gender` text,
  `age` text,
  `keyword` text,
  `barcode_related` text,
  `set_short_description` text,
  `set_multiple_image` text,
  `brand_related` text,
  `item_related` text,
  `show_in_top` tinyint(1) DEFAULT '0',
  `show_in_brand_page` tinyint(1) DEFAULT '0',
  `brand_code` varchar(50) DEFAULT NULL,
  `set_staff_id` bigint(20) DEFAULT NULL,
  `set_staff_code` varchar(13) DEFAULT NULL,
  PRIMARY KEY (`set_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_set_of_products` */

LOCK TABLES `tbl_set_of_products` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_set_of_products_other` */

DROP TABLE IF EXISTS `tbl_set_of_products_other`;

CREATE TABLE `tbl_set_of_products_other` (
  `set_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `set_code` varchar(255) DEFAULT NULL,
  `set_name` varchar(255) DEFAULT NULL,
  `set_image` varchar(255) DEFAULT NULL,
  `set_content` text,
  `set_content_for_search` text,
  `set_status` tinyint(1) DEFAULT NULL,
  `set_year_id` bigint(11) DEFAULT NULL,
  `set_season_id` bigint(11) DEFAULT NULL,
  `set_url` varchar(255) DEFAULT NULL,
  `set_type` tinyint(1) DEFAULT NULL COMMENT '1: lookbook; 2: styling',
  `create_date` datetime DEFAULT NULL,
  `set_description` text,
  `set_content_for_front` text,
  `set_image_2` varchar(255) DEFAULT NULL,
  `set_order` int(11) DEFAULT NULL,
  `gender` text,
  `age` text,
  `keyword` text,
  `barcode_related` text,
  PRIMARY KEY (`set_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_set_of_products_other` */

LOCK TABLES `tbl_set_of_products_other` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_set_product` */

DROP TABLE IF EXISTS `tbl_set_product`;

CREATE TABLE `tbl_set_product` (
  `set_id` int(11) NOT NULL AUTO_INCREMENT,
  `set_name` text,
  `set_image` text,
  `createdate` datetime DEFAULT NULL,
  `set_status` int(2) DEFAULT NULL,
  PRIMARY KEY (`set_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_set_product` */

LOCK TABLES `tbl_set_product` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_set_seasons` */

DROP TABLE IF EXISTS `tbl_set_seasons`;

CREATE TABLE `tbl_set_seasons` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `set_season_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `set_season_code` varchar(255) DEFAULT NULL,
  `set_season_name` varchar(255) DEFAULT NULL,
  `set_season_name_display` varchar(255) DEFAULT NULL,
  `set_season_order` bigint(1) DEFAULT NULL,
  `set_season_status` tinyint(1) DEFAULT NULL,
  `set_season_is_menu` tinyint(1) DEFAULT NULL,
  `create_date` varchar(100) DEFAULT NULL,
  `modified_date` varchar(100) DEFAULT NULL,
  `set_season_url` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`set_season_id`),
  KEY `key-seqno-season` (`SeqNo`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_set_seasons` */

LOCK TABLES `tbl_set_seasons` WRITE;

insert  into `tbl_set_seasons`(`SeqNo`,`RSeqNo`,`set_season_id`,`set_season_code`,`set_season_name`,`set_season_name_display`,`set_season_order`,`set_season_status`,`set_season_is_menu`,`create_date`,`modified_date`,`set_season_url`) values ('','',1,'2021 S/S','2021 S/S','2007 S/S',0,1,1,NULL,NULL,'0'),('03000000000000000037','',2,'22SSSE','2022 S/S SEASONAL','2022 S/S SEASONAL',NULL,NULL,NULL,'2021/11/13','2021/11/13',NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_set_years` */

DROP TABLE IF EXISTS `tbl_set_years`;

CREATE TABLE `tbl_set_years` (
  `set_year_SeqNo` varchar(20) DEFAULT NULL,
  `set_year_RSeqNo` varchar(20) DEFAULT NULL,
  `set_year_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `set_year_code` varchar(255) DEFAULT NULL,
  `set_year_name` varchar(255) DEFAULT NULL,
  `set_year_order` tinyint(1) DEFAULT NULL,
  `set_year_status` tinyint(1) DEFAULT NULL,
  `set_year_is_menu` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`set_year_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_set_years` */

LOCK TABLES `tbl_set_years` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_settings` */

DROP TABLE IF EXISTS `tbl_settings`;

CREATE TABLE `tbl_settings` (
  `setting_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `shoppingguide` text,
  `privacypolicy` text,
  `terms` text,
  `displaybased` text,
  `linkfacebook` varchar(200) DEFAULT NULL,
  `linktwitter` varchar(200) DEFAULT NULL,
  `linkinstagram` varchar(200) DEFAULT NULL,
  `linkpinterest` varchar(200) DEFAULT NULL,
  `shopcode_stock` varchar(200) DEFAULT NULL,
  `issuepointbycoupon` tinyint(1) DEFAULT '1',
  `usecoupon` tinyint(1) DEFAULT '1',
  `contentcoupon` text,
  `is_shop_stock` tinyint(1) DEFAULT '0',
  `shop_list` text,
  `shop_info_shop_name` varchar(255) DEFAULT NULL,
  `shop_info_key_word` text,
  `shop_info_description` text,
  `shop_info_logo` text,
  `website_image` text,
  `file_title` varchar(200) DEFAULT NULL,
  `file_link` varchar(500) DEFAULT NULL,
  `shop_default` text,
  `is_show_shop_from_4d` tinyint(1) DEFAULT NULL,
  `banktransfer_homepage` text,
  `banktransfer_sentmail` text,
  `trackingURL` varchar(500) DEFAULT NULL,
  `site_default` varchar(20) DEFAULT NULL,
  `header_search_conversion_tag` text,
  `body_search_conversion_tag` text,
  `actual_num` int(11) DEFAULT '0',
  `is_actual_num` tinyint(1) DEFAULT '0',
  `is_actual_zero` tinyint(1) DEFAULT '1',
  `is_image_server` tinyint(1) DEFAULT '0',
  `image_url` text,
  `is_show_product_material` tinyint(1) DEFAULT NULL,
  `is_capture` tinyint(1) DEFAULT '0',
  `parcel_display` tinyint(4) DEFAULT '0',
  `parcel_normal_name` varchar(255) DEFAULT NULL,
  `parcel_normal_desc` text,
  `parcel_service_name` varchar(255) DEFAULT NULL,
  `parcel_service_cost` float DEFAULT '0',
  `parcel_service_desc` text,
  `parcel_goods_desc` text,
  `resizeimage_product` float DEFAULT '0',
  `resizeimage_medium` float DEFAULT '0',
  `resizeimage_medium2` float DEFAULT '0',
  `resizeimage_thumbnail` float DEFAULT '0',
  `wrapping_display` tinyint(4) DEFAULT '0',
  `wrapping_desc` text,
  `is_image_load_all` tinyint(1) DEFAULT NULL,
  `max_stock` int(11) DEFAULT '0',
  `IsRegisterAddPoint` tinyint(4) DEFAULT '0',
  `InitialPoint` float DEFAULT '0',
  `product_free_ship` longtext,
  `date_expired` varchar(40) DEFAULT NULL,
  `is_date_expired` tinyint(1) DEFAULT NULL,
  `rank_initial` varchar(20) DEFAULT NULL,
  `stock_string` text,
  `IsUsePointSettings` tinyint(1) DEFAULT '1',
  `IsUsePointRate` tinyint(1) DEFAULT '0',
  `ContracConditionCode` varchar(20) DEFAULT NULL,
  `zoomimage` int(1) DEFAULT '0',
  `is_reward_point` tinyint(1) NOT NULL DEFAULT '0',
  `point_plus_type` tinyint(1) NOT NULL DEFAULT '0',
  `fixed_point_plus` int(11) NOT NULL DEFAULT '0',
  `point_percent_plus` int(11) NOT NULL DEFAULT '0',
  `is_time_delivery` tinyint(1) DEFAULT '0',
  `time_delivery` time DEFAULT NULL,
  `is_deliverySS` tinyint(1) DEFAULT '0',
  `home_info_logo` text,
  `is_retailcustomer_rewrite_4d` tinyint(1) DEFAULT '0',
  `product_code` text,
  `product_name` text,
  `product_code_search` text,
  `styling_color` varchar(20) DEFAULT '#dce4ec',
  `is_stock` tinyint(1) DEFAULT '0',
  `rad_email` tinyint(1) DEFAULT '0',
  `email_customer` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`setting_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_settings` */

LOCK TABLES `tbl_settings` WRITE;

insert  into `tbl_settings`(`setting_id`,`create_date`,`modified_date`,`shoppingguide`,`privacypolicy`,`terms`,`displaybased`,`linkfacebook`,`linktwitter`,`linkinstagram`,`linkpinterest`,`shopcode_stock`,`issuepointbycoupon`,`usecoupon`,`contentcoupon`,`is_shop_stock`,`shop_list`,`shop_info_shop_name`,`shop_info_key_word`,`shop_info_description`,`shop_info_logo`,`website_image`,`file_title`,`file_link`,`shop_default`,`is_show_shop_from_4d`,`banktransfer_homepage`,`banktransfer_sentmail`,`trackingURL`,`site_default`,`header_search_conversion_tag`,`body_search_conversion_tag`,`actual_num`,`is_actual_num`,`is_actual_zero`,`is_image_server`,`image_url`,`is_show_product_material`,`is_capture`,`parcel_display`,`parcel_normal_name`,`parcel_normal_desc`,`parcel_service_name`,`parcel_service_cost`,`parcel_service_desc`,`parcel_goods_desc`,`resizeimage_product`,`resizeimage_medium`,`resizeimage_medium2`,`resizeimage_thumbnail`,`wrapping_display`,`wrapping_desc`,`is_image_load_all`,`max_stock`,`IsRegisterAddPoint`,`InitialPoint`,`product_free_ship`,`date_expired`,`is_date_expired`,`rank_initial`,`stock_string`,`IsUsePointSettings`,`IsUsePointRate`,`ContracConditionCode`,`zoomimage`,`is_reward_point`,`point_plus_type`,`fixed_point_plus`,`point_percent_plus`,`is_time_delivery`,`time_delivery`,`is_deliverySS`,`home_info_logo`,`is_retailcustomer_rewrite_4d`,`product_code`,`product_name`,`product_code_search`,`styling_color`,`is_stock`,`rad_email`,`email_customer`) values (00000000000000000003,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,1,NULL,0,'000,001,002,004,901,902,005,006','The Real McCoy\'s ONLINE STORE','','','shop_logo_1234.png','website_image_1234.png',NULL,NULL,'000',NULL,NULL,NULL,NULL,'01','','',0,0,0,0,NULL,NULL,0,0,NULL,NULL,NULL,0,NULL,NULL,0,0,0,0,0,NULL,NULL,3,0,0,NULL,NULL,NULL,NULL,'1д4д〇д3д3д2д2д1д1дその他をд×д0д以下を数字で表示',1,0,'',0,0,0,0,0,0,NULL,0,'',0,NULL,NULL,NULL,'#dce4ec',NULL,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_settings_googleshopping` */

DROP TABLE IF EXISTS `tbl_settings_googleshopping`;

CREATE TABLE `tbl_settings_googleshopping` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `googles_time` time DEFAULT NULL,
  `googles_all_product` tinyint(1) DEFAULT '0',
  `googles_chk_barcode` tinyint(1) DEFAULT '0',
  `date_run` date DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_settings_googleshopping` */

LOCK TABLES `tbl_settings_googleshopping` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_settings_mail` */

DROP TABLE IF EXISTS `tbl_settings_mail`;

CREATE TABLE `tbl_settings_mail` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `mail_auto_confirm_address` varchar(255) DEFAULT NULL,
  `mail_auto_confirm_pass` varchar(255) DEFAULT NULL,
  `smtp_send_mail` varchar(255) DEFAULT NULL,
  `port_send_mail` varchar(255) DEFAULT NULL,
  `mail_test_address` varchar(255) DEFAULT NULL,
  `mail_back_up_confirmation` varchar(255) DEFAULT NULL,
  `smtp_secure` varchar(100) DEFAULT NULL,
  `chk_send_display_name` tinyint(4) DEFAULT '0',
  `send_display_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_settings_mail` */

LOCK TABLES `tbl_settings_mail` WRITE;

insert  into `tbl_settings_mail`(`id`,`mail_auto_confirm_address`,`mail_auto_confirm_pass`,`smtp_send_mail`,`port_send_mail`,`mail_test_address`,`mail_back_up_confirmation`,`smtp_secure`,`chk_send_display_name`,`send_display_name`) values (1,'store.ecsite@gmail.com','hanoi2018','smtp.gmail.com','465','kimcuchtk3@gmail.com','','1',0,'');

UNLOCK TABLES;

/*Table structure for table `tbl_shape2` */

DROP TABLE IF EXISTS `tbl_shape2`;

CREATE TABLE `tbl_shape2` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `ShapeCode2` varchar(10) NOT NULL,
  `ShapeName2` varchar(40) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `status_` tinyint(1) DEFAULT '1',
  `order_` int(10) DEFAULT '0',
  `display_name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`SeqNo`),
  KEY `SeqNo` (`SeqNo`),
  KEY `ShapeCode2` (`ShapeCode2`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_shape2` */

LOCK TABLES `tbl_shape2` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_shop` */

DROP TABLE IF EXISTS `tbl_shop`;

CREATE TABLE `tbl_shop` (
  `shop_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `shop_code` varchar(10) NOT NULL,
  `shop_name` varchar(200) DEFAULT NULL,
  `shop_namekana` varchar(200) DEFAULT NULL,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `shop_status` int(4) DEFAULT '0' COMMENT '1: DISPLAY; 0: HIDE',
  `shop_able` int(4) DEFAULT '0',
  `display_name` varchar(200) DEFAULT NULL,
  `postcode` varchar(50) DEFAULT NULL,
  `state` varchar(50) DEFAULT NULL,
  `city` varchar(50) DEFAULT NULL,
  `address` varchar(500) DEFAULT NULL,
  `address2` varchar(500) DEFAULT NULL,
  `shop_site` varchar(500) DEFAULT NULL,
  `tel` varchar(50) DEFAULT NULL,
  `fax` varchar(50) DEFAULT NULL,
  `note` text,
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `shop_logo` varchar(255) DEFAULT NULL,
  `shop_header` text,
  `shop_show_order` tinyint(2) DEFAULT NULL,
  `facebook` varchar(500) DEFAULT NULL,
  `instagram` varchar(500) DEFAULT NULL,
  `twitter` varchar(500) DEFAULT NULL,
  `start_time` varchar(100) DEFAULT NULL,
  `end_time` varchar(100) DEFAULT NULL,
  `map` text,
  PRIMARY KEY (`shop_code`),
  KEY `shop_id` (`shop_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_shop` */

LOCK TABLES `tbl_shop` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_shop_contact_info` */

DROP TABLE IF EXISTS `tbl_shop_contact_info`;

CREATE TABLE `tbl_shop_contact_info` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `contact_address` text,
  `contact_google_map` text,
  `contact_email` varchar(255) DEFAULT NULL,
  `contact_tel` varchar(50) DEFAULT NULL,
  `contact_fax` varchar(50) DEFAULT NULL,
  `contact_facebook` text,
  `contact_instagram` text,
  `contact_twitter` text,
  `contact_pinterest` text,
  `contact_line` text,
  `contact_postcode` varchar(100) DEFAULT NULL,
  `contact_shopname` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_shop_contact_info` */

LOCK TABLES `tbl_shop_contact_info` WRITE;

insert  into `tbl_shop_contact_info`(`id`,`contact_address`,`contact_google_map`,`contact_email`,`contact_tel`,`contact_fax`,`contact_facebook`,`contact_instagram`,`contact_twitter`,`contact_pinterest`,`contact_line`,`contact_postcode`,`contact_shopname`) values (1,'兵庫県神戸市中央区小野浜町8-51','','mail@realmccoys.co.jp','078-333-0066','078-333-0091','','https://www.instagram.com/therealmccoys.jp/','','','','651-0082','株式会社　ザ・リアルマッコイズ・インターナショナル');

UNLOCK TABLES;

/*Table structure for table `tbl_shop_list` */

DROP TABLE IF EXISTS `tbl_shop_list`;

CREATE TABLE `tbl_shop_list` (
  `shop_id` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_shop_list` */

LOCK TABLES `tbl_shop_list` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_size` */

DROP TABLE IF EXISTS `tbl_size`;

CREATE TABLE `tbl_size` (
  `SeqNo` varchar(20) DEFAULT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `TimeStamp` varchar(20) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `size_code` varchar(20) NOT NULL,
  `size_name` varchar(255) NOT NULL,
  `size_status` tinyint(4) DEFAULT NULL,
  `size_memo` text,
  `size_display` text,
  `size_description` varchar(500) DEFAULT NULL,
  `display_order` double DEFAULT NULL,
  `size_abbre` varchar(20) DEFAULT NULL,
  `foot_size` varchar(20) NOT NULL,
  PRIMARY KEY (`size_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_size` */

LOCK TABLES `tbl_size` WRITE;

insert  into `tbl_size`(`SeqNo`,`RSeqNo`,`TimeStamp`,`create_date`,`size_code`,`size_name`,`size_status`,`size_memo`,`size_display`,`size_description`,`display_order`,`size_abbre`,`foot_size`) values ('001D09FF122C49','','2013-07-23 0017:55:1','2008-08-29 00:00:00','-','-',NULL,NULL,NULL,NULL,1000000,'',''),('001D09FF122C28','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0612','6 1/2',NULL,NULL,NULL,NULL,650,'',''),('001D09FF122C30','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0700','7',NULL,NULL,NULL,NULL,700,'',''),('001D09FF122C31','','2018-12-10 0013:43:4','2008-05-30 00:00:00','0712','7 1/2',NULL,NULL,NULL,NULL,750,'',''),('001D09FF122C40','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0714','7 1/4',NULL,NULL,NULL,NULL,725,'',''),('001D09FF122C41','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0734','7 3/4',NULL,NULL,NULL,NULL,775,'',''),('001D09FF122C38','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0738','7 3/8',NULL,NULL,NULL,NULL,737,'',''),('001D09FF122C39','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0758','7 5/8',NULL,NULL,NULL,NULL,762,'',''),('001D09FF122C32','','2018-12-10 0013:43:4','2008-05-30 00:00:00','0800','8',NULL,NULL,NULL,NULL,800,'',''),('001D09FF122C33','','2018-12-10 0013:43:4','2008-05-30 00:00:00','0812','8 1/2',NULL,NULL,NULL,NULL,850,'',''),('001D09FF122C34','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0900','9',NULL,NULL,NULL,NULL,900,'',''),('001D09FF122C35','','2013-07-23 0017:55:1','2008-05-30 00:00:00','0912','9 1/2',NULL,NULL,NULL,NULL,950,'',''),('01700000000000000081','','2017-01-13 0015:16:2','2017-01-13 00:00:00','1','1',NULL,NULL,NULL,NULL,1,'',''),('001D09FF122C36','','2013-07-23 0017:55:1','2008-05-30 00:00:00','1000','10',NULL,NULL,NULL,NULL,1000,'',''),('001D09FF122C37','','2013-07-23 0017:55:1','2008-05-30 00:00:00','1012','10 1/2',NULL,NULL,NULL,NULL,1050,'',''),('00300000000000000072','','2013-12-10 0018:20:1','2013-12-10 00:00:00','11','11',NULL,NULL,NULL,NULL,1100,'',''),('0019B9FE115A54','','2013-07-23 0017:55:1','2010-01-14 00:00:00','1100','11',NULL,NULL,NULL,NULL,1100,'',''),('001D09FF122C21','','2017-01-13 0015:15:1','2008-05-30 00:00:00','14','14',NULL,NULL,NULL,NULL,1400,'',''),('001D09FF122C22','','2017-01-13 0015:15:1','2008-05-30 00:00:00','15','15',NULL,NULL,NULL,NULL,1500,'',''),('001D09FF122C23','','2017-01-13 0015:15:1','2008-05-30 00:00:00','16','16',NULL,NULL,NULL,NULL,1600,'',''),('001D09FF122C24','','2017-01-13 0015:15:2','2008-05-30 00:00:00','17','17',NULL,NULL,NULL,NULL,1700,'',''),('0019B9FE115A61','','2013-07-23 0017:55:1','2013-01-21 00:00:00','18','18',NULL,NULL,NULL,NULL,1800,'',''),('01700000000000000082','','2017-01-13 0015:16:2','2017-01-13 00:00:00','2','2',NULL,NULL,NULL,NULL,2,'',''),('001D09FF122C4','','2013-07-23 0017:55:1','2008-05-30 00:00:00','27','27',NULL,NULL,NULL,NULL,2700,'',''),('001D09FF122C5','','2013-07-23 0017:55:1','2008-05-30 00:00:00','28','28',NULL,NULL,NULL,NULL,2800,'',''),('001D09FF122C6','','2013-07-23 0017:55:1','2008-05-30 00:00:00','29','29',NULL,NULL,NULL,NULL,2900,'',''),('01700000000000000083','','2017-01-13 0015:16:2','2017-01-13 00:00:00','3','3',NULL,NULL,NULL,NULL,3,'',''),('001D09FF122C7','','2013-07-23 0017:55:1','2008-05-30 00:00:00','30','30',NULL,NULL,NULL,NULL,3000,'',''),('001D09FF122C8','','2013-07-23 0017:55:1','2008-05-30 00:00:00','31','31',NULL,NULL,NULL,NULL,3100,'',''),('001D09FF122C9','','2013-07-23 0017:55:1','2008-05-30 00:00:00','32','32',NULL,NULL,NULL,NULL,3200,'',''),('001D09FF122C44','','2013-07-23 0017:55:1','2008-06-03 00:00:00','33','33',NULL,NULL,NULL,NULL,3300,'',''),('001D09FF122C10','','2013-07-23 0017:55:1','2008-05-30 00:00:00','34','34',NULL,NULL,NULL,NULL,3400,'',''),('001D09FF122C11','','2013-08-01 0010:58:5','2008-05-30 00:00:00','36','36',NULL,NULL,NULL,NULL,3600,'',''),('001D09FF122C12','','2013-07-23 0017:55:1','2008-05-30 00:00:00','38','38',NULL,NULL,NULL,NULL,3800,'',''),('0019B9FE115A64','','2013-07-23 0017:55:1','2013-06-27 00:00:00','4','4',NULL,NULL,NULL,NULL,1000000,'',''),('001D09FF122C13','','2013-07-23 0017:55:1','2008-05-30 00:00:00','40','40',NULL,NULL,NULL,NULL,4000,'',''),('001D09FF122C14','','2013-07-23 0017:55:1','2008-05-30 00:00:00','42','42',NULL,NULL,NULL,NULL,4200,'',''),('001D09FF122C15','','2013-07-23 0017:55:1','2008-05-30 00:00:00','44','44',NULL,NULL,NULL,NULL,4400,'',''),('0019B9FE115A59','','2013-07-23 0017:55:1','2012-01-10 00:00:00','46','46',NULL,NULL,NULL,NULL,4600,'',''),('0019B9FE115A65','','2013-07-23 0017:55:1','2013-06-27 00:00:00','5','5',NULL,NULL,NULL,NULL,1000000,'',''),('0019B9FE115A60','','','2013-01-08 00:00:00','55','55',NULL,NULL,NULL,NULL,5500,'2013-07-23 0017:55:1',''),('001D09FF122C42','','2013-07-23 0017:55:1','2008-05-30 00:00:00','F','F',NULL,NULL,NULL,NULL,1,'',''),('001D09FF122C19','','2013-08-01 0010:58:4','2008-05-30 00:00:00','L','L',NULL,NULL,NULL,NULL,104,'',''),('001D09FF122C18','','2013-08-01 0010:58:4','2008-05-30 00:00:00','M','M',NULL,NULL,NULL,NULL,103,'',''),('001D09FF122C17','','2013-08-01 0010:58:3','2008-05-30 00:00:00','S','S',NULL,NULL,NULL,NULL,102,'',''),('001D09FF122C20','','2013-08-01 0010:58:4','2008-05-30 00:00:00','XL','XL',NULL,NULL,NULL,NULL,105,'',''),('001D09FF122C16','','2013-07-23 0017:55:1','2008-05-30 00:00:00','XS','XS',NULL,NULL,NULL,NULL,101,'',''),('0019B9FE115A62','','2013-07-23 0017:55:1','2013-05-22 00:00:00','XXL','XXL',NULL,NULL,NULL,NULL,106,'',''),('0019B9FE115A51','','2013-08-06 0014:15:0','2009-06-30 00:00:00','XXS','XXS',NULL,NULL,NULL,NULL,100,'','');

UNLOCK TABLES;

/*Table structure for table `tbl_size_chart` */

DROP TABLE IF EXISTS `tbl_size_chart`;

CREATE TABLE `tbl_size_chart` (
  `chart_id` int(2) NOT NULL AUTO_INCREMENT,
  `chart_size` double DEFAULT NULL,
  `size_code` text,
  `size_name` text,
  PRIMARY KEY (`chart_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_size_chart` */

LOCK TABLES `tbl_size_chart` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_staff` */

DROP TABLE IF EXISTS `tbl_staff`;

CREATE TABLE `tbl_staff` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` date DEFAULT NULL,
  `ModifiedDate` date DEFAULT NULL,
  `StaffCode` varchar(13) NOT NULL,
  `StaffName` varchar(40) DEFAULT NULL,
  `TimeStamp` varchar(255) DEFAULT NULL,
  `chkSection` tinyint(1) DEFAULT NULL,
  `order` int(10) DEFAULT NULL,
  `display_name` varchar(100) DEFAULT NULL,
  `status` int(1) DEFAULT NULL,
  `gender` varchar(50) DEFAULT NULL,
  `show_menu` tinyint(1) DEFAULT NULL,
  `staff_image` text,
  `staff_height` varchar(20) DEFAULT NULL,
  `shopcode` varchar(10) DEFAULT NULL,
  `shopname` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`StaffCode`),
  KEY `SeqNo` (`SeqNo`),
  KEY `StaffCode` (`StaffCode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_staff` */

LOCK TABLES `tbl_staff` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_static_page_drafts` */

DROP TABLE IF EXISTS `tbl_static_page_drafts`;

CREATE TABLE `tbl_static_page_drafts` (
  `static_page_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `static_page_code` varchar(225) DEFAULT NULL,
  `static_page_title` text,
  `static_page_content` text,
  `static_page_status` tinyint(2) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `link_preview` varchar(255) DEFAULT NULL,
  `for_customer` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`static_page_id`)
) ENGINE=InnoDB AUTO_INCREMENT=764 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_static_page_drafts` */

LOCK TABLES `tbl_static_page_drafts` WRITE;

insert  into `tbl_static_page_drafts`(`static_page_id`,`static_page_code`,`static_page_title`,`static_page_content`,`static_page_status`,`create_date`,`update_date`,`link_preview`,`for_customer`) values (24,'REGISTRATION_TERMS','Registration Terms','<p> </p>\r\n<p>ご利用規約(当サイトのご利用にあたって)</p>\r\n<p>この利用規約（以下，「本規約」といいます。）は，株式会社 ザ・リアルマッコイズ・インターナショナル（以下，「弊社」といいます。）がこのウェブサイト上で提供するサービス（以下，「本サービス」といいます。）の利用条件を定めるものです。登録ユーザーの皆さま（以下，「ユーザー」といいます。）には，本規約に従って，本サービスをご利用いただきます。</p>\r\n<p>第1条（適用）</p>\r\n<p>本規約は，ユーザーと弊社との間の本サービスの利用に関わる一切の関係に適用されるものとします。</p>\r\n<p>第2条（利用登録）</p>\r\n<p>登録希望者が弊社の定める方法によって利用登録を申請し，弊社がこれを承認することによって，利用登録が完了するものとします。<br /> 弊社は，利用登録の申請者に以下の事由があると判断した場合，利用登録の申請を承認しないことがあり，その理由については一切の開示義務を負わないものとします。<br /> （1）利用登録の申請に際して虚偽の事項を届け出た場合<br /> （2）本規約に違反したことがある者からの申請である場合<br /> （3）その他，弊社が利用登録を相当でないと判断した場合<br /> 会員登録は日本国内に住所を有する方に限るものとします。<br /> 本規約に基づく弊社と会員との間の利用契約は、登録が完了した日から当該会員の登録が取り消された日まで、弊社と当該会員との間で有効に存続するものとします。<br /> 会員登録者はご自分の年齢が20歳以上であること、あるいはご自分の年齢が20歳未満の場合には売買契約につき保護者の同意を得ていることを弊社に対して保証したものとみなされますのでご注意下さい。</p>\r\n<p>第3条（ユーザーIDおよびパスワードの管理）</p>\r\n<p>ユーザーは，自己の責任において，本サービスのユーザーIDおよびパスワードを管理するものとします。<br /> ユーザーは，いかなる場合にも，ユーザーIDおよびパスワードを第三者に譲渡または貸与することはできません。弊社は，ユーザーIDとパスワードの組み合わせが登録情報と一致してログインされた場合には，そのユーザーIDを登録しているユーザー自身による利用とみなします。</p>\r\n<p>第4条 （変更の届出）</p>\r\n<p>会員は、住所、氏名、電話番号、クレジットカード番号、その他弊社に届出ている事項に変更が生じた場合には、弊社が別途指示する方法により、すみやかに弊社に届出るものとします。</p>\r\n<p>第5条（本サービスの保守）</p>\r\n<p>弊社は，以下のいずれかの事由があると判断した場合，ユーザーに事前に通知することなく本サービスの全部または一部の提供を停止または中断することができるものとします。<br /> （1）本サービスにかかるコンピュータシステムの保守点検または更新を行う場合<br /> （2）地震，落雷，火災，停電または天災などの不可抗力により，本サービスの提供が困難となった場合<br /> （3）コンピュータまたは通信回線等が事故により停止した場合<br /> （4）その他，弊社が本サービスの提供が困難と判断した場合<br /> 弊社は，本サービスの提供の停止または中断により，ユーザーまたは第三者が被ったいかなる不利益または損害について，理由を問わず一切の責任を負わないものとします。</p>\r\n<p>第6条（利用制限および登録抹消）</p>\r\n<p>弊社は，以下の場合には，事前の通知なく，ユーザーに対して，本サービスの全部もしくは一部の利用を制限し，またはユーザーとしての登録を抹消することができるものとします。<br /> （1）本規約のいずれかの条項に違反した場合<br /> （2）登録事項に虚偽の事実があることが判明した場合<br /> （3）その他，弊社が本サービスの利用を適当でないと判断した場合<br /> 弊社は，本条に基づき当社が行った行為によりユーザーに生じた損害について，一切の責任を負いません。</p>\r\n<p>第7条（免責事項）</p>\r\n<p>弊社の債務不履行責任は，弊社の故意または重過失によらない場合には免責されるものとします。<br /> 弊社は，本サービスに関して，ユーザーと他のユーザーまたは第三者との間において生じた取引，連絡または紛争等について一切責任を負いません。</p>\r\n<p>第8条（サービス内容の変更等）</p>\r\n<p>弊社は，ユーザーに通知することなく，本サービスの内容を変更しまたは本サービスの提供を中止することができるものとし，これによってユーザーに生じた損害について一切の責任を負いません。</p>\r\n<p>第9条（利用規約の変更）</p>\r\n<p>弊社は，必要と判断した場合には，ユーザーに通知することなくいつでも本規約を変更することができるものとします。</p>\r\n<p>第10条（通知または連絡）</p>\r\n<p>ユーザーと弊社との間の通知または連絡は，弊社の定める方法によって行うものとします。</p>\r\n<p>第11条（権利義務の譲渡の禁止）</p>\r\n<p>ユーザーは，弊社の書面による事前の承諾なく，利用契約上の地位または本規約に基づく権利もしくは義務を第三者に譲渡し，または担保に供することはできません。</p>\r\n<p>第12条（準拠法・裁判管轄）</p>\r\n<p>本規約の解釈にあたっては，日本法を準拠法とします。<br /> 本サービスに関して紛争が生じた場合には，弊社の所在地を管轄する裁判所を専属的合意管轄とします。</p>',1,NULL,'2021-09-28 15:52:25','','cart'),(752,'REALMCCOYS_ABOUT','REALMCCOYS_ABOUT','<br /><br />\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-d2bbba46-7181-4e64-a27b-9d5f44b8f54e\"><img src=\"https://realmccoys.strawberry-jam.vn/source/aaaa.jpg\" width=\"447\" height=\"300\" caption=\"false\" /></div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\"><img src=\"https://realmccoys.strawberry-jam.vn/source/bbbb.jpg\" width=\"452\" height=\"300\" caption=\"false\" /></div>\r\n</div>\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div id=\"s-75a85ed9-676b-4ec5-836e-fa69e9929433\" class=\"shg-c  shg-align-left\">\r\n<div class=\"shogun-heading-component\">\r\n<h1><span>ABOUT</span></h1>\r\n</div>\r\n</div>\r\n<div id=\"s-0f3eb14e-bad9-43c8-9997-667d3d4da16d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p><span>The heart and soul of a handcrafted item is expressed in the finished product.</span><br /><br /><span>Constructed by Japan’s diligent and hardworking people, products that are ‘Made in Japan’ are praised for their high quality and beautiful design.</span><br /><br /><span>Although it may appear that the outdated features of vintage clothing have no significant use for us today, this is exactly what inspires and drives us forward as a brand.</span><br /><br /><span>American fashion dating from the 1940s and 1950s is our source of great inspiration, a young country unburdened by the restriction of traditional customs, was uninhibited, rational and innovative.</span><br /><br /><span>For a successful reproduction, these garments require the sensitive minds of the detail-oriented Japanese craftsmen on every procedure.</span><br /><br /><span>Quality may be hard to control when materials are custom produced and gathered from all over the globe.</span><br /><br /><span>Nevertheless, The Real McCoy’s have managed to reproduce products using the same methods and machinery from the past. All sewing and construction methods have been studied and mimicked for the purpose to achieve true authenticity. We Reproduce to celebrate the past but to also create the future.</span><br /><br /><span>It is Japan’s esteemed craftsmanship and expertise which makes such high-quality reproduction possible.</span></p>\r\n</div>\r\n</div>\r\n</div>',1,NULL,'2021-12-22 19:17:42',NULL,'REALMCCOYS'),(753,'measure_company','measure_company','<section id=\"measure\">\r\n<div class=\"container\">\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_1.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv43\">測定方法</h2>\r\n<div class=\"mt-2\">当社のウェブサイトの各製品には、「販売可能なアイテムのタグ」ボックスの下にある\r\n<p class=\"size_guide_btn\"><strong class=\"en\">VIEW SIZE GUIDE</strong></p>\r\nの表示アイコンをクリックすると、サイズガイドが表示されます。</div>\r\n</div>\r\n</div>\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_2.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv44\">アウター＆トップス</h2>\r\n<div class=\"mt-2\">\r\n<ol>\r\n<li><strong>胸</strong>製品は、背中、ピットからピットまで測定されます。</li>\r\n<li><strong>袖</strong>製品は肩の縫い目の上部から袖の端まで測定されます。*特に明記されていない限り。（例：ラグランスリーブ）</li>\r\n<li><strong>LENGTH</strong>商品は裾に背面の中心の上部から測定されます。</li>\r\n<li><strong>SHOULDER</strong>製品は、肩の縫い目に肩の縫い目から測定されます。</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_3.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv45\">ボトムス</h2>\r\n<div class=\"mt-2\">\r\n<ol>\r\n<li><strong>ウエスト</strong>製品のウエストバンドは端から端まで測定され、最終的なウエスト測定のために2倍（X2）になります。</li>\r\n<li><strong>RISE</strong>製品は、フロントライズの下部からフロントライズの上部まで測定されます。</li>\r\n<li><strong>股下</strong>製品は股下の上部から端まで測定されます。</li>\r\n<li><strong>HEM</strong>製品の脚部開口部の幅は、端から端まで測定されます。</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</section>',1,NULL,'2021-09-30 11:02:57',NULL,'REALMCCOYS'),(754,'DELIVERY_RETURNS','DELIVERY_RETURNS','<div class=\"shogun-root\" data-shogun-id=\"5e610bfbcddac9006997d6a2\" data-shogun-site-id=\"d1d3e0e2-331b-439c-8ae6-f3a1e800b2b3\" data-shogun-page-id=\"5e610bfbcddac9006997d6a2\" data-shogun-page-version-id=\"60dc6be5ddcbca00cec8df18\" data-shogun-platform-type=\"shopify\" data-shogun-variant-id=\"60dc6be5ddcbca00cec8e040\" data-region=\"main\">\r\n<div id=\"s-5cb1ec5f-c397-4a09-b7c1-398b9eb611f2\" class=\"shg-c file \">\r\n<div>\r\n<ul class=\"shogun-tabs shogun-modern\" role=\"tablist\" data-vthemes=\"{\" default=\"\" :=\"\" shogun-modern=\"\">\r\n<li class=\"shogun-tab shogun-tab-active\" id=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tab\" aria-controls=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" aria-selected=\"true\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> DELIVERY </span></div>\r\n<div class=\"shogun-tab-border\"></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tab\" aria-controls=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> RETURNS </span></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-24acc107-42db-4dc2-89a9-c651528bcd80\" role=\"tab\" aria-controls=\"panel-24acc107-42db-4dc2-89a9-c651528bcd80\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> TERMS </span></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" role=\"tab\" aria-controls=\"panel-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> GIFTS </span></div>\r\n</li>\r\n</ul>\r\n<div class=\"shogun-tabs-body shogun-modern\">\r\n<div class=\"shogun-tab-content shogun-tab-active\" id=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tabpanel\" aria-labelledby=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\">\r\n<div id=\"s-02f1594d-f8f3-4240-b963-003c4bf8f787\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 style=\"text-align: center;\">DELIVERY INFORMATION</h2>\r\n<p style=\"text-align: center;\"><br />Orders made before 1pm GMT Monday-Friday are shipped the same day</p>\r\n</div>\r\n</div>\r\n<div id=\"s-37fce8b5-cb21-4add-94f5-7cd22f58d62f\" class=\"shg-c  \">\r\n<div class=\"shogun-table-wrapper\">\r\n<table class=\"shogun-table\">\r\n<thead class=\"shogun-table-column-container\">\r\n<tr>\r\n<td class=\"shogun-table-column\">SERVICE</td>\r\n<td class=\"shogun-table-column\">PRICE</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-ab2a0c41-848c-4d68-9562-a7e4d07a6a45\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">UNITED KINGDOM - DPD NEXT DAY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-751ff72f-a236-415c-884b-16c36fada4b1\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£6.50</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0ebfff68-c99c-4161-b845-5dbae23db88b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL ECONOMY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-b93abbb4-4ccd-482e-8e90-e16f48a74800\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£15.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fe8bd9a5-f5e8-4e7b-a3e7-21a45d24428f\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-605f65bc-cd40-466b-840c-c74e6ed3a78b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-ba2b9768-4de0-42d9-854b-13a2bc819b58\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">INTERNATIONAL - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fed0f5c9-915c-4f91-8b5d-f990d95c09e3\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-64c8db9e-c004-470f-b21b-999b43f5ea78\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">RUSSIA - ROYAL MAIL</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-8c01bde0-f9b6-4cb2-805b-487676b042b2\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"s-85659df9-c4d3-4943-8dcd-d0da027d864b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br />Should there be a delay or issue with your delivery, please contact <span style=\"text-decoration: underline;\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com </a></span>for help in resolving the problem.</p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN UNION MINIMUM ORDER VALUE FROM 1ST JULY 2021</span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"><br />From 1st July 2021 the European Union have introduced new rules for collecting VAT on goods valued below €150. As a result of this we have introduced a minimum order value of £135 (excl. shipping) for any shipments to European Union countries. If you live in one of the 27 EU countries, please ensure your basket totals more than £135 in order to check out. <br /><br /></span></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN AND INTERNATIONAL CUSTOMERS<br /><br /></span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"> The Prices you see advertised on our website are <span style=\"text-decoration: underline;\">excluding VAT</span> this is sometimes referred to as the \'tax free\' price.</span></p>\r\n<p style=\"text-align: center;\">All our shipments are made \'duties unpaid\'. The taxes and duties applied to your order are decided by your country at the time of import. <span class=\"s6\">All</span><span class=\"s4\"> Customs and Import duties charges must be paid by the recipient of the parcel. <br />Due to Customs and Imports fees differing between country to country, we cannot tell you what you may be charged. </span></p>\r\n<p class=\"s3\" style=\"text-align: center;\"><span class=\"s4\">If you have any queries regarding customs &amp; duties on purch</span><span class=\"s4\">ases</span> <span class=\"s4\">from </span><a href=\"http://therealmccoys.com/\"><span class=\"s11\">therealmccoys.com</span></a><span class=\"s4\"> please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p style=\"text-align: center;\"><strong><br />REMOTE LOCATION</strong> <br /> <br />Please note, The Real McCoy\'s reserve the right to make adjustments to delivery and return costs in the event that your delivery address is deemed to be a \'Remote Location\' by the courier. We will contact you to discuss this before shipping your order or providing a return label.</p>\r\n<p class=\"s3\"></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tabpanel\" aria-labelledby=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\">\r\n<div id=\"s-5b279254-191f-4276-8e00-ccb6a2b68486\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 id=\"Deliveries\" style=\"line-height: normal; text-align: center;\"><span style=\"font-family: GT-Pressura-Bold; letter-spacing: 1px;\">RETURNS</span></h2>\r\n<p><br />To initiate your return please email us at service@therealmccoys.com. <br /> <br />Return labels and reimport documents take time to prepare, please expect to wait 1-2 business days in the UK and 2-3 business days Internationally for us to provide your return label. This time will not be considered part of the 14 day return window.</p>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14</span> <span class=\"s4\">days of receipt as long as the items </span><span class=\"s4\">are returned</span><span class=\"s4\"> to us in </span><span class=\"s4\">with </span><span class=\"s5\">original packaging</span><span class=\"s5\"> and </span><span class=\"s5\">all </span><span class=\"s5\">labels attached</span><span class=\"s5\">,</span><span class=\"s6\"> unused and in resalable condition. </span></p>\r\n<p class=\"s3\"><span class=\"s6\">We take our Resalable Condition very seriously, </span><span class=\"s6\">returns that do not meet the criteria above will not be refunded and returned to the recipient at their expense. </span></p>\r\n<p class=\"s3\"><span class=\"s4\">An adhesive label with our returns address marked will come supplied with your order.</span> <span class=\"s7\">You can choose to arrange your own shipping or contact us for a pre-paid return label at </span><span class=\"s8\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a> </span><span class=\"s7\">using DHL.</span> <span class=\"s4\">Return shipping costs must be paid by the customer. The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> offer free returns.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Please attach your name and order no. clearly inside your parcel</span> <span class=\"s4\">to help us make any refunds faster</span><span class=\"s4\">. </span><span class=\"s7\">Please note that all returns must be shipped back in same or similar size box which it arrived in to help with our Resalable Condition.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Once a return is received and accepted, a refund will then be processed.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you need advice or require assistance regarding returning an item please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\" style=\"letter-spacing: 2px;\">LEATHER JACKET RETURNS</span></h3>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> accept any returns on leather jackets due to any character differences of the hide. Please note that each leather has its own characteristics from its natural wildlife experience.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you have any queries regarding Leather Jacket Returns please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-24acc107-42db-4dc2-89a9-c651528bcd80\" role=\"tabpanel\" aria-labelledby=\"tab-24acc107-42db-4dc2-89a9-c651528bcd80\">\r\n<div id=\"s-ea7839ed-e2b2-4714-bc55-23fe4cb39ebe\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">The Real McCoy\'s (\"we\" and \"us\") is the operator of (</span><a href=\"https://therealmccoys.com/\"><span class=\"s14\">https://therealmccoys.com</span></a><span class=\"s10\">)</span><span class=\"s10\"><br /></span><span class=\"s10\">(\"Website\"). By placing an order through this </span><span class=\"s10\">Website</span><span class=\"s10\"> you will be agreeing to</span><span class=\"s10\"><br /></span><span class=\"s10\">the terms below. These are provided to ensure both parties are aware of and</span><span class=\"s10\"><br /></span><span class=\"s10\">agree upon this arrangement to mutually protect and set expectations on our</span><span class=\"s10\"><br /></span><span class=\"s10\">service.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">1. General</span><span class=\"s10\"><br /></span><span class=\"s10\">Subject to stock availability. We try to maintain accurate stock counts on our</span><span class=\"s10\"><br /></span><span class=\"s10\">website but from time-to-time there may be a stock discrepancy and we will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be able to fulfill all your items at time of purchase. In this instance, we will</span><span class=\"s10\"><br /></span><span class=\"s10\">fulfill the available products to you, and contact you about whether you would</span><span class=\"s10\"><br /></span><span class=\"s10\">prefer to await restocking of the backordered item or if you would prefer for us</span><span class=\"s10\"><br /></span><span class=\"s10\">to process a refund.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">2. Shipping Costs</span><span class=\"s10\"><br /></span><span class=\"s10\">Shipping costs are display on our Delivery &amp; Returns page. Payment for shipping will be collected with the purchase.</span><span class=\"s10\"><br /></span><span class=\"s10\">This price will be the final price for shipping cost to the customer. <br /></span><span class=\"s15\">Unless upon shipping, the destination is in remote-area which would then incur an additional fee to cover the costs of shipping before order is </span><span class=\"s15\">shipped. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3. Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">3.1 Return Due </span><span class=\"s10\">To</span><span class=\"s10\"> Change Of Mind</span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14 days of receipt as long as the items are returned to us in </span><span class=\"s4\">with </span><span class=\"s6\">original packaging</span><span class=\"s6\"> and l</span> <a name=\"_GoBack\"></a><span class=\"s6\">abels attached</span><span class=\"s6\">, unused and in resalable condition. </span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s5\">Returns that do not meet the criteria above (3.1) will not be refunded and returned to the recipient at their </span><span class=\"s5\">expense. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">Return shipping will be paid at the customers expense. </span><span class=\"s17\">Please attach your name and order no. clearly inside the parcel</span> <span class=\"s17\">for a faster</span><span class=\"s17\"> refund process.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once returns are received and accepted, </span><span class=\"s17\">a refund will then be processed</span><span class=\"s10\">. We will notify you once this has been completed through email.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">(The Real McCoy\'s) will refund the value of the goods returned but will </span><span class=\"s18\">NOT</span><span class=\"s10\"><br /></span><span class=\"s10\">refund the value of any shipping paid.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3.2 Warranty Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s will happily honor any valid warranty claims, provided a claim</span><span class=\"s10\"><br /></span><span class=\"s10\">is submitted within 14 days of receipt of items.</span><span class=\"s10\"><br /></span><span class=\"s10\">Customers will be required to pre-pay the return shipping, however we will</span><span class=\"s10\"><br /></span><span class=\"s10\">reimburse you upon successful warranty claim.</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon return receipt of items for warranty claim, you can expect The Real McCoy\'s</span><span class=\"s10\"><br /></span><span class=\"s10\">to process your warranty claim within 7 days.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once warranty claim is confirmed, you will receive the choice of:</span><span class=\"s10\"><br /></span><span class=\"s10\">(a) refund to your payment method</span><span class=\"s10\"><br /></span><span class=\"s10\">(b) a replacement item sent to you (if stock is available)</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4. Delivery Terms</span><span class=\"s10\"><br /></span><span class=\"s10\">4.1 Transit Time Domestically</span><span class=\"s10\"><br /></span><span class=\"s10\">In general, domestic shipments are in transit for 1 - 3 days</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.2 Transit time Internationally</span><span class=\"s10\"><br /></span><span class=\"s10\">Generally, orders shipped internationally are in transit for 2 - 5 days. This</span><span class=\"s10\"><br /></span><span class=\"s10\">varies depending on the courier selected.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">Orders placed before 13:00 BST will be dispatched the same day,</span><span class=\"s10\"><br /></span><span class=\"s10\">otherwise, within the next business day.</span><span class=\"s10\"><br /></span><span class=\"s10\">Our warehouse operates on Monday - Friday during standard business hours, except on national holidays </span><span class=\"s10\">at which time the warehouse will be closed. In these</span><span class=\"s10\"><br /></span><span class=\"s10\">instances, we take steps to ensure shipment delays will be kept to a minimum.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">For change of delivery address requests, we are able to change the address at</span><span class=\"s10\"><br /></span><span class=\"s10\">any time before the order has been dispatched.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.5 P.O. Box Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s is not currently able to ship to P.O. Boxes.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.6 Military Address Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">We are usually able to ship to military addresses. Please contact us by email at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s14\">service@therealmccoys.com</span></a><span class=\"s10\"> prior to placing your order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.7 Items Out </span><span class=\"s10\">Of</span><span class=\"s10\"> Stock</span><span class=\"s10\"><br /></span><span class=\"s10\">If an item is out of stock, we will cancel and refund the out-of-stock items and</span><span class=\"s10\"><br /></span><span class=\"s10\">dispatch the rest of the order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.8 Delivery Time Exceeded</span><span class=\"s10\"><br /></span><span class=\"s10\">If delivery time has exceeded the forecasted time, please contact us so that we</span><span class=\"s10\"><br /></span><span class=\"s10\">can </span><span class=\"s10\">conduct an investigation</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">5. Tracking Notifications</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon dispatch, customers will receive a tracking link from which they will be</span><span class=\"s10\"><br /></span><span class=\"s10\">able to follow the progress of their shipment based on the latest updates made</span><span class=\"s10\"><br /></span><span class=\"s10\">available by the shipping provider.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">6. Parcels Damaged </span><span class=\"s10\">In</span><span class=\"s10\"> Transit</span><span class=\"s10\"><br /></span><span class=\"s10\">If you find a parcel is damaged in-transit, if possible, please reject the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel from the courier and get in touch with our customer service. If the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel has been delivered without you being present, please contact customer</span><span class=\"s10\"><br /></span><span class=\"s10\">service with next steps.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7. Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">7.1 Sales Tax</span><span class=\"s10\"><br /></span><span class=\"s10\">Sales tax has already been applied to the price of the goods as displayed on the</span><span class=\"s10\"><br /></span><span class=\"s10\">website</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7.2 Import Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">Import duties and taxes for international shipments may be liable to be paid</span><span class=\"s10\"><br /></span><span class=\"s10\">upon arrival in destination country. This varies by country, and The Real</span><span class=\"s10\"><br /></span><span class=\"s10\">McCoy\'s encourage you to be aware of these potential costs before placing an</span><span class=\"s10\"><br /></span><span class=\"s10\">order with us.</span><span class=\"s10\"><br /></span><span class=\"s10\">If you refuse to </span><span class=\"s10\">to</span><span class=\"s10\"> pay duties and taxes upon arrival at your destination</span><span class=\"s10\"><br /></span><span class=\"s10\">country, the goods will be returned to The Real McCoy\'s at the customers</span><span class=\"s10\"><br /></span><span class=\"s10\">expense, and the customer will receive a refund for the value of goods paid,</span><span class=\"s10\"><br /></span><span class=\"s10\">minus the cost of the return shipping. The cost of the initial shipping will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be refunded.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">8. Cancellations</span><span class=\"s10\"><br /></span><span class=\"s10\">If you change your mind before you have received your order, we are able to</span><span class=\"s10\"><br /></span><span class=\"s10\">accept cancellations at any time before the order has been dispatched. If an</span><span class=\"s10\"><br /></span><span class=\"s10\">order has already been dispatched, please refer to our refund policy.<br /><br /></span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9. Insurance</span><span class=\"s10\"><br /></span><span class=\"s10\">Parcels are insured for loss and damage up to the value as stated by the</span><span class=\"s10\"><br /></span><span class=\"s10\">courier.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.1 Process for parcel damaged in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has completed</span><span class=\"s10\"><br /></span><span class=\"s10\">their investigation into the claim.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.2 Process for parcel lost in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has conducted an</span><span class=\"s10\"><br /></span><span class=\"s10\">investigation and deemed the parcel lost.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">10. Customer service</span><span class=\"s10\"><br /></span><span class=\"s10\">For all customer service enquiries, please submit an enquiry at</span><span class=\"s10\"><br /></span><a href=\"http://therealmccoys.com/contact\"><span class=\"s14\">therealmccoys.com/contact</span></a></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\"> </span></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" role=\"tabpanel\" aria-labelledby=\"tab-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\">\r\n<div id=\"s-8632626a-534e-4688-8d7a-8d2f937b5ee0\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br /> <br />THE REAL McCOY\'S use a combination of branded and unbranded packaging. If you require discreet packaging for your order please contact us prior to placing your order at <a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a>. <br /> <br />Once you have received a tracking number, the item has left us and we are unable to change the packaging used.</p>\r\n<p style=\"text-align: center;\">All orders are shipped with a packing slip that details the billing customer and shipping customer. This packing list contains information about each product in the order but does not include item pricing.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div id=\"s-c41721fb-2cba-4e19-ad60-66235b24eebf\" class=\"shg-c file \">\r\n<div>\r\n<ul class=\"shogun-tabs shogun-rounded\" role=\"tablist\" data-vthemes=\"{\" default=\"\" :=\"\" shogun-rounded=\"\">\r\n<li class=\"shogun-tab shogun-tab-active\" id=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tab\" aria-controls=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" aria-selected=\"true\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> DELIVERY </span></div>\r\n<div class=\"shogun-tab-border\"></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tab\" aria-controls=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> RETURNS </span></div>\r\n</li>\r\n</ul>\r\n<div class=\"shogun-tabs-body shogun-rounded\">\r\n<div class=\"shogun-tab-content shogun-tab-active\" id=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tabpanel\" aria-labelledby=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\">\r\n<div id=\"s-d2f693ec-d2b6-40e3-ae2c-d1b94bf61c06\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 style=\"text-align: center;\">DELIVERY INFORMATION</h2>\r\n<p style=\"text-align: center;\"><br />Orders made before 1pm GMT Monday-Friday are shipped the same day</p>\r\n</div>\r\n</div>\r\n<div id=\"s-e276e6d4-46a6-4fb6-8c19-889a0873d86c\" class=\"shg-c  \">\r\n<div class=\"shogun-table-wrapper\">\r\n<table class=\"shogun-table\">\r\n<thead class=\"shogun-table-column-container\">\r\n<tr>\r\n<td class=\"shogun-table-column\">SERVICE</td>\r\n<td class=\"shogun-table-column\">PRICE</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-5fa5e263-8043-4b75-a10d-381a27f7f288\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">UK - DPD NEXT DAY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0ad6b559-b344-4d94-adc0-4d054befe6cb\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£6.50</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-bcb850b5-b125-4187-bbf4-80121c61310c\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL ECONOMY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fa8ee78a-7c59-49a8-93fa-4826eeca4a57\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£15.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-2652f519-474c-4ea1-a300-6cc8efe1f56e\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-d787d1e5-587d-448c-bb6f-3736cdd8b2eb\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0e5c6526-04a2-44db-b64d-2be4a6f79b2d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">INTERNATIONAL - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-9f0cb5ff-70b1-42bc-9294-1edcd18e6f40\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-c2ec35ff-969e-4681-b6a5-b8fa8106d266\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">RUSSIA - ROYAL MAIL</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-a8cf067d-d41c-4c3f-801e-ec9c847f673a\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"s-d5852ff7-ef6b-46f4-a599-e80d61f78074\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br />Should there be a delay or issue with your delivery, please contact <span style=\"text-decoration: underline;\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a></span> for help in resolving the problem.</p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN UNION MINIMUM ORDER VALUE FROM 1ST JULY 2021</span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"><br />From 1st July 2021 the European Union have introduced new rules for collecting VAT on goods valued below €150. As a result of this we have introduced a minimum order value of £135 (excl. shipping) for any shipments to European Union countries. If you live in one of the 27 EU countries, please ensure your basket totals more than £135 in order to check out. <br /><br /></span></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN AND INTERNATIONAL CUSTOMERS<br /><br /></span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"> The Prices you see advertised on our website are <span style=\"text-decoration: underline;\">excluding VAT</span> this is sometimes referred to as the \'tax free\' price.</span></p>\r\n<p style=\"text-align: center;\">All our shipments are made \'duties unpaid\'. The taxes and duties applied to your order are decided by your country at the time of import. <span class=\"s6\">All</span><span class=\"s4\"> Customs and Import duties charges must be paid by the recipient of the parcel. <br />Due to Customs and Imports fees differing between country to country, we cannot tell you what you may be charged. </span></p>\r\n<p class=\"s3\" style=\"text-align: center;\"><span class=\"s4\">If you have any queries regarding customs &amp; duties on purch</span><span class=\"s4\">ases</span> <span class=\"s4\">from </span><a href=\"http://therealmccoys.com/\"><span class=\"s11\">therealmccoys.com</span></a><span class=\"s4\"> please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p style=\"text-align: center;\"><strong><br />REMOTE LOCATION</strong> <br /> <br />Please note, The Real McCoy\'s reserve the right to make adjustments to delivery and return costs in the event that your delivery address is deemed to be a \'Remote Location\' by the courier. We will contact you to discuss this before shipping your order or providing a return label. <br /> <br /><strong>GIFTS</strong> <br /> <br />THE REAL McCOY\'S use a combination of branded and unbranded packaging. If you require discreet packaging for your order please contact us prior to placing your order at <a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a>. <br /> <br />Once you have received a tracking number, the item has left us and we are unable to change the packaging used.</p>\r\n<p style=\"text-align: center;\">All orders are shipped with a packing slip that details the billing customer and shipping customer. This packing list contains information about each product in the order but does not include item pricing.</p>\r\n<p class=\"s3\"></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tabpanel\" aria-labelledby=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\">\r\n<div id=\"s-f7631e7b-17ec-4388-87cd-025cab4f4eba\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 id=\"Deliveries\" style=\"line-height: normal; text-align: center;\"><span style=\"font-family: GT-Pressura-Bold; letter-spacing: 1px;\">RETURNS</span></h2>\r\n<p><br />To initiate your return please email us at service@therealmccoys.com. <br /> <br />Return labels and reimport documents take time to prepare, please expect to wait 1-2 business days in the UK and 2-3 business days Internationally for us to provide your return label. This time will not be considered part of the 14 day return window.</p>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14</span> <span class=\"s4\">days of receipt as long as the items </span><span class=\"s4\">are returned</span><span class=\"s4\"> to us in </span><span class=\"s4\">with </span><span class=\"s5\">original packaging</span><span class=\"s5\"> and </span><span class=\"s5\">all </span><span class=\"s5\">labels attached</span><span class=\"s5\">,</span><span class=\"s6\"> unused and in resalable condition. </span></p>\r\n<p class=\"s3\"><span class=\"s6\">We take our Resalable Condition very seriously, </span><span class=\"s6\">returns that do not meet the criteria above will not be refunded and returned to the recipient at their expense. </span></p>\r\n<p class=\"s3\"><span class=\"s4\">An adhesive label with our returns address marked will come supplied with your order.</span> <span class=\"s7\">You can choose to arrange your own shipping or contact us for a pre-paid return label at </span><span class=\"s8\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a> </span><span class=\"s7\">using DHL.</span> <span class=\"s4\">Return shipping costs must be paid by the customer. The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> offer free returns.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Please attach your name and order no. clearly inside your parcel</span> <span class=\"s4\">to help us make any refunds faster</span><span class=\"s4\">. </span><span class=\"s7\">Please note that all returns must be shipped back in same or similar size box which it arrived in to help with our Resalable Condition.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Once a return is received and accepted, a refund will then be processed.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you need advice or require assistance regarding returning an item please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\" style=\"letter-spacing: 2px;\">LEATHER JACKET RETURNS</span></h3>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> accept any returns on leather jackets due to any character differences of the hide. Please note that each leather has its own characteristics from its natural wildlife experience.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you have any queries regarding Leather Jacket Returns please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shg-box-vertical-align-wrapper\">\r\n<div class=\"shg-box shg-c    \" id=\"s-10d6d11a-bef8-4740-b2c1-3642e6afc5a2\">\r\n<div class=\"shg-box-overlay\"></div>\r\n<div class=\"shg-box-content\">\r\n<div class=\"shg-box-vertical-align-wrapper\">\r\n<div class=\"shg-box shg-c    \" id=\"s-7662663a-b2a4-42bc-98c5-2703a827bd02\">\r\n<div class=\"shg-box-overlay\"></div>\r\n<div class=\"shg-box-content\">\r\n<div id=\"s-76afc7cc-ecb4-4bfe-b5ea-d9448dee75b6\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\">DELIVERY TERMS &amp; CONDITIONS</p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">The Real McCoy\'s (\"we\" and \"us\") is the operator of (</span><a href=\"https://therealmccoys.com/\"><span class=\"s14\">https://therealmccoys.com</span></a><span class=\"s10\">)</span><span class=\"s10\"><br /></span><span class=\"s10\">(\"Website\"). By placing an order through this </span><span class=\"s10\">Website</span><span class=\"s10\"> you will be agreeing to</span><span class=\"s10\"><br /></span><span class=\"s10\">the terms below. These are provided to ensure both parties are aware of and</span><span class=\"s10\"><br /></span><span class=\"s10\">agree upon this arrangement to mutually protect and set expectations on our</span><span class=\"s10\"><br /></span><span class=\"s10\">service.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">1. General</span><span class=\"s10\"><br /></span><span class=\"s10\">Subject to stock availability. We try to maintain accurate stock counts on our</span><span class=\"s10\"><br /></span><span class=\"s10\">website but from time-to-time there may be a stock discrepancy and we will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be able to fulfill all your items at time of purchase. In this instance, we will</span><span class=\"s10\"><br /></span><span class=\"s10\">fulfill the available products to you, and contact you about whether you would</span><span class=\"s10\"><br /></span><span class=\"s10\">prefer to await restocking of the backordered item or if you would prefer for us</span><span class=\"s10\"><br /></span><span class=\"s10\">to process a refund.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">2. Shipping Costs</span><span class=\"s10\"><br /></span><span class=\"s10\">Shipping costs are display on our Delivery &amp; Returns page. Payment for shipping will be collected with the purchase.</span><span class=\"s10\"><br /></span><span class=\"s10\">This price will be the final price for shipping cost to the customer. <br /></span><span class=\"s15\">Unless upon shipping, the destination is in remote-area which would then incur an additional fee to cover the costs of shipping before order is </span><span class=\"s15\">shipped. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3. Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">3.1 Return Due </span><span class=\"s10\">To</span><span class=\"s10\"> Change Of Mind</span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14 days of receipt as long as the items are returned to us in </span><span class=\"s4\">with </span><span class=\"s6\">original packaging</span><span class=\"s6\"> and l</span> <a name=\"_GoBack\"></a><span class=\"s6\">abels attached</span><span class=\"s6\">, unused and in resalable condition. </span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s5\">Returns that do not meet the criteria above (3.1) will not be refunded and returned to the recipient at their </span><span class=\"s5\">expense. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">Return shipping will be paid at the customers expense. </span><span class=\"s17\">Please attach your name and order no. clearly inside the parcel</span> <span class=\"s17\">for a faster</span><span class=\"s17\"> refund process.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once returns are received and accepted, </span><span class=\"s17\">a refund will then be processed</span><span class=\"s10\">. We will notify you once this has been completed through email.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">(The Real McCoy\'s) will refund the value of the goods returned but will </span><span class=\"s18\">NOT</span><span class=\"s10\"><br /></span><span class=\"s10\">refund the value of any shipping paid.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3.2 Warranty Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s will happily honor any valid warranty claims, provided a claim</span><span class=\"s10\"><br /></span><span class=\"s10\">is submitted within 14 days of receipt of items.</span><span class=\"s10\"><br /></span><span class=\"s10\">Customers will be required to pre-pay the return shipping, however we will</span><span class=\"s10\"><br /></span><span class=\"s10\">reimburse you upon successful warranty claim.</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon return receipt of items for warranty claim, you can expect The Real McCoy\'s</span><span class=\"s10\"><br /></span><span class=\"s10\">to process your warranty claim within 7 days.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once warranty claim is confirmed, you will receive the choice of:</span><span class=\"s10\"><br /></span><span class=\"s10\">(a) refund to your payment method</span><span class=\"s10\"><br /></span><span class=\"s10\">(b) a replacement item sent to you (if stock is available)</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4. Delivery Terms</span><span class=\"s10\"><br /></span><span class=\"s10\">4.1 Transit Time Domestically</span><span class=\"s10\"><br /></span><span class=\"s10\">In general, domestic shipments are in transit for 1 - 3 days</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.2 Transit time Internationally</span><span class=\"s10\"><br /></span><span class=\"s10\">Generally, orders shipped internationally are in transit for 2 - 5 days. This</span><span class=\"s10\"><br /></span><span class=\"s10\">varies depending on the courier selected.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">Orders placed before 13:00 BST will be dispatched the same day,</span><span class=\"s10\"><br /></span><span class=\"s10\">otherwise, within the next business day.</span><span class=\"s10\"><br /></span><span class=\"s10\">Our warehouse operates on Monday - Friday during standard business hours, except on national holidays </span><span class=\"s10\">at which time the warehouse will be closed. In these</span><span class=\"s10\"><br /></span><span class=\"s10\">instances, we take steps to ensure shipment delays will be kept to a minimum.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">For change of delivery address requests, we are able to change the address at</span><span class=\"s10\"><br /></span><span class=\"s10\">any time before the order has been dispatched.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.5 P.O. Box Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s is not currently able to ship to P.O. Boxes.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.6 Military Address Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">We are usually able to ship to military addresses. Please contact us by email at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s14\">service@therealmccoys.com</span></a><span class=\"s10\"> prior to placing your order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.7 Items Out </span><span class=\"s10\">Of</span><span class=\"s10\"> Stock</span><span class=\"s10\"><br /></span><span class=\"s10\">If an item is out of stock, we will cancel and refund the out-of-stock items and</span><span class=\"s10\"><br /></span><span class=\"s10\">dispatch the rest of the order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.8 Delivery Time Exceeded</span><span class=\"s10\"><br /></span><span class=\"s10\">If delivery time has exceeded the forecasted time, please contact us so that we</span><span class=\"s10\"><br /></span><span class=\"s10\">can </span><span class=\"s10\">conduct an investigation</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">5. Tracking Notifications</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon dispatch, customers will receive a tracking link from which they will be</span><span class=\"s10\"><br /></span><span class=\"s10\">able to follow the progress of their shipment based on the latest updates made</span><span class=\"s10\"><br /></span><span class=\"s10\">available by the shipping provider.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">6. Parcels Damaged </span><span class=\"s10\">In</span><span class=\"s10\"> Transit</span><span class=\"s10\"><br /></span><span class=\"s10\">If you find a parcel is damaged in-transit, if possible, please reject the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel from the courier and get in touch with our customer service. If the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel has been delivered without you being present, please contact customer</span><span class=\"s10\"><br /></span><span class=\"s10\">service with next steps.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7. Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">7.1 Sales Tax</span><span class=\"s10\"><br /></span><span class=\"s10\">Sales tax has already been applied to the price of the goods as displayed on the</span><span class=\"s10\"><br /></span><span class=\"s10\">website</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7.2 Import Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">Import duties and taxes for international shipments may be liable to be paid</span><span class=\"s10\"><br /></span><span class=\"s10\">upon arrival in destination country. This varies by country, and The Real</span><span class=\"s10\"><br /></span><span class=\"s10\">McCoy\'s encourage you to be aware of these potential costs before placing an</span><span class=\"s10\"><br /></span><span class=\"s10\">order with us.</span><span class=\"s10\"><br /></span><span class=\"s10\">If you refuse to </span><span class=\"s10\">to</span><span class=\"s10\"> pay duties and taxes upon arrival at your destination</span><span class=\"s10\"><br /></span><span class=\"s10\">country, the goods will be returned to The Real McCoy\'s at the customers</span><span class=\"s10\"><br /></span><span class=\"s10\">expense, and the customer will receive a refund for the value of goods paid,</span><span class=\"s10\"><br /></span><span class=\"s10\">minus the cost of the return shipping. The cost of the initial shipping will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be refunded.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">8. Cancellations</span><span class=\"s10\"><br /></span><span class=\"s10\">If you change your mind before you have received your order, we are able to</span><span class=\"s10\"><br /></span><span class=\"s10\">accept cancellations at any time before the order has been dispatched. If an</span><span class=\"s10\"><br /></span><span class=\"s10\">order has already been dispatched, please refer to our refund policy.<br /><br /></span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9. Insurance</span><span class=\"s10\"><br /></span><span class=\"s10\">Parcels are insured for loss and damage up to the value as stated by the</span><span class=\"s10\"><br /></span><span class=\"s10\">courier.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.1 Process for parcel damaged in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has completed</span><span class=\"s10\"><br /></span><span class=\"s10\">their investigation into the claim.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.2 Process for parcel lost in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has conducted an</span><span class=\"s10\"><br /></span><span class=\"s10\">investigation and deemed the parcel lost.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">10. Customer service</span><span class=\"s10\"><br /></span><span class=\"s10\">For all customer service enquiries, please submit an enquiry at</span><span class=\"s10\"><br /></span><a href=\"http://therealmccoys.com/contact\"><span class=\"s14\">therealmccoys.com/contact</span></a></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\"> </span></p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<script type=\"text/javascript\" src=\"https://cdn.getshogun.com/60dc6be5ddcbca00cec8e040.js\" async=\"\"></script>',1,NULL,'2021-09-30 14:19:44',NULL,'REALMCCOYS'),(755,'privacy_policy','privacy_policy','privacy_policy<br /><br />\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-d2bbba46-7181-4e64-a27b-9d5f44b8f54e\"><img data-src=\"https://i.shgcdn.com/5fd43363-250d-44f9-9038-b7144f12394d/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image  shogun-lazyloaded\" src=\"https://i.shgcdn.com/5fd43363-250d-44f9-9038-b7144f12394d/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" />\r\n<div class=\"shogun-image-content shogun-image-content-not-linked\">\r\n<div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-55277016-bd3c-4dde-8a49-5d389b0bc68a\"><img data-src=\"https://i.shgcdn.com/4fa81f60-84d8-48e6-b2a1-783469605363/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image shogun-image-normal shogun-lazyloaded\" src=\"https://i.shgcdn.com/4fa81f60-84d8-48e6-b2a1-783469605363/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" /></div>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-34b6d411-1661-4586-91b0-497f70566d8b\"><img data-src=\"https://i.shgcdn.com/4fae9688-5958-4cd7-8ed1-d65b08740457/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image  shogun-lazyloaded\" src=\"https://i.shgcdn.com/4fae9688-5958-4cd7-8ed1-d65b08740457/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" /></div>\r\n</div>\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div id=\"s-75a85ed9-676b-4ec5-836e-fa69e9929433\" class=\"shg-c  shg-align-left\">\r\n<div class=\"shogun-heading-component\">\r\n<h1><span>ABOUT</span></h1>\r\n</div>\r\n</div>\r\n<div id=\"s-0f3eb14e-bad9-43c8-9997-667d3d4da16d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p><span>The heart and soul of a handcrafted item is expressed in the finished product.</span><br /><br /><span>Constructed by Japan’s diligent and hardworking people, products that are ‘Made in Japan’ are praised for their high quality and beautiful design.</span><br /><br /><span>Although it may appear that the outdated features of vintage clothing have no significant use for us today, this is exactly what inspires and drives us forward as a brand.</span><br /><br /><span>American fashion dating from the 1940s and 1950s is our source of great inspiration, a young country unburdened by the restriction of traditional customs, was uninhibited, rational and innovative.</span><br /><br /><span>For a successful reproduction, these garments require the sensitive minds of the detail-oriented Japanese craftsmen on every procedure.</span><br /><br /><span>Quality may be hard to control when materials are custom produced and gathered from all over the globe.</span><br /><br /><span>Nevertheless, The Real McCoy’s have managed to reproduce products using the same methods and machinery from the past. All sewing and construction methods have been studied and mimicked for the purpose to achieve true authenticity. We Reproduce to celebrate the past but to also create the future.</span><br /><br /><span>It is Japan’s esteemed craftsmanship and expertise which makes such high-quality reproduction possible.</span></p>\r\n</div>\r\n</div>\r\n</div>',1,NULL,'2021-12-22 19:02:44',NULL,'REALMCCOYS'),(756,'REALMCCOYS_TOP1','REALMCCOYS_TOP1','<p><span style=\"font-family: \'GT Pressura Bold\', sans-serif;\"><span style=\"font-weight: bold; font-size: 20px;\"><span style=\"font-size: 36px;\"><img src=\"https://realmccoys.strawberry-jam.vn/source/test\" alt=\"\" />ULTIMATE SEEKER</span><br /><span style=\"font-size: 36px;\">THE NAME OF</span><br /><span style=\"font-size: 36px;\">A QUALITYRARMENT</span><br /></span><span style=\"font-weight: bold; font-size: 20px;\"><span style=\"font-size: 36px;\">SATISFACTION GUARANTEED</span></span></span><span style=\"font-weight: bold; font-size: 20px; font-family: arial, helvetica, sans-serif;\"><br /></span></p>',1,NULL,'2021-10-27 13:49:10',NULL,'REALMCCOYS'),(757,'REALMCCOYS_TOP2','REALMCCOYS_TOP2','',1,NULL,'2021-10-27 12:53:04',NULL,'REALMCCOYS'),(763,'ABOUT_SPECIFIED','ABOUT_SPECIFIED','<div>\r\n<h1>【特定商取引法に基づく表記】</h1>\r\n<table bgcolor=\"#999999\" border=\"0\" cellpadding=\"9\" cellspacing=\"1\" style=\"font-size: 13px; text-align: left; width: 952px;\">\r\n<tbody>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">販売社名</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">株式会社ザ・リアルマッコイズ・インターナショナル</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">運営統括責任者</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">辻本　仁史</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">所在地</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">〒651-0082　神戸市中央区小野浜町8-51</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">電話番号</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">TEL:078-335-1099　FAX:078-333-0091</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">メールアドレス</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\"><a href=\"mailto:mail@realmccoys.co.jp\">mail@realmccoys.co.jp</a></td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">販売URL</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">https://realmccoys.strawberry-jam.vn/</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払い方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>代金引換、クレジットカード、ショッピングクレジットからお選びいただけます。</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">商品代金以外の<br />必要金額</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">商品代金の合計が１万円以上の場合は代引手数料・送料は無料となります。<br />商品代金の合計が１万円未満の場合、代金引換の場合は代引手数料と送料、その他お支払い方法の場合は送料のみ頂きます。<br />なお、送料は商品の金額、大きさに関わらず、500円をご負担していただきます。<br />ただし、北海道、沖縄及び離島などの場合はこの限りではありません。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">ご注文方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">メール・お電話・FAXからお選び頂けます。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>お支払いは、代金引換、クレジットカード、ショッピングクレジットからお選びいただけます。</p>\r\n<p>代金引換の場合：<br />商品到着時にお支払い頂きます。<br /><br /></p>\r\n<p>クレジットカードの場合：<br />各カード会社の規約に基づき、ご契約の銀行口座より自動的にお引き落としさせて頂きます。</p>\r\n<p>ショッピングクレジットの場合：<br />信販会社の規約に基づき、ご契約の銀行口座より自動的にお引き落としさせて頂きます。</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払期限</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">ご注文成立後、1週間以内。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">引き渡し時期</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>ご注文承り後、在庫がある場合には、代引の場合は即日、その他お支払い方法の場合は、決済完了確認後、商品を発送致します。在庫が無い場合や、出荷が遅れる場合には、当方より連絡致します。<br />（※未入荷商品に関しましては、入荷次第の発送となります。納期は申込時にご案内致します。）</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">返品・不良品について</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">お客様のご都合による返品・交換はお断り致しています。予めご了承下さい。<br />万が一、不良品や注文品と異なる商品が届いた場合には交換、返品致します。（商品を手配で着ない場合には返金対応とさせていただきます。）<br /> 【返品対象】<br />「不良品・当社の商品の間違い」の場合<br /><br /> 【返品期間】<br />商品到着より7日以内<br /><br /> 【返品送料】<br />お客様負担。但し弊社の過失による返品の場合は弊社負担。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>',1,NULL,'2021-12-22 18:58:35',NULL,'REALMCCOYS');

UNLOCK TABLES;

/*Table structure for table `tbl_static_pages` */

DROP TABLE IF EXISTS `tbl_static_pages`;

CREATE TABLE `tbl_static_pages` (
  `static_page_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `static_page_code` varchar(225) DEFAULT NULL,
  `static_page_title` text,
  `static_page_content` text,
  `static_page_status` tinyint(2) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `link_preview` varchar(255) DEFAULT NULL,
  `for_customer` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`static_page_id`)
) ENGINE=InnoDB AUTO_INCREMENT=764 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_static_pages` */

LOCK TABLES `tbl_static_pages` WRITE;

insert  into `tbl_static_pages`(`static_page_id`,`static_page_code`,`static_page_title`,`static_page_content`,`static_page_status`,`create_date`,`update_date`,`link_preview`,`for_customer`) values (11,'cart_static_content','cart_static_content','<h3>送料について</h3>\r\n<p>8000円（税抜）以上は無料<br />それ以外は648円<br />※SALE品は除く。 サイズ交換のためのご返却送料はお客様ご負担となりますのでご了承ください。</p>\r\n<h3>返品について</h3>\r\n<p>返品期限・条件: 商品到着日より7日以内とさせていただきます。 それを過ぎますと、返品、交換のご要望はお受けできなくなりますので、ご了承ください。</p>\r\n<p>返品送料: お客様都合の場合はご容赦ください。ただし、不良品交換、誤品配送交換は当社負担とさせていただきます。</p>\r\n<p>不良品: 万一不良品等がございましたら、当店の在庫状況を確認のうえ、新品、または同等品と交換させていただきます。 商品到着後7日以内にメールまたは電話でご連絡ください。それを過ぎますと返品交換のご要望はお受けできなくなりますので、ご了承ください。</p>\r\n<h3>サイズ交換について</h3>\r\n<p>送料はお客様ご負担となります。 もしくは、最寄の直営店にて交換を承りさせていただきます。<br />注意:室内での試し履き程度の状態のみ対応させていただきます。</p>',1,NULL,'2018-07-11 15:53:01','','cart'),(12,'terms_of_service','TERMS OF SERVICES','<div class=\"grid-container\">\r\n<div class=\"grid-x\"><nav role=\"navigation\" aria-label=\"You are here:\">\r\n<ul class=\"breadcrumbs\">\r\n<li><a href=\"http://maling.strawberry-jam.vn/index.html\">HOME</a></li>\r\n<li class=\"disabled\">ご利用規約</li>\r\n</ul>\r\n</nav></div>\r\n</div>\r\n<div class=\"grid-container\">\r\n<div class=\"article-box\">\r\n<h2 class=\"article-title\">ご利用規約</h2>\r\n<p>会社（以下「当社」といいます。）は、その運営するオンラインショップ（当社が運営する。以下「本サービス」といいます。）の利用規約（以下「本規約」といいます。）を次のとおり定めます。</p>\r\n<h3 class=\"article-title-h3\">第1条</h3>\r\n<p>規約の適用ならびに変更本規約は、お客様が当社の運営するオンラインショップ を利用するにあたり、お客様が行う一切の行為に適用されるものとし、お客様は本規約に同意の上を利用するものとします。</p>\r\n<p>当社が運営するウェブショップ 上において提示する諸規定は、それぞれ本規約の一部を構成するものとします。</p>\r\n<p>お客様は、本規約に同意の上、当社を利用するものとします。</p>\r\n<p>当社は、お客様の許諾無く本規約を変更することがございます。</p>\r\n<p>本規約を変更する場合には、「ご利用ガイド」などにおいて変更の事実および変更箇所を掲載いたしますので、お客様はこれを必ずご確認ください。</p>\r\n<h3 class=\"article-title-h3\">第2条</h3>\r\n<p>会員本規約において「会員」とは、本規約の内容を全て承認いただいた上、当社所定の手続きに従い会員登録を申請し、当社がこれを承認した方をいいます。</p>\r\n<h3 class=\"article-title-h3\">第3条</h3>\r\n<p>会員登録会員登録の希望者は、本サービスの会員登録ページから当社の指定する方法に従い、会員登録申請を行うものとします。</p>\r\n<p>会員番号・パスワードは会員本人のみが利用できるものとし、他の誰にも譲渡・貸与できないものとします。</p>\r\n<p>また、会員番号・パスワードを用いて当社に対して行われた意思表示は、この会員番号・パスワードに該当する会員の有効な意思表示とみなし、これにより生じる支払などはすべて会員の責任となります。</p>\r\n<p>クレジットカードにより支払を行う場合は、会員が選択したクレジットカードの発行会社の規約を遵守しなければならないものとします。</p>\r\n<p>未成年者は、親権者の事前の同意がなければ、会員登録申請をすることができません。</p>\r\n<p>当社は、第1項に基づく申請に対し、これを承認する場合には登録確認メールを送信し、当該メールが受領された段階で、申請を行った者を会員とみなすものとします。</p>\r\n<p>当社は、以下の各号のいずれかに該当する場合、当該登録を承認しない場合があります。</p>\r\n<ul>\r\n<li>（1）会員登録の希望者が過去に当社の提供する何らかのサービスに関する規約に違反したことなどにより、会員登録の抹消などの処分を受けていたことが判明した場合</li>\r\n<li>（2）会員登録の希望者の申請内容に、虚偽の事項が含まれている場合</li>\r\n<li>（3）その他登録を承認することが当社の運営・管理上、不適当であると当社が合理的に判断する場合</li>\r\n</ul>\r\n<h3 class=\"article-title-h3\">第4条</h3>\r\n<p>登録内容の変更会員は、氏名、住所、電話番号その他当社に登録している事項の全部または一部に変更が生じた場合には、当社が別途指定する方法により、すみやかに登録内容を変更するものとします。</p>\r\n<h3 class=\"article-title-h3\">第5条</h3>\r\n<p>本サービスの利用停止、会員登録の抹消当社は、会員が以下の各号のいずれかに該当する場合、事前通知することなく当該会員に対して本サービスの利用停止、ならびに会員登録抹消その他当社が適当と考える措置を講ずることができるものとします。</p>\r\n<ul>\r\n<li>（1）過去に当社の提供する何らかのサービスに関する規約に違反をしたことなどにより、会員登録の抹消などの処分を受けていたことが判明した場合</li>\r\n<li>（2）本サービスに関する料金などの支払債務の履行遅延、長期間にわたる商品またはサービス （以下あわせて「商品など」といいます）の受取り不能、その他の債務不履行があった場合</li>\r\n<li>（3）本規約第8条 （禁止事項）の行為を行った場合</li>\r\n<li>（4）その他本規約のいずれかの規定に違反した場合</li>\r\n</ul>\r\n<h3 class=\"article-title-h3\">第6条</h3>\r\n<p>IDおよびパスワードの管理会員は、会員登録などの際に会員自身で設定したユーザーIDおよびパスワードの管理責任を負うものとします。</p>\r\n<p>会員は、当社の事前の同意がなければ、ユーザーIDおよびパスワードを第三者に譲渡、承継、貸与または開示してはならないものとします。</p>\r\n<p>会員は、ユーザーIDおよびパスワードが第三者によって不正に使用されていることが判明した場合には、直ちに当社に連絡するものとします。</p>\r\n<p>会員は、本サービス利用の際に行うクレジットカード番号の送信行為などの決済手段に伴う漏洩などの危険性を認識し、自己の責任の下にこれを厳重に管理・利用するものとします。</p>\r\n<p>会員は、ユーザーID、パスワードまたはクレジットカード番号の管理不十分、使用上の不手際、第三者の無断使用などに起因する損害につき自ら責任を負うものとし、当社は一切責任を負担しないものとします。</p>\r\n<h3 class=\"article-title-h3\">第7条</h3>\r\n<p>個人情報の利用本サービスの利用に関連して当社が知り得た会員の個人情報については、当社は別途当社が定める「プライバシーポリシー」に従い取り扱うものとします。</p>\r\n<h3 class=\"article-title-h3\">第8条</h3>\r\n<p>禁止事項会員は以下の行為を行ってはならないものとします。</p>\r\n<ul>\r\n<li>（1）会員登録の際に虚偽の登録内容を申請する行為</li>\r\n<li>（2）本サービスの運営を妨げる行為、その他本サービスに支障をきたす恐れのある行為</li>\r\n<li>（3）クレジットカードを不正使用して本サービスを利用する行為</li>\r\n<li>（4）メールアドレスおよびパスワードを不正に使用する行為</li>\r\n<li>（5）他の会員もしくは利用者、第三者、または当社に迷惑、不利益もしくは損害を与える行為、またはそれらの恐れのある行為</li>\r\n<li>（6）他の会員もしくは利用者、第三者、または当社の商標権、著作権その他の知的財産権、プライバシーその他の権利を侵害する行為、またはそれらの恐れのある行為</li>\r\n<li>（7）公序良俗に反する行為その他法令に違反する行為、またはそれらの恐れのある行為</li>\r\n<li>（8）その他、当社が不適当と判断する行為</li>\r\n</ul>\r\n<h3 class=\"article-title-h3\">第9条</h3>\r\n<p>知的財産権当社に関する著作権その他の知的財産権は当社に帰属するものとします。会員はウェブショップ</p>\r\n<p>を利用することにより得られる情報を、当社の承諾なしに会員ご自身の私的利用以外の目的で複製、送信、郵送、出版、配布、放送その他方法のいかんを問わず第三者による利用に供しないものとします。</p>\r\n<h3 class=\"article-title-h3\">第10条</h3>\r\n<p>本サービスの中断当社は、次の場合には会員への事前の通知や承諾なしに、本サービスの一時的な業務の中断を行うことがあります。</p>\r\n<ul>\r\n<li>（1）本サービスのシステムの保守または工事を行う場合。</li>\r\n<li>（2）天災、事変その他非常事態が発生し、または発生するおそれがあり、本サービスの運営ができなくなった場合。</li>\r\n<li>（3）その他当社が本サービスの一時的な利用の中断が必要であると判断した場合。</li>\r\n</ul>\r\n<h3 class=\"article-title-h3\">第11条</h3>\r\n<p>商品の購入会員は、本サービスを利用して当社から商品などを購入することができます。</p>\r\n<p>会員は、商品などの購入を希望する場合、当社が別途指定する方法に従って商品などの購入または利用を申し込むものとします。</p>\r\n<p>前項の申し込みに伴い、会員が入力・登録した配達先・注文内容などを確認の上で注文する旨のボタンをクリックし、その後、当社から在庫確認ならびに発送手続き完了の旨のメールが会員に到達した時点で、会員と当社との間に当該商品などに関する</p>\r\n<p>売買契約が成立するものとします。</p>\r\n<p>前項の規定に拘わらず、本サービス利用に関して不正行為または不適当な行為があった場合、当社は売買契約について取消、解除その他の適切な措置を取ることができるものとします。</p>\r\n<p>本サービスによる商品などの配送は、日本国内に限ります。</p>\r\n<h3 class=\"article-title-h3\">第12条</h3>\r\n<p>お支払い方法商品などのお支払い金額は、消費税を含む商品などの購入代金およびこれに係わる送料などの合計となります。</p>\r\n<p>本サービスによって購入された商品などのお支払いに関しては、会員本人名義のクレジットカードによるお支払い、または当社が別途認める支払方法によるものとします。</p>\r\n<h3 class=\"article-title-h3\">第13条</h3>\r\n<p>商品の返品など商品の返品または交換は、未使用の状態（返品後の再販が可能な状態）に限るものとします。 ただし、商品などの瑕疵、誤送その他当社の責めに帰すべき事由がある場合はこの限りではありません。</p>\r\n<p>会員は当社（本サービスでのご購入商品については当社ウェブショップ）が別途定める手続きに従い前項に定める返品などを申請するものとし、当社（本サービスでのご購入商品の返品については当社ウェブショップ）が別途定める返品商品返送先に当該返品の対象となる送料を会員が負担の上返送するものとします。</p>\r\n<p>当社（本サービスでのご購入商品については当社ウェブショップ）が別途定める手続き以外の方法で行われた申請に伴う返品、ならびに当社（本サービスでのご購入商品の返品については当社ウェブショップ）が別途定める返品商品返送先以外の場所へ商品が返送された返品はお受付できない場合がございます。</p>\r\n<p>返品申請の有効期限は、当社に到着した返品申請に対し当社が返品方法などの連絡を行った後8日以内とします。</p>\r\n<p>左記期限を過ぎた後の返品はお受付できない場合がございます。</p>\r\n<p>会員は本条2項に基づき返品申請ならびに返品商品の返送を行ったとしても、当社で返送商品の着荷が確認できない場合は、返品をお受付できない場合がございます。 ただし、当社の責めに帰すべき事由がある場合はこの限りではありません。</p>\r\n<h3 class=\"article-title-h3\">第14条</h3>\r\n<p>免責当社は、会員に対して通知義務を負う場合は、会員があらかじめ登録しているeメールアドレスへ通知を発信することにより、また、商品のお届けについては、商品購入の際、会員に指示された送付先に商品を配送などすることにより、その義務を果たしたものとします。</p>\r\n<p>当社は、法律上の請求原因如何を問わず、いかなる場合においても本サービスの利用および本サービスにおいて売買される商品に関する損害、損失、不利益などに関して前条に定める以外の責任を負わないものとします。</p>\r\n<p>当社は、その原因の如何を問わず、会員が本サービスをご利用になれなかったことにより発生した一切の損害について、いかなる責任も負わないものとします。</p>\r\n<p>当社は、会員の登録内容に従い事務を処理することにより免責されるものとします。</p>\r\n<p>当社は、法律上の請求原因如何を問わず、いかなる場合においても本サービスの利用に関して生じた損害、損失、不利益などに関して責任を負わないものとします。</p>\r\n<p>当社の故意または重過失により会員に損害、損失、不利益などが生じた場合、その他当社に責に帰すべき事由がある場合は、前5項は適用されないものとします。</p>\r\n<p>会員が、本サービスをご利用になることにより、他の会員または第三者に対して損害などを与えた場合には、当該会員は自己の責任と費用において解決し、当社には一切迷惑を与えないものとします。</p>\r\n<p>当社は、会員のパスワードの変更などを行う場合、当社指定の方法で本人確認を行うことにより免責されるものとします。</p>\r\n<p>会員が本サービスを利用するのに必要なコンピュータ機器および通信機器などの設置に関する費用、本サービスを利用するために要した電話料金、LANなどの利用料および申請料金などは、会員ご自身にご負担いただきます。</p>\r\n<p>当社は、自然災害、回線の輻輳、機器の障害または保守のための停止などの当社の合理的支配が及ばない原因による情報の損失、遅延、誤送、または第三者による情報の改竄や漏洩などにより発生した損害について、一切責任を負いません。</p>\r\n<h3 class=\"article-title-h3\">第15条</h3>\r\n<p>その他本サービスの利用に関する当社と会員との連絡方法は、原則としてeメールを通じて行うものとします。</p>\r\n<p>本サービスの利用に関して、本規約または当社の指導・対応により解決できない問題が生じた場合には、当社と会員との間で双方誠意をもって話し合い、これを解決するものとします。</p>\r\n<p>本サービスの利用に関して訴訟の必要が発生した場合には、東京地方裁判所を第一審の専属合意管轄裁判所といたします。</p>\r\n<p>2018年1月1日　発効</p>\r\n</div>\r\n</div>',0,NULL,'2018-06-04 09:05:56','','cart'),(24,'REGISTRATION_TERMS','Registration Terms','<p> </p>\r\n<p>ご利用規約(当サイトのご利用にあたって)</p>\r\n<p>この利用規約（以下，「本規約」といいます。）は，株式会社 ザ・リアルマッコイズ・インターナショナル（以下，「弊社」といいます。）がこのウェブサイト上で提供するサービス（以下，「本サービス」といいます。）の利用条件を定めるものです。登録ユーザーの皆さま（以下，「ユーザー」といいます。）には，本規約に従って，本サービスをご利用いただきます。</p>\r\n<p>第1条（適用）</p>\r\n<p>本規約は，ユーザーと弊社との間の本サービスの利用に関わる一切の関係に適用されるものとします。</p>\r\n<p>第2条（利用登録）</p>\r\n<p>登録希望者が弊社の定める方法によって利用登録を申請し，弊社がこれを承認することによって，利用登録が完了するものとします。<br /> 弊社は，利用登録の申請者に以下の事由があると判断した場合，利用登録の申請を承認しないことがあり，その理由については一切の開示義務を負わないものとします。<br /> （1）利用登録の申請に際して虚偽の事項を届け出た場合<br /> （2）本規約に違反したことがある者からの申請である場合<br /> （3）その他，弊社が利用登録を相当でないと判断した場合<br /> 会員登録は日本国内に住所を有する方に限るものとします。<br /> 本規約に基づく弊社と会員との間の利用契約は、登録が完了した日から当該会員の登録が取り消された日まで、弊社と当該会員との間で有効に存続するものとします。<br /> 会員登録者はご自分の年齢が20歳以上であること、あるいはご自分の年齢が20歳未満の場合には売買契約につき保護者の同意を得ていることを弊社に対して保証したものとみなされますのでご注意下さい。</p>\r\n<p>第3条（ユーザーIDおよびパスワードの管理）</p>\r\n<p>ユーザーは，自己の責任において，本サービスのユーザーIDおよびパスワードを管理するものとします。<br /> ユーザーは，いかなる場合にも，ユーザーIDおよびパスワードを第三者に譲渡または貸与することはできません。弊社は，ユーザーIDとパスワードの組み合わせが登録情報と一致してログインされた場合には，そのユーザーIDを登録しているユーザー自身による利用とみなします。</p>\r\n<p>第4条 （変更の届出）</p>\r\n<p>会員は、住所、氏名、電話番号、クレジットカード番号、その他弊社に届出ている事項に変更が生じた場合には、弊社が別途指示する方法により、すみやかに弊社に届出るものとします。</p>\r\n<p>第5条（本サービスの保守）</p>\r\n<p>弊社は，以下のいずれかの事由があると判断した場合，ユーザーに事前に通知することなく本サービスの全部または一部の提供を停止または中断することができるものとします。<br /> （1）本サービスにかかるコンピュータシステムの保守点検または更新を行う場合<br /> （2）地震，落雷，火災，停電または天災などの不可抗力により，本サービスの提供が困難となった場合<br /> （3）コンピュータまたは通信回線等が事故により停止した場合<br /> （4）その他，弊社が本サービスの提供が困難と判断した場合<br /> 弊社は，本サービスの提供の停止または中断により，ユーザーまたは第三者が被ったいかなる不利益または損害について，理由を問わず一切の責任を負わないものとします。</p>\r\n<p>第6条（利用制限および登録抹消）</p>\r\n<p>弊社は，以下の場合には，事前の通知なく，ユーザーに対して，本サービスの全部もしくは一部の利用を制限し，またはユーザーとしての登録を抹消することができるものとします。<br /> （1）本規約のいずれかの条項に違反した場合<br /> （2）登録事項に虚偽の事実があることが判明した場合<br /> （3）その他，弊社が本サービスの利用を適当でないと判断した場合<br /> 弊社は，本条に基づき当社が行った行為によりユーザーに生じた損害について，一切の責任を負いません。</p>\r\n<p>第7条（免責事項）</p>\r\n<p>弊社の債務不履行責任は，弊社の故意または重過失によらない場合には免責されるものとします。<br /> 弊社は，本サービスに関して，ユーザーと他のユーザーまたは第三者との間において生じた取引，連絡または紛争等について一切責任を負いません。</p>\r\n<p>第8条（サービス内容の変更等）</p>\r\n<p>弊社は，ユーザーに通知することなく，本サービスの内容を変更しまたは本サービスの提供を中止することができるものとし，これによってユーザーに生じた損害について一切の責任を負いません。</p>\r\n<p>第9条（利用規約の変更）</p>\r\n<p>弊社は，必要と判断した場合には，ユーザーに通知することなくいつでも本規約を変更することができるものとします。</p>\r\n<p>第10条（通知または連絡）</p>\r\n<p>ユーザーと弊社との間の通知または連絡は，弊社の定める方法によって行うものとします。</p>\r\n<p>第11条（権利義務の譲渡の禁止）</p>\r\n<p>ユーザーは，弊社の書面による事前の承諾なく，利用契約上の地位または本規約に基づく権利もしくは義務を第三者に譲渡し，または担保に供することはできません。</p>\r\n<p>第12条（準拠法・裁判管轄）</p>\r\n<p>本規約の解釈にあたっては，日本法を準拠法とします。<br /> 本サービスに関して紛争が生じた場合には，弊社の所在地を管轄する裁判所を専属的合意管轄とします。</p>',1,NULL,'2021-09-28 15:52:25','','cart'),(106,'Delivery-date-or-time','Delivery-date-or-time','',1,NULL,NULL,NULL,'cart'),(107,'Shipping-information-with-in-cart','Shipping-information-with-in-cart','',1,NULL,NULL,NULL,'cart'),(108,'Cart-privacy','Cart-privacy',NULL,1,NULL,NULL,NULL,'cart'),(125,'ship-info-common','ship-info-common','<div class=\"shipping-box-note\">\n<div class=\"shipping-box-note\">※ご注文金額　￥5,400（税込）以上で送料無料。<br />￥5,400未満の場合、送料はお客様のご負担となります。<br />全国一律送料￥540（税込）</div>\n<div class=\"shipping-box-note\"></div>\n<div class=\"shipping-box-note\"></div>\n<div class=\"shipping-box-note\">商品納期について</div>\n<div class=\"shipping-box-note\">すべて手作りで制作していますのでご注文をいただいてから12営業日でのお届け予定となります。</div>\n</div>',1,NULL,'2018-11-05 13:43:28','','cart'),(698,'cart_static_shop','cart_static_shop','まとめてお引き取りされたい、ピックアップ場所のご指定など、メッセージがある方はご入力ください。',1,'2021-07-01 09:59:55',NULL,NULL,'cart'),(752,'REALMCCOYS_ABOUT','REALMCCOYS_ABOUT','<br /><br />\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-d2bbba46-7181-4e64-a27b-9d5f44b8f54e\"><img src=\"https://realmccoys.strawberry-jam.vn/source/aaaa.jpg\" width=\"447\" height=\"300\" caption=\"false\" /></div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\"><img src=\"https://realmccoys.strawberry-jam.vn/source/bbbb.jpg\" width=\"452\" height=\"300\" caption=\"false\" /></div>\r\n</div>\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div id=\"s-75a85ed9-676b-4ec5-836e-fa69e9929433\" class=\"shg-c  shg-align-left\">\r\n<div class=\"shogun-heading-component\">\r\n<h1><span>ABOUT</span></h1>\r\n</div>\r\n</div>\r\n<div id=\"s-0f3eb14e-bad9-43c8-9997-667d3d4da16d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p><span>The heart and soul of a handcrafted item is expressed in the finished product.</span><br /><br /><span>Constructed by Japan’s diligent and hardworking people, products that are ‘Made in Japan’ are praised for their high quality and beautiful design.</span><br /><br /><span>Although it may appear that the outdated features of vintage clothing have no significant use for us today, this is exactly what inspires and drives us forward as a brand.</span><br /><br /><span>American fashion dating from the 1940s and 1950s is our source of great inspiration, a young country unburdened by the restriction of traditional customs, was uninhibited, rational and innovative.</span><br /><br /><span>For a successful reproduction, these garments require the sensitive minds of the detail-oriented Japanese craftsmen on every procedure.</span><br /><br /><span>Quality may be hard to control when materials are custom produced and gathered from all over the globe.</span><br /><br /><span>Nevertheless, The Real McCoy’s have managed to reproduce products using the same methods and machinery from the past. All sewing and construction methods have been studied and mimicked for the purpose to achieve true authenticity. We Reproduce to celebrate the past but to also create the future.</span><br /><br /><span>It is Japan’s esteemed craftsmanship and expertise which makes such high-quality reproduction possible.</span></p>\r\n</div>\r\n</div>\r\n</div>',1,NULL,'2021-12-22 19:17:42',NULL,'REALMCCOYS'),(753,'measure_company','measure_company','<section id=\"measure\">\r\n<div class=\"container\">\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_1.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv43\">測定方法</h2>\r\n<div class=\"mt-2\">当社のウェブサイトの各製品には、「販売可能なアイテムのタグ」ボックスの下にある\r\n<p class=\"size_guide_btn\"><strong class=\"en\">VIEW SIZE GUIDE</strong></p>\r\nの表示アイコンをクリックすると、サイズガイドが表示されます。</div>\r\n</div>\r\n</div>\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_2.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv44\">アウター＆トップス</h2>\r\n<div class=\"mt-2\">\r\n<ol>\r\n<li><strong>胸</strong>製品は、背中、ピットからピットまで測定されます。</li>\r\n<li><strong>袖</strong>製品は肩の縫い目の上部から袖の端まで測定されます。*特に明記されていない限り。（例：ラグランスリーブ）</li>\r\n<li><strong>LENGTH</strong>商品は裾に背面の中心の上部から測定されます。</li>\r\n<li><strong>SHOULDER</strong>製品は、肩の縫い目に肩の縫い目から測定されます。</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"sec\">\r\n<div class=\"img\"><img src=\"https://realmccoys-test.strawberry-jam.vn/source/img_3.jpg\" alt=\"\" width=\"850\" height=\"567\" /></div>\r\n<div class=\"txt\">\r\n<h2 class=\"f20 bold index_border\" id=\"mcetoc_1fc7dsfv45\">ボトムス</h2>\r\n<div class=\"mt-2\">\r\n<ol>\r\n<li><strong>ウエスト</strong>製品のウエストバンドは端から端まで測定され、最終的なウエスト測定のために2倍（X2）になります。</li>\r\n<li><strong>RISE</strong>製品は、フロントライズの下部からフロントライズの上部まで測定されます。</li>\r\n<li><strong>股下</strong>製品は股下の上部から端まで測定されます。</li>\r\n<li><strong>HEM</strong>製品の脚部開口部の幅は、端から端まで測定されます。</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</section>',1,NULL,'2021-09-30 11:02:57',NULL,'REALMCCOYS'),(754,'DELIVERY_RETURNS','DELIVERY_RETURNS','<div class=\"shogun-root\" data-shogun-id=\"5e610bfbcddac9006997d6a2\" data-shogun-site-id=\"d1d3e0e2-331b-439c-8ae6-f3a1e800b2b3\" data-shogun-page-id=\"5e610bfbcddac9006997d6a2\" data-shogun-page-version-id=\"60dc6be5ddcbca00cec8df18\" data-shogun-platform-type=\"shopify\" data-shogun-variant-id=\"60dc6be5ddcbca00cec8e040\" data-region=\"main\">\r\n<div id=\"s-5cb1ec5f-c397-4a09-b7c1-398b9eb611f2\" class=\"shg-c file \">\r\n<div>\r\n<ul class=\"shogun-tabs shogun-modern\" role=\"tablist\" data-vthemes=\"{\" default=\"\" :=\"\" shogun-modern=\"\">\r\n<li class=\"shogun-tab shogun-tab-active\" id=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tab\" aria-controls=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" aria-selected=\"true\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> DELIVERY </span></div>\r\n<div class=\"shogun-tab-border\"></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tab\" aria-controls=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> RETURNS </span></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-24acc107-42db-4dc2-89a9-c651528bcd80\" role=\"tab\" aria-controls=\"panel-24acc107-42db-4dc2-89a9-c651528bcd80\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> TERMS </span></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" role=\"tab\" aria-controls=\"panel-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> GIFTS </span></div>\r\n</li>\r\n</ul>\r\n<div class=\"shogun-tabs-body shogun-modern\">\r\n<div class=\"shogun-tab-content shogun-tab-active\" id=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tabpanel\" aria-labelledby=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\">\r\n<div id=\"s-02f1594d-f8f3-4240-b963-003c4bf8f787\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 style=\"text-align: center;\">DELIVERY INFORMATION</h2>\r\n<p style=\"text-align: center;\"><br />Orders made before 1pm GMT Monday-Friday are shipped the same day</p>\r\n</div>\r\n</div>\r\n<div id=\"s-37fce8b5-cb21-4add-94f5-7cd22f58d62f\" class=\"shg-c  \">\r\n<div class=\"shogun-table-wrapper\">\r\n<table class=\"shogun-table\">\r\n<thead class=\"shogun-table-column-container\">\r\n<tr>\r\n<td class=\"shogun-table-column\">SERVICE</td>\r\n<td class=\"shogun-table-column\">PRICE</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-ab2a0c41-848c-4d68-9562-a7e4d07a6a45\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">UNITED KINGDOM - DPD NEXT DAY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-751ff72f-a236-415c-884b-16c36fada4b1\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£6.50</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0ebfff68-c99c-4161-b845-5dbae23db88b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL ECONOMY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-b93abbb4-4ccd-482e-8e90-e16f48a74800\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£15.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fe8bd9a5-f5e8-4e7b-a3e7-21a45d24428f\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-605f65bc-cd40-466b-840c-c74e6ed3a78b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-ba2b9768-4de0-42d9-854b-13a2bc819b58\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">INTERNATIONAL - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fed0f5c9-915c-4f91-8b5d-f990d95c09e3\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-64c8db9e-c004-470f-b21b-999b43f5ea78\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">RUSSIA - ROYAL MAIL</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-8c01bde0-f9b6-4cb2-805b-487676b042b2\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"s-85659df9-c4d3-4943-8dcd-d0da027d864b\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br />Should there be a delay or issue with your delivery, please contact <span style=\"text-decoration: underline;\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com </a></span>for help in resolving the problem.</p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN UNION MINIMUM ORDER VALUE FROM 1ST JULY 2021</span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"><br />From 1st July 2021 the European Union have introduced new rules for collecting VAT on goods valued below €150. As a result of this we have introduced a minimum order value of £135 (excl. shipping) for any shipments to European Union countries. If you live in one of the 27 EU countries, please ensure your basket totals more than £135 in order to check out. <br /><br /></span></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN AND INTERNATIONAL CUSTOMERS<br /><br /></span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"> The Prices you see advertised on our website are <span style=\"text-decoration: underline;\">excluding VAT</span> this is sometimes referred to as the \'tax free\' price.</span></p>\r\n<p style=\"text-align: center;\">All our shipments are made \'duties unpaid\'. The taxes and duties applied to your order are decided by your country at the time of import. <span class=\"s6\">All</span><span class=\"s4\"> Customs and Import duties charges must be paid by the recipient of the parcel. <br />Due to Customs and Imports fees differing between country to country, we cannot tell you what you may be charged. </span></p>\r\n<p class=\"s3\" style=\"text-align: center;\"><span class=\"s4\">If you have any queries regarding customs &amp; duties on purch</span><span class=\"s4\">ases</span> <span class=\"s4\">from </span><a href=\"http://therealmccoys.com/\"><span class=\"s11\">therealmccoys.com</span></a><span class=\"s4\"> please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p style=\"text-align: center;\"><strong><br />REMOTE LOCATION</strong> <br /> <br />Please note, The Real McCoy\'s reserve the right to make adjustments to delivery and return costs in the event that your delivery address is deemed to be a \'Remote Location\' by the courier. We will contact you to discuss this before shipping your order or providing a return label.</p>\r\n<p class=\"s3\"></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tabpanel\" aria-labelledby=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\">\r\n<div id=\"s-5b279254-191f-4276-8e00-ccb6a2b68486\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 id=\"Deliveries\" style=\"line-height: normal; text-align: center;\"><span style=\"font-family: GT-Pressura-Bold; letter-spacing: 1px;\">RETURNS</span></h2>\r\n<p><br />To initiate your return please email us at service@therealmccoys.com. <br /> <br />Return labels and reimport documents take time to prepare, please expect to wait 1-2 business days in the UK and 2-3 business days Internationally for us to provide your return label. This time will not be considered part of the 14 day return window.</p>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14</span> <span class=\"s4\">days of receipt as long as the items </span><span class=\"s4\">are returned</span><span class=\"s4\"> to us in </span><span class=\"s4\">with </span><span class=\"s5\">original packaging</span><span class=\"s5\"> and </span><span class=\"s5\">all </span><span class=\"s5\">labels attached</span><span class=\"s5\">,</span><span class=\"s6\"> unused and in resalable condition. </span></p>\r\n<p class=\"s3\"><span class=\"s6\">We take our Resalable Condition very seriously, </span><span class=\"s6\">returns that do not meet the criteria above will not be refunded and returned to the recipient at their expense. </span></p>\r\n<p class=\"s3\"><span class=\"s4\">An adhesive label with our returns address marked will come supplied with your order.</span> <span class=\"s7\">You can choose to arrange your own shipping or contact us for a pre-paid return label at </span><span class=\"s8\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a> </span><span class=\"s7\">using DHL.</span> <span class=\"s4\">Return shipping costs must be paid by the customer. The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> offer free returns.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Please attach your name and order no. clearly inside your parcel</span> <span class=\"s4\">to help us make any refunds faster</span><span class=\"s4\">. </span><span class=\"s7\">Please note that all returns must be shipped back in same or similar size box which it arrived in to help with our Resalable Condition.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Once a return is received and accepted, a refund will then be processed.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you need advice or require assistance regarding returning an item please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\" style=\"letter-spacing: 2px;\">LEATHER JACKET RETURNS</span></h3>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> accept any returns on leather jackets due to any character differences of the hide. Please note that each leather has its own characteristics from its natural wildlife experience.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you have any queries regarding Leather Jacket Returns please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-24acc107-42db-4dc2-89a9-c651528bcd80\" role=\"tabpanel\" aria-labelledby=\"tab-24acc107-42db-4dc2-89a9-c651528bcd80\">\r\n<div id=\"s-ea7839ed-e2b2-4714-bc55-23fe4cb39ebe\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">The Real McCoy\'s (\"we\" and \"us\") is the operator of (</span><a href=\"https://therealmccoys.com/\"><span class=\"s14\">https://therealmccoys.com</span></a><span class=\"s10\">)</span><span class=\"s10\"><br /></span><span class=\"s10\">(\"Website\"). By placing an order through this </span><span class=\"s10\">Website</span><span class=\"s10\"> you will be agreeing to</span><span class=\"s10\"><br /></span><span class=\"s10\">the terms below. These are provided to ensure both parties are aware of and</span><span class=\"s10\"><br /></span><span class=\"s10\">agree upon this arrangement to mutually protect and set expectations on our</span><span class=\"s10\"><br /></span><span class=\"s10\">service.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">1. General</span><span class=\"s10\"><br /></span><span class=\"s10\">Subject to stock availability. We try to maintain accurate stock counts on our</span><span class=\"s10\"><br /></span><span class=\"s10\">website but from time-to-time there may be a stock discrepancy and we will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be able to fulfill all your items at time of purchase. In this instance, we will</span><span class=\"s10\"><br /></span><span class=\"s10\">fulfill the available products to you, and contact you about whether you would</span><span class=\"s10\"><br /></span><span class=\"s10\">prefer to await restocking of the backordered item or if you would prefer for us</span><span class=\"s10\"><br /></span><span class=\"s10\">to process a refund.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">2. Shipping Costs</span><span class=\"s10\"><br /></span><span class=\"s10\">Shipping costs are display on our Delivery &amp; Returns page. Payment for shipping will be collected with the purchase.</span><span class=\"s10\"><br /></span><span class=\"s10\">This price will be the final price for shipping cost to the customer. <br /></span><span class=\"s15\">Unless upon shipping, the destination is in remote-area which would then incur an additional fee to cover the costs of shipping before order is </span><span class=\"s15\">shipped. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3. Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">3.1 Return Due </span><span class=\"s10\">To</span><span class=\"s10\"> Change Of Mind</span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14 days of receipt as long as the items are returned to us in </span><span class=\"s4\">with </span><span class=\"s6\">original packaging</span><span class=\"s6\"> and l</span> <a name=\"_GoBack\"></a><span class=\"s6\">abels attached</span><span class=\"s6\">, unused and in resalable condition. </span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s5\">Returns that do not meet the criteria above (3.1) will not be refunded and returned to the recipient at their </span><span class=\"s5\">expense. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">Return shipping will be paid at the customers expense. </span><span class=\"s17\">Please attach your name and order no. clearly inside the parcel</span> <span class=\"s17\">for a faster</span><span class=\"s17\"> refund process.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once returns are received and accepted, </span><span class=\"s17\">a refund will then be processed</span><span class=\"s10\">. We will notify you once this has been completed through email.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">(The Real McCoy\'s) will refund the value of the goods returned but will </span><span class=\"s18\">NOT</span><span class=\"s10\"><br /></span><span class=\"s10\">refund the value of any shipping paid.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3.2 Warranty Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s will happily honor any valid warranty claims, provided a claim</span><span class=\"s10\"><br /></span><span class=\"s10\">is submitted within 14 days of receipt of items.</span><span class=\"s10\"><br /></span><span class=\"s10\">Customers will be required to pre-pay the return shipping, however we will</span><span class=\"s10\"><br /></span><span class=\"s10\">reimburse you upon successful warranty claim.</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon return receipt of items for warranty claim, you can expect The Real McCoy\'s</span><span class=\"s10\"><br /></span><span class=\"s10\">to process your warranty claim within 7 days.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once warranty claim is confirmed, you will receive the choice of:</span><span class=\"s10\"><br /></span><span class=\"s10\">(a) refund to your payment method</span><span class=\"s10\"><br /></span><span class=\"s10\">(b) a replacement item sent to you (if stock is available)</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4. Delivery Terms</span><span class=\"s10\"><br /></span><span class=\"s10\">4.1 Transit Time Domestically</span><span class=\"s10\"><br /></span><span class=\"s10\">In general, domestic shipments are in transit for 1 - 3 days</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.2 Transit time Internationally</span><span class=\"s10\"><br /></span><span class=\"s10\">Generally, orders shipped internationally are in transit for 2 - 5 days. This</span><span class=\"s10\"><br /></span><span class=\"s10\">varies depending on the courier selected.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">Orders placed before 13:00 BST will be dispatched the same day,</span><span class=\"s10\"><br /></span><span class=\"s10\">otherwise, within the next business day.</span><span class=\"s10\"><br /></span><span class=\"s10\">Our warehouse operates on Monday - Friday during standard business hours, except on national holidays </span><span class=\"s10\">at which time the warehouse will be closed. In these</span><span class=\"s10\"><br /></span><span class=\"s10\">instances, we take steps to ensure shipment delays will be kept to a minimum.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">For change of delivery address requests, we are able to change the address at</span><span class=\"s10\"><br /></span><span class=\"s10\">any time before the order has been dispatched.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.5 P.O. Box Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s is not currently able to ship to P.O. Boxes.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.6 Military Address Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">We are usually able to ship to military addresses. Please contact us by email at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s14\">service@therealmccoys.com</span></a><span class=\"s10\"> prior to placing your order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.7 Items Out </span><span class=\"s10\">Of</span><span class=\"s10\"> Stock</span><span class=\"s10\"><br /></span><span class=\"s10\">If an item is out of stock, we will cancel and refund the out-of-stock items and</span><span class=\"s10\"><br /></span><span class=\"s10\">dispatch the rest of the order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.8 Delivery Time Exceeded</span><span class=\"s10\"><br /></span><span class=\"s10\">If delivery time has exceeded the forecasted time, please contact us so that we</span><span class=\"s10\"><br /></span><span class=\"s10\">can </span><span class=\"s10\">conduct an investigation</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">5. Tracking Notifications</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon dispatch, customers will receive a tracking link from which they will be</span><span class=\"s10\"><br /></span><span class=\"s10\">able to follow the progress of their shipment based on the latest updates made</span><span class=\"s10\"><br /></span><span class=\"s10\">available by the shipping provider.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">6. Parcels Damaged </span><span class=\"s10\">In</span><span class=\"s10\"> Transit</span><span class=\"s10\"><br /></span><span class=\"s10\">If you find a parcel is damaged in-transit, if possible, please reject the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel from the courier and get in touch with our customer service. If the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel has been delivered without you being present, please contact customer</span><span class=\"s10\"><br /></span><span class=\"s10\">service with next steps.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7. Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">7.1 Sales Tax</span><span class=\"s10\"><br /></span><span class=\"s10\">Sales tax has already been applied to the price of the goods as displayed on the</span><span class=\"s10\"><br /></span><span class=\"s10\">website</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7.2 Import Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">Import duties and taxes for international shipments may be liable to be paid</span><span class=\"s10\"><br /></span><span class=\"s10\">upon arrival in destination country. This varies by country, and The Real</span><span class=\"s10\"><br /></span><span class=\"s10\">McCoy\'s encourage you to be aware of these potential costs before placing an</span><span class=\"s10\"><br /></span><span class=\"s10\">order with us.</span><span class=\"s10\"><br /></span><span class=\"s10\">If you refuse to </span><span class=\"s10\">to</span><span class=\"s10\"> pay duties and taxes upon arrival at your destination</span><span class=\"s10\"><br /></span><span class=\"s10\">country, the goods will be returned to The Real McCoy\'s at the customers</span><span class=\"s10\"><br /></span><span class=\"s10\">expense, and the customer will receive a refund for the value of goods paid,</span><span class=\"s10\"><br /></span><span class=\"s10\">minus the cost of the return shipping. The cost of the initial shipping will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be refunded.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">8. Cancellations</span><span class=\"s10\"><br /></span><span class=\"s10\">If you change your mind before you have received your order, we are able to</span><span class=\"s10\"><br /></span><span class=\"s10\">accept cancellations at any time before the order has been dispatched. If an</span><span class=\"s10\"><br /></span><span class=\"s10\">order has already been dispatched, please refer to our refund policy.<br /><br /></span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9. Insurance</span><span class=\"s10\"><br /></span><span class=\"s10\">Parcels are insured for loss and damage up to the value as stated by the</span><span class=\"s10\"><br /></span><span class=\"s10\">courier.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.1 Process for parcel damaged in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has completed</span><span class=\"s10\"><br /></span><span class=\"s10\">their investigation into the claim.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.2 Process for parcel lost in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has conducted an</span><span class=\"s10\"><br /></span><span class=\"s10\">investigation and deemed the parcel lost.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">10. Customer service</span><span class=\"s10\"><br /></span><span class=\"s10\">For all customer service enquiries, please submit an enquiry at</span><span class=\"s10\"><br /></span><a href=\"http://therealmccoys.com/contact\"><span class=\"s14\">therealmccoys.com/contact</span></a></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\"> </span></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\" role=\"tabpanel\" aria-labelledby=\"tab-dc0cb869-fdb6-4fd5-bedd-3874e5f59eae\">\r\n<div id=\"s-8632626a-534e-4688-8d7a-8d2f937b5ee0\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br /> <br />THE REAL McCOY\'S use a combination of branded and unbranded packaging. If you require discreet packaging for your order please contact us prior to placing your order at <a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a>. <br /> <br />Once you have received a tracking number, the item has left us and we are unable to change the packaging used.</p>\r\n<p style=\"text-align: center;\">All orders are shipped with a packing slip that details the billing customer and shipping customer. This packing list contains information about each product in the order but does not include item pricing.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div id=\"s-c41721fb-2cba-4e19-ad60-66235b24eebf\" class=\"shg-c file \">\r\n<div>\r\n<ul class=\"shogun-tabs shogun-rounded\" role=\"tablist\" data-vthemes=\"{\" default=\"\" :=\"\" shogun-rounded=\"\">\r\n<li class=\"shogun-tab shogun-tab-active\" id=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tab\" aria-controls=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" aria-selected=\"true\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> DELIVERY </span></div>\r\n<div class=\"shogun-tab-border\"></div>\r\n</li>\r\n<li class=\"shogun-tab\" id=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tab\" aria-controls=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" aria-selected=\"false\">\r\n<div class=\"shogun-tab-box\"><span class=\"shogun-tab-title\"> RETURNS </span></div>\r\n</li>\r\n</ul>\r\n<div class=\"shogun-tabs-body shogun-rounded\">\r\n<div class=\"shogun-tab-content shogun-tab-active\" id=\"panel-573030cc-5fb9-46ac-ad58-20ed5df58f19\" role=\"tabpanel\" aria-labelledby=\"tab-573030cc-5fb9-46ac-ad58-20ed5df58f19\">\r\n<div id=\"s-d2f693ec-d2b6-40e3-ae2c-d1b94bf61c06\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 style=\"text-align: center;\">DELIVERY INFORMATION</h2>\r\n<p style=\"text-align: center;\"><br />Orders made before 1pm GMT Monday-Friday are shipped the same day</p>\r\n</div>\r\n</div>\r\n<div id=\"s-e276e6d4-46a6-4fb6-8c19-889a0873d86c\" class=\"shg-c  \">\r\n<div class=\"shogun-table-wrapper\">\r\n<table class=\"shogun-table\">\r\n<thead class=\"shogun-table-column-container\">\r\n<tr>\r\n<td class=\"shogun-table-column\">SERVICE</td>\r\n<td class=\"shogun-table-column\">PRICE</td>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-5fa5e263-8043-4b75-a10d-381a27f7f288\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">UK - DPD NEXT DAY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0ad6b559-b344-4d94-adc0-4d054befe6cb\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£6.50</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-bcb850b5-b125-4187-bbf4-80121c61310c\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL ECONOMY</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-fa8ee78a-7c59-49a8-93fa-4826eeca4a57\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£15.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-2652f519-474c-4ea1-a300-6cc8efe1f56e\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">EUROPE - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-d787d1e5-587d-448c-bb6f-3736cdd8b2eb\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-0e5c6526-04a2-44db-b64d-2be4a6f79b2d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">INTERNATIONAL - DHL EXPRESS</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-9f0cb5ff-70b1-42bc-9294-1edcd18e6f40\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr class=\"shogun-table-row-container\">\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-c2ec35ff-969e-4681-b6a5-b8fa8106d266\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px;\">RUSSIA - ROYAL MAIL</p>\r\n</div>\r\n</div>\r\n</td>\r\n<td class=\"shogun-table-row\">\r\n<div id=\"s-a8cf067d-d41c-4c3f-801e-ec9c847f673a\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"line-height: 16px; text-align: left;\">£25.00</p>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<div id=\"s-d5852ff7-ef6b-46f4-a599-e80d61f78074\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\"><br />Should there be a delay or issue with your delivery, please contact <span style=\"text-decoration: underline;\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a></span> for help in resolving the problem.</p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN UNION MINIMUM ORDER VALUE FROM 1ST JULY 2021</span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"><br />From 1st July 2021 the European Union have introduced new rules for collecting VAT on goods valued below €150. As a result of this we have introduced a minimum order value of £135 (excl. shipping) for any shipments to European Union countries. If you live in one of the 27 EU countries, please ensure your basket totals more than £135 in order to check out. <br /><br /></span></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\">EUROPEAN AND INTERNATIONAL CUSTOMERS<br /><br /></span></h3>\r\n<p style=\"text-align: center;\"><span class=\"s4\"> The Prices you see advertised on our website are <span style=\"text-decoration: underline;\">excluding VAT</span> this is sometimes referred to as the \'tax free\' price.</span></p>\r\n<p style=\"text-align: center;\">All our shipments are made \'duties unpaid\'. The taxes and duties applied to your order are decided by your country at the time of import. <span class=\"s6\">All</span><span class=\"s4\"> Customs and Import duties charges must be paid by the recipient of the parcel. <br />Due to Customs and Imports fees differing between country to country, we cannot tell you what you may be charged. </span></p>\r\n<p class=\"s3\" style=\"text-align: center;\"><span class=\"s4\">If you have any queries regarding customs &amp; duties on purch</span><span class=\"s4\">ases</span> <span class=\"s4\">from </span><a href=\"http://therealmccoys.com/\"><span class=\"s11\">therealmccoys.com</span></a><span class=\"s4\"> please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p style=\"text-align: center;\"><strong><br />REMOTE LOCATION</strong> <br /> <br />Please note, The Real McCoy\'s reserve the right to make adjustments to delivery and return costs in the event that your delivery address is deemed to be a \'Remote Location\' by the courier. We will contact you to discuss this before shipping your order or providing a return label. <br /> <br /><strong>GIFTS</strong> <br /> <br />THE REAL McCOY\'S use a combination of branded and unbranded packaging. If you require discreet packaging for your order please contact us prior to placing your order at <a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a>. <br /> <br />Once you have received a tracking number, the item has left us and we are unable to change the packaging used.</p>\r\n<p style=\"text-align: center;\">All orders are shipped with a packing slip that details the billing customer and shipping customer. This packing list contains information about each product in the order but does not include item pricing.</p>\r\n<p class=\"s3\"></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shogun-tab-content\" id=\"panel-fcb089a0-2104-450c-a9ab-9f28aba14c0a\" role=\"tabpanel\" aria-labelledby=\"tab-fcb089a0-2104-450c-a9ab-9f28aba14c0a\">\r\n<div id=\"s-f7631e7b-17ec-4388-87cd-025cab4f4eba\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<h2 id=\"Deliveries\" style=\"line-height: normal; text-align: center;\"><span style=\"font-family: GT-Pressura-Bold; letter-spacing: 1px;\">RETURNS</span></h2>\r\n<p><br />To initiate your return please email us at service@therealmccoys.com. <br /> <br />Return labels and reimport documents take time to prepare, please expect to wait 1-2 business days in the UK and 2-3 business days Internationally for us to provide your return label. This time will not be considered part of the 14 day return window.</p>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14</span> <span class=\"s4\">days of receipt as long as the items </span><span class=\"s4\">are returned</span><span class=\"s4\"> to us in </span><span class=\"s4\">with </span><span class=\"s5\">original packaging</span><span class=\"s5\"> and </span><span class=\"s5\">all </span><span class=\"s5\">labels attached</span><span class=\"s5\">,</span><span class=\"s6\"> unused and in resalable condition. </span></p>\r\n<p class=\"s3\"><span class=\"s6\">We take our Resalable Condition very seriously, </span><span class=\"s6\">returns that do not meet the criteria above will not be refunded and returned to the recipient at their expense. </span></p>\r\n<p class=\"s3\"><span class=\"s4\">An adhesive label with our returns address marked will come supplied with your order.</span> <span class=\"s7\">You can choose to arrange your own shipping or contact us for a pre-paid return label at </span><span class=\"s8\"><a href=\"mailto:service@therealmccoys.com\">service@therealmccoys.com</a> </span><span class=\"s7\">using DHL.</span> <span class=\"s4\">Return shipping costs must be paid by the customer. The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> offer free returns.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Please attach your name and order no. clearly inside your parcel</span> <span class=\"s4\">to help us make any refunds faster</span><span class=\"s4\">. </span><span class=\"s7\">Please note that all returns must be shipped back in same or similar size box which it arrived in to help with our Resalable Condition.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">Once a return is received and accepted, a refund will then be processed.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you need advice or require assistance regarding returning an item please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<h3 class=\"s3\" style=\"text-align: center;\"><span class=\"s2\" style=\"letter-spacing: 2px;\">LEATHER JACKET RETURNS</span></h3>\r\n<p class=\"s3\"><span class=\"s4\">The Real McCoy\'s </span><span class=\"s6\">DO NOT</span><span class=\"s4\"> accept any returns on leather jackets due to any character differences of the hide. Please note that each leather has its own characteristics from its natural wildlife experience.</span></p>\r\n<p class=\"s3\"><span class=\"s4\">If you have any queries regarding Leather Jacket Returns please contact us at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s9\">service@therealmccoys.com</span></a></p>\r\n<p></p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shg-box-vertical-align-wrapper\">\r\n<div class=\"shg-box shg-c    \" id=\"s-10d6d11a-bef8-4740-b2c1-3642e6afc5a2\">\r\n<div class=\"shg-box-overlay\"></div>\r\n<div class=\"shg-box-content\">\r\n<div class=\"shg-box-vertical-align-wrapper\">\r\n<div class=\"shg-box shg-c    \" id=\"s-7662663a-b2a4-42bc-98c5-2703a827bd02\">\r\n<div class=\"shg-box-overlay\"></div>\r\n<div class=\"shg-box-content\">\r\n<div id=\"s-76afc7cc-ecb4-4bfe-b5ea-d9448dee75b6\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p style=\"text-align: center;\">DELIVERY TERMS &amp; CONDITIONS</p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">The Real McCoy\'s (\"we\" and \"us\") is the operator of (</span><a href=\"https://therealmccoys.com/\"><span class=\"s14\">https://therealmccoys.com</span></a><span class=\"s10\">)</span><span class=\"s10\"><br /></span><span class=\"s10\">(\"Website\"). By placing an order through this </span><span class=\"s10\">Website</span><span class=\"s10\"> you will be agreeing to</span><span class=\"s10\"><br /></span><span class=\"s10\">the terms below. These are provided to ensure both parties are aware of and</span><span class=\"s10\"><br /></span><span class=\"s10\">agree upon this arrangement to mutually protect and set expectations on our</span><span class=\"s10\"><br /></span><span class=\"s10\">service.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">1. General</span><span class=\"s10\"><br /></span><span class=\"s10\">Subject to stock availability. We try to maintain accurate stock counts on our</span><span class=\"s10\"><br /></span><span class=\"s10\">website but from time-to-time there may be a stock discrepancy and we will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be able to fulfill all your items at time of purchase. In this instance, we will</span><span class=\"s10\"><br /></span><span class=\"s10\">fulfill the available products to you, and contact you about whether you would</span><span class=\"s10\"><br /></span><span class=\"s10\">prefer to await restocking of the backordered item or if you would prefer for us</span><span class=\"s10\"><br /></span><span class=\"s10\">to process a refund.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">2. Shipping Costs</span><span class=\"s10\"><br /></span><span class=\"s10\">Shipping costs are display on our Delivery &amp; Returns page. Payment for shipping will be collected with the purchase.</span><span class=\"s10\"><br /></span><span class=\"s10\">This price will be the final price for shipping cost to the customer. <br /></span><span class=\"s15\">Unless upon shipping, the destination is in remote-area which would then incur an additional fee to cover the costs of shipping before order is </span><span class=\"s15\">shipped. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3. Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">3.1 Return Due </span><span class=\"s10\">To</span><span class=\"s10\"> Change Of Mind</span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s4\">The Real McCoy\'s will accept returns received within 14 days of receipt as long as the items are returned to us in </span><span class=\"s4\">with </span><span class=\"s6\">original packaging</span><span class=\"s6\"> and l</span> <a name=\"_GoBack\"></a><span class=\"s6\">abels attached</span><span class=\"s6\">, unused and in resalable condition. </span></p>\r\n<p class=\"s16\" style=\"text-align: center;\"><span class=\"s5\">Returns that do not meet the criteria above (3.1) will not be refunded and returned to the recipient at their </span><span class=\"s5\">expense. </span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">Return shipping will be paid at the customers expense. </span><span class=\"s17\">Please attach your name and order no. clearly inside the parcel</span> <span class=\"s17\">for a faster</span><span class=\"s17\"> refund process.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once returns are received and accepted, </span><span class=\"s17\">a refund will then be processed</span><span class=\"s10\">. We will notify you once this has been completed through email.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">(The Real McCoy\'s) will refund the value of the goods returned but will </span><span class=\"s18\">NOT</span><span class=\"s10\"><br /></span><span class=\"s10\">refund the value of any shipping paid.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">3.2 Warranty Returns</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s will happily honor any valid warranty claims, provided a claim</span><span class=\"s10\"><br /></span><span class=\"s10\">is submitted within 14 days of receipt of items.</span><span class=\"s10\"><br /></span><span class=\"s10\">Customers will be required to pre-pay the return shipping, however we will</span><span class=\"s10\"><br /></span><span class=\"s10\">reimburse you upon successful warranty claim.</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon return receipt of items for warranty claim, you can expect The Real McCoy\'s</span><span class=\"s10\"><br /></span><span class=\"s10\">to process your warranty claim within 7 days.</span><span class=\"s10\"><br /></span><span class=\"s10\">Once warranty claim is confirmed, you will receive the choice of:</span><span class=\"s10\"><br /></span><span class=\"s10\">(a) refund to your payment method</span><span class=\"s10\"><br /></span><span class=\"s10\">(b) a replacement item sent to you (if stock is available)</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4. Delivery Terms</span><span class=\"s10\"><br /></span><span class=\"s10\">4.1 Transit Time Domestically</span><span class=\"s10\"><br /></span><span class=\"s10\">In general, domestic shipments are in transit for 1 - 3 days</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.2 Transit time Internationally</span><span class=\"s10\"><br /></span><span class=\"s10\">Generally, orders shipped internationally are in transit for 2 - 5 days. This</span><span class=\"s10\"><br /></span><span class=\"s10\">varies depending on the courier selected.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">Orders placed before 13:00 BST will be dispatched the same day,</span><span class=\"s10\"><br /></span><span class=\"s10\">otherwise, within the next business day.</span><span class=\"s10\"><br /></span><span class=\"s10\">Our warehouse operates on Monday - Friday during standard business hours, except on national holidays </span><span class=\"s10\">at which time the warehouse will be closed. In these</span><span class=\"s10\"><br /></span><span class=\"s10\">instances, we take steps to ensure shipment delays will be kept to a minimum.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.4 Change </span><span class=\"s10\">Of</span><span class=\"s10\"> Delivery Address</span><span class=\"s10\"><br /></span><span class=\"s10\">For change of delivery address requests, we are able to change the address at</span><span class=\"s10\"><br /></span><span class=\"s10\">any time before the order has been dispatched.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.5 P.O. Box Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">The Real McCoy\'s is not currently able to ship to P.O. Boxes.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.6 Military Address Shipping</span><span class=\"s10\"><br /></span><span class=\"s10\">We are usually able to ship to military addresses. Please contact us by email at </span><a href=\"mailto:service@therealmccoys.com\"><span class=\"s14\">service@therealmccoys.com</span></a><span class=\"s10\"> prior to placing your order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.7 Items Out </span><span class=\"s10\">Of</span><span class=\"s10\"> Stock</span><span class=\"s10\"><br /></span><span class=\"s10\">If an item is out of stock, we will cancel and refund the out-of-stock items and</span><span class=\"s10\"><br /></span><span class=\"s10\">dispatch the rest of the order.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">4.8 Delivery Time Exceeded</span><span class=\"s10\"><br /></span><span class=\"s10\">If delivery time has exceeded the forecasted time, please contact us so that we</span><span class=\"s10\"><br /></span><span class=\"s10\">can </span><span class=\"s10\">conduct an investigation</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">5. Tracking Notifications</span><span class=\"s10\"><br /></span><span class=\"s10\">Upon dispatch, customers will receive a tracking link from which they will be</span><span class=\"s10\"><br /></span><span class=\"s10\">able to follow the progress of their shipment based on the latest updates made</span><span class=\"s10\"><br /></span><span class=\"s10\">available by the shipping provider.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">6. Parcels Damaged </span><span class=\"s10\">In</span><span class=\"s10\"> Transit</span><span class=\"s10\"><br /></span><span class=\"s10\">If you find a parcel is damaged in-transit, if possible, please reject the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel from the courier and get in touch with our customer service. If the</span><span class=\"s10\"><br /></span><span class=\"s10\">parcel has been delivered without you being present, please contact customer</span><span class=\"s10\"><br /></span><span class=\"s10\">service with next steps.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7. Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">7.1 Sales Tax</span><span class=\"s10\"><br /></span><span class=\"s10\">Sales tax has already been applied to the price of the goods as displayed on the</span><span class=\"s10\"><br /></span><span class=\"s10\">website</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">7.2 Import Duties &amp; Taxes</span><span class=\"s10\"><br /></span><span class=\"s10\">Import duties and taxes for international shipments may be liable to be paid</span><span class=\"s10\"><br /></span><span class=\"s10\">upon arrival in destination country. This varies by country, and The Real</span><span class=\"s10\"><br /></span><span class=\"s10\">McCoy\'s encourage you to be aware of these potential costs before placing an</span><span class=\"s10\"><br /></span><span class=\"s10\">order with us.</span><span class=\"s10\"><br /></span><span class=\"s10\">If you refuse to </span><span class=\"s10\">to</span><span class=\"s10\"> pay duties and taxes upon arrival at your destination</span><span class=\"s10\"><br /></span><span class=\"s10\">country, the goods will be returned to The Real McCoy\'s at the customers</span><span class=\"s10\"><br /></span><span class=\"s10\">expense, and the customer will receive a refund for the value of goods paid,</span><span class=\"s10\"><br /></span><span class=\"s10\">minus the cost of the return shipping. The cost of the initial shipping will not</span><span class=\"s10\"><br /></span><span class=\"s10\">be refunded.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">8. Cancellations</span><span class=\"s10\"><br /></span><span class=\"s10\">If you change your mind before you have received your order, we are able to</span><span class=\"s10\"><br /></span><span class=\"s10\">accept cancellations at any time before the order has been dispatched. If an</span><span class=\"s10\"><br /></span><span class=\"s10\">order has already been dispatched, please refer to our refund policy.<br /><br /></span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9. Insurance</span><span class=\"s10\"><br /></span><span class=\"s10\">Parcels are insured for loss and damage up to the value as stated by the</span><span class=\"s10\"><br /></span><span class=\"s10\">courier.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.1 Process for parcel damaged in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has completed</span><span class=\"s10\"><br /></span><span class=\"s10\">their investigation into the claim.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">9.2 Process for parcel lost in-transit</span><span class=\"s10\"><br /></span><span class=\"s10\">We will process a refund or replacement as soon as the courier has conducted an</span><span class=\"s10\"><br /></span><span class=\"s10\">investigation and deemed the parcel lost.</span></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\">10. Customer service</span><span class=\"s10\"><br /></span><span class=\"s10\">For all customer service enquiries, please submit an enquiry at</span><span class=\"s10\"><br /></span><a href=\"http://therealmccoys.com/contact\"><span class=\"s14\">therealmccoys.com/contact</span></a></p>\r\n<p class=\"s12\" style=\"text-align: center;\"><span class=\"s10\"> </span></p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<script type=\"text/javascript\" src=\"https://cdn.getshogun.com/60dc6be5ddcbca00cec8e040.js\" async=\"\"></script>',1,NULL,'2021-09-30 14:19:44',NULL,'REALMCCOYS'),(755,'privacy_policy','privacy_policy','privacy_policy<br /><br />\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-d2bbba46-7181-4e64-a27b-9d5f44b8f54e\"><img data-src=\"https://i.shgcdn.com/5fd43363-250d-44f9-9038-b7144f12394d/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image  shogun-lazyloaded\" src=\"https://i.shgcdn.com/5fd43363-250d-44f9-9038-b7144f12394d/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" />\r\n<div class=\"shogun-image-content shogun-image-content-not-linked\">\r\n<div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-55277016-bd3c-4dde-8a49-5d389b0bc68a\"><img data-src=\"https://i.shgcdn.com/4fa81f60-84d8-48e6-b2a1-783469605363/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image shogun-image-normal shogun-lazyloaded\" src=\"https://i.shgcdn.com/4fa81f60-84d8-48e6-b2a1-783469605363/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" /></div>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"shg-c shogun-image-container    shg-align-center\" id=\"s-34b6d411-1661-4586-91b0-497f70566d8b\"><img data-src=\"https://i.shgcdn.com/4fae9688-5958-4cd7-8ed1-d65b08740457/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" width=\"\" height=\"\" alt=\"\" class=\"shogun-image  shogun-lazyloaded\" src=\"https://i.shgcdn.com/4fae9688-5958-4cd7-8ed1-d65b08740457/-/format/auto/-/preview/3000x3000/-/quality/lighter/\" /></div>\r\n</div>\r\n<div class=\"shg-c-lg-6 shg-c-md-6 shg-c-sm-6 shg-c-xs-12\">\r\n<div id=\"s-75a85ed9-676b-4ec5-836e-fa69e9929433\" class=\"shg-c  shg-align-left\">\r\n<div class=\"shogun-heading-component\">\r\n<h1><span>ABOUT</span></h1>\r\n</div>\r\n</div>\r\n<div id=\"s-0f3eb14e-bad9-43c8-9997-667d3d4da16d\" class=\"shg-c  \">\r\n<div class=\"shg-rich-text shg-theme-text-content\">\r\n<p><span>The heart and soul of a handcrafted item is expressed in the finished product.</span><br /><br /><span>Constructed by Japan’s diligent and hardworking people, products that are ‘Made in Japan’ are praised for their high quality and beautiful design.</span><br /><br /><span>Although it may appear that the outdated features of vintage clothing have no significant use for us today, this is exactly what inspires and drives us forward as a brand.</span><br /><br /><span>American fashion dating from the 1940s and 1950s is our source of great inspiration, a young country unburdened by the restriction of traditional customs, was uninhibited, rational and innovative.</span><br /><br /><span>For a successful reproduction, these garments require the sensitive minds of the detail-oriented Japanese craftsmen on every procedure.</span><br /><br /><span>Quality may be hard to control when materials are custom produced and gathered from all over the globe.</span><br /><br /><span>Nevertheless, The Real McCoy’s have managed to reproduce products using the same methods and machinery from the past. All sewing and construction methods have been studied and mimicked for the purpose to achieve true authenticity. We Reproduce to celebrate the past but to also create the future.</span><br /><br /><span>It is Japan’s esteemed craftsmanship and expertise which makes such high-quality reproduction possible.</span></p>\r\n</div>\r\n</div>\r\n</div>',1,NULL,'2021-12-22 19:02:44',NULL,'REALMCCOYS'),(756,'REALMCCOYS_TOP1','REALMCCOYS_TOP1','<p><span style=\"font-family: \'GT Pressura Bold\', sans-serif;\"><span style=\"font-weight: bold; font-size: 20px;\"><span style=\"font-size: 36px;\"><img src=\"https://realmccoys.strawberry-jam.vn/source/test\" alt=\"\" />ULTIMATE SEEKER</span><br /><span style=\"font-size: 36px;\">THE NAME OF</span><br /><span style=\"font-size: 36px;\">A QUALITYRARMENT</span><br /></span><span style=\"font-weight: bold; font-size: 20px;\"><span style=\"font-size: 36px;\">SATISFACTION GUARANTEED</span></span></span><span style=\"font-weight: bold; font-size: 20px; font-family: arial, helvetica, sans-serif;\"><br /></span></p>',1,NULL,'2021-10-27 13:49:10',NULL,'REALMCCOYS'),(757,'REALMCCOYS_TOP2','REALMCCOYS_TOP2','',1,NULL,'2021-10-27 12:53:04',NULL,'REALMCCOYS'),(758,'STOCKSTS','STOCKSTS','<main class=\"main\"> <!-- lower_mv -->\r\n<section id=\"lower_mv\" class=\"products_mv\">\r\n<div class=\"container\">\r\n<h2 class=\"index_h2\"><span class=\"en\">STOCKISTS</span></h2>\r\n</div>\r\n</section>\r\n<!-- //lower_mv -->\r\n<div id=\"store\" class=\"section\">\r\n<div class=\"container\">\r\n<ul class=\"select_tab\">\r\n<li class=\"tab-links active\"><a href=\"#shop1\">直営店</a></li>\r\n<li class=\"tab-links\"><a href=\"#shop2\">特約店</a></li>\r\n<li class=\"tab-links\"><a href=\"#shop3\">販売店</a></li>\r\n</ul>\r\n<div id=\"tab-contents-top\">\r\n<section id=\"shop1\" class=\"tab-contents active\">\r\n<ul>\r\n<li>\r\n<h3>THE REAL McCOY\'S　仙台<small>※火曜定休 （祝日除く）</small></h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒980-0014 宮城県仙台市青葉区本町2丁目14-20</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>022-796-9286</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n<!-- リンク先が「#」の場合、ADDRESSに記載した住所がそのままGOOGLEMAPで表示されます。 --></div>\r\n<div class=\"img\">\r\n<figure><img src=\"http://realmccoys.rlz.mobi/img/shop/dammy.jpg\" alt=\"image\" /></figure>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　東京</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒150-0001 東京都渋谷区神宮前6-25-8</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>03-6427-4300</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　金沢<small>※水曜定休 （祝日除く）</small></h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒920-0997 石川県金沢市竪町115番地</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>076-260-7030</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　大阪</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒550-0015 大阪府大阪市西区南堀江1-15-17　B-1</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>06-4391-8430</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　京都<small>※水曜定休 （祝日除く）</small></h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒604-8042 京都府京都市中京区寺町通り四条上ル中之町559番地菊水ビルB1F</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>075-708-5456</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　神戸<small>※月曜定休 （祝日除く）</small></h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒650-0012 兵庫県神戸市中央区北長狭通1-30-32</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>078-331-0620</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　福岡</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒810-0041 福岡県福岡市中央区大名1-14-21</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>092-738-7977</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S　通販事業部</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"mail\">\r\n<dt><span class=\"en\">MAIL</span></dt>\r\n<dd>mail@realmccoys.co.jp</dd>\r\n</dl>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n</section>\r\n<section id=\"shop2\" class=\"tab-contents\">\r\n<ul>\r\n<li>\r\n<h3>THE REAL McCOY\'S 茨城</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒300-0051 茨城県土浦市真鍋1-13-8</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>029-822-0090</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S 名古屋</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒460-0008 愛知県名古屋市中区栄3-33-30 T.O.ビル1F</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>052-263-6111</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S 奈良</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒630-8363 奈良県奈良市勝南院町11-1</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0742-81-4509</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S 和歌山</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒640-0113 和歌山県和歌山市本脇365</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>073-457-9551</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>THE REAL McCOY\'S 熊本</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒860-0848 熊本県熊本市中央区南坪井町5-10　ドラゴンビル1F</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>096-319-5075</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n</section>\r\n<section id=\"shop3\" class=\"tab-contents\">\r\n<h3 class=\"index_h3\">北海道</h3>\r\n<ul>\r\n<li>\r\n<h3>ユニーク・ジーン・ストア</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒092-0622 北海道札幌市豊平区中の島2条2-1-1</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>011-832-0224</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">東北</h3>\r\n<ul>\r\n<li>\r\n<h3>GLOW</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒020-0022 岩手県盛岡市大通3-7-10　1Ｆ</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>019-651-1586</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>REAL DEAL</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒984-0042 宮城県仙台市若林区大和町5-32-7 1F</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>022-782-0371</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>JOB-314</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒963-0107 福島県郡山市安積2-100</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0249-47-8458</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">関東</h3>\r\n<ul>\r\n<li>\r\n<h3>ラスカル</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒355-0045 埼玉県東松山市宮鼻936</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0493-35-4936</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>マーボインターナショナル成田店</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒286-0033 千葉県成田市花崎町750-11</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0476-22-6743</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>藤沢PX</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒252-0804 神奈川県藤沢市湘南台2-1-1</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0466-45-6084</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>カスタムキング</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒243-0401 神奈川県海老名市東柏ケ谷3-1-15-401</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>046-204-7680</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">甲東海</h3>\r\n<ul>\r\n<li>\r\n<h3>BARN STORMER</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒412-0042 静岡県御殿場市萩原636</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0550-78-7758</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">関西</h3>\r\n<ul>\r\n<li>\r\n<h3>Burnside</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒647-0052 和歌山県新宮市橋本2-14-33</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>0735-22-5291</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">中国</h3>\r\n<ul>\r\n<li>\r\n<h3>CELLULOID</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒720-0821 広島県福山市東川口町2丁目1-20</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>084-957-0251</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">四国</h3>\r\n<ul>\r\n<li>\r\n<h3>ミルズ</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒780-0843 高知県高知市廿代町8-2</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>088-824-1993</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">九州</h3>\r\n<ul>\r\n<li>\r\n<h3>TeRRiToRy</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>〒850-0831 長崎県長崎市鍛冶屋町6-31 設樂ビル１F</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>095-825-1577</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n<h3 class=\"index_h3\">海外</h3>\r\n<ul>\r\n<li>\r\n<h3>Classic Works</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>10694 台湾台北市大安区市民大道四段216号</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>(+886)2-8771-5517</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>SCULP STORE</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>1F , 394-72 , SEOGYO-DONG , MAPO-GU , SEOUL , KOREA 04044</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+82-70-8729-8801</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>INDUSTRIAL</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>No.741-1, Ju Lu Rd, Jing An Dist, Shanghai, China 200040</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+86 21 5456 6989</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>LOFT No.6</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>706 N.1st street, 798 Art District, Beijing, China</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+86-010-5978-9625</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>INCREDIBLE (Kowloon)</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>Shop 5, G/F, Austin Plaza, 83 Austin Road, Jordan, Hong Kong</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>852-28340833</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>PRONTO</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>232/3 SiamSquare Soi-2, Pathumwan, Bangkok, THAILAND</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>668 18335226</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>END CLOTHING</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"url\">\r\n<dt><span class=\"en\">URL</span></dt>\r\n<dd>https://www.endclothing.com</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>VMC Original</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>Rindermarkt, 8 8001 Zurich, Switzerland</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>00 41 4425 15696</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>STU｜F</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>Birkenstrasse 40233 Dusseldorf Germany</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+49(0)1722611187</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>JINJI</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>22 rue des Canettes 75006 Paris France</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>01 42 96 92 57</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>Standard &amp; Strange</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>5010 Telegraph Avenue Oakland, CA 94609 USA</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+1 510-373-9696</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>LOST &amp; FOUND</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>44 Ossington Ave Toronto, Ontario M6J 2Y7 Canada</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+ 647.348.2810</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>FRANS BOONE</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>Knokke Le Zoute. Sparrendreef 72. 8300 Knokke Le Zoute. Belgium</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+31(0)117462188</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>Signet Store</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>Windsor Tower, 165 Legspi St, Legaspi Village, Makati, 1229 Metro Manila, Philippines</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+63-2-894-3934</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>SOLOMAX</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>23-165 Tianxi Aocheng Plaza, Nankai District, Tianjin China</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+86-187-2201-0781</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n<li>\r\n<h3>Miloh Shop</h3>\r\n<div class=\"store_detail\">\r\n<div class=\"store_detail_inner\">\r\n<div class=\"txt\">\r\n<dl class=\"address\">\r\n<dt><span class=\"en\">ADDRESS</span></dt>\r\n<dd>163 East Pender St Vancouver, BC V6A 1T6 Canada</dd>\r\n</dl>\r\n<dl class=\"tel\">\r\n<dt><span class=\"en\">TEL</span></dt>\r\n<dd>+1-778-778-9772</dd>\r\n</dl>\r\n<p class=\"btn_google\"><a href=\"#\" target=\"_blank\" rel=\"noopener\">GOOGLE MAP</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</li>\r\n</ul>\r\n</section>\r\n</div>\r\n</div>\r\n</div>\r\n</main>',1,NULL,'2021-07-28 13:42:55',NULL,'REALMCCOYS'),(759,'SIZE_CHART','SIZE_CHART','SIZE_CHART',1,NULL,NULL,NULL,'REALMCCOYS'),(760,'VIEW_SIZE_GUIDE','VIEW SIZE GUIDE','<div id=\"size_guide_box\">\r\n<div class=\"size_guide_box\">\r\n<div class=\"modal_title\">Please Carefully Check Your Measurements Before Adding The Item To Your Basket</div>\r\n<a>CLICK HERE TO SEE HOW WE MEASURE GARMENTS</a>\r\n<table class=\"size-table\">\r\n<tbody>\r\n<tr>\r\n<td></td>\r\n<td>36</td>\r\n<td>38</td>\r\n<td>40</td>\r\n<td>42</td>\r\n<td>44</td>\r\n</tr>\r\n<tr>\r\n<td>Chest</td>\r\n<td>18.9</td>\r\n<td>19.7</td>\r\n<td>20.5</td>\r\n<td>21.3</td>\r\n<td>22</td>\r\n</tr>\r\n<tr>\r\n<td>Sleeve</td>\r\n<td>23.6</td>\r\n<td>24.8</td>\r\n<td>25.4</td>\r\n<td>26.2</td>\r\n<td>26.8</td>\r\n</tr>\r\n<tr>\r\n<td>Length</td>\r\n<td>24</td>\r\n<td>24.6</td>\r\n<td>25.4</td>\r\n<td>26.6</td>\r\n<td>27</td>\r\n</tr>\r\n<tr>\r\n<td>Shoulder</td>\r\n<td>15.7</td>\r\n<td>16.5</td>\r\n<td>17.3</td>\r\n<td>18.1</td>\r\n<td>19.1</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<div class=\"add_cart_btn\"><button type=\"button\" name=\"add\" data-add-to-cart=\"\">Confirm Size Add to bag</button></div>\r\n<figure class=\"size_image\"><img src=\"http://localhost:3232/stj_admin/public/templates/realmccoys/img/catalog/size_image.jpeg\" alt=\"image\" /></figure>\r\n</div>\r\n</div>',1,NULL,'2021-09-06 11:35:12',NULL,'REALMCCOYS'),(763,'ABOUT_SPECIFIED','ABOUT_SPECIFIED','<div>\r\n<h1>【特定商取引法に基づく表記】</h1>\r\n<table bgcolor=\"#999999\" border=\"0\" cellpadding=\"9\" cellspacing=\"1\" style=\"font-size: 13px; text-align: left; width: 952px;\">\r\n<tbody>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">販売社名</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">株式会社ザ・リアルマッコイズ・インターナショナル</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">運営統括責任者</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">辻本　仁史</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">所在地</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">〒651-0082　神戸市中央区小野浜町8-51</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">電話番号</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">TEL:078-335-1099　FAX:078-333-0091</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">メールアドレス</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\"><a href=\"mailto:mail@realmccoys.co.jp\">mail@realmccoys.co.jp</a></td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">販売URL</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">https://realmccoys.strawberry-jam.vn/</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払い方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>代金引換、クレジットカード、ショッピングクレジットからお選びいただけます。</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">商品代金以外の<br />必要金額</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">商品代金の合計が１万円以上の場合は代引手数料・送料は無料となります。<br />商品代金の合計が１万円未満の場合、代金引換の場合は代引手数料と送料、その他お支払い方法の場合は送料のみ頂きます。<br />なお、送料は商品の金額、大きさに関わらず、500円をご負担していただきます。<br />ただし、北海道、沖縄及び離島などの場合はこの限りではありません。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">ご注文方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">メール・お電話・FAXからお選び頂けます。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払方法</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>お支払いは、代金引換、クレジットカード、ショッピングクレジットからお選びいただけます。</p>\r\n<p>代金引換の場合：<br />商品到着時にお支払い頂きます。<br /><br /></p>\r\n<p>クレジットカードの場合：<br />各カード会社の規約に基づき、ご契約の銀行口座より自動的にお引き落としさせて頂きます。</p>\r\n<p>ショッピングクレジットの場合：<br />信販会社の規約に基づき、ご契約の銀行口座より自動的にお引き落としさせて頂きます。</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">お支払期限</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">ご注文成立後、1週間以内。</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">引き渡し時期</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">\r\n<p>ご注文承り後、在庫がある場合には、代引の場合は即日、その他お支払い方法の場合は、決済完了確認後、商品を発送致します。在庫が無い場合や、出荷が遅れる場合には、当方より連絡致します。<br />（※未入荷商品に関しましては、入荷次第の発送となります。納期は申込時にご案内致します。）</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<th bgcolor=\"#EEEEEE\" style=\"width: 99.7656px;\">返品・不良品について</th>\r\n<td bgcolor=\"#FFFFFF\" style=\"width: 806.234px;\">お客様のご都合による返品・交換はお断り致しています。予めご了承下さい。<br />万が一、不良品や注文品と異なる商品が届いた場合には交換、返品致します。（商品を手配で着ない場合には返金対応とさせていただきます。）<br /> 【返品対象】<br />「不良品・当社の商品の間違い」の場合<br /><br /> 【返品期間】<br />商品到着より7日以内<br /><br /> 【返品送料】<br />お客様負担。但し弊社の過失による返品の場合は弊社負担。</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>',1,NULL,'2021-12-22 18:58:35',NULL,'REALMCCOYS');

UNLOCK TABLES;

/*Table structure for table `tbl_static_pages_draft` */

DROP TABLE IF EXISTS `tbl_static_pages_draft`;

CREATE TABLE `tbl_static_pages_draft` (
  `static_page_draft_id` bigint(11) NOT NULL AUTO_INCREMENT,
  `static_page_id` bigint(11) DEFAULT NULL,
  `static_page_title` text,
  `static_page_content` text,
  `static_page_status` tinyint(2) DEFAULT NULL,
  `apply_date` timestamp NULL DEFAULT NULL,
  `is_updated` tinyint(2) DEFAULT '0',
  `static_page_title_old` text,
  `static_page_content_old` text,
  `static_page_status_old` tinyint(2) DEFAULT NULL,
  `create_date` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`static_page_draft_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_static_pages_draft` */

LOCK TABLES `tbl_static_pages_draft` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_stock_num` */

DROP TABLE IF EXISTS `tbl_stock_num`;

CREATE TABLE `tbl_stock_num` (
  `SeqNo` bigint(20) DEFAULT NULL,
  `ShopCode` varchar(20) NOT NULL,
  `GoodCode` varchar(20) NOT NULL,
  `ColorCode` varchar(20) NOT NULL,
  `SizeCode` varchar(20) NOT NULL,
  `r_product_detail_status` tinyint(1) DEFAULT '0',
  `StockNum` bigint(20) DEFAULT '0',
  `KanoNum` bigint(20) DEFAULT '0',
  `KanoNum3` bigint(20) DEFAULT '0',
  PRIMARY KEY (`ShopCode`,`GoodCode`,`ColorCode`,`SizeCode`),
  KEY `goods_code` (`GoodCode`),
  KEY `color_code` (`ColorCode`),
  KEY `size_code` (`SizeCode`),
  KEY `shop_code` (`ShopCode`),
  KEY `stock_num` (`StockNum`),
  KEY `kano_num` (`KanoNum`),
  KEY `r_product_detail_status` (`r_product_detail_status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_stock_num` */

LOCK TABLES `tbl_stock_num` WRITE;

insert  into `tbl_stock_num`(`SeqNo`,`ShopCode`,`GoodCode`,`ColorCode`,`SizeCode`,`r_product_detail_status`,`StockNum`,`KanoNum`,`KanoNum3`) values (17596788,'','BA14101','030-BLK','L',0,0,0,0),(17596789,'','BA14101','030-BLK','M',0,0,0,0),(17596790,'','BA14101','060-YLW','L',0,0,0,0),(17596791,'','BA14101','060-YLW','M',0,0,0,0),(17549483,'','BA17001','030-BLK','F',0,0,0,0),(17549484,'','BA17001','140-NVY','F',1,0,0,0),(17506084,'','BA21102','030-BLK','0812',0,0,0,0),(17506085,'','BA21102','030-BLK','0900',0,0,0,0),(17506086,'','BA21102','030-BLK','0912',0,0,0,0),(17612779,'','MC21104','013-OATML','L',0,0,0,0),(17612780,'','MC21104','013-OATML','M',0,0,0,0),(17612781,'','MC21104','013-OATML','S',0,0,0,0),(17612782,'','MC21104','013-OATML','XL',0,0,0,0),(17428171,'','MJ21109','154-SGGRN','L',0,0,0,0),(17428172,'','MJ21109','154-SGGRN','M',0,0,0,0),(17428173,'','MJ21109','154-SGGRN','S',0,0,0,0),(17428174,'','MJ21109','154-SGGRN','XL',0,0,0,0),(17428175,'','MJ21109','154-SGGRN','XS',0,0,0,0),(17493140,'','MJ21130','056-CYTBRN','L',0,0,0,0),(17493141,'','MJ21130','056-CYTBRN','M',0,0,0,0),(17493142,'','MJ21130','056-CYTBRN','S',0,0,0,0),(17493143,'','MJ21130','056-CYTBRN','XL',0,0,0,0),(17493144,'','MJ21130','154-SGGRN','L',0,0,0,0),(17493145,'','MJ21130','154-SGGRN','M',0,0,0,0),(17493146,'','MJ21130','154-SGGRN','S',0,0,0,0),(17493147,'','MJ21130','154-SGGRN','XL',0,0,0,0),(17596797,'000','BA14101','030-BLK','L',0,12,-279,-204),(17596798,'000','BA14101','030-BLK','M',0,17,-318,-239),(17596799,'000','BA14101','060-YLW','L',0,17,-249,-170),(17596800,'000','BA14101','060-YLW','M',0,11,-348,-216),(17549781,'000','BA17001','030-BLK','F',0,38,-160,-150),(17549782,'000','BA17001','140-NVY','F',1,0,-14,-9),(17506706,'000','BA21102','030-BLK','0812',0,10,-10,-8),(17506707,'000','BA21102','030-BLK','0900',0,12,-12,-9),(17506708,'000','BA21102','030-BLK','0912',0,7,-15,-9),(17612832,'000','MC21104','013-OATML','L',0,6,2,-13),(17612833,'000','MC21104','013-OATML','M',0,5,-1,-17),(17612834,'000','MC21104','013-OATML','S',0,-1,-9,-15),(17612835,'000','MC21104','013-OATML','XL',0,0,-3,-13),(17429365,'000','MJ21109','154-SGGRN','L',0,0,-13,-12),(17429366,'000','MJ21109','154-SGGRN','M',0,2,-12,-12),(17429367,'000','MJ21109','154-SGGRN','S',0,0,-12,-11),(17429368,'000','MJ21109','154-SGGRN','XL',0,0,-10,-8),(17429369,'000','MJ21109','154-SGGRN','XS',0,0,-8,-8),(17493648,'000','MJ21130','056-CYTBRN','L',0,0,-7,-7),(17493649,'000','MJ21130','056-CYTBRN','M',0,0,-8,-6),(17493650,'000','MJ21130','056-CYTBRN','S',0,0,-6,-5),(17493651,'000','MJ21130','056-CYTBRN','XL',0,0,-3,-2),(17493652,'000','MJ21130','154-SGGRN','L',0,0,-7,-7),(17493653,'000','MJ21130','154-SGGRN','M',0,0,-8,-4),(17493654,'000','MJ21130','154-SGGRN','S',0,0,-5,-5),(17493655,'000','MJ21130','154-SGGRN','XL',0,0,-2,-2),(17596806,'001','BA14101','030-BLK','L',0,4,4,69),(17596807,'001','BA14101','030-BLK','M',0,4,4,86),(17596808,'001','BA14101','060-YLW','L',0,4,4,65),(17596809,'001','BA14101','060-YLW','M',0,5,5,65),(17550079,'001','BA17001','030-BLK','F',0,3,3,44),(17550080,'001','BA17001','140-NVY','F',1,0,0,1),(17507328,'001','BA21102','030-BLK','0812',0,1,1,1),(17507329,'001','BA21102','030-BLK','0900',0,2,2,2),(17507330,'001','BA21102','030-BLK','0912',0,2,2,2),(17612885,'001','MC21104','013-OATML','L',0,2,2,2),(17612886,'001','MC21104','013-OATML','M',0,1,1,2),(17612887,'001','MC21104','013-OATML','S',0,2,2,2),(17612888,'001','MC21104','013-OATML','XL',0,2,2,2),(17430559,'001','MJ21109','154-SGGRN','L',0,2,2,2),(17430560,'001','MJ21109','154-SGGRN','M',0,2,2,3),(17430561,'001','MJ21109','154-SGGRN','S',0,2,2,2),(17430562,'001','MJ21109','154-SGGRN','XL',0,0,0,1),(17430563,'001','MJ21109','154-SGGRN','XS',0,1,1,1),(17494156,'001','MJ21130','056-CYTBRN','L',0,1,1,1),(17494157,'001','MJ21130','056-CYTBRN','M',0,1,1,1),(17494158,'001','MJ21130','056-CYTBRN','S',0,1,1,2),(17494159,'001','MJ21130','056-CYTBRN','XL',0,1,1,1),(17494160,'001','MJ21130','154-SGGRN','L',0,1,1,1),(17494161,'001','MJ21130','154-SGGRN','M',0,1,1,2),(17494162,'001','MJ21130','154-SGGRN','S',0,0,0,3),(17494163,'001','MJ21130','154-SGGRN','XL',0,1,1,1),(17596815,'002','BA14101','030-BLK','L',0,3,3,29),(17596816,'002','BA14101','030-BLK','M',0,3,3,47),(17596817,'002','BA14101','060-YLW','L',0,3,3,26),(17596818,'002','BA14101','060-YLW','M',0,3,3,52),(17550377,'002','BA17001','030-BLK','F',0,2,2,36),(17550378,'002','BA17001','140-NVY','F',1,0,0,1),(17507950,'002','BA21102','030-BLK','0812',0,1,1,1),(17507951,'002','BA21102','030-BLK','0900',0,1,1,1),(17507952,'002','BA21102','030-BLK','0912',0,1,1,1),(17612938,'002','MC21104','013-OATML','L',0,1,1,2),(17612939,'002','MC21104','013-OATML','M',0,1,1,3),(17612940,'002','MC21104','013-OATML','S',0,1,1,1),(17612941,'002','MC21104','013-OATML','XL',0,1,1,1),(17431753,'002','MJ21109','154-SGGRN','L',0,1,1,2),(17431754,'002','MJ21109','154-SGGRN','M',0,2,2,2),(17431755,'002','MJ21109','154-SGGRN','S',0,2,2,2),(17431756,'002','MJ21109','154-SGGRN','XL',0,1,1,1),(17431757,'002','MJ21109','154-SGGRN','XS',0,1,1,1),(17494664,'002','MJ21130','056-CYTBRN','L',0,1,1,2),(17494665,'002','MJ21130','056-CYTBRN','M',0,1,1,1),(17494666,'002','MJ21130','056-CYTBRN','S',0,1,1,3),(17494667,'002','MJ21130','056-CYTBRN','XL',0,0,0,0),(17494668,'002','MJ21130','154-SGGRN','L',0,1,1,1),(17494669,'002','MJ21130','154-SGGRN','M',0,1,1,1),(17494670,'002','MJ21130','154-SGGRN','S',0,0,0,1),(17494671,'002','MJ21130','154-SGGRN','XL',0,0,0,1),(3569770,'003','BA14101','030-BLK','L',0,0,0,0),(3569771,'003','BA14101','030-BLK','M',0,0,0,0),(3569772,'003','BA14101','060-YLW','L',0,0,0,0),(3569773,'003','BA14101','060-YLW','M',0,0,0,0),(3591479,'003','BA17001','030-BLK','F',0,0,0,0),(3591480,'003','BA17001','140-NVY','F',1,0,0,0),(3321153,'003','BA21102','030-BLK','0812',0,0,0,0),(3321154,'003','BA21102','030-BLK','0900',0,0,0,0),(3321155,'003','BA21102','030-BLK','0912',0,0,0,0),(3321737,'003','MC21104','013-OATML','L',0,0,0,0),(3321738,'003','MC21104','013-OATML','M',0,0,0,0),(3321739,'003','MC21104','013-OATML','S',0,0,0,0),(3321740,'003','MC21104','013-OATML','XL',0,0,0,0),(3322121,'003','MJ21109','154-SGGRN','L',0,0,0,0),(3322122,'003','MJ21109','154-SGGRN','M',0,0,0,0),(3322123,'003','MJ21109','154-SGGRN','S',0,0,0,0),(3322124,'003','MJ21109','154-SGGRN','XL',0,0,0,0),(3322125,'003','MJ21109','154-SGGRN','XS',0,0,0,0),(3322213,'003','MJ21130','056-CYTBRN','L',0,0,0,0),(3322214,'003','MJ21130','056-CYTBRN','M',0,0,0,0),(3322215,'003','MJ21130','056-CYTBRN','S',0,0,0,0),(3322216,'003','MJ21130','056-CYTBRN','XL',0,0,0,0),(3322217,'003','MJ21130','154-SGGRN','L',0,0,0,0),(3322218,'003','MJ21130','154-SGGRN','M',0,0,0,0),(3322219,'003','MJ21130','154-SGGRN','S',0,0,0,0),(3322220,'003','MJ21130','154-SGGRN','XL',0,0,0,0),(17596824,'004','BA14101','030-BLK','L',0,3,3,21),(17596825,'004','BA14101','030-BLK','M',0,3,3,21),(17596826,'004','BA14101','060-YLW','L',0,2,2,16),(17596827,'004','BA14101','060-YLW','M',0,1,1,37),(17550675,'004','BA17001','030-BLK','F',0,3,3,13),(17550676,'004','BA17001','140-NVY','F',1,0,0,0),(17508572,'004','BA21102','030-BLK','0812',0,0,0,1),(17508573,'004','BA21102','030-BLK','0900',0,1,1,1),(17508574,'004','BA21102','030-BLK','0912',0,1,1,1),(17612991,'004','MC21104','013-OATML','L',0,2,2,2),(17612992,'004','MC21104','013-OATML','M',0,1,1,3),(17612993,'004','MC21104','013-OATML','S',0,1,1,4),(17612994,'004','MC21104','013-OATML','XL',0,3,3,3),(17432947,'004','MJ21109','154-SGGRN','L',0,1,1,1),(17432948,'004','MJ21109','154-SGGRN','M',0,1,1,1),(17432949,'004','MJ21109','154-SGGRN','S',0,1,1,1),(17432950,'004','MJ21109','154-SGGRN','XL',0,1,1,1),(17432951,'004','MJ21109','154-SGGRN','XS',0,1,1,1),(17495172,'004','MJ21130','056-CYTBRN','L',0,1,1,1),(17495173,'004','MJ21130','056-CYTBRN','M',0,1,1,1),(17495174,'004','MJ21130','056-CYTBRN','S',0,0,0,0),(17495175,'004','MJ21130','056-CYTBRN','XL',0,0,0,0),(17495176,'004','MJ21130','154-SGGRN','L',0,1,1,1),(17495177,'004','MJ21130','154-SGGRN','M',0,1,1,1),(17495178,'004','MJ21130','154-SGGRN','S',0,0,0,0),(17495179,'004','MJ21130','154-SGGRN','XL',0,0,0,0),(17596833,'005','BA14101','030-BLK','L',0,2,2,20),(17596834,'005','BA14101','030-BLK','M',0,3,3,15),(17596835,'005','BA14101','060-YLW','L',0,3,3,20),(17596836,'005','BA14101','060-YLW','M',0,3,3,5),(17550973,'005','BA17001','030-BLK','F',0,2,2,12),(17550974,'005','BA17001','140-NVY','F',1,0,0,1),(17509194,'005','BA21102','030-BLK','0812',0,1,1,1),(17509195,'005','BA21102','030-BLK','0900',0,1,1,1),(17509196,'005','BA21102','030-BLK','0912',0,1,1,2),(17613044,'005','MC21104','013-OATML','L',0,1,1,1),(17613045,'005','MC21104','013-OATML','M',0,1,1,1),(17613046,'005','MC21104','013-OATML','S',0,1,1,1),(17613047,'005','MC21104','013-OATML','XL',0,0,0,1),(17434141,'005','MJ21109','154-SGGRN','L',0,1,1,1),(17434142,'005','MJ21109','154-SGGRN','M',0,1,1,1),(17434143,'005','MJ21109','154-SGGRN','S',0,1,1,1),(17434144,'005','MJ21109','154-SGGRN','XL',0,1,1,2),(17434145,'005','MJ21109','154-SGGRN','XS',0,1,1,1),(17495680,'005','MJ21130','056-CYTBRN','L',0,0,0,0),(17495681,'005','MJ21130','056-CYTBRN','M',0,0,0,1),(17495682,'005','MJ21130','056-CYTBRN','S',0,0,0,0),(17495683,'005','MJ21130','056-CYTBRN','XL',0,0,0,0),(17495684,'005','MJ21130','154-SGGRN','L',0,1,1,1),(17495685,'005','MJ21130','154-SGGRN','M',0,0,0,0),(17495686,'005','MJ21130','154-SGGRN','S',0,0,0,1),(17495687,'005','MJ21130','154-SGGRN','XL',0,0,0,0),(17596842,'006','BA14101','030-BLK','L',0,3,3,7),(17596843,'006','BA14101','030-BLK','M',0,3,3,5),(17596844,'006','BA14101','060-YLW','L',0,3,3,7),(17596845,'006','BA14101','060-YLW','M',0,3,3,8),(17551271,'006','BA17001','030-BLK','F',0,2,2,9),(17551272,'006','BA17001','140-NVY','F',1,0,0,3),(17509816,'006','BA21102','030-BLK','0812',0,1,1,1),(17509817,'006','BA21102','030-BLK','0900',0,1,1,1),(17509818,'006','BA21102','030-BLK','0912',0,1,1,1),(17613097,'006','MC21104','013-OATML','L',0,1,1,1),(17613098,'006','MC21104','013-OATML','M',0,1,1,1),(17613099,'006','MC21104','013-OATML','S',0,1,1,1),(17613100,'006','MC21104','013-OATML','XL',0,1,1,2),(17435335,'006','MJ21109','154-SGGRN','L',0,1,1,1),(17435336,'006','MJ21109','154-SGGRN','M',0,1,1,1),(17435337,'006','MJ21109','154-SGGRN','S',0,1,1,1),(17435338,'006','MJ21109','154-SGGRN','XL',0,0,0,0),(17435339,'006','MJ21109','154-SGGRN','XS',0,1,1,1),(17496188,'006','MJ21130','056-CYTBRN','L',0,1,1,1),(17496189,'006','MJ21130','056-CYTBRN','M',0,0,0,0),(17496190,'006','MJ21130','056-CYTBRN','S',0,0,0,0),(17496191,'006','MJ21130','056-CYTBRN','XL',0,0,0,1),(17496192,'006','MJ21130','154-SGGRN','L',0,1,1,1),(17496193,'006','MJ21130','154-SGGRN','M',0,0,0,0),(17496194,'006','MJ21130','154-SGGRN','S',0,0,0,0),(17496195,'006','MJ21130','154-SGGRN','XL',0,0,0,0),(17596851,'901','BA14101','030-BLK','L',0,2,2,25),(17596852,'901','BA14101','030-BLK','M',0,2,2,25),(17596853,'901','BA14101','060-YLW','L',0,2,2,16),(17596854,'901','BA14101','060-YLW','M',0,2,2,24),(17551569,'901','BA17001','030-BLK','F',0,2,2,19),(17551570,'901','BA17001','140-NVY','F',1,0,0,2),(17510438,'901','BA21102','030-BLK','0812',0,1,1,1),(17510439,'901','BA21102','030-BLK','0900',0,1,1,2),(17510440,'901','BA21102','030-BLK','0912',0,1,1,1),(17613150,'901','MC21104','013-OATML','L',0,2,2,2),(17613151,'901','MC21104','013-OATML','M',0,2,2,3),(17613152,'901','MC21104','013-OATML','S',0,1,1,4),(17613153,'901','MC21104','013-OATML','XL',0,2,2,2),(17436529,'901','MJ21109','154-SGGRN','L',0,2,2,3),(17436530,'901','MJ21109','154-SGGRN','M',0,2,2,2),(17436531,'901','MJ21109','154-SGGRN','S',0,1,1,2),(17436532,'901','MJ21109','154-SGGRN','XL',0,1,1,1),(17436533,'901','MJ21109','154-SGGRN','XS',0,1,1,2),(17496696,'901','MJ21130','056-CYTBRN','L',0,1,1,1),(17496697,'901','MJ21130','056-CYTBRN','M',0,1,1,1),(17496698,'901','MJ21130','056-CYTBRN','S',0,0,0,0),(17496699,'901','MJ21130','056-CYTBRN','XL',0,0,0,0),(17496700,'901','MJ21130','154-SGGRN','L',0,1,1,1),(17496701,'901','MJ21130','154-SGGRN','M',0,0,0,0),(17496702,'901','MJ21130','154-SGGRN','S',0,0,0,0),(17496703,'901','MJ21130','154-SGGRN','XL',0,0,0,0),(17596860,'902','BA14101','030-BLK','L',0,3,3,25),(17596861,'902','BA14101','030-BLK','M',0,4,4,32),(17596862,'902','BA14101','060-YLW','L',0,3,3,16),(17596863,'902','BA14101','060-YLW','M',0,3,3,20),(17551867,'902','BA17001','030-BLK','F',0,2,2,15),(17551868,'902','BA17001','140-NVY','F',1,0,0,0),(17511060,'902','BA21102','030-BLK','0812',0,1,1,1),(17511061,'902','BA21102','030-BLK','0900',0,1,1,1),(17511062,'902','BA21102','030-BLK','0912',0,1,1,1),(17613203,'902','MC21104','013-OATML','L',0,2,2,3),(17613204,'902','MC21104','013-OATML','M',0,1,1,3),(17613205,'902','MC21104','013-OATML','S',0,2,2,2),(17613206,'902','MC21104','013-OATML','XL',0,2,2,2),(17437723,'902','MJ21109','154-SGGRN','L',0,2,2,2),(17437724,'902','MJ21109','154-SGGRN','M',0,2,2,2),(17437725,'902','MJ21109','154-SGGRN','S',0,2,2,2),(17437726,'902','MJ21109','154-SGGRN','XL',0,1,1,1),(17437727,'902','MJ21109','154-SGGRN','XS',0,1,1,1),(17497204,'902','MJ21130','056-CYTBRN','L',0,0,0,0),(17497205,'902','MJ21130','056-CYTBRN','M',0,1,1,1),(17497206,'902','MJ21130','056-CYTBRN','S',0,0,0,0),(17497207,'902','MJ21130','056-CYTBRN','XL',0,0,0,0),(17497208,'902','MJ21130','154-SGGRN','L',0,1,1,1),(17497209,'902','MJ21130','154-SGGRN','M',0,0,0,0),(17497210,'902','MJ21130','154-SGGRN','S',0,0,0,0),(17497211,'902','MJ21130','154-SGGRN','XL',0,0,0,0),(3571054,'A','BA14101','030-BLK','L',0,0,0,0),(3571055,'A','BA14101','030-BLK','M',0,0,0,0),(3571056,'A','BA14101','060-YLW','L',0,0,0,0),(3571057,'A','BA14101','060-YLW','M',0,0,0,0),(3594611,'A','BA17001','030-BLK','F',0,0,0,0),(3594612,'A','BA17001','140-NVY','F',1,0,0,0),(3328833,'A','BA21102','030-BLK','0812',0,0,0,0),(3328834,'A','BA21102','030-BLK','0900',0,0,0,0),(3328835,'A','BA21102','030-BLK','0912',0,0,0,0),(3329417,'A','MC21104','013-OATML','L',0,0,0,0),(3329418,'A','MC21104','013-OATML','M',0,0,0,0),(3329419,'A','MC21104','013-OATML','S',0,0,0,0),(3329420,'A','MC21104','013-OATML','XL',0,0,0,0),(3329801,'A','MJ21109','154-SGGRN','L',0,0,0,0),(3329802,'A','MJ21109','154-SGGRN','M',0,0,0,0),(3329803,'A','MJ21109','154-SGGRN','S',0,0,0,0),(3329804,'A','MJ21109','154-SGGRN','XL',0,0,0,0),(3329805,'A','MJ21109','154-SGGRN','XS',0,0,0,0),(3329893,'A','MJ21130','056-CYTBRN','L',0,0,0,0),(3329894,'A','MJ21130','056-CYTBRN','M',0,0,0,0),(3329895,'A','MJ21130','056-CYTBRN','S',0,0,0,0),(3329896,'A','MJ21130','056-CYTBRN','XL',0,0,0,0),(3329897,'A','MJ21130','154-SGGRN','L',0,0,0,0),(3329898,'A','MJ21130','154-SGGRN','M',0,0,0,0),(3329899,'A','MJ21130','154-SGGRN','S',0,0,0,0),(3329900,'A','MJ21130','154-SGGRN','XL',0,0,0,0),(3571268,'B','BA14101','030-BLK','L',0,0,0,1),(3571269,'B','BA14101','030-BLK','M',0,0,0,3),(3571270,'B','BA14101','060-YLW','L',0,0,0,1),(3571271,'B','BA14101','060-YLW','M',0,0,0,1),(3595133,'B','BA17001','030-BLK','F',0,0,0,2),(3595134,'B','BA17001','140-NVY','F',1,0,0,0),(3330113,'B','BA21102','030-BLK','0812',0,0,0,0),(3330114,'B','BA21102','030-BLK','0900',0,0,0,0),(3330115,'B','BA21102','030-BLK','0912',0,0,0,0),(3330697,'B','MC21104','013-OATML','L',0,0,0,0),(3330698,'B','MC21104','013-OATML','M',0,0,0,0),(3330699,'B','MC21104','013-OATML','S',0,0,0,0),(3330700,'B','MC21104','013-OATML','XL',0,0,0,0),(3331081,'B','MJ21109','154-SGGRN','L',0,0,0,0),(3331082,'B','MJ21109','154-SGGRN','M',0,0,0,0),(3331083,'B','MJ21109','154-SGGRN','S',0,0,0,0),(3331084,'B','MJ21109','154-SGGRN','XL',0,0,0,0),(3331085,'B','MJ21109','154-SGGRN','XS',0,0,0,0),(3331173,'B','MJ21130','056-CYTBRN','L',0,0,0,0),(3331174,'B','MJ21130','056-CYTBRN','M',0,0,0,0),(3331175,'B','MJ21130','056-CYTBRN','S',0,0,0,0),(3331176,'B','MJ21130','056-CYTBRN','XL',0,0,0,0),(3331177,'B','MJ21130','154-SGGRN','L',0,0,0,0),(3331178,'B','MJ21130','154-SGGRN','M',0,0,0,0),(3331179,'B','MJ21130','154-SGGRN','S',0,0,0,0),(3331180,'B','MJ21130','154-SGGRN','XL',0,0,0,0),(3571482,'K','BA14101','030-BLK','L',0,0,0,1),(3571483,'K','BA14101','030-BLK','M',0,0,0,0),(3571484,'K','BA14101','060-YLW','L',0,0,0,0),(3571485,'K','BA14101','060-YLW','M',0,0,0,0),(3595655,'K','BA17001','030-BLK','F',0,0,0,0),(3595656,'K','BA17001','140-NVY','F',1,0,0,1),(3331393,'K','BA21102','030-BLK','0812',0,0,0,0),(3331394,'K','BA21102','030-BLK','0900',0,0,0,0),(3331395,'K','BA21102','030-BLK','0912',0,0,0,0),(3331977,'K','MC21104','013-OATML','L',0,0,0,0),(3331978,'K','MC21104','013-OATML','M',0,0,0,0),(3331979,'K','MC21104','013-OATML','S',0,0,0,0),(3331980,'K','MC21104','013-OATML','XL',0,0,0,0),(3332361,'K','MJ21109','154-SGGRN','L',0,0,0,0),(3332362,'K','MJ21109','154-SGGRN','M',0,0,0,0),(3332363,'K','MJ21109','154-SGGRN','S',0,0,0,0),(3332364,'K','MJ21109','154-SGGRN','XL',0,0,0,0),(3332365,'K','MJ21109','154-SGGRN','XS',0,0,0,0),(3332453,'K','MJ21130','056-CYTBRN','L',0,0,0,0),(3332454,'K','MJ21130','056-CYTBRN','M',0,0,0,0),(3332455,'K','MJ21130','056-CYTBRN','S',0,0,0,0),(3332456,'K','MJ21130','056-CYTBRN','XL',0,0,0,0),(3332457,'K','MJ21130','154-SGGRN','L',0,0,0,0),(3332458,'K','MJ21130','154-SGGRN','M',0,0,0,0),(3332459,'K','MJ21130','154-SGGRN','S',0,0,0,0),(3332460,'K','MJ21130','154-SGGRN','XL',0,0,0,0),(3571696,'KA','BA14101','030-BLK','L',0,0,0,0),(3571697,'KA','BA14101','030-BLK','M',0,0,0,3),(3571698,'KA','BA14101','060-YLW','L',0,0,0,0),(3571699,'KA','BA14101','060-YLW','M',0,0,0,1),(3596177,'KA','BA17001','030-BLK','F',0,0,0,0),(3596178,'KA','BA17001','140-NVY','F',1,0,0,0),(3332673,'KA','BA21102','030-BLK','0812',0,0,0,0),(3332674,'KA','BA21102','030-BLK','0900',0,0,0,0),(3332675,'KA','BA21102','030-BLK','0912',0,0,0,0),(3333257,'KA','MC21104','013-OATML','L',0,0,0,0),(3333258,'KA','MC21104','013-OATML','M',0,0,0,0),(3333259,'KA','MC21104','013-OATML','S',0,0,0,0),(3333260,'KA','MC21104','013-OATML','XL',0,0,0,0),(3333641,'KA','MJ21109','154-SGGRN','L',0,0,0,0),(3333642,'KA','MJ21109','154-SGGRN','M',0,0,0,0),(3333643,'KA','MJ21109','154-SGGRN','S',0,0,0,0),(3333644,'KA','MJ21109','154-SGGRN','XL',0,0,0,0),(3333645,'KA','MJ21109','154-SGGRN','XS',0,0,0,0),(3333733,'KA','MJ21130','056-CYTBRN','L',0,0,0,0),(3333734,'KA','MJ21130','056-CYTBRN','M',0,0,0,0),(3333735,'KA','MJ21130','056-CYTBRN','S',0,0,0,0),(3333736,'KA','MJ21130','056-CYTBRN','XL',0,0,0,0),(3333737,'KA','MJ21130','154-SGGRN','L',0,0,0,0),(3333738,'KA','MJ21130','154-SGGRN','M',0,0,0,0),(3333739,'KA','MJ21130','154-SGGRN','S',0,0,0,0),(3333740,'KA','MJ21130','154-SGGRN','XL',0,0,0,0),(3571910,'R','BA14101','030-BLK','L',0,0,0,0),(3571911,'R','BA14101','030-BLK','M',0,0,0,0),(3571912,'R','BA14101','060-YLW','L',0,0,0,0),(3571913,'R','BA14101','060-YLW','M',0,0,0,0),(3596699,'R','BA17001','030-BLK','F',0,0,0,0),(3596700,'R','BA17001','140-NVY','F',1,0,0,0),(3333953,'R','BA21102','030-BLK','0812',0,0,0,0),(3333954,'R','BA21102','030-BLK','0900',0,0,0,0),(3333955,'R','BA21102','030-BLK','0912',0,0,0,0),(3334537,'R','MC21104','013-OATML','L',0,0,0,0),(3334538,'R','MC21104','013-OATML','M',0,0,0,0),(3334539,'R','MC21104','013-OATML','S',0,0,0,0),(3334540,'R','MC21104','013-OATML','XL',0,0,0,0),(3334921,'R','MJ21109','154-SGGRN','L',0,0,0,0),(3334922,'R','MJ21109','154-SGGRN','M',0,0,0,0),(3334923,'R','MJ21109','154-SGGRN','S',0,0,0,0),(3334924,'R','MJ21109','154-SGGRN','XL',0,0,0,0),(3334925,'R','MJ21109','154-SGGRN','XS',0,0,0,0),(3335013,'R','MJ21130','056-CYTBRN','L',0,0,0,0),(3335014,'R','MJ21130','056-CYTBRN','M',0,0,0,0),(3335015,'R','MJ21130','056-CYTBRN','S',0,0,0,0),(3335016,'R','MJ21130','056-CYTBRN','XL',0,0,0,0),(3335017,'R','MJ21130','154-SGGRN','L',0,0,0,0),(3335018,'R','MJ21130','154-SGGRN','M',0,0,0,0),(3335019,'R','MJ21130','154-SGGRN','S',0,0,0,0),(3335020,'R','MJ21130','154-SGGRN','XL',0,0,0,0),(3572124,'RW','BA14101','030-BLK','L',0,0,0,0),(3572125,'RW','BA14101','030-BLK','M',0,0,0,0),(3572126,'RW','BA14101','060-YLW','L',0,0,0,0),(3572127,'RW','BA14101','060-YLW','M',0,0,0,0),(3597221,'RW','BA17001','030-BLK','F',0,0,0,0),(3597222,'RW','BA17001','140-NVY','F',1,0,0,0),(3335233,'RW','BA21102','030-BLK','0812',0,0,0,0),(3335234,'RW','BA21102','030-BLK','0900',0,0,0,0),(3335235,'RW','BA21102','030-BLK','0912',0,0,0,0),(3335817,'RW','MC21104','013-OATML','L',0,0,0,0),(3335818,'RW','MC21104','013-OATML','M',0,0,0,0),(3335819,'RW','MC21104','013-OATML','S',0,0,0,0),(3335820,'RW','MC21104','013-OATML','XL',0,0,0,0),(3336201,'RW','MJ21109','154-SGGRN','L',0,0,0,0),(3336202,'RW','MJ21109','154-SGGRN','M',0,0,0,0),(3336203,'RW','MJ21109','154-SGGRN','S',0,0,0,0),(3336204,'RW','MJ21109','154-SGGRN','XL',0,0,0,0),(3336205,'RW','MJ21109','154-SGGRN','XS',0,0,0,0),(3336293,'RW','MJ21130','056-CYTBRN','L',0,0,0,0),(3336294,'RW','MJ21130','056-CYTBRN','M',0,0,0,0),(3336295,'RW','MJ21130','056-CYTBRN','S',0,0,0,0),(3336296,'RW','MJ21130','056-CYTBRN','XL',0,0,0,0),(3336297,'RW','MJ21130','154-SGGRN','L',0,0,0,0),(3336298,'RW','MJ21130','154-SGGRN','M',0,0,0,0),(3336299,'RW','MJ21130','154-SGGRN','S',0,0,0,0),(3336300,'RW','MJ21130','154-SGGRN','XL',0,0,0,0),(3572338,'S','BA14101','030-BLK','L',0,0,0,0),(3572339,'S','BA14101','030-BLK','M',0,0,0,0),(3572340,'S','BA14101','060-YLW','L',0,0,0,0),(3572341,'S','BA14101','060-YLW','M',0,0,0,0),(3597743,'S','BA17001','030-BLK','F',0,0,0,0),(3597744,'S','BA17001','140-NVY','F',1,0,0,0),(3336513,'S','BA21102','030-BLK','0812',0,0,0,0),(3336514,'S','BA21102','030-BLK','0900',0,0,0,0),(3336515,'S','BA21102','030-BLK','0912',0,0,0,0),(3337097,'S','MC21104','013-OATML','L',0,0,0,0),(3337098,'S','MC21104','013-OATML','M',0,0,0,0),(3337099,'S','MC21104','013-OATML','S',0,0,0,0),(3337100,'S','MC21104','013-OATML','XL',0,0,0,0),(3337481,'S','MJ21109','154-SGGRN','L',0,0,0,0),(3337482,'S','MJ21109','154-SGGRN','M',0,0,0,0),(3337483,'S','MJ21109','154-SGGRN','S',0,0,0,0),(3337484,'S','MJ21109','154-SGGRN','XL',0,0,0,0),(3337485,'S','MJ21109','154-SGGRN','XS',0,0,0,0),(3337573,'S','MJ21130','056-CYTBRN','L',0,0,0,0),(3337574,'S','MJ21130','056-CYTBRN','M',0,0,0,0),(3337575,'S','MJ21130','056-CYTBRN','S',0,0,0,0),(3337576,'S','MJ21130','056-CYTBRN','XL',0,0,0,0),(3337577,'S','MJ21130','154-SGGRN','L',0,0,0,0),(3337578,'S','MJ21130','154-SGGRN','M',0,0,0,0),(3337579,'S','MJ21130','154-SGGRN','S',0,0,0,0),(3337580,'S','MJ21130','154-SGGRN','XL',0,0,0,0),(3572552,'T','BA14101','030-BLK','L',0,0,0,0),(3572553,'T','BA14101','030-BLK','M',0,0,0,0),(3572554,'T','BA14101','060-YLW','L',0,0,0,0),(3572555,'T','BA14101','060-YLW','M',0,0,0,0),(3598265,'T','BA17001','030-BLK','F',0,0,0,0),(3598266,'T','BA17001','140-NVY','F',1,0,0,0),(3337793,'T','BA21102','030-BLK','0812',0,0,0,0),(3337794,'T','BA21102','030-BLK','0900',0,0,0,0),(3337795,'T','BA21102','030-BLK','0912',0,0,0,0),(3338377,'T','MC21104','013-OATML','L',0,0,0,0),(3338378,'T','MC21104','013-OATML','M',0,0,0,0),(3338379,'T','MC21104','013-OATML','S',0,0,0,0),(3338380,'T','MC21104','013-OATML','XL',0,0,0,0),(3338761,'T','MJ21109','154-SGGRN','L',0,0,0,0),(3338762,'T','MJ21109','154-SGGRN','M',0,0,0,0),(3338763,'T','MJ21109','154-SGGRN','S',0,0,0,0),(3338764,'T','MJ21109','154-SGGRN','XL',0,0,0,0),(3338765,'T','MJ21109','154-SGGRN','XS',0,0,0,0),(3338853,'T','MJ21130','056-CYTBRN','L',0,0,0,0),(3338854,'T','MJ21130','056-CYTBRN','M',0,0,0,0),(3338855,'T','MJ21130','056-CYTBRN','S',0,0,0,0),(3338856,'T','MJ21130','056-CYTBRN','XL',0,0,0,0),(3338857,'T','MJ21130','154-SGGRN','L',0,0,0,0),(3338858,'T','MJ21130','154-SGGRN','M',0,0,0,0),(3338859,'T','MJ21130','154-SGGRN','S',0,0,0,0),(3338860,'T','MJ21130','154-SGGRN','XL',0,0,0,0),(3572766,'Z','BA14101','030-BLK','L',0,0,0,0),(3572767,'Z','BA14101','030-BLK','M',0,0,0,0),(3572768,'Z','BA14101','060-YLW','L',0,0,0,0),(3572769,'Z','BA14101','060-YLW','M',0,0,0,0),(3598787,'Z','BA17001','030-BLK','F',0,0,0,0),(3598788,'Z','BA17001','140-NVY','F',1,0,0,0),(3339073,'Z','BA21102','030-BLK','0812',0,0,0,0),(3339074,'Z','BA21102','030-BLK','0900',0,0,0,0),(3339075,'Z','BA21102','030-BLK','0912',0,0,0,0),(3339657,'Z','MC21104','013-OATML','L',0,0,0,0),(3339658,'Z','MC21104','013-OATML','M',0,0,0,0),(3339659,'Z','MC21104','013-OATML','S',0,0,0,0),(3339660,'Z','MC21104','013-OATML','XL',0,0,0,0),(3340041,'Z','MJ21109','154-SGGRN','L',0,0,0,0),(3340042,'Z','MJ21109','154-SGGRN','M',0,0,0,0),(3340043,'Z','MJ21109','154-SGGRN','S',0,0,0,0),(3340044,'Z','MJ21109','154-SGGRN','XL',0,0,0,0),(3340045,'Z','MJ21109','154-SGGRN','XS',0,0,0,0),(3340133,'Z','MJ21130','056-CYTBRN','L',0,0,0,0),(3340134,'Z','MJ21130','056-CYTBRN','M',0,0,0,0),(3340135,'Z','MJ21130','056-CYTBRN','S',0,0,0,0),(3340136,'Z','MJ21130','056-CYTBRN','XL',0,0,0,0),(3340137,'Z','MJ21130','154-SGGRN','L',0,0,0,0),(3340138,'Z','MJ21130','154-SGGRN','M',0,0,0,0),(3340139,'Z','MJ21130','154-SGGRN','S',0,0,0,0),(3340140,'Z','MJ21130','154-SGGRN','XL',0,0,0,0);

UNLOCK TABLES;

/*Table structure for table `tbl_stock_num_history` */

DROP TABLE IF EXISTS `tbl_stock_num_history`;

CREATE TABLE `tbl_stock_num_history` (
  `mail_remind_id` int(11) DEFAULT NULL,
  `ShopCode` varchar(50) DEFAULT NULL,
  `GoodCode` varchar(50) DEFAULT NULL,
  `ColorCode` varchar(50) DEFAULT NULL,
  `SizeCode` varchar(50) DEFAULT NULL,
  `StockNum` bigint(20) DEFAULT NULL,
  `KanoNum` bigint(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_stock_num_history` */

LOCK TABLES `tbl_stock_num_history` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_stock_num_tmp` */

DROP TABLE IF EXISTS `tbl_stock_num_tmp`;

CREATE TABLE `tbl_stock_num_tmp` (
  `SeqNo` bigint(20) DEFAULT NULL,
  `ShopCode` varchar(20) DEFAULT NULL,
  `GoodCode` varchar(20) DEFAULT NULL,
  `ColorCode` varchar(20) DEFAULT NULL,
  `SizeCode` varchar(20) DEFAULT NULL,
  `StockNum` bigint(20) DEFAULT '0',
  `KanoNum` bigint(20) DEFAULT '0',
  `KanoNum3` bigint(20) DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_stock_num_tmp` */

LOCK TABLES `tbl_stock_num_tmp` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_stone` */

DROP TABLE IF EXISTS `tbl_stone`;

CREATE TABLE `tbl_stone` (
  `stone_code` varchar(60) DEFAULT NULL,
  `stone_name` varchar(765) DEFAULT NULL,
  `display_name` text,
  `display_order` double DEFAULT NULL,
  `stone_description` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_stone` */

LOCK TABLES `tbl_stone` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_straw_aboutas` */

DROP TABLE IF EXISTS `tbl_straw_aboutas`;

CREATE TABLE `tbl_straw_aboutas` (
  `aboutas_id` varchar(225) NOT NULL,
  `aboutas_code` varchar(100) DEFAULT NULL,
  `aboutas_name` varchar(100) DEFAULT NULL,
  `aboutas_title` varchar(2000) DEFAULT NULL,
  `aboutas_content` text,
  `image` text,
  `create_date` date DEFAULT NULL,
  `modify_date` date DEFAULT NULL,
  PRIMARY KEY (`aboutas_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_straw_aboutas` */

LOCK TABLES `tbl_straw_aboutas` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_straw_information` */

DROP TABLE IF EXISTS `tbl_straw_information`;

CREATE TABLE `tbl_straw_information` (
  `info_id` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `info_code` varchar(10) COLLATE utf8_unicode_ci DEFAULT NULL,
  `info_title` varchar(200) COLLATE utf8_unicode_ci DEFAULT NULL,
  `info_content` text COLLATE utf8_unicode_ci,
  `info_image` text COLLATE utf8_unicode_ci,
  `create_date` datetime DEFAULT NULL,
  `info_status` tinyint(4) DEFAULT NULL,
  PRIMARY KEY (`info_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `tbl_straw_information` */

LOCK TABLES `tbl_straw_information` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_sys_log` */

DROP TABLE IF EXISTS `tbl_sys_log`;

CREATE TABLE `tbl_sys_log` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `sys_log` longtext,
  `sys_action` text,
  `test_int` int(10) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sys_log` */

LOCK TABLES `tbl_sys_log` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_sys_log_2` */

DROP TABLE IF EXISTS `tbl_sys_log_2`;

CREATE TABLE `tbl_sys_log_2` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `sys_log` longtext,
  `sys_action` text,
  `test_int` int(10) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sys_log_2` */

LOCK TABLES `tbl_sys_log_2` WRITE;

insert  into `tbl_sys_log_2`(`log_id`,`sys_log`,`sys_action`,`test_int`,`create_date`) values (1,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000005564\',\'2016/10/25\',\'MJ17010\',\'M-65 FIELD JACKET \'\'1st MODEL\'\'\',\'MILITARY\',\'MILITARY\',\'JKT05\',\'COTTON JACKET(MIL)\',\'17SS\',\'2017 S/S\',\'62000\',\'68200\',\'62000\',\'68200\',\'\',\'\',\'18680\',\'20548\',\'18680\',\'20548\',\'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\r\n■マテリアル/アウターシェル:コットン100%\r\nライニング:コットン50%　ポリエステル50%\r\n■ジッパー/フロント:オリジナル　ワイヤー型\r\nフード:タロン50\'\'sデッドストック　ノンロック\r\n■カラー/オリーブグリーン\',\'\',\'ггггг\',\'\',\'mj17010\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000005564\',tbl_products.create_date = \'2016/10/25\',tbl_products.goods_code = \'MJ17010\',tbl_products.slug_url = \'mj17010\',tbl_products.product_name = \'M-65 FIELD JACKET \'\'1st MODEL\'\'\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT05\',tbl_products.product_itemname = \'COTTON JACKET(MIL)\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'62000\',tbl_products.price = \'68200\',tbl_products.product_saleoff_price_no_tax = \'62000\',tbl_products.product_saleoff_price = \'68200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'18680\',tbl_products.PurchasePriceYesTax = \'20548\',tbl_products.SaleOffPurchasePriceNoTax = \'18680\',tbl_products.SaleOffPurchasePriceYesTax = \'20548\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(2,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000005564\',\'2016/10/25\',\'MJ17010\',\'M-65 FIELD JACKET  \'\'1st MODEL\'\'\',\'MILITARY\',\'MILITARY\',\'JKT05\',\'COTTON JACKET(MIL)\',\'17SS\',\'2017 S/S\',\'62000\',\'68200\',\'62000\',\'68200\',\'\',\'\',\'18680\',\'20548\',\'18680\',\'20548\',\'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\n■マテリアル/アウターシェル:コットン100%\nライニング:コットン50%　ポリエステル50%\n■ジッパー/フロント:オリジナル　ワイヤー型\nフード:タロン50\'\'sデッドストック　ノンロック\n■カラー/オリーブグリーン\',\'\',\'ггггг\',\'\',\'mj17010\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000005564\',tbl_products.create_date = \'2016/10/25\',tbl_products.goods_code = \'MJ17010\',tbl_products.slug_url = \'mj17010\',tbl_products.product_name = \'M-65 FIELD JACKET  \'\'1st MODEL\'\'\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT05\',tbl_products.product_itemname = \'COTTON JACKET(MIL)\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'62000\',tbl_products.price = \'68200\',tbl_products.product_saleoff_price_no_tax = \'62000\',tbl_products.product_saleoff_price = \'68200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'18680\',tbl_products.PurchasePriceYesTax = \'20548\',tbl_products.SaleOffPurchasePriceNoTax = \'18680\',tbl_products.SaleOffPurchasePriceYesTax = \'20548\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(3,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000005564\',\'2016/10/25\',\'MJ17010\',\'M-65 FIELD JACKET \'\'1st MODEL\'\'\',\'MILITARY\',\'MILITARY\',\'JKT05\',\'COTTON JACKET(MIL)\',\'17SS\',\'2017 S/S\',\'62000\',\'68200\',\'62000\',\'68200\',\'\',\'\',\'18680\',\'20548\',\'18680\',\'20548\',\'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\r\n■マテリアル/アウターシェル:コットン100%\r\nライニング:コットン50%　ポリエステル50%\r\n■ジッパー/フロント:オリジナル　ワイヤー型\r\nフード:タロン50\'\'sデッドストック　ノンロック\r\n■カラー/オリーブグリーン\',\'\',\'ггггг\',\'\',\'mj17010\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000005564\',tbl_products.create_date = \'2016/10/25\',tbl_products.goods_code = \'MJ17010\',tbl_products.slug_url = \'mj17010\',tbl_products.product_name = \'M-65 FIELD JACKET \'\'1st MODEL\'\'\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT05\',tbl_products.product_itemname = \'COTTON JACKET(MIL)\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'62000\',tbl_products.price = \'68200\',tbl_products.product_saleoff_price_no_tax = \'62000\',tbl_products.product_saleoff_price = \'68200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'18680\',tbl_products.PurchasePriceYesTax = \'20548\',tbl_products.SaleOffPurchasePriceNoTax = \'18680\',tbl_products.SaleOffPurchasePriceYesTax = \'20548\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(4,'1дgoodupdateд37д01000000000000005564дフィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\r\n■マテリアル/アウターシェル:コットン100%\r\nライニング:コットン50%　ポリエステル50%\r\n■ジッパー/フロント:オリジナル　ワイヤー型\r\nフード:タロン50sデッドストック　ノンロック\r\n■カラー/オリーブグリーンдMJ17010',NULL,NULL,NULL),(5,'cuckaka 2021-10-27',NULL,NULL,NULL),(6,'1дgoodupdateд37д01000000000000005564дtestдMJ17010',NULL,NULL,NULL),(7,'cuckaka 2021-10-27',NULL,NULL,NULL),(8,'cuckaka 2021-10-27',NULL,NULL,NULL),(9,'1дgoodupdateд37д01000000000000005564дtesnfkдMJ17010',NULL,NULL,NULL),(10,'cuckaka 2021-10-27',NULL,NULL,NULL),(11,'(\'01000000000000005564\',\'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\r■マテリアル/アウターシェル:コットン100%\rライニング:コットン50%　ポリエステル50%\r■ジッパー/フロント:オリジナル　ワイヤー型\rフード:タロン50\\\'sデッドストック　ノンロック\r■カラー/オリーブグリーン\',\'MJ17010\') ON DUPLICATE KEY UPDATE SeqNo = \'01000000000000005564\',product_detail = \'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\r■マテリアル/アウターシェル:コットン100%\rライニング:コットン50%　ポリエステル50%\r■ジッパー/フロント:オリジナル　ワイヤー型\rフード:タロン50\\\'sデッドストック　ノンロック\r■カラー/オリーブグリーン\',goods_code = \'MJ17010\'',NULL,NULL,NULL),(12,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000005564\',\'2016/10/25\',\'MJ17010\',\'M-65 FIELD JACKET \'\'1st MODEL\'\'\',\'MILITARY\',\'MILITARY\',\'JKT05\',\'COTTON JACKET(MIL)\',\'17SS\',\'2017 S/S\',\'62000\',\'68200\',\'62000\',\'68200\',\'\',\'\',\'18680\',\'20548\',\'18680\',\'20548\',\'フィールドジャケットの傑作、M-65の完成度の高さは有名であるが、それでもマイナーチェンジは続けられていた。今回は古着市場でもその姿を消しつつあるファースト・モデルを再現。\n■マテリアル/アウターシェル:コットン100%\nライニング:コットン50%　ポリエステル50%\n■ジッパー/フロント:オリジナル　ワイヤー型\nフード:タロン50\'\'sデッドストック　ノンロック\n■カラー/オリーブグリーン\',\'\',\'ггггг\',\'\',\'mj17010\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000005564\',tbl_products.create_date = \'2016/10/25\',tbl_products.goods_code = \'MJ17010\',tbl_products.slug_url = \'mj17010\',tbl_products.product_name = \'M-65 FIELD JACKET \'\'1st MODEL\'\'\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT05\',tbl_products.product_itemname = \'COTTON JACKET(MIL)\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'62000\',tbl_products.price = \'68200\',tbl_products.product_saleoff_price_no_tax = \'62000\',tbl_products.product_saleoff_price = \'68200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'18680\',tbl_products.PurchasePriceYesTax = \'20548\',tbl_products.SaleOffPurchasePriceNoTax = \'18680\',tbl_products.SaleOffPurchasePriceYesTax = \'20548\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(13,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01700000000000005671\',\'2017/01/30\',\'LLBO2017\',\'■Book(Lewis Leathers Vol.1)\',\'L/LEATHERS\',\'LEWIS LEATHERS\',\'Z\',\'その他\',\'17SS\',\'2017 S/S\',\'6900\',\'7590\',\'6900\',\'7590\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'\',\'\',\'\',\'\',\'llbo2017\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01700000000000005671\',tbl_products.create_date = \'2017/01/30\',tbl_products.goods_code = \'LLBO2017\',tbl_products.slug_url = \'llbo2017\',tbl_products.product_name = \'■Book(Lewis Leathers Vol.1)\',tbl_products.brand_code = \'L/LEATHERS\',tbl_products.brand_name = \'LEWIS LEATHERS\',tbl_products.product_itemcode = \'Z\',tbl_products.product_itemname = \'その他\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'6900\',tbl_products.price = \'7590\',tbl_products.product_saleoff_price_no_tax = \'6900\',tbl_products.product_saleoff_price = \'7590\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(14,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'02800000000000006680\',\'2021/10/26\',\'RB2022\',\'：THE REAL McCOY\'\'S BOOK 2022　　 （-90）\',\'\',\'\',\'AC09\',\'BOOK\',\'\',\'\',\'1000\',\'1100\',\'1000\',\'1100\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'\',\'\',\'\',\'\',\'rb2022\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'02800000000000006680\',tbl_products.create_date = \'2021/10/26\',tbl_products.goods_code = \'RB2022\',tbl_products.slug_url = \'rb2022\',tbl_products.product_name = \'：THE REAL McCOY\'\'S BOOK 2022　　 （-90）\',tbl_products.brand_code = \'\',tbl_products.brand_name = \'\',tbl_products.product_itemcode = \'AC09\',tbl_products.product_itemname = \'BOOK\',tbl_products.season_code = \'\',tbl_products.season_name = \'\',tbl_products.price_no_tax = \'1000\',tbl_products.price = \'1100\',tbl_products.product_saleoff_price_no_tax = \'1000\',tbl_products.product_saleoff_price = \'1100\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(15,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'02800000000000006680\',\'2021/10/26\',\'RB2022\',\'：THE REAL McCOY\'\'S BOOK 2022　　 （-90）\',\'\',\'\',\'AC09\',\'BOOK\',\'\',\'\',\'1000\',\'1100\',\'1000\',\'1100\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'2021年度ムック本。\',\'\',\'ггггг\',\'\',\'rb2022\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'02800000000000006680\',tbl_products.create_date = \'2021/10/26\',tbl_products.goods_code = \'RB2022\',tbl_products.slug_url = \'rb2022\',tbl_products.product_name = \'：THE REAL McCOY\'\'S BOOK 2022　　 （-90）\',tbl_products.brand_code = \'\',tbl_products.brand_name = \'\',tbl_products.product_itemcode = \'AC09\',tbl_products.product_itemname = \'BOOK\',tbl_products.season_code = \'\',tbl_products.season_name = \'\',tbl_products.price_no_tax = \'1000\',tbl_products.price = \'1100\',tbl_products.product_saleoff_price_no_tax = \'1000\',tbl_products.product_saleoff_price = \'1100\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(16,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006675\',\'2021/05/21\',\'MC21102\',\'TROUSERS, COLD WEATHER, FLEECE\',\'MILITARY\',\'MILITARY\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'24000\',\'26400\',\'24000\',\'26400\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　アクリルコットンフリース\n・ファスナー:　コイルファスナー\',\'\',\'ггггг\',\'\',\'mc21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006675\',tbl_products.create_date = \'2021/05/21\',tbl_products.goods_code = \'MC21102\',tbl_products.slug_url = \'mc21102\',tbl_products.product_name = \'TROUSERS, COLD WEATHER, FLEECE\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'24000\',tbl_products.price = \'26400\',tbl_products.product_saleoff_price_no_tax = \'24000\',tbl_products.product_saleoff_price = \'26400\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(17,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006669\',\'2021/05/14\',\'BC21101\',\'BUCO F/Z NYLON QUILTED SWEATSHIRT\',\'BUCO\',\'BUCO\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'32000\',\'35200\',\'32000\',\'35200\',\'\',\'\',\'9336\',\'10269\',\'9336\',\'10269\',\'・マテリアル:　ナイロンコットンキルト\n・フロントファスナー:　McCoyオリジナル、ニッケルメッキ\n・左胸:　刺繍ワッペン\',\'\',\'ггггг\',\'\',\'bc21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006669\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'BC21101\',tbl_products.slug_url = \'bc21101\',tbl_products.product_name = \'BUCO F/Z NYLON QUILTED SWEATSHIRT\',tbl_products.brand_code = \'BUCO\',tbl_products.brand_name = \'BUCO\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'32000\',tbl_products.price = \'35200\',tbl_products.product_saleoff_price_no_tax = \'32000\',tbl_products.product_saleoff_price = \'35200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'9336\',tbl_products.PurchasePriceYesTax = \'10269\',tbl_products.SaleOffPurchasePriceNoTax = \'9336\',tbl_products.SaleOffPurchasePriceYesTax = \'10269\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(18,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006670\',\'2021/05/14\',\'BC21102\',\'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',\'BUCO\',\'BUCO\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'25000\',\'27500\',\'25000\',\'27500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　コットン100%\n・フロントファスナー:　McCoyオリジナル、ニッケルメッキ\',\'\',\'ггггг\',\'\',\'bc21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006670\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'BC21102\',tbl_products.slug_url = \'bc21102\',tbl_products.product_name = \'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',tbl_products.brand_code = \'BUCO\',tbl_products.brand_name = \'BUCO\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'25000\',tbl_products.price = \'27500\',tbl_products.product_saleoff_price_no_tax = \'25000\',tbl_products.product_saleoff_price = \'27500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(19,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006626\',\'2021/05/14\',\'MC21101\',\'SHIRTS, PULLOVER, FLEECE\',\'MILITARY\',\'MILITARY\',\'JKT09\',\'JACKET ASSORT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'28000\',\'30800\',\'28000\',\'30800\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　アクリルコットンフリース\n・ファスナー:　コイルファスナー\',\'\',\'ггггг\',\'\',\'mc21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006626\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21101\',tbl_products.slug_url = \'mc21101\',tbl_products.product_name = \'SHIRTS, PULLOVER, FLEECE\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT09\',tbl_products.product_itemname = \'JACKET ASSORT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'28000\',tbl_products.price = \'30800\',tbl_products.product_saleoff_price_no_tax = \'28000\',tbl_products.product_saleoff_price = \'30800\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(20,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006602\',\'2021/05/14\',\'MJ21101\',\'TYPE A-2 / PARACHUTE CAMOUFLAGE LINING\',\'MILITARY\',\'MILITARY\',\'JKT01\',\'LEATHER JACKET(MIL)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'270000\',\'297000\',\'270000\',\'297000\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・レザー:　ホースハイド/タンニン鞣し、アニリンハンドフィニッシュ\n・ライニング:　ヴィンテージパラシュート\n・フロントファスナー:　40sベル型、ニッケルメッキ\n・リブ:　ウールリブ\',\'\',\'ггггг\',\'\',\'mj21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006602\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21101\',tbl_products.slug_url = \'mj21101\',tbl_products.product_name = \'TYPE A-2 / PARACHUTE CAMOUFLAGE LINING\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT01\',tbl_products.product_itemname = \'LEATHER JACKET(MIL)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'270000\',tbl_products.price = \'297000\',tbl_products.product_saleoff_price_no_tax = \'270000\',tbl_products.product_saleoff_price = \'297000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(21,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006637\',\'2021/05/14\',\'MJ21124\',\'CORDUROY DOWN VEST\',\'JOE McCOY\',\'JOE McCOY\',\'JKT08\',\'JOE JACKET(レザー以外)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'55000\',\'60500\',\'55000\',\'60500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・シェル:　コットンコーデュロイ\n・インターライニング:　ダックダウン\n・ファスナー:　上下開きビスロン\n・4つ組ボタン:　DOT社プル式\',\'\',\'ггггг\',\'\',\'mj21124\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006637\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21124\',tbl_products.slug_url = \'mj21124\',tbl_products.product_name = \'CORDUROY DOWN VEST\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'JKT08\',tbl_products.product_itemname = \'JOE JACKET(レザー以外)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'55000\',tbl_products.price = \'60500\',tbl_products.product_saleoff_price_no_tax = \'55000\',tbl_products.product_saleoff_price = \'60500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(22,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006636\',\'2021/05/14\',\'MJ21125\',\'FROGSKIN DOWN VEST\',\'JOE McCOY\',\'JOE McCOY\',\'JKT08\',\'JOE JACKET(レザー以外)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'68000\',\'74800\',\'68000\',\'74800\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・シェル:　コットンヘリンボーン(顔料プリント)\n・インターライニング:　ダックダウン\n・レザー:　ホースハイド/タンニン鞣し　アニリンフィニッシュ\n・4つ組ボタン:　DOT社プル式\n\',\'\',\'ггггг\',\'\',\'mj21125\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006636\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21125\',tbl_products.slug_url = \'mj21125\',tbl_products.product_name = \'FROGSKIN DOWN VEST\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'JKT08\',tbl_products.product_itemname = \'JOE JACKET(レザー以外)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'68000\',tbl_products.price = \'74800\',tbl_products.product_saleoff_price_no_tax = \'68000\',tbl_products.product_saleoff_price = \'74800\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(23,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006660\',\'2021/05/14\',\'MS21103\',\'8HU PRINT CORDUROY SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'36000\',\'39600\',\'36000\',\'39600\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　プリントコーデュロイ<br>\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21103\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006660\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21103\',tbl_products.slug_url = \'ms21103\',tbl_products.product_name = \'8HU PRINT CORDUROY SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'36000\',tbl_products.price = \'39600\',tbl_products.product_saleoff_price_no_tax = \'36000\',tbl_products.product_saleoff_price = \'39600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(24,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006660\',\'2021/05/14\',\'MS21103\',\'8HU PRINT CORDUROY SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'36000\',\'39600\',\'36000\',\'39600\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　プリントコーデュロイ<br>\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21103\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006660\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21103\',tbl_products.slug_url = \'ms21103\',tbl_products.product_name = \'8HU PRINT CORDUROY SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'36000\',tbl_products.price = \'39600\',tbl_products.product_saleoff_price_no_tax = \'36000\',tbl_products.product_saleoff_price = \'39600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(25,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006662\',\'2021/05/14\',\'MS21106\',\'JM P/O BUTTON-DOWN SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'20000\',\'22000\',\'20000\',\'22000\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　甘織りカツラギ<br>\n・ボタン:　高瀬貝ボタン\',\'\',\'ггггг\',\'\',\'ms21106\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006662\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21106\',tbl_products.slug_url = \'ms21106\',tbl_products.product_name = \'JM P/O BUTTON-DOWN SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'20000\',tbl_products.price = \'22000\',tbl_products.product_saleoff_price_no_tax = \'20000\',tbl_products.product_saleoff_price = \'22000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(26,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006662\',\'2021/05/14\',\'MS21106\',\'JM P/O BUTTON-DOWN SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'20000\',\'22000\',\'20000\',\'22000\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　甘織りカツラギ<br>\n・ボタン:　高瀬貝ボタン\',\'\',\'ггггг\',\'\',\'ms21106\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006662\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21106\',tbl_products.slug_url = \'ms21106\',tbl_products.product_name = \'JM P/O BUTTON-DOWN SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'20000\',tbl_products.price = \'22000\',tbl_products.product_saleoff_price_no_tax = \'20000\',tbl_products.product_saleoff_price = \'22000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(27,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006623\',\'2021/05/14\',\'MS21107\',\'SHIRT, COLD WEATHER, FIELD, WOOL/NYLON\',\'MILITARY\',\'MILITARY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'26000\',\'28600\',\'26000\',\'28600\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　ナイロンウール　\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21107\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006623\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21107\',tbl_products.slug_url = \'ms21107\',tbl_products.product_name = \'SHIRT, COLD WEATHER, FIELD, WOOL/NYLON\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'26000\',tbl_products.price = \'28600\',tbl_products.product_saleoff_price_no_tax = \'26000\',tbl_products.product_saleoff_price = \'28600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(28,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006625\',\'2021/05/14\',\'MS21108\',\'MILITARY SOUVENIR WOOL SHIRT\',\'MILITARY\',\'MILITARY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'26000\',\'28600\',\'26000\',\'28600\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　ナイロンウール　\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21108\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006625\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21108\',tbl_products.slug_url = \'ms21108\',tbl_products.product_name = \'MILITARY SOUVENIR WOOL SHIRT\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'26000\',tbl_products.price = \'28600\',tbl_products.product_saleoff_price_no_tax = \'26000\',tbl_products.product_saleoff_price = \'28600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(29,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006670\',\'2021/05/14\',\'BC21102\',\'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',\'BUCO\',\'BUCO\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'25000\',\'27500\',\'25000\',\'27500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　コットン100%\n・フロントファスナー:　McCoyオリジナル、ニッケルメッキ\',\'\',\'ггггг\',\'\',\'bc21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006670\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'BC21102\',tbl_products.slug_url = \'bc21102\',tbl_products.product_name = \'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',tbl_products.brand_code = \'BUCO\',tbl_products.brand_name = \'BUCO\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'25000\',tbl_products.price = \'27500\',tbl_products.product_saleoff_price_no_tax = \'25000\',tbl_products.product_saleoff_price = \'27500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(30,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006657\',\'2021/05/14\',\'MC21116\',\'WAFFLE STRIPE THERMAL SHIRT L/S\',\'JOE McCOY\',\'JOE McCOY\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'11000\',\'12100\',\'11000\',\'12100\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　コットン100%\',\'\',\'ггггг\',\'\',\'mc21116\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006657\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21116\',tbl_products.slug_url = \'mc21116\',tbl_products.product_name = \'WAFFLE STRIPE THERMAL SHIRT L/S\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'11000\',tbl_products.price = \'12100\',tbl_products.product_saleoff_price_no_tax = \'11000\',tbl_products.product_saleoff_price = \'12100\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(31,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006648\',\'2021/05/14\',\'MC21115\',\'WOOL CASHMERE CARDIGAN\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'21FWSE\',\'2021 F/W SEASONAL\',\'35000\',\'38500\',\'35000\',\'38500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル: カシミア混ウール\n・ボタン: 尿素ボタン\',\'\',\'ггггг\',\'\',\'mc21115\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006648\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21115\',tbl_products.slug_url = \'mc21115\',tbl_products.product_name = \'WOOL CASHMERE CARDIGAN\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'35000\',tbl_products.price = \'38500\',tbl_products.product_saleoff_price_no_tax = \'35000\',tbl_products.product_saleoff_price = \'38500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(32,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006648\',\'2021/05/14\',\'MC21115\',\'WOOL CASHMERE CARDIGAN\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'21FWSE\',\'2021 F/W SEASONAL\',\'35000\',\'38500\',\'35000\',\'38500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル: カシミア混ウール\n・ボタン: 尿素ボタン\',\'\',\'ггггг\',\'\',\'mc21115\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006648\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21115\',tbl_products.slug_url = \'mc21115\',tbl_products.product_name = \'WOOL CASHMERE CARDIGAN\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'35000\',tbl_products.price = \'38500\',tbl_products.product_saleoff_price_no_tax = \'35000\',tbl_products.product_saleoff_price = \'38500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(33,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006649\',\'2021/05/14\',\'MC21114\',\'WOOL CREWNECK SWEATER\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'21FWSE\',\'2021 F/W SEASONAL\',\'25000\',\'27500\',\'25000\',\'27500\',\'\',\'\',\'0\',\'0\',\'0\',\'0\',\'・マテリアル:　7Gラムウール 混\',\'\',\'ггггг\',\'\',\'mc21114\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006649\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21114\',tbl_products.slug_url = \'mc21114\',tbl_products.product_name = \'WOOL CREWNECK SWEATER\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'25000\',tbl_products.price = \'27500\',tbl_products.product_saleoff_price_no_tax = \'25000\',tbl_products.product_saleoff_price = \'27500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'0\',tbl_products.PurchasePriceYesTax = \'0\',tbl_products.SaleOffPurchasePriceNoTax = \'0\',tbl_products.SaleOffPurchasePriceYesTax = \'0\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(34,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01500000000000005662\',\'2016/10/26\',\'MA17020\',\'WELLINGTON SUN GLASSES\',\'JOE McCOY\',\'JOE McCOY\',\'AC07\',\'ACCESSORY ASSORT\',\'17SS\',\'2017 S/S\',\'30000\',\'33000\',\'30000\',\'33000\',\'\',\'\',\'7350\',\'8085\',\'7350\',\'8085\',\'2層削り出しの生地を使い、当時の丸みを再現している。\n■ガラスレンズ\n\',\'\',\'ггггг\',\'\',\'ma17020\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01500000000000005662\',tbl_products.create_date = \'2016/10/26\',tbl_products.goods_code = \'MA17020\',tbl_products.slug_url = \'ma17020\',tbl_products.product_name = \'WELLINGTON SUN GLASSES\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'AC07\',tbl_products.product_itemname = \'ACCESSORY ASSORT\',tbl_products.season_code = \'17SS\',tbl_products.season_name = \'2017 S/S\',tbl_products.price_no_tax = \'30000\',tbl_products.price = \'33000\',tbl_products.product_saleoff_price_no_tax = \'30000\',tbl_products.product_saleoff_price = \'33000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'7350\',tbl_products.PurchasePriceYesTax = \'8085\',tbl_products.SaleOffPurchasePriceNoTax = \'7350\',tbl_products.SaleOffPurchasePriceYesTax = \'8085\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(35,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01200000000000005785\',\'2017/03/13\',\'MA17112\',\'REAL McCOY’S ATHLETIC UNDERWEAR LONG\',\'JOE McCOY\',\'JOE McCOY\',\'AC07\',\'ACCESSORY ASSORT\',\'17FW\',\'2017 F/W\',\'4000\',\'4400\',\'4000\',\'4400\',\'\',\'\',\'1540\',\'1694\',\'1540\',\'1694\',\'■マテリアル/コットン100%\',\'\',\'ггггг\',\'\',\'ma17112\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01200000000000005785\',tbl_products.create_date = \'2017/03/13\',tbl_products.goods_code = \'MA17112\',tbl_products.slug_url = \'ma17112\',tbl_products.product_name = \'REAL McCOY’S ATHLETIC UNDERWEAR LONG\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'AC07\',tbl_products.product_itemname = \'ACCESSORY ASSORT\',tbl_products.season_code = \'17FW\',tbl_products.season_name = \'2017 F/W\',tbl_products.price_no_tax = \'4000\',tbl_products.price = \'4400\',tbl_products.product_saleoff_price_no_tax = \'4000\',tbl_products.product_saleoff_price = \'4400\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'1540\',tbl_products.PurchasePriceYesTax = \'1694\',tbl_products.SaleOffPurchasePriceNoTax = \'1540\',tbl_products.SaleOffPurchasePriceYesTax = \'1694\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(36,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01200000000000005784\',\'2017/03/13\',\'MA17111\',\'REAL McCOY’S ATHLETIC UNDERWEAR SHORT\',\'JOE McCOY\',\'JOE McCOY\',\'AC07\',\'ACCESSORY ASSORT\',\'17FW\',\'2017 F/W\',\'4000\',\'4400\',\'4000\',\'4400\',\'\',\'\',\'1510\',\'1661\',\'1510\',\'1661\',\'■マテリアル/コットン100%\',\'\',\'ггггг\',\'\',\'ma17111\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01200000000000005784\',tbl_products.create_date = \'2017/03/13\',tbl_products.goods_code = \'MA17111\',tbl_products.slug_url = \'ma17111\',tbl_products.product_name = \'REAL McCOY’S ATHLETIC UNDERWEAR SHORT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'AC07\',tbl_products.product_itemname = \'ACCESSORY ASSORT\',tbl_products.season_code = \'17FW\',tbl_products.season_name = \'2017 F/W\',tbl_products.price_no_tax = \'4000\',tbl_products.price = \'4400\',tbl_products.product_saleoff_price_no_tax = \'4000\',tbl_products.product_saleoff_price = \'4400\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'1510\',tbl_products.PurchasePriceYesTax = \'1661\',tbl_products.SaleOffPurchasePriceNoTax = \'1510\',tbl_products.SaleOffPurchasePriceYesTax = \'1661\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(37,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01200000000000005783\',\'2017/03/13\',\'MA17110\',\'NATIVE WOOL BLANKET TOTE BAG\',\'JOE McCOY\',\'JOE McCOY\',\'AC03\',\'BAG\',\'17FW\',\'2017 F/W\',\'60000\',\'66000\',\'60000\',\'66000\',\'\',\'\',\'14607\',\'16067\',\'14607\',\'16067\',\'■表地/ジャカード織ウールブランケット　\n■裏地/コットン100%\n■ハンドル/ホースハイド\',\'\',\'ггггг\',\'\',\'ma17110\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01200000000000005783\',tbl_products.create_date = \'2017/03/13\',tbl_products.goods_code = \'MA17110\',tbl_products.slug_url = \'ma17110\',tbl_products.product_name = \'NATIVE WOOL BLANKET TOTE BAG\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'AC03\',tbl_products.product_itemname = \'BAG\',tbl_products.season_code = \'17FW\',tbl_products.season_name = \'2017 F/W\',tbl_products.price_no_tax = \'60000\',tbl_products.price = \'66000\',tbl_products.product_saleoff_price_no_tax = \'60000\',tbl_products.product_saleoff_price = \'66000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'14607\',tbl_products.PurchasePriceYesTax = \'16067\',tbl_products.SaleOffPurchasePriceNoTax = \'14607\',tbl_products.SaleOffPurchasePriceYesTax = \'16067\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(38,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01100000000000005921\',\'2017/09/26\',\'MW18001\',\'HORSEHIDE CUSHION\',\'JOE McCOY\',\'JOE McCOY\',\'AC08\',\'NOVELTY\',\'18SS\',\'2018 S/S\',\'12000\',\'13200\',\'12000\',\'13200\',\'\',\'\',\'3215\',\'3536\',\'3215\',\'3536\',\'■マテリアル/ホースハイド\n\n■SIZE / W45cm×H20cm×D45cm\',\'\',\'ггггг\',\'\',\'mw18001\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01100000000000005921\',tbl_products.create_date = \'2017/09/26\',tbl_products.goods_code = \'MW18001\',tbl_products.slug_url = \'mw18001\',tbl_products.product_name = \'HORSEHIDE CUSHION\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'AC08\',tbl_products.product_itemname = \'NOVELTY\',tbl_products.season_code = \'18SS\',tbl_products.season_name = \'2018 S/S\',tbl_products.price_no_tax = \'12000\',tbl_products.price = \'13200\',tbl_products.product_saleoff_price_no_tax = \'12000\',tbl_products.product_saleoff_price = \'13200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'3215\',tbl_products.PurchasePriceYesTax = \'3536\',tbl_products.SaleOffPurchasePriceNoTax = \'3215\',tbl_products.SaleOffPurchasePriceYesTax = \'3536\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(39,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01100000000000005936\',\'2018/03/05\',\'MJ18102\',\'TYPE B-6 REAL MCCOY MFG. CO.\',\'MILITARY\',\'MILITARY\',\'JKT01\',\'LEATHER JACKET(MIL)\',\'18FW\',\'2018 F/W\',\'300000\',\'330000\',\'300000\',\'330000\',\'\',\'\',\'96299\',\'105928\',\'96299\',\'105928\',\'■シープスキン　コンビネーション鞣しポリアクリルラッカー仕上げ\n■ホースハイド　タンニン鞣しピグメント仕上げ\n■タロンジッパー/40sベル型\',\'\',\'ггггг\',\'\',\'mj18102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01100000000000005936\',tbl_products.create_date = \'2018/03/05\',tbl_products.goods_code = \'MJ18102\',tbl_products.slug_url = \'mj18102\',tbl_products.product_name = \'TYPE B-6 REAL MCCOY MFG. CO.\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT01\',tbl_products.product_itemname = \'LEATHER JACKET(MIL)\',tbl_products.season_code = \'18FW\',tbl_products.season_name = \'2018 F/W\',tbl_products.price_no_tax = \'300000\',tbl_products.price = \'330000\',tbl_products.product_saleoff_price_no_tax = \'300000\',tbl_products.product_saleoff_price = \'330000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'96299\',tbl_products.PurchasePriceYesTax = \'105928\',tbl_products.SaleOffPurchasePriceNoTax = \'96299\',tbl_products.SaleOffPurchasePriceYesTax = \'105928\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(40,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01100000000000005936\',\'2018/03/05\',\'MJ18102\',\'TYPE B-6 REAL MCCOY MFG. CO.\',\'MILITARY\',\'MILITARY\',\'JKT01\',\'LEATHER JACKET(MIL)\',\'18FW\',\'2018 F/W\',\'300000\',\'330000\',\'300000\',\'330000\',\'\',\'\',\'96299\',\'105928\',\'96299\',\'105928\',\'■シープスキン　コンビネーション鞣しポリアクリルラッカー仕上げ\n■ホースハイド　タンニン鞣しピグメント仕上げ\n■タロンジッパー/40sベル型\',\'\',\'ггггг\',\'\',\'mj18102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01100000000000005936\',tbl_products.create_date = \'2018/03/05\',tbl_products.goods_code = \'MJ18102\',tbl_products.slug_url = \'mj18102\',tbl_products.product_name = \'TYPE B-6 REAL MCCOY MFG. CO.\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT01\',tbl_products.product_itemname = \'LEATHER JACKET(MIL)\',tbl_products.season_code = \'18FW\',tbl_products.season_name = \'2018 F/W\',tbl_products.price_no_tax = \'300000\',tbl_products.price = \'330000\',tbl_products.product_saleoff_price_no_tax = \'300000\',tbl_products.product_saleoff_price = \'330000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'96299\',tbl_products.PurchasePriceYesTax = \'105928\',tbl_products.SaleOffPurchasePriceNoTax = \'96299\',tbl_products.SaleOffPurchasePriceYesTax = \'105928\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(41,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000006024\',\'2018/03/06\',\'MW18101\',\'HORSEHIDE CUSHION (LARGE)\',\'NOVELTY\',\'NOVELTY GOODS\',\'AC08\',\'NOVELTY\',\'18FW\',\'2018 F/W\',\'15000\',\'16500\',\'15000\',\'16500\',\'\',\'\',\'4015\',\'4416\',\'4015\',\'4416\',\'■マテリアル/ホースハイド\n\n■SIZE / W60cm×H20cm×D60cm\',\'\',\'ггггг\',\'\',\'mw18101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000006024\',tbl_products.create_date = \'2018/03/06\',tbl_products.goods_code = \'MW18101\',tbl_products.slug_url = \'mw18101\',tbl_products.product_name = \'HORSEHIDE CUSHION (LARGE)\',tbl_products.brand_code = \'NOVELTY\',tbl_products.brand_name = \'NOVELTY GOODS\',tbl_products.product_itemcode = \'AC08\',tbl_products.product_itemname = \'NOVELTY\',tbl_products.season_code = \'18FW\',tbl_products.season_name = \'2018 F/W\',tbl_products.price_no_tax = \'15000\',tbl_products.price = \'16500\',tbl_products.product_saleoff_price_no_tax = \'15000\',tbl_products.product_saleoff_price = \'16500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'4015\',tbl_products.PurchasePriceYesTax = \'4416\',tbl_products.SaleOffPurchasePriceNoTax = \'4015\',tbl_products.SaleOffPurchasePriceYesTax = \'4416\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(42,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01200000000000006172\',\'2018/09/26\',\'BC19005\',\'BUCO STRIPE TEE S/S\',\'BUCO\',\'BUCO\',\'T01\',\'S/S TEE\',\'19SS\',\'2019 S/S\',\'9000\',\'9900\',\'9000\',\'9900\',\'\',\'\',\'2010\',\'2211\',\'2010\',\'2211\',\'■コットン100%\',\'\',\'ггггг\',\'\',\'bc19005\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01200000000000006172\',tbl_products.create_date = \'2018/09/26\',tbl_products.goods_code = \'BC19005\',tbl_products.slug_url = \'bc19005\',tbl_products.product_name = \'BUCO STRIPE TEE S/S\',tbl_products.brand_code = \'BUCO\',tbl_products.brand_name = \'BUCO\',tbl_products.product_itemcode = \'T01\',tbl_products.product_itemname = \'S/S TEE\',tbl_products.season_code = \'19SS\',tbl_products.season_name = \'2019 S/S\',tbl_products.price_no_tax = \'9000\',tbl_products.price = \'9900\',tbl_products.product_saleoff_price_no_tax = \'9000\',tbl_products.product_saleoff_price = \'9900\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'2010\',tbl_products.PurchasePriceYesTax = \'2211\',tbl_products.SaleOffPurchasePriceNoTax = \'2010\',tbl_products.SaleOffPurchasePriceYesTax = \'2211\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(43,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000006231\',\'2019/03/27\',\'MJ19124\',\'REAL McCOY\'\'S Lot.004J\',\'JOE McCOY\',\'JOE McCOY\',\'JKT08\',\'JOE JACKET(レザー以外)\',\'19FW\',\'2019 F/W\',\'36000\',\'39600\',\'36000\',\'39600\',\'\',\'\',\'9720\',\'10692\',\'9720\',\'10692\',\'■14.5オンスデニム\n■ディアスキンラベル\',\'\',\'ггггг\',\'\',\'mj19124\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000006231\',tbl_products.create_date = \'2019/03/27\',tbl_products.goods_code = \'MJ19124\',tbl_products.slug_url = \'mj19124\',tbl_products.product_name = \'REAL McCOY\'\'S Lot.004J\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'JKT08\',tbl_products.product_itemname = \'JOE JACKET(レザー以外)\',tbl_products.season_code = \'19FW\',tbl_products.season_name = \'2019 F/W\',tbl_products.price_no_tax = \'36000\',tbl_products.price = \'39600\',tbl_products.product_saleoff_price_no_tax = \'36000\',tbl_products.product_saleoff_price = \'39600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'9720\',tbl_products.PurchasePriceYesTax = \'10692\',tbl_products.SaleOffPurchasePriceNoTax = \'9720\',tbl_products.SaleOffPurchasePriceYesTax = \'10692\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(44,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'01000000000000006210\',\'2019/03/26\',\'MC19103\',\'JM MOHAIR CARDIGAN\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'19FW\',\'2019 F/W\',\'60000\',\'66000\',\'60000\',\'66000\',\'\',\'\',\'17320\',\'19052\',\'17320\',\'19052\',\'■ダブルジャカード　モヘア80% ウール20%\',\'\',\'ггггг\',\'\',\'mc19103\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'01000000000000006210\',tbl_products.create_date = \'2019/03/26\',tbl_products.goods_code = \'MC19103\',tbl_products.slug_url = \'mc19103\',tbl_products.product_name = \'JM MOHAIR CARDIGAN\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'19FW\',tbl_products.season_name = \'2019 F/W\',tbl_products.price_no_tax = \'60000\',tbl_products.price = \'66000\',tbl_products.product_saleoff_price_no_tax = \'60000\',tbl_products.product_saleoff_price = \'66000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'17320\',tbl_products.PurchasePriceYesTax = \'19052\',tbl_products.SaleOffPurchasePriceNoTax = \'17320\',tbl_products.SaleOffPurchasePriceYesTax = \'19052\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(45,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006670\',\'2021/05/14\',\'BC21102\',\'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',\'BUCO\',\'BUCO\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'25000\',\'27500\',\'25000\',\'27500\',\'\',\'\',\'7313\',\'8044\',\'7313\',\'8044\',\'・マテリアル:　コットン100%\n・フロントファスナー:　McCoyオリジナル、ニッケルメッキ\',\'\',\'ггггг\',\'\',\'bc21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006670\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'BC21102\',tbl_products.slug_url = \'bc21102\',tbl_products.product_name = \'BUCO F/Z SWEATSHIRT / BUCO HELMET LOGO\',tbl_products.brand_code = \'BUCO\',tbl_products.brand_name = \'BUCO\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'25000\',tbl_products.price = \'27500\',tbl_products.product_saleoff_price_no_tax = \'25000\',tbl_products.product_saleoff_price = \'27500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'7313\',tbl_products.PurchasePriceYesTax = \'8044\',tbl_products.SaleOffPurchasePriceNoTax = \'7313\',tbl_products.SaleOffPurchasePriceYesTax = \'8044\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(46,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006626\',\'2021/05/14\',\'MC21101\',\'SHIRTS, PULLOVER, FLEECE\',\'MILITARY\',\'MILITARY\',\'JKT09\',\'JACKET ASSORT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'28000\',\'30800\',\'28000\',\'30800\',\'\',\'\',\'7088\',\'7796\',\'7088\',\'7796\',\'・マテリアル:　アクリルコットンフリース\n・ファスナー:　コイルファスナー\',\'\',\'ггггг\',\'\',\'mc21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006626\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21101\',tbl_products.slug_url = \'mc21101\',tbl_products.product_name = \'SHIRTS, PULLOVER, FLEECE\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT09\',tbl_products.product_itemname = \'JACKET ASSORT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'28000\',tbl_products.price = \'30800\',tbl_products.product_saleoff_price_no_tax = \'28000\',tbl_products.product_saleoff_price = \'30800\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'7088\',tbl_products.PurchasePriceYesTax = \'7796\',tbl_products.SaleOffPurchasePriceNoTax = \'7088\',tbl_products.SaleOffPurchasePriceYesTax = \'7796\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(47,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006675\',\'2021/05/21\',\'MC21102\',\'TROUSERS, COLD WEATHER, FLEECE\',\'MILITARY\',\'MILITARY\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'24000\',\'26400\',\'24000\',\'26400\',\'\',\'\',\'6771\',\'7448\',\'6771\',\'7448\',\'・マテリアル:　アクリルコットンフリース\n・ファスナー:　コイルファスナー\',\'\',\'ггггг\',\'\',\'mc21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006675\',tbl_products.create_date = \'2021/05/21\',tbl_products.goods_code = \'MC21102\',tbl_products.slug_url = \'mc21102\',tbl_products.product_name = \'TROUSERS, COLD WEATHER, FLEECE\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'24000\',tbl_products.price = \'26400\',tbl_products.product_saleoff_price_no_tax = \'24000\',tbl_products.product_saleoff_price = \'26400\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'6771\',tbl_products.PurchasePriceYesTax = \'7448\',tbl_products.SaleOffPurchasePriceNoTax = \'6771\',tbl_products.SaleOffPurchasePriceYesTax = \'7448\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(48,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006655\',\'2021/05/14\',\'MC21110\',\'HEAVY COTTON FOOTBALL TEE\',\'JOE McCOY\',\'JOE McCOY\',\'T02\',\'L/S TEE\',\'21FWSE\',\'2021 F/W SEASONAL\',\'12000\',\'13200\',\'12000\',\'13200\',\'\',\'\',\'3311\',\'3642\',\'3311\',\'3642\',\'\',\'\',\'\',\'\',\'mc21110\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006655\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21110\',tbl_products.slug_url = \'mc21110\',tbl_products.product_name = \'HEAVY COTTON FOOTBALL TEE\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'T02\',tbl_products.product_itemname = \'L/S TEE\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'12000\',tbl_products.price = \'13200\',tbl_products.product_saleoff_price_no_tax = \'12000\',tbl_products.product_saleoff_price = \'13200\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'3311\',tbl_products.PurchasePriceYesTax = \'3642\',tbl_products.SaleOffPurchasePriceNoTax = \'3311\',tbl_products.SaleOffPurchasePriceYesTax = \'3642\',tbl_products.StoreCommentO = \'\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(49,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006649\',\'2021/05/14\',\'MC21114\',\'WOOL CREWNECK SWEATER\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'21FWSE\',\'2021 F/W SEASONAL\',\'25000\',\'27500\',\'25000\',\'27500\',\'\',\'\',\'7039\',\'7742\',\'7039\',\'7742\',\'・マテリアル:　7Gラムウール 混\',\'\',\'ггггг\',\'\',\'mc21114\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006649\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21114\',tbl_products.slug_url = \'mc21114\',tbl_products.product_name = \'WOOL CREWNECK SWEATER\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'25000\',tbl_products.price = \'27500\',tbl_products.product_saleoff_price_no_tax = \'25000\',tbl_products.product_saleoff_price = \'27500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'7039\',tbl_products.PurchasePriceYesTax = \'7742\',tbl_products.SaleOffPurchasePriceNoTax = \'7039\',tbl_products.SaleOffPurchasePriceYesTax = \'7742\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(50,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006648\',\'2021/05/14\',\'MC21115\',\'WOOL CASHMERE CARDIGAN\',\'JOE McCOY\',\'JOE McCOY\',\'KN\',\'KNIT SWEATER\',\'21FWSE\',\'2021 F/W SEASONAL\',\'35000\',\'38500\',\'35000\',\'38500\',\'\',\'\',\'9930\',\'10923\',\'9930\',\'10923\',\'・マテリアル: カシミア混ウール\n・ボタン: 尿素ボタン\',\'\',\'ггггг\',\'\',\'mc21115\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006648\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21115\',tbl_products.slug_url = \'mc21115\',tbl_products.product_name = \'WOOL CASHMERE CARDIGAN\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'KN\',tbl_products.product_itemname = \'KNIT SWEATER\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'35000\',tbl_products.price = \'38500\',tbl_products.product_saleoff_price_no_tax = \'35000\',tbl_products.product_saleoff_price = \'38500\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'9930\',tbl_products.PurchasePriceYesTax = \'10923\',tbl_products.SaleOffPurchasePriceNoTax = \'9930\',tbl_products.SaleOffPurchasePriceYesTax = \'10923\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(51,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006657\',\'2021/05/14\',\'MC21116\',\'WAFFLE STRIPE THERMAL SHIRT L/S\',\'JOE McCOY\',\'JOE McCOY\',\'SW02\',\'L/S SWEAT\',\'21FWSE\',\'2021 F/W SEASONAL\',\'11000\',\'12100\',\'11000\',\'12100\',\'\',\'\',\'3260\',\'3586\',\'3260\',\'3586\',\'・マテリアル:　コットン100%\',\'\',\'ггггг\',\'\',\'mc21116\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006657\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MC21116\',tbl_products.slug_url = \'mc21116\',tbl_products.product_name = \'WAFFLE STRIPE THERMAL SHIRT L/S\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SW02\',tbl_products.product_itemname = \'L/S SWEAT\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'11000\',tbl_products.price = \'12100\',tbl_products.product_saleoff_price_no_tax = \'11000\',tbl_products.product_saleoff_price = \'12100\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'3260\',tbl_products.PurchasePriceYesTax = \'3586\',tbl_products.SaleOffPurchasePriceNoTax = \'3260\',tbl_products.SaleOffPurchasePriceYesTax = \'3586\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(52,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006602\',\'2021/05/14\',\'MJ21101\',\'TYPE A-2 / PARACHUTE CAMOUFLAGE LINING\',\'MILITARY\',\'MILITARY\',\'JKT01\',\'LEATHER JACKET(MIL)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'270000\',\'297000\',\'270000\',\'297000\',\'\',\'\',\'66792\',\'73471\',\'66792\',\'73471\',\'・レザー:　ホースハイド/タンニン鞣し、アニリンハンドフィニッシュ\n・ライニング:　ヴィンテージパラシュート\n・フロントファスナー:　40sベル型、ニッケルメッキ\n・リブ:　ウールリブ\',\'\',\'ггггг\',\'\',\'mj21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006602\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21101\',tbl_products.slug_url = \'mj21101\',tbl_products.product_name = \'TYPE A-2 / PARACHUTE CAMOUFLAGE LINING\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT01\',tbl_products.product_itemname = \'LEATHER JACKET(MIL)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'270000\',tbl_products.price = \'297000\',tbl_products.product_saleoff_price_no_tax = \'270000\',tbl_products.product_saleoff_price = \'297000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'66792\',tbl_products.PurchasePriceYesTax = \'73471\',tbl_products.SaleOffPurchasePriceNoTax = \'66792\',tbl_products.SaleOffPurchasePriceYesTax = \'73471\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(53,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006622\',\'2021/05/14\',\'MJ21115\',\'DISPATCH RIDER\'\'S COAT (OVER-DYE)\',\'MILITARY\',\'MILITARY\',\'JKT05\',\'COTTON JACKET(MIL)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'160000\',\'176000\',\'160000\',\'176000\',\'\',\'\',\'47826\',\'52608\',\'47826\',\'52608\',\'\',\'\',\'\',\'\',\'mj21115\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006622\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21115\',tbl_products.slug_url = \'mj21115\',tbl_products.product_name = \'DISPATCH RIDER\'\'S COAT (OVER-DYE)\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT05\',tbl_products.product_itemname = \'COTTON JACKET(MIL)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'160000\',tbl_products.price = \'176000\',tbl_products.product_saleoff_price_no_tax = \'160000\',tbl_products.product_saleoff_price = \'176000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'47826\',tbl_products.PurchasePriceYesTax = \'52608\',tbl_products.SaleOffPurchasePriceNoTax = \'47826\',tbl_products.SaleOffPurchasePriceYesTax = \'52608\',tbl_products.StoreCommentO = \'\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(54,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006603\',\'2021/05/14\',\'MJ21102\',\'TYPE A-2 / FLYING TIGERS (PRINT)\',\'MILITARY\',\'MILITARY\',\'JKT01\',\'LEATHER JACKET(MIL)\',\'21FWSE\',\'2021 F/W SEASONAL\',\'260000\',\'286000\',\'260000\',\'286000\',\'\',\'\',\'59997\',\'65996\',\'59997\',\'65996\',\'・レザー:　ホースハイド/タンニン鞣し、ピグメントフィニッシュ\n・ライニング:　コットンブロード\n・フロントファスナー:　40sベル型、ニッケルメッキ\n・リブ:　ウールリブ\n・袖ワッペン:　刺繍フェルトワッペン\n・左胸、背中:　手作業特殊ラバープリント\',\'\',\'ггггг\',\'\',\'mj21102\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006603\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MJ21102\',tbl_products.slug_url = \'mj21102\',tbl_products.product_name = \'TYPE A-2 / FLYING TIGERS (PRINT)\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'JKT01\',tbl_products.product_itemname = \'LEATHER JACKET(MIL)\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'260000\',tbl_products.price = \'286000\',tbl_products.product_saleoff_price_no_tax = \'260000\',tbl_products.product_saleoff_price = \'286000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'59997\',tbl_products.PurchasePriceYesTax = \'65996\',tbl_products.SaleOffPurchasePriceNoTax = \'59997\',tbl_products.SaleOffPurchasePriceYesTax = \'65996\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(55,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006624\',\'2021/05/14\',\'MS21101\',\'MILITARY SOUVENIR WOOL SHIRT / U.S. NAVY\',\'MILITARY\',\'MILITARY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'38000\',\'41800\',\'38000\',\'41800\',\'\',\'\',\'9835\',\'10818\',\'9835\',\'10818\',\'\',\'\',\'\',\'\',\'ms21101\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006624\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21101\',tbl_products.slug_url = \'ms21101\',tbl_products.product_name = \'MILITARY SOUVENIR WOOL SHIRT / U.S. NAVY\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'38000\',tbl_products.price = \'41800\',tbl_products.product_saleoff_price_no_tax = \'38000\',tbl_products.product_saleoff_price = \'41800\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'9835\',tbl_products.PurchasePriceYesTax = \'10818\',tbl_products.SaleOffPurchasePriceNoTax = \'9835\',tbl_products.SaleOffPurchasePriceYesTax = \'10818\',tbl_products.StoreCommentO = \'\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(56,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006660\',\'2021/05/14\',\'MS21103\',\'8HU PRINT CORDUROY SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'36000\',\'39600\',\'36000\',\'39600\',\'\',\'\',\'10561\',\'11617\',\'10561\',\'11617\',\'・マテリアル:　プリントコーデュロイ<br>\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21103\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006660\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21103\',tbl_products.slug_url = \'ms21103\',tbl_products.product_name = \'8HU PRINT CORDUROY SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'36000\',tbl_products.price = \'39600\',tbl_products.product_saleoff_price_no_tax = \'36000\',tbl_products.product_saleoff_price = \'39600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'10561\',tbl_products.PurchasePriceYesTax = \'11617\',tbl_products.SaleOffPurchasePriceNoTax = \'10561\',tbl_products.SaleOffPurchasePriceYesTax = \'11617\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(57,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006662\',\'2021/05/14\',\'MS21106\',\'JM P/O BUTTON-DOWN SHIRT\',\'JOE McCOY\',\'JOE McCOY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'20000\',\'22000\',\'20000\',\'22000\',\'\',\'\',\'4648\',\'5112\',\'4648\',\'5112\',\'・マテリアル:　甘織りカツラギ<br>\n・ボタン:　高瀬貝ボタン\',\'\',\'ггггг\',\'\',\'ms21106\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006662\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21106\',tbl_products.slug_url = \'ms21106\',tbl_products.product_name = \'JM P/O BUTTON-DOWN SHIRT\',tbl_products.brand_code = \'JOE McCOY\',tbl_products.brand_name = \'JOE McCOY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'20000\',tbl_products.price = \'22000\',tbl_products.product_saleoff_price_no_tax = \'20000\',tbl_products.product_saleoff_price = \'22000\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'4648\',tbl_products.PurchasePriceYesTax = \'5112\',tbl_products.SaleOffPurchasePriceNoTax = \'4648\',tbl_products.SaleOffPurchasePriceYesTax = \'5112\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(58,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006623\',\'2021/05/14\',\'MS21107\',\'SHIRT, COLD WEATHER, FIELD, WOOL/NYLON\',\'MILITARY\',\'MILITARY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'26000\',\'28600\',\'26000\',\'28600\',\'\',\'\',\'6275\',\'6902\',\'6275\',\'6902\',\'・マテリアル:　ナイロンウール　\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21107\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006623\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21107\',tbl_products.slug_url = \'ms21107\',tbl_products.product_name = \'SHIRT, COLD WEATHER, FIELD, WOOL/NYLON\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'26000\',tbl_products.price = \'28600\',tbl_products.product_saleoff_price_no_tax = \'26000\',tbl_products.product_saleoff_price = \'28600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'6275\',tbl_products.PurchasePriceYesTax = \'6902\',tbl_products.SaleOffPurchasePriceNoTax = \'6275\',tbl_products.SaleOffPurchasePriceYesTax = \'6902\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL),(59,'\r\n		INSERT INTO tbl_products(\r\n			SeqNo,\r\n			create_date,\r\n			goods_code,\r\n			product_name,\r\n			brand_code,\r\n			brand_name,\r\n			product_itemcode,\r\n			product_itemname,\r\n			season_code,\r\n			season_name,\r\n			price_no_tax,\r\n			price,\r\n			product_saleoff_price_no_tax,\r\n			product_saleoff_price,\r\n			country_code,\r\n			country_name,\r\n			PurchasePriceNoTax,\r\n			PurchasePriceYesTax,\r\n			SaleOffPurchasePriceNoTax,\r\n			SaleOffPurchasePriceYesTax,\r\n			product_detail,\r\n			product_name_display,\r\n			StoreCommentO,\r\n			GoodsNameDisplay,\r\n			slug_url,\r\n			SectionCode,\r\n			SectionName,\r\n			`Memo3`,`Memo4`,\r\n			search_keywords,\r\n			onsale,\r\n			new_product,\r\n			product_status,ShapeCode2,ShapeName2\r\n		) VALUES (\'03000000000000006625\',\'2021/05/14\',\'MS21108\',\'MILITARY SOUVENIR WOOL SHIRT\',\'MILITARY\',\'MILITARY\',\'SH02\',\'L/S SHIRTS\',\'21FWSE\',\'2021 F/W SEASONAL\',\'26000\',\'28600\',\'26000\',\'28600\',\'\',\'\',\'6237\',\'6860\',\'6237\',\'6860\',\'・マテリアル:　ナイロンウール　\n・ボタン:　尿素ボタン\',\'\',\'ггггг\',\'\',\'ms21108\',\'\',\'\',\'\',\'\',\'\',0,0,0,\'\',\'\') ON DUPLICATE KEY UPDATE tbl_products.SeqNo = \'03000000000000006625\',tbl_products.create_date = \'2021/05/14\',tbl_products.goods_code = \'MS21108\',tbl_products.slug_url = \'ms21108\',tbl_products.product_name = \'MILITARY SOUVENIR WOOL SHIRT\',tbl_products.brand_code = \'MILITARY\',tbl_products.brand_name = \'MILITARY\',tbl_products.product_itemcode = \'SH02\',tbl_products.product_itemname = \'L/S SHIRTS\',tbl_products.season_code = \'21FWSE\',tbl_products.season_name = \'2021 F/W SEASONAL\',tbl_products.price_no_tax = \'26000\',tbl_products.price = \'28600\',tbl_products.product_saleoff_price_no_tax = \'26000\',tbl_products.product_saleoff_price = \'28600\',tbl_products.country_code = \'\',tbl_products.country_name = \'\',tbl_products.PurchasePriceNoTax = \'6237\',tbl_products.PurchasePriceYesTax = \'6860\',tbl_products.SaleOffPurchasePriceNoTax = \'6237\',tbl_products.SaleOffPurchasePriceYesTax = \'6860\',tbl_products.StoreCommentO = \'ггггг\',tbl_products.SectionCode = \'\',tbl_products.SectionName = \'\',tbl_products.Memo3 = \'\',tbl_products.Memo4 = \'\',tbl_products.onsale = 0,tbl_products.ShapeCode2 = \'\',tbl_products.ShapeName2 = \'\'',NULL,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_sys_log_changeemail` */

DROP TABLE IF EXISTS `tbl_sys_log_changeemail`;

CREATE TABLE `tbl_sys_log_changeemail` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `OldEmail` varchar(255) NOT NULL,
  `OldEmailEndCode` varchar(255) NOT NULL,
  `NewEmail` varchar(255) NOT NULL,
  `NewEmailEnCode` varchar(255) NOT NULL,
  `created_date` datetime DEFAULT NULL,
  `actived_date` datetime DEFAULT NULL,
  `click_actived` int(4) DEFAULT '0',
  `Customer_Code` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_sys_log_changeemail` */

LOCK TABLES `tbl_sys_log_changeemail` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_tag` */

DROP TABLE IF EXISTS `tbl_tag`;

CREATE TABLE `tbl_tag` (
  `tag_id` bigint(20) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `all_page_start_head_tag` text,
  `all_page_ex_cart_e_head_tag` text,
  `all_page_ex_cart_e_body_tag` text,
  `cart_com_page_e_head_tag` text,
  `cart_com_page_e_body_tag` text,
  PRIMARY KEY (`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_tag` */

LOCK TABLES `tbl_tag` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_taxrates` */

DROP TABLE IF EXISTS `tbl_taxrates`;

CREATE TABLE `tbl_taxrates` (
  `SeqNo` varchar(20) NOT NULL,
  `RSeqNo` varchar(20) DEFAULT NULL,
  `CreatedDate` varchar(40) DEFAULT NULL,
  `ModifiedDate` varchar(40) DEFAULT NULL,
  `TaxPercent` double DEFAULT '0',
  `AppliedDate` varchar(20) DEFAULT NULL,
  `TaxPercent2` double DEFAULT '0',
  PRIMARY KEY (`SeqNo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_taxrates` */

LOCK TABLES `tbl_taxrates` WRITE;

insert  into `tbl_taxrates`(`SeqNo`,`RSeqNo`,`CreatedDate`,`ModifiedDate`,`TaxPercent`,`AppliedDate`,`TaxPercent2`) values ('00200000000000000022','1','0/00/00','0/00/00',8,'2014/04/23',0),('01700000000000000086','1','0/00/00','0/00/00',10,'2019/10/01',0),('1','1','2013/07/23','2013/07/23',3,'1989/04/01',0),('2','1','2013/07/23','2013/07/23',5,'1997/04/01',0);

UNLOCK TABLES;

/*Table structure for table `tbl_template_email` */

DROP TABLE IF EXISTS `tbl_template_email`;

CREATE TABLE `tbl_template_email` (
  `template_email_id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `template_email_name` varchar(255) DEFAULT NULL,
  `subject_email` varchar(255) DEFAULT NULL,
  `content` text,
  `use_delivery_top_info` tinyint(2) DEFAULT NULL,
  `use_request_info` tinyint(2) DEFAULT NULL,
  `use_product_info` tinyint(2) DEFAULT NULL,
  `use_customer_info` tinyint(2) DEFAULT NULL,
  `use_delivery_bot_info` tinyint(2) DEFAULT NULL,
  `use_signal` tinyint(2) DEFAULT NULL,
  PRIMARY KEY (`template_email_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_template_email` */

LOCK TABLES `tbl_template_email` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_top_page` */

DROP TABLE IF EXISTS `tbl_top_page`;

CREATE TABLE `tbl_top_page` (
  `top_page_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `top_page_image` text,
  `top_page_link` text,
  `top_page_order_num` int(11) DEFAULT '0',
  `top_page_g_id` bigint(20) DEFAULT NULL,
  `top_page_name` text,
  `top_page_iframe` text NOT NULL,
  `top_page_type` tinyint(4) NOT NULL,
  PRIMARY KEY (`top_page_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_top_page` */

LOCK TABLES `tbl_top_page` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_top_page_group` */

DROP TABLE IF EXISTS `tbl_top_page_group`;

CREATE TABLE `tbl_top_page_group` (
  `top_page_g_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `top_page_g_order_num` int(11) DEFAULT '0',
  `top_page_g_type` tinyint(4) DEFAULT '0',
  `top_page_g_status` tinyint(4) DEFAULT '0',
  PRIMARY KEY (`top_page_g_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_top_page_group` */

LOCK TABLES `tbl_top_page_group` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_total_product_of_category` */

DROP TABLE IF EXISTS `tbl_total_product_of_category`;

CREATE TABLE `tbl_total_product_of_category` (
  `item_code` varchar(255) DEFAULT NULL,
  `total_item` int(11) DEFAULT '0',
  `total_item_show` int(11) DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_total_product_of_category` */

LOCK TABLES `tbl_total_product_of_category` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_tracking_url` */

DROP TABLE IF EXISTS `tbl_tracking_url`;

CREATE TABLE `tbl_tracking_url` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `tracking_name` varchar(255) DEFAULT NULL,
  `tracking_url` varchar(500) DEFAULT NULL,
  `tracking_use` int(2) DEFAULT '0',
  `tracking_parcel` int(2) DEFAULT '0',
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_tracking_url` */

LOCK TABLES `tbl_tracking_url` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_users` */

DROP TABLE IF EXISTS `tbl_users`;

CREATE TABLE `tbl_users` (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_name` varchar(50) CHARACTER SET utf8 NOT NULL,
  `password` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `role` int(11) DEFAULT '0',
  `jamrole` tinyint(4) DEFAULT NULL,
  `role_text` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

/*Data for the table `tbl_users` */

LOCK TABLES `tbl_users` WRITE;

insert  into `tbl_users`(`user_id`,`user_name`,`password`,`role`,`jamrole`,`role_text`) values (4,'admin','123456',1,NULL,NULL);

UNLOCK TABLES;

/*Table structure for table `tbl_voice` */

DROP TABLE IF EXISTS `tbl_voice`;

CREATE TABLE `tbl_voice` (
  `voice_id` bigint(8) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `voice_title` varchar(200) DEFAULT NULL,
  `voice_short_description` text,
  `voice_contents` text,
  `create_date` varchar(40) DEFAULT NULL,
  `modified_date` varchar(40) DEFAULT NULL,
  `created_by` varchar(200) DEFAULT NULL,
  `edited_by` varchar(200) NOT NULL,
  `status` tinyint(4) DEFAULT NULL,
  `voice_date` varchar(40) DEFAULT NULL,
  `voice_image` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`voice_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_voice` */

LOCK TABLES `tbl_voice` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_website` */

DROP TABLE IF EXISTS `tbl_website`;

CREATE TABLE `tbl_website` (
  `seqno` varchar(20) NOT NULL,
  `create_date` varchar(30) DEFAULT NULL,
  `website_code` varchar(20) DEFAULT NULL,
  `website_name` text,
  `staff_code` varchar(20) DEFAULT NULL,
  `staff_name` text,
  `EC_InvoicePrefix` varchar(20) DEFAULT NULL,
  `EC_UseInvoiceSetting` tinyint(4) DEFAULT NULL,
  `EC_UseRCustomerSetting` tinyint(4) DEFAULT NULL,
  `EC_RCustomerPrefix` varchar(3) DEFAULT NULL,
  `EC_UseSubCustomerIDPW` tinyint(1) DEFAULT '0',
  `EC_DoNotSyncEX` tinyint(1) DEFAULT '0',
  PRIMARY KEY (`seqno`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_website` */

LOCK TABLES `tbl_website` WRITE;

insert  into `tbl_website`(`seqno`,`create_date`,`website_code`,`website_name`,`staff_code`,`staff_name`,`EC_InvoicePrefix`,`EC_UseInvoiceSetting`,`EC_UseRCustomerSetting`,`EC_RCustomerPrefix`,`EC_UseSubCustomerIDPW`,`EC_DoNotSyncEX`) values ('03000000000000000001','2021/09/30','01','自社サイト','','','',0,0,'',0,0);

UNLOCK TABLES;

/*Table structure for table `tbl_wish_list` */

DROP TABLE IF EXISTS `tbl_wish_list`;

CREATE TABLE `tbl_wish_list` (
  `item_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `customer_id` bigint(20) NOT NULL,
  `product_id` int(11) NOT NULL,
  `color_code` varchar(10) DEFAULT NULL,
  `added_on` datetime NOT NULL,
  `size_code` varchar(10) DEFAULT NULL,
  `is_sent_mail` tinyint(1) DEFAULT NULL,
  `mailing_date` datetime DEFAULT NULL,
  PRIMARY KEY (`item_id`),
  KEY `idx_tbl_wish_list_customer_id` (`customer_id`),
  KEY `color_code` (`color_code`),
  KEY `product_id` (`product_id`),
  KEY `customer_id` (`customer_id`),
  KEY `size_code` (`size_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_wish_list` */

LOCK TABLES `tbl_wish_list` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_wish_list_brand` */

DROP TABLE IF EXISTS `tbl_wish_list_brand`;

CREATE TABLE `tbl_wish_list_brand` (
  `item_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `customer_id` bigint(20) NOT NULL,
  `brand_code` varchar(50) NOT NULL,
  `added_on` datetime NOT NULL,
  PRIMARY KEY (`item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_wish_list_brand` */

LOCK TABLES `tbl_wish_list_brand` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_wish_list_look_book` */

DROP TABLE IF EXISTS `tbl_wish_list_look_book`;

CREATE TABLE `tbl_wish_list_look_book` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `customer_id` bigint(20) NOT NULL,
  `set_id` bigint(20) NOT NULL,
  `added_on` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

/*Data for the table `tbl_wish_list_look_book` */

LOCK TABLES `tbl_wish_list_look_book` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_wrapping_setting` */

DROP TABLE IF EXISTS `tbl_wrapping_setting`;

CREATE TABLE `tbl_wrapping_setting` (
  `id` bigint(11) unsigned NOT NULL AUTO_INCREMENT,
  `goods_code` varchar(50) DEFAULT NULL,
  `color_code` varchar(50) DEFAULT NULL,
  `size_code` varchar(50) DEFAULT NULL,
  `amount` float DEFAULT NULL,
  `note` text,
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_wrapping_setting` */

LOCK TABLES `tbl_wrapping_setting` WRITE;

UNLOCK TABLES;

/*Table structure for table `tbl_yahoo_pay_logs` */

DROP TABLE IF EXISTS `tbl_yahoo_pay_logs`;

CREATE TABLE `tbl_yahoo_pay_logs` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `paid` varchar(255) DEFAULT NULL,
  `livemode` varchar(255) DEFAULT NULL,
  `amount` float DEFAULT NULL,
  `info` longtext,
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `tbl_yahoo_pay_logs` */

LOCK TABLES `tbl_yahoo_pay_logs` WRITE;

UNLOCK TABLES;

/* Function  structure for function  `getListColumnForSelectingProductList` */

/*!50003 DROP FUNCTION IF EXISTS `getListColumnForSelectingProductList` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getListColumnForSelectingProductList`() RETURNS text CHARSET utf8
BEGIN 
  DECLARE selectStmt TEXT;
  SET selectStmt = "
		SELECT 	
			tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			(
				SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode
			) AS item_item_name,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.country_name 		AS product_country_name,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products.product_image_server	AS product_product_image_server,
			tbl_products.is_main_image	        AS product_is_main_image,
			tbl_products.is_hide_while_out_of_stock	AS product_is_hide_while_out_of_stock,
			tbl_products.is_color_show		AS product_is_color_show,
			tbl_products.is_popularity		AS product_is_popularity,
			tbl_products.is_classic			AS product_is_classic,
			tbl_products.is_show_link_destination 	AS product_is_show_link_destination,
			tbl_products.link_destination 		AS product_link_destination,
			tbl_products.is_recommended_item 		AS product_is_recommended_item,
			tbl_products.TimeStamp                   AS product_time_stamp,
			
			tbl_products.is_flash_sale		AS product_is_flash_sale,
			tbl_products.flash_sale_from 		AS product_flash_sale_from,
			tbl_products.flash_sale_to 		AS product_flash_sale_to,
			
			tbl_products.is_restock_item 		AS product_is_restock_item,
			tbl_products.is_restock_item_always 	AS product_is_restock_item_always,
			tbl_products.restock_from 		AS product_restock_from,
			tbl_products.restock_to 		AS product_restock_to,
			tbl_products.search_keywords 		AS product_search_keywords,
			tbl_products.SectionCode 		AS product_SectionCode,
			tbl_products.SectionName 		AS product_SectionName,
			tbl_products.onsale 			AS product_onsale,
			
			tbl_products.is_magazine 		AS product_is_magazine,
			tbl_products.date_expired 		AS product_date_expired,
			
			tbl_products.unbundled_product 		AS product_unbundled_product,
			tbl_products.is_comming_soon 		AS product_is_comming_soon,
			tbl_products.is_contact 		AS product_is_contact,
			tbl_products.is_not_sold_out 		AS is_not_sold_out,
			tbl_products.season_code		AS season_code,
			tbl_products.season_name		AS season_name,
			tbl_products.create_date 		AS create_date,
			tbl_products.is_myess,
			tbl_products.family_sale_type,
			tbl_products.gender_men,
			tbl_products.gender_women,
			tbl_products.gender_unisex,
			tbl_products.sold_out_text,
			tbl_products.sale_rate,
			
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.color_html_code 	AS pro_detail_color_html_code,
			tbl_products_details.is_main_color 	AS pro_detail_is_main_color,
			tbl_products_details.is_last_one 	AS pro_detail_is_last_one,
			tbl_products.ShapeCode2,
			tbl_products.ShapeName2,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
			END AS color_display,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			
			CASE 
				WHEN tbl_products_details.Individual_Size_Name IS NOT NULL AND tbl_products_details.Individual_Size_Name <> '' THEN 
					tbl_products_details.Individual_Size_Name
				WHEN tbl_products_details.size_display IS NOT NULL AND tbl_products_details.size_display <> '' THEN 
					tbl_products_details.size_display
			ELSE  
				tbl_products_details.size_name
			END AS pro_detail_size_display,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			CASE 
				WHEN tbl_products.sale_off_product IS NOT NULL AND tbl_products.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END AS price_for_sort ,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status,
			tbl_products_details.num_order 	AS pro_detail_num_order,
			tbl_products_details.product_ranking AS pro_detail_ranking,
			(
				SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code
			) AS brand_brand_name,
			(SELECT (COALESCE(SUM(review_numstar),0)/count(tbl_review.product_id))
				FROM   tbl_review
				WHERE  tbl_review.product_id = tbl_products.product_id and ispublic = 1 group by tbl_review.product_id
			) as product_review_star,
			tbl_products_details.display_top AS pro_detail_display_top 
";
  RETURN selectStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getListColumnForSelectingProductListFamilySale` */

/*!50003 DROP FUNCTION IF EXISTS `getListColumnForSelectingProductListFamilySale` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getListColumnForSelectingProductListFamilySale`(`p_rate_vip` FLOAT) RETURNS text CHARSET utf8
BEGIN 
  DECLARE selectStmt TEXT;
  SET selectStmt = CONCAT("
		SELECT 	
			tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			(
				SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode
				LIMIT 1
			) AS item_item_name,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.country_name 		AS product_country_name,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products.product_image_server	AS product_product_image_server,
			tbl_products.is_main_image	        AS product_is_main_image,
			tbl_products.is_hide_while_out_of_stock	AS product_is_hide_while_out_of_stock,
			tbl_products.is_color_show		AS product_is_color_show,
			tbl_products.is_popularity		AS product_is_popularity,
			tbl_products.is_classic			AS product_is_classic,
			tbl_products.is_show_link_destination 	AS product_is_show_link_destination,
			tbl_products.link_destination 		AS product_link_destination,
			tbl_products.is_recommended_item 		AS product_is_recommended_item,
			
			tbl_products.is_flash_sale		AS product_is_flash_sale,
			tbl_products.flash_sale_from 		AS product_flash_sale_from,
			tbl_products.flash_sale_to 		AS product_flash_sale_to,
			
			tbl_products.is_restock_item 		AS product_is_restock_item,
			tbl_products.is_restock_item_always 	AS product_is_restock_item_always,
			tbl_products.restock_from 		AS product_restock_from,
			tbl_products.restock_to 		AS product_restock_to,
			tbl_products.search_keywords 		AS product_search_keywords,
			tbl_products.SectionCode 		AS product_SectionCode,
			tbl_products.SectionName 		AS product_SectionName,
			tbl_products.onsale 			AS product_onsale,
			
			tbl_products.is_magazine 		AS product_is_magazine,
			tbl_products.date_expired 		AS product_date_expired,
			
			tbl_products.unbundled_product 		AS product_unbundled_product,
			tbl_products.is_comming_soon 		AS product_is_comming_soon,
			tbl_products.is_contact 		AS product_is_contact,
			tbl_products.is_not_sold_out 		AS is_not_sold_out,
			tbl_products.season_code		AS season_code,
			tbl_products.season_name		AS season_name,
			tbl_products.create_date 		AS create_date,
			tbl_products.is_myess,
			tbl_products.family_sale_type,
			
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.color_html_code 	AS pro_detail_color_html_code,
			tbl_products_details.is_main_color 	AS pro_detail_is_main_color,
			tbl_products_details.is_last_one 	AS pro_detail_is_last_one,
			tbl_products.ShapeCode2,
			tbl_products.ShapeName2,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
			END AS color_display,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			
			CASE 
				WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
					tbl_products_details.size_name 
			ELSE 
				tbl_products_details.size_display 
			END AS pro_detail_size_display,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			
			ROUND(((tbl_products_details.product_detail_saleoff_price_no_tax/tbl_products_details.product_detail_price_no_tax)-1)*100 * -1) AS sale_off_rate,
			
			tbl_products_details.product_detail_price_no_tax-(tbl_products_details.product_detail_saleoff_price_no_tax - (tbl_products_details.product_detail_saleoff_price_no_tax * ",p_rate_vip,"/100)) AS price_off_vip,
			
			tbl_products_details.product_detail_saleoff_price_no_tax - (tbl_products_details.product_detail_saleoff_price_no_tax * ",p_rate_vip,"/100) AS price_final,
			
			CASE 
				WHEN tbl_products.sale_off_product IS NOT NULL AND tbl_products.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END AS price_for_sort ,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status,
			tbl_products_details.num_order 	AS pro_detail_num_order,
			tbl_products_details.product_ranking AS pro_detail_ranking,
			(
				SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code
				LIMIT 1
			) AS brand_brand_name,
			(SELECT (COALESCE(SUM(review_numstar),0)/count(tbl_review.product_id))
				FROM   tbl_review
				WHERE  tbl_review.product_id = tbl_products.product_id and ispublic = 1 group by tbl_review.product_id
			) as product_review_star,
			tbl_products_details.display_top AS pro_detail_display_top,
			(
				SELECT 
					(CASE WHEN tbl_set_seasons.set_season_order IS NOT NULL AND tbl_set_seasons.set_season_order != '' THEN
						tbl_set_seasons.set_season_order
					ELSE 
						0
					END) AS set_season_order_tmp
				FROM tbl_set_seasons WHERE tbl_set_seasons.set_season_code = tbl_products.season_code
				LIMIT 1
			) AS season_order 
");
  RETURN selectStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberAllColorAllSizeStmt` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberAllColorAllSizeStmt` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberAllColorAllSizeStmt`(`p_table_name` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_goods_code 	VARCHAR(1000);	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	set p_condition_stmt = "";
	set p_check_by_goods_code = "";
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	if p_table_name is not null and p_table_name <> '' then 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_name,".",p_column_goods_code," ");
	else 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					end if;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		IF p_table_name <> '' AND p_column_color_code <> '' THEN 
			SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_name,".",p_column_color_code," ");
		END IF;
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		IF p_table_name <> '' AND p_column_size_code <> '' THEN 
			SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_name,".",p_column_size_code," ");
		END IF;
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		actual_num,
		is_actual_num,
		is_actual_zero,
		is_shop_stock
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSEIF vb_is_shop_stock = 0 THEN 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
        ELSEIF vb_is_shop_stock = 2 THEN 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum3)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN
							SUM(tbl_stock_num.KanoNum3)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	SET stuckNumberStmt = CONCAT("
		(
			SELECT SUM(stock_num) FROM (
				SELECT 
					",p_stock_stmt,"
				FROM 
					tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_condition_stmt,"
					",p_check_by_color_code,"
					",p_check_by_size_code,"
				", p_group_by_str, "
			) AS tbl_stock_num
		) AS stock_num
	");	
	
	--  --------------------------
	/*IF p_is_check_color_show = 1 THEN 
		SET stuckNumberStmt = CONCAT("
		CASE WHEN (",p_table_name,".",p_column_is_color_show," = 0) THEN
			(
				SELECT SUM(stock_num) FROM (
					SELECT 
						",p_stock_stmt,"
						,GoodCode, ColorCode
					FROM 
						tbl_stock_num
					WHERE 
						1 = 1
						",p_condition_stmt,"
					GROUP BY GoodCode, ColorCode, SizeCode
				) AS tbl_stock_num
				WHERE 
					",p_check_by_goods_code,"
					",p_check_by_color_code,"
					AND stock_num > 0
				GROUP BY GoodCode, ColorCode
			)
		ELSE
			(
				SELECT SUM(stock_num) FROM (
					SELECT 
						",p_stock_stmt,",
						GoodCode
					FROM 
						tbl_stock_num
					WHERE 	
						1 = 1
						",p_condition_stmt,"
					GROUP BY GoodCode, ColorCode, SizeCode
				) AS tbl_stock_num
				WHERE 
					",p_check_by_goods_code,"
					AND stock_num > 0
				GROUP BY GoodCode
			)
		END AS stock_num
		");
	ELSE
		SET stuckNumberStmt = CONCAT("
			(
				SELECT 
					",p_stock_stmt,"
				FROM 
					tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_condition_stmt,"
					",p_check_by_color_code,"
					",p_check_by_size_code,"
				", p_group_by_str, "
			) AS stock_num
		");
	END IF;  */
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberStmt` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberStmt` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberStmt`(`p_table_name` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_goods_code 	VARCHAR(1000);	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	set p_condition_stmt = "";
	set p_check_by_goods_code = "";
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	if p_table_name is not null and p_table_name <> '' then 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_name,".",p_column_goods_code," ");
	else 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					end if;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_name,".",p_column_color_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_name,".",p_column_size_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSEIF vb_is_shop_stock = 0 THEN 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
        ELSEIF vb_is_shop_stock = 2 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum3)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN
							SUM(tbl_stock_num.KanoNum3)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	IF p_is_check_color_show = 1 THEN 
		SET stuckNumberStmt = CONCAT("
		CASE WHEN (",p_table_name,".",p_column_is_color_show," = 0) THEN
			(
				SELECT SUM(stock_num) FROM (
					SELECT 
						",p_stock_stmt,"
						,GoodCode, ColorCode
					FROM 
						tbl_stock_num
					WHERE 
						1 = 1
						",p_condition_stmt,"
					GROUP BY GoodCode, ColorCode, SizeCode
				) AS tbl_stock_num
				WHERE 
					",p_check_by_goods_code,"
					",p_check_by_color_code,"
					AND stock_num > 0
				GROUP BY GoodCode, ColorCode
			)
		ELSE
			(
				SELECT SUM(stock_num) FROM (
					SELECT 
						",p_stock_stmt,",
						GoodCode
					FROM 
						tbl_stock_num
					WHERE 	
						1 = 1
						",p_condition_stmt,"
					GROUP BY GoodCode, ColorCode, SizeCode
				) AS tbl_stock_num
				WHERE 
					",p_check_by_goods_code,"
					AND stock_num > 0
				GROUP BY GoodCode
			)
		END AS stock_num
		");
	ELSE 
		SET stuckNumberStmt = CONCAT("
			(
					SELECT 
						",p_stock_stmt,"
					FROM 
						tbl_stock_num 
					WHERE 
						",p_check_by_goods_code,"
						",p_condition_stmt,"
						",p_check_by_color_code,"
						",p_check_by_size_code,"
					", p_group_by_str, "
			) AS stock_num
		");
		
	END IF;
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `A000CalculateTax_Price` */

/*!50003 DROP FUNCTION IF EXISTS `A000CalculateTax_Price` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `A000CalculateTax_Price`(`_Price` DECIMAL(65,30), `_CalTaxMethod` VARCHAR(40), `_TaxRoundType` INT, `_TaxRate` DOUBLE) RETURNS decimal(65,30)
BEGIN
	-- DECLARE _TaxRate DOUBLE DEFAULT 8;
	DECLARE _Tax,_Price2 DECIMAL (65,30) DEFAULT 0;
	DECLARE _RoundPlace,_IsInTaxCalculate INT DEFAULT 0;
	
	-- 4D chi dong bo len ban ghi TaxRate co AppliedDate<=Current Date
	-- SELECT `TaxPercent` INTO _TaxRate FROM `tbl_taxrates` ORDER BY `AppliedDate` DESC LIMIT 1;
	SET _Price2 = _Price;
	SET _Price = ABS(_Price);
	SET _TaxRate = _TaxRate/100;
	IF _CalTaxMethod LIKE '%内税' THEN 
		SET _Tax:=ABS(_Price*(_TaxRate/(1+_TaxRate)));
	ELSE
		SET _Tax:=ABS(_Price*_TaxRate);
	END IF;
	
	SELECT DigitsAfterCommaForPriceR,IsInTaxCalculate INTO _RoundPlace,_IsInTaxCalculate
		FROM `tbl_preferences` LIMIT 1;
	
	IF _CalTaxMethod LIKE '%内税' AND _IsInTaxCalculate = 1 THEN 
		IF _TaxRoundType =  1 THEN -- 切り捨て
			SET _Tax = ROUND(_Tax+(0.499*POW(10,-_RoundPlace)),_RoundPlace);
		ELSEIF _TaxRoundType =  3 THEN -- 切り上げ
			SET _Tax = TRUNCATE(_Tax,_RoundPlace);
		ELSE
			SET _Tax = ROUND(_Tax,_RoundPlace);
		END IF;
	ELSE
		IF _TaxRoundType =  1 THEN -- 切り捨て
			SET _Tax = TRUNCATE(_Tax,_RoundPlace);			
		ELSEIF _TaxRoundType =  3 THEN -- 切り上げ
			SET _Tax = ROUND(_Tax+(0.499*POW(10,-_RoundPlace)),_RoundPlace);
		ELSE
			SET _Tax = ROUND(_Tax,_RoundPlace);
		END IF;
	END IF;
	
	IF _Price2 < 0 THEN
		SET _Tax = -_Tax;
	END IF;
	RETURN _Tax;
END */$$
DELIMITER ;

/* Function  structure for function  `getFilterQuery` */

/*!50003 DROP FUNCTION IF EXISTS `getFilterQuery` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getFilterQuery`(`p_search_hashtag` VARCHAR(10000), `p_search_stone` VARCHAR(50), `p_search_limited` VARCHAR(50), `p_search_materials` VARCHAR(50), `p_search_brand` VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE filterQuery TEXT;
	SET filterQuery = '';
	
	IF  p_search_hashtag IS NOT NULL AND p_search_hashtag <> '' THEN
		SET filterQuery = CONCAT(filterQuery, " 
		AND (
		tbl_products.goods_code IN (", p_search_hashtag ,")
		OR tbl_products_details.barcode IN (", p_search_hashtag ,")
		)");
	END IF;
	
	IF  p_search_stone IS NOT NULL AND p_search_stone <> '' THEN
		SET filterQuery = CONCAT(filterQuery, " AND tbl_products.stone LIKE '%", p_search_stone ,"%'");
	END IF;
	
	IF p_search_limited 	IS NOT NULL AND p_search_limited = 'oneofkind' THEN
		SET filterQuery = 
				CONCAT(filterQuery, " 
			AND tbl_products.one_of_kind = 1  ");
	ELSEIF p_search_limited IS NOT NULL AND p_search_limited = 'exclusive' THEN
		SET filterQuery = 
				CONCAT(filterQuery, " 
			AND tbl_products.exclusive = 1  ");
	ELSEIF p_search_limited IS NOT NULL AND p_search_limited = 'ordermade' THEN
		SET filterQuery = 
				CONCAT(filterQuery, " 
			AND tbl_products.order_made = 1  ");
	END IF;
	
	IF  p_search_materials IS NOT NULL AND p_search_materials <> '' THEN
		SET filterQuery = CONCAT(filterQuery, " AND tbl_products.materials LIKE '%", p_search_materials ,"%'");
	END IF;
	
	IF p_search_brand IS NOT NULL AND p_search_brand <> '' THEN
		SET filterQuery = CONCAT(filterQuery, " AND tbl_products.brand_code = '", p_search_brand ,"'");
	END IF;	
	
	RETURN filterQuery;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductList` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductList` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductList`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		IF (p_customer_name != 'cord3') THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
		ELSE
		SET orderStmt = ' 
			ORDER BY  	tbl_products_details.product_detail_price 	ASC ';
		END IF;
	ELSEIF p_sort	= 'priceDescend' THEN
		IF (p_customer_name != 'cord3') THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
		ELSE
		SET orderStmt = ' 
			ORDER BY  	tbl_products_details.product_detail_price 	DESC ';
		END IF;
	ELSEIF p_sort	= 'popular' THEN
		IF (p_customer_name = 'cord3') THEN
			SET orderStmt = ' 
			ORDER BY  	tbl_products_details.num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
		ELSE
			SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
		END IF;
	ELSEIF p_sort 	= 'new' THEN
		IF (p_customer_name = 'HARMONY') THEN
			SET orderStmt = ' 
			ORDER BY  	
					product_new_product DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		ELSEIF(p_customer_name = 'MIDA') THEN
			SET orderStmt = ' 
			ORDER BY  	
					product_time_stamp DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		ELSE
			SET orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		END IF;
	ELSEIF p_sort 	= 'new-cord3' THEN
		SET orderStmt = ' 
			 ORDER BY  	
					(CASE season_code
					 WHEN "20222" THEN 9
					 WHEN "20221" THEN 8
					 WHEN "20212" THEN 7
					 WHEN "20211" THEN 6
					 WHEN "20202" THEN 5
					 WHEN "20201" THEN 4
					 WHEN "20192" THEN 3
					 WHEN "20191" THEN 2
					 ELSE 1 END) DESC,
					season_code DESC,
					create_date DESC, 
					product_active_date 	DESC,
					product_goods_code 	DESC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';	
	ELSEIF p_sort 	= 'top' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_product_detail_order 	DESC,
					pro_detail_num_order DESC,
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';		
	ELSE
		IF (p_customer_name = 'MIDA') THEN
			SET orderStmt = ' 
			ORDER BY  	
					product_time_stamp DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		ELSE
			SET orderStmt = ' 
				 ORDER BY  	pro_detail_num_order DESC, 
						CAST(product_active_date AS DATE) 	DESC,
						product_goods_code 			ASC ';
		END IF;
	END IF;
	
	IF (p_customer_name != 'cord3') THEN
	SET orderStmt = CONCAT(orderStmt,",
					pro_detail_product_detail_order 	ASC ");
	END IF;
					
	IF p_customer_name = 'TABISUGA' THEN
		IF p_sort = 'item' THEN
			SET orderStmt = ' 
				ORDER BY  	item_order_number ASC,
					product_goods_code 	ASC ';
		END IF;
	END IF;
	
	IF p_customer_name = 'NORTHBRAIN' THEN 
		IF p_sort = 'recommended' THEN
			SET orderStmt = ' 
				ORDER BY  	pro_detail_num_order 			DESC,
						CAST(product_active_date AS DATE) 	DESC,
						product_goods_code 			ASC ';
		ELSEIF p_sort = 'new' THEN
			SET orderStmt = ' 
				ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
						pro_detail_num_order 			DESC,
						product_goods_code 			ASC ';
		END IF;
	END IF;
	
	IF p_customer_name = 'MANIFEST' THEN
			SET orderStmt = ' 
				ORDER BY  	pro_detail_product_detail_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		
	END IF;
	
	IF p_customer_name ='Yellowdivision' THEN
				SET orderStmt = ' 
					ORDER BY  	pro_detail_num_order DESC, 
							CAST(product_create_date AS DATETIME) 	DESC,
							product_goods_code 			ASC ';
	END IF;
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListBestSeller` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListBestSeller` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListBestSeller`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	total_bought DESC,
					price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	total_bought DESC,
					price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	total_bought DESC,
					pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	total_bought DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	total_bought DESC,
					product_review_star DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET orderStmt = ' 
			 ORDER BY  	total_bought DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	END IF;
	IF p_customer_name = 'TABISUGA' THEN
		IF p_sort = 'item' THEN
			SET orderStmt = ' 
				ORDER BY  	total_bought DESC,
						item_order_number ASC,
						product_goods_code 	ASC ';
		END IF;
	end IF;
	
	IF p_customer_name = 'MANIFEST' THEN
			SET orderStmt = ' 
				ORDER BY	total_bought DESC , 	
					pro_detail_product_detail_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
		
	END IF;
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListDateTime` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListDateTime` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListDateTime`(`p_category_code` VARCHAR(50), `p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	-- 319383845: hoa xuan them 190918 - neu la sp new hoac khi order theo new thi order active_date theo DATETIME
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
			SET orderStmt = ' 
					 ORDER BY  	pro_detail_num_order DESC, 
							CAST(product_active_date AS DATE) 	DESC,
							product_goods_code 			ASC ';
	END IF;
	
	IF p_category_code = 'new' OR p_category_code = 'new-arrival' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC ';
	END IF;
	
	IF (p_category_code <> 'new' AND p_category_code <> 'new-arrival') AND p_customer_name ='Yellowdivision' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, 
							CAST(product_create_date AS DATETIME) 	DESC,
							product_goods_code 			ASC ';
	END IF;
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListFamilySale` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListFamilySale` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListFamilySale`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	
	IF p_sort	= 'price_asc' THEN
		SET orderStmt = ' 
			ORDER BY 	price_final ASC ';	
	ELSEIF p_sort	= 'price_dsc' THEN
		SET orderStmt = ' 
			ORDER BY  	price_final DESC ';
	ELSEIF p_sort	= 'vip_off_dsc' THEN
		SET orderStmt = ' 
			ORDER BY  	price_off_vip DESC ';
	ELSEIF p_sort 	= 'price_off_dsc' THEN
		SET orderStmt = ' 
			ORDER BY  	sale_off_rate DESC ';
	ELSEIF p_sort 	= 'season_desc' THEN
		SET orderStmt = ' 
			ORDER BY  	season_order DESC ';
	ELSEIF p_sort 	= 'season_asc' THEN
		SET orderStmt = ' 
			ORDER BY  	season_order ASC ';
	ELSE
		SET orderStmt = ' 
			ORDER BY  	pro_detail_product_detail_price ASC ';
	END IF;
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListKankou` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListKankou` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListKankou`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	END IF;	
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListMore` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListMore` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListMore`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	END IF;	
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListRakudo` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListRakudo` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListRakudo`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	END IF;	
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getOrderStmtForProductListStrawberryjamec` */

/*!50003 DROP FUNCTION IF EXISTS `getOrderStmtForProductListStrawberryjamec` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStmtForProductListStrawberryjamec`(`p_sort` VARCHAR(50), `p_customer_name` VARCHAR(200)) RETURNS text CHARSET utf8
BEGIN 	
	DECLARE orderStmt TEXT;
	SET orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code 	ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'review' THEN
		SET orderStmt = ' 
			 ORDER BY  	product_review_star DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATETIME) 	DESC,
					product_goods_code 			ASC ';
	END IF;	
	
	RETURN orderStmt;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getSearchQuery` */

/*!50003 DROP FUNCTION IF EXISTS `getSearchQuery` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getSearchQuery`(`p_category_code` VARCHAR(250), `p_price_start` INT, `p_price_end` INT, `p_search_keyword` VARCHAR(50), `p_search_brand` VARCHAR(250), `p_search_status` VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE searchQuery TEXT;
	DECLARE search_keyword_master TEXT;
	SET searchQuery = '';
	SET search_keyword_master = '';		
	-- ============================================
	SELECT 	GROUP_CONCAT(search_key SEPARATOR ",")
	FROM 	tbl_search_key 
	WHERE 	CONCAT("'", `related_keys_search`, "'") LIKE CONCAT("%'",p_search_keyword, "'%")
	INTO @search_keyword_master;
	
	SET @selectFromStmtForRelated = 'OR 1=2 ';
	WHILE @search_keyword_master != '' DO
		SET @tmp_search_keyword_master = SUBSTRING_INDEX(@search_keyword_master,',',1);
		SET @search_keyword_master = SUBSTRING(@search_keyword_master, CHAR_LENGTH(@tmp_search_keyword_master) + 1 + CHAR_LENGTH(','));
		SET @selectFromStmtForRelated = 
			CONCAT(@selectFromStmtForRelated, "
				OR tbl_products.search_keywords LIKE '%",@tmp_search_keyword_master, "%' ");
	END WHILE;	
	-- ============================================
			
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET searchQuery = CONCAT(searchQuery, " 
				AND
				(
					tbl_products.product_itemcode IN (", p_category_code ,")
					OR tbl_products.multiple_item_code LIKE '%,",REPLACE (p_category_code,"'",""),",%'
				)
		");
	END IF;
	IF (p_price_end IS NOT NULL AND p_price_end <> 0) THEN
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products_details.product_detail_price_no_tax >= ",p_price_start,
		 " AND tbl_products_details.product_detail_price_no_tax <=",p_price_end," ");
	END IF;
	IF p_search_keyword IS NOT NULL AND p_search_keyword <> '' THEN
		SET searchQuery = CONCAT(searchQuery, " AND (tbl_products.product_name like '%",p_search_keyword,"%' 
		OR tbl_products.goods_code like '%",p_search_keyword,"%' 
		OR tbl_products.search_keywords like '%",p_search_keyword,"%'",@selectFromStmtForRelated," ) ");
	END IF;
		
	
	IF p_search_status IS NOT NULL AND p_search_status = 'sale_order' THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND (tbl_products.is_pre_order <> 1 AND tbl_products.sale_off_product <> 1) ");
	ELSEIF  p_search_status IS NOT NULL AND p_search_status = 'sale' THEN
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_search_status IS NOT NULL AND p_search_status = 'pre-order' THEN
		SET searchQuery = 
					CONCAT(searchQuery, " 
				AND tbl_products.is_pre_order = 1 ");
	ELSEIF p_search_status 	IS NOT NULL AND (p_search_status = 'new' OR p_search_status = 'new-arrival' or p_search_status = 'new-cord3') THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_search_status 	IS NOT NULL AND (p_search_status = 'recommended' OR p_search_status = 'recommend-item') THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
	
	
	IF p_search_brand IS NOT NULL AND p_search_brand <> '' THEN
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products.brand_code IN (", p_search_brand ,")");
	END IF;
	RETURN searchQuery;
	
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberStmt_2` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberStmt_2` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberStmt_2`(`p_table_product` VARCHAR(100), `p_table_product_detail` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	if p_table_product is not null and p_table_product <> '' then 
		SET p_condition_stmt = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_product,".",p_column_goods_code," ");
	else 
		SET p_condition_stmt = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					end if;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_product_detail,".",p_column_color_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_product_detail,".",p_column_size_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSEIF vb_is_shop_stock = 0 THEN 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
	ELSEIF vb_is_shop_stock = 2 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum3)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN
							SUM(tbl_stock_num.KanoNum3)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	IF p_is_check_color_show = 1 THEN 
		SET stuckNumberStmt = CONCAT("
		CASE WHEN (",p_table_product,".",p_column_is_color_show," = 0) THEN
			(
				SELECT 
					",p_stock_stmt,"
				FROM 
					tbl_stock_num
				WHERE 
					",p_condition_stmt,"
					",p_check_by_color_code,"
				GROUP BY GoodCode, ColorCode
			)
		ELSE
			(
				SELECT 
					",p_stock_stmt,"
				FROM 
					tbl_stock_num
				WHERE 	
					",p_condition_stmt,"
				GROUP BY GoodCode 
			)
		END AS stock_num
		");
	ELSE 
		SET stuckNumberStmt = CONCAT("
			(
				SELECT 
					",p_stock_stmt,"
				FROM 
					tbl_stock_num 
				WHERE 
					",p_condition_stmt,"
					",p_check_by_color_code,"
					",p_check_by_size_code,"
				", p_group_by_str, "
				
			) AS stock_num
		");
	END IF;
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberStmt_3` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberStmt_3` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberStmt_3`(`p_table_name` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_goods_code 	VARCHAR(1000);	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	SET p_condition_stmt = "";
	SET p_check_by_goods_code = "";
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	IF p_table_name IS NOT NULL AND p_table_name <> '' THEN 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_name,".",p_column_goods_code," ");
	ELSE 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					END IF;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_name,".",p_column_color_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_name,".",p_column_size_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	IF vb_is_shop_stock <> 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSE 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	IF p_is_check_color_show = 1 THEN 
		SET stuckNumberStmt = CONCAT("
		CASE WHEN (",p_table_name,".",p_column_is_color_show," = 0) THEN
			(
				SELECT ",p_stock_stmt," FROM tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_check_by_color_code,"
					",p_condition_stmt,"
					AND tbl_stock_num.StockNum > 0
				GROUP BY GoodCode, ColorCode
			)
		ELSE
			(
				SELECT ",p_stock_stmt," FROM tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_condition_stmt,"
					AND tbl_stock_num.StockNum > 0
				GROUP BY GoodCode
			)
		END AS stock_num
		");
	ELSE 
		SET stuckNumberStmt = CONCAT("
			(
					SELECT 
						",p_stock_stmt,"
					FROM 
						tbl_stock_num 
					WHERE 
						",p_check_by_goods_code,"
						",p_condition_stmt,"
						",p_check_by_color_code,"
						",p_check_by_size_code,"
					", p_group_by_str, "
			) AS stock_num
		");
		
	END IF;
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberStmt_catherine` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberStmt_catherine` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberStmt_catherine`(`p_table_name` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_goods_code 	VARCHAR(1000);	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	SET p_condition_stmt = "";
	SET p_check_by_goods_code = "";
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	IF p_table_name IS NOT NULL AND p_table_name <> '' THEN 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_name,".",p_column_goods_code," ");
	ELSE 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					END IF;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_name,".",p_column_color_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_name,".",p_column_size_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSEIF vb_is_shop_stock = 0 THEN 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
        ELSEIF vb_is_shop_stock = 2 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum3)
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,')
						ELSE
							0
						END AS stock_num
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN
							SUM(tbl_stock_num.KanoNum3)
						ELSE
							0
						END AS stock_num
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum3 <> 0
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	
		SET stuckNumberStmt = CONCAT("
			(
					SELECT 
						",p_stock_stmt,"
					FROM 
						tbl_stock_num 
					WHERE 
						",p_check_by_goods_code,"
						",p_condition_stmt,"
						",p_check_by_color_code,"
						",p_check_by_size_code,"
					", p_group_by_str, "
			) AS stock_num
		");
		
	
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `getStockNumberStmt_Cord3` */

/*!50003 DROP FUNCTION IF EXISTS `getStockNumberStmt_Cord3` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `getStockNumberStmt_Cord3`(`p_table_name` VARCHAR(100), `p_column_goods_code` VARCHAR(100), `p_column_color_code` VARCHAR(100), `p_column_size_code` VARCHAR(100), `p_column_is_color_show` VARCHAR(100), `p_is_check_goods_code` TINYINT(1), `p_is_check_color_code` TINYINT(1), `p_is_check_size_code` TINYINT(1), `p_is_check_color_show` TINYINT(1), `p_shop_list` VARCHAR(1000)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE stuckNumberStmt TEXT;
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	
	DECLARE p_check_by_goods_code 	VARCHAR(1000);	
	DECLARE p_check_by_color_code 	VARCHAR(1000);
	DECLARE p_check_by_size_code 	VARCHAR(1000);	
	
	DECLARE p_condition_stmt 	VARCHAR(1000);
	
	DECLARE p_group_by_str 		VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	SET p_condition_stmt = "";
	SET p_check_by_goods_code = "";
	SET p_check_by_color_code = "";
	SET p_check_by_size_code = "";
	
	--  -------------------------
	IF p_table_name IS NOT NULL AND p_table_name <> '' THEN 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = ",p_table_name,".",p_column_goods_code," ");
	ELSE 
		SET p_check_by_goods_code = CONCAT(" 
					tbl_stock_num.GoodCode = '",p_column_goods_code,"' ");
					END IF;
	SET p_group_by_str = CONCAT("
					GROUP BY GoodCode ");
	--  -------------------------
	IF p_is_check_color_code = 1 THEN 
		SET p_check_by_color_code = CONCAT("
					AND tbl_stock_num.ColorCode = ",p_table_name,".",p_column_color_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", ColorCode");
	END IF;
	
	--  -------------------------
	IF p_is_check_size_code = 1 THEN 
		SET p_check_by_size_code = CONCAT("
					AND tbl_stock_num.SizeCode = ",p_table_name,".",p_column_size_code," ");
		SET p_group_by_str = CONCAT(p_group_by_str, ", SizeCode");
	END IF;
	
	-- ----------------------------------------------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	IF vb_is_shop_stock <> 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSE 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	IF p_is_check_color_show = 1 THEN 
		SET stuckNumberStmt = CONCAT("
		CASE WHEN (",p_table_name,".",p_column_is_color_show," = 0) THEN
			(
				SELECT ",p_stock_stmt," FROM tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_check_by_color_code,"
					",p_condition_stmt,"
					AND tbl_stock_num.StockNum > 0
				GROUP BY GoodCode, ColorCode
			)
		ELSE
			(
				SELECT ",p_stock_stmt," FROM tbl_stock_num 
				WHERE 
					",p_check_by_goods_code,"
					",p_condition_stmt,"
					AND tbl_stock_num.StockNum > 0
				GROUP BY GoodCode
			)
		END AS stock_num
		");
	ELSE 
		SET stuckNumberStmt = CONCAT("
			(
					SELECT 
						",p_stock_stmt,"
					FROM 
						tbl_stock_num 
					WHERE 
						",p_check_by_goods_code,"
						",p_condition_stmt,"
						",p_check_by_color_code,"
						",p_check_by_size_code,"
					", p_group_by_str, "
			) AS stock_num
		");
		
	END IF;
	
	
	--  -----------------
	
	RETURN stuckNumberStmt;
END */$$
DELIMITER ;

/* Function  structure for function  `GROUPOTANAKA_getSearchQuery` */

/*!50003 DROP FUNCTION IF EXISTS `GROUPOTANAKA_getSearchQuery` */;
DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` FUNCTION `GROUPOTANAKA_getSearchQuery`(`p_category_code` VARCHAR(250), `p_price_start` INT, `p_price_end` INT, `p_search_keyword` VARCHAR(50), `p_search_brand_group_id` INT, `p_search_status` VARCHAR(50)) RETURNS text CHARSET utf8
BEGIN 
	DECLARE searchQuery TEXT;
	DECLARE search_keyword_master TEXT;
	SET searchQuery = '';
	SET search_keyword_master = '';		
	-- ============================================
	SELECT 	GROUP_CONCAT(search_key SEPARATOR ",")
	FROM 	tbl_search_key 
	WHERE 	CONCAT("'", `related_keys_search`, "'") LIKE CONCAT("%'",p_search_keyword, "'%")
	INTO @search_keyword_master;
	
	SET @selectFromStmtForRelated = 'OR 1=2 ';
	WHILE @search_keyword_master != '' DO
		SET @tmp_search_keyword_master = SUBSTRING_INDEX(@search_keyword_master,',',1);
		SET @search_keyword_master = SUBSTRING(@search_keyword_master, CHAR_LENGTH(@tmp_search_keyword_master) + 1 + CHAR_LENGTH(','));
		SET @selectFromStmtForRelated = 
			CONCAT(@selectFromStmtForRelated, "
				OR tbl_products.search_keywords LIKE '%",@tmp_search_keyword_master, "%' ");
	END WHILE;	
	-- ============================================
			
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET searchQuery = CONCAT(searchQuery, " 
				AND
				(
					tbl_products.product_itemcode IN (", p_category_code ,")
					OR tbl_products.multiple_item_code LIKE '%,",REPLACE (p_category_code,"'",""),",%'
				)
		");
	END IF;
	IF (p_price_end IS NOT NULL AND p_price_end <> 0) THEN
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products_details.product_detail_price_no_tax >= ",p_price_start,
		 " AND tbl_products_details.product_detail_price_no_tax <=",p_price_end," ");
	END IF;
	IF p_search_keyword IS NOT NULL AND p_search_keyword <> '' THEN
		SET searchQuery = CONCAT(searchQuery, " AND (tbl_products.product_name like '%",p_search_keyword,"%' 
		OR tbl_products.goods_code like '%",p_search_keyword,"%' 
		OR tbl_products.search_keywords like '%",p_search_keyword,"%'",@selectFromStmtForRelated," ) ");
	END IF;
		
	
	IF p_search_status IS NOT NULL AND p_search_status = 'sale_order' THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND (tbl_products.is_pre_order <> 1 AND tbl_products.sale_off_product <> 1) ");
	ELSEIF  p_search_status IS NOT NULL AND p_search_status = 'sale' THEN
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_search_status IS NOT NULL AND p_search_status = 'pre-order' THEN
		SET searchQuery = 
					CONCAT(searchQuery, " 
				AND tbl_products.is_pre_order = 1 ");
	ELSEIF p_search_status 	IS NOT NULL AND (p_search_status = 'new' OR p_search_status = 'new-arrival' OR p_search_status = 'new-cord3') THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_search_status 	IS NOT NULL AND (p_search_status = 'recommended' OR p_search_status = 'recommend-item') THEN
		SET searchQuery = 
				CONCAT(searchQuery, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	IF p_search_brand_group_id IS NOT NULL AND p_search_brand_group_id <> '' AND p_search_brand_group_id <> '0' THEN
		
		SET searchQuery = CONCAT(searchQuery, " AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_search_brand_group_id,"')
			");
			
	END IF;	
	
	RETURN searchQuery;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `anhqh_test` */

/*!50003 DROP PROCEDURE IF EXISTS  `anhqh_test` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `anhqh_test`()
BEGIN
	/* DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = 'anhqh_test'
	INTO brand_name_tmp;
	
	set brand_name_tmp = replace (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
		insert into tbl_sys_log(sys_log)values	(brand_name_tmp);
	*/
	SELECT * FROM tbl_gift_detail where goods_code <> 'nx-1910702';
END */$$
DELIMITER ;

/* Procedure structure for procedure `Aziazi2_sp_ad_getAllShop_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `Aziazi2_sp_ad_getAllShop_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Aziazi2_sp_ad_getAllShop_frontend`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * 
	FROM tbl_shop 
	WHERE shop_status = 1
	ORDER BY tbl_shop.`shop_show_order`;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_shop;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `BAGGYPORTEC_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `BAGGYPORTEC_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `BAGGYPORTEC_sp_searchProduct_fontend`(IN `p_search_key_word_1_byte` VARCHAR(20), IN `p_search_key_word_2_byte` VARCHAR(20), IN `p_category_code` VARCHAR(255), IN `p_category_code_base` TEXT, IN `p_price_1` VARCHAR(255), IN `p_price_2` VARCHAR(255), IN `p_price_3` VARCHAR(255), IN `p_price_4` VARCHAR(255), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master_1_byte VARCHAR(1000) DEFAULT NULL;
	DECLARE search_keyword_master_2_byte VARCHAR(1000) DEFAULT NULL;
	-- Hoa xuan them tim kiem rieng cho kh Deco #358513191 --
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"\\","\\\\");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"'","\\'");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,'"','\\"');	
	
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"\\","\\\\");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"'","\\'");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,'"','\\"');
	
	
	
	
	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_1_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_1_byte, ',%')
	INTO search_keyword_master_1_byte;
	IF 
		search_keyword_master_1_byte IS NOT NULL 
		AND search_keyword_master_1_byte <> '' 
	THEN
		
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_1_byte = p_search_key_word_1_byte;
	END IF;
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_2_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_2_byte, ',%')
	INTO search_keyword_master_2_byte;
	IF 
		search_keyword_master_2_byte IS NOT NULL 
		AND search_keyword_master_2_byte <> '' 
	THEN
		
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_2_byte = p_search_key_word_2_byte;
	END IF;
	
	
	
	
	SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products 
				JOIN tbl_products_details 
						ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
						AND tbl_products_details.product_detail_status = 0
				LEFT JOIN tbl_brands 
					ON tbl_products.brand_code = tbl_brands.brand_code
				LEFT JOIN tbl_products_category 
					ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			WHERE 
				tbl_products.product_status 		= 1
				AND (
				tbl_products.product_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_1_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_1_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_2_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_2_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_2_byte,"%'
				) 
			");
	
	-- ==================================================	
	IF (p_category_code <> '') THEN
		SET @check_multiple_item = '';
		SET @code = p_category_code_base;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				) 
				OR
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				)"
				,@check_multiple_item,"
			) ");
	END IF; 
	
	-- ==================================================	
	IF (p_price_1 <> '' OR p_price_2 <> '' OR p_price_3 <> '' OR p_price_4 <> '') THEN		
		SET @selectFromStmt_tmp = "";	
		IF (p_price_1 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 0 AND tbl_products_details.product_detail_price_no_tax <= 10000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_2 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 10000 AND tbl_products_details.product_detail_price_no_tax <= 15000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_3 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 15000 AND tbl_products_details.product_detail_price_no_tax <= 20000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_4 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 20000 ) ");
		END IF;
		
		SET @selectFromStmt = CONCAT(@selectFromStmt, " AND (" ,SUBSTR(@selectFromStmt_tmp, 4, 1000), ") ");
	END IF;
	
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	 -- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Catherinesp_getAllStaff` */

/*!50003 DROP PROCEDURE IF EXISTS  `Catherinesp_getAllStaff` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Catherinesp_getAllStaff`()
BEGIN
	SELECT 
		tbl_staff.*
	FROM 
		tbl_staff
	WHERE `tbl_staff`.status=1
	
	ORDER BY tbl_staff.StaffCode DESC;
	
	SELECT COUNT(*) AS total_items FROM tbl_staff;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_ad_getAllShop_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_ad_getAllShop_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_ad_getAllShop_frontend`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * 
	FROM tbl_shop 
	WHERE shop_status = 1
	ORDER BY tbl_shop.`shop_show_order`;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_shop;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Catherine_sp_getAllCategory_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `Catherine_sp_getAllCategory_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Catherine_sp_getAllCategory_frontend`()
BEGIN
	SELECT  * FROM tbl_products_category
	WHERE IsDisplay = 1
	GROUP BY name_display
	ORDER BY OrderNumber ASC;
	
	SELECT product_itemcode, multiple_item_code FROM tbl_products WHERE product_status = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_News_getHotNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_News_getHotNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_News_getHotNews`()
BEGIN
	SELECT 	*
	FROM 	tbl_news
	WHERE 	STATUS = 1
		AND (
			public_date IS NULL
			OR public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY tbl_news.news_date DESC, news_id DESC
	LIMIT 2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetProductByBrandCodeskuno_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetProductByBrandCodeskuno_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetProductByBrandCodeskuno_mida`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetProductByBrandCode_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetProductByBrandCode_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetProductByBrandCode_mida`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_ad_customer_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_ad_customer_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_ad_customer_export`(IN `p_type_obj` VARCHAR(50))
BEGIN
	IF (p_type_obj = 'all') then
	SELECT  `customer_code`,`customer_name`,`first_name`, `email` FROM `tbl_customers` WHERE `email`!='' AND  ( passwords !='' or passwords is not NULL);
	ELSEIF(p_type_obj = 'emailmagazine') THEN
			SELECT   `customer_code`,`customer_name`,`first_name`, `email` FROM `tbl_customers` WHERE `email`!='' AND  ( passwords !='' or passwords is not NULL) and  emailmagazine=1;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetDetailsByCodeOrBarcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetDetailsByCodeOrBarcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetDetailsByCodeOrBarcode`(IN `p_good_code` VARCHAR(50), IN `p_barcode` VARCHAR(20))
BEGIN
	SELECT pd.barcode, pd.product_goods_code, p.product_name_display, p.product_name, pd.size_code, pd.size_display, pd.size_name
	FROM tbl_products AS p,tbl_products_details AS pd
	WHERE p.goods_code = p_good_code AND p.SeqNo = pd.RSeqNo
	group by p.goods_code;
	
	SELECT pd.barcode, pd.product_goods_code, p.product_name_display, p.product_name, pd.size_code, pd.size_display, pd.size_name
	FROM tbl_products AS p,tbl_products_details AS pd
	WHERE pd.barcode = p_barcode AND p.SeqNo = pd.RSeqNo
	GROUP BY p.goods_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetGoodsCodeByListBarcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetGoodsCodeByListBarcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetGoodsCodeByListBarcode`(IN `p_barcode` VARCHAR(10000))
BEGIN	
	SET @selectStmtStrRun = CONCAT("
		SELECT 
			GROUP_CONCAT(product_goods_code SEPARATOR \"','\") as product_goods_code
		FROM tbl_products_details
		WHERE barcode IN (",p_barcode,");
	");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search_hashtag` VARCHAR(10000), IN `p_gender` VARCHAR(50), IN `p_size` VARCHAR(50), IN `p_color` VARCHAR(50), IN `p_keyword` VARCHAR(50), IN `p_color_sort` INT(10), IN `p_onsale` INT(1))
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	
	SET @p_filter_condition = '';
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	tbl_products.goods_code 		AS product_goods_code,
			tbl_products.product_id			AS product_product_id,
			tbl_products.seqno,
			tbl_products.product_itemcode,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products.is_color_show 		AS product_is_color_show,
			tbl_products.brand_code			AS product_brand_code,
			tbl_products.sale_off_product,
			tbl_products.create_date,
			tbl_products.season_code
	";
	-- --------------------------------------------------	
	
	/*
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	*/
	
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET @category_code = CONCAT("'",p_category_code,"'");
	END IF;
	
	SET p_add_and_condition_str = getSearchQuery(@category_code,p_price_start,p_price_end,'',p_search_brand,p_search_status);
	SET @p_filter_condition = getFilterQuery(p_search_hashtag,'','','',p_search_brand);
	
	SET @addition_condition = '';
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	SET @addition_condition_rentsale = '';
	IF (p_onsale = '1') THEN
		SET @addition_condition_rentsale = 
		CONCAT("
WHERE product_info_final.stock_num > 0
OR product_info_final.stock_num IS NOT NULL
OR product_info_final.stock_num != ''");
	END IF;
	
	IF (p_size IS NOT NULL AND p_size <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.size_code = '",p_size,"'");
	END IF;
	
	IF (p_color IS NOT NULL AND p_color <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.color_code = '",p_color,"'");
	END IF;
	
	IF (p_keyword IS NOT NULL AND p_keyword <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products.search_keywords like '%",p_keyword,"%'");
	END IF;
	
	IF (p_search_keyword IS NOT NULL AND p_search_keyword <> '') THEN
		SET @addition_condition = CONCAT(@addition_condition, " 
			AND (
			1=2" );
		SET @search = p_search_keyword;
		WHILE @search != '' DO
			SET @tmp_search = SUBSTRING_INDEX(@search,' ',1);
			SET @search = SUBSTRING(@search, CHAR_LENGTH(@tmp_search) + 1 + CHAR_LENGTH(','));
			SET @addition_condition =  CONCAT(@addition_condition, "
			OR tbl_products.product_name 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_name_display 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.goods_code 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.brand_name 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemcode 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemname 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.search_keywords 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_detail 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.prihtml1 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.SectionName 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.Memo3 				like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.Memo4 				like '%",REPLACE (@tmp_search," ",""),"%'
			 
			OR tbl_products_details.barcode 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.color_name 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.size_name 		like '%",REPLACE (@tmp_search," ",""),"%'");
		END WHILE;
		
		
		SET @addition_condition = CONCAT(@addition_condition, "
			)" );
			
			/*
		SET @addition_condition = 
		CONCAT(@addition_condition, " AND (tbl_products.product_name like '%",p_search_keyword,"%' 
			OR tbl_products.product_name_display 		like '%",p_search_keyword,"%'
			OR tbl_products.goods_code 			like '%",p_search_keyword,"%'			
			OR tbl_products.brand_name 			like '%",p_search_keyword,"%'			
			OR tbl_products.product_itemname 		like '%",p_search_keyword,"%'
			OR tbl_products.search_keywords 		like '%",p_search_keyword,"%' 
			OR tbl_products.product_detail 			like '%",p_search_keyword,"%' 
			OR tbl_products.prihtml1 			like '%",p_search_keyword,"%' 
			OR tbl_products_details.barcode 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.color_name 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.size_name 		like '%",p_search_keyword,"%' ) ");
			*/
	END IF;
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
		OR (p_category_code IS NOT NULL AND p_category_code 	<> '')
	THEN
	/*	SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
		*/
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	IF 	
		@category_code <> ''
		OR p_price_start <> ''
		OR p_price_end <> ''
		OR p_search_brand <> ''
		OR @p_filter_condition <> '' 
		OR @addition_condition <> ''
	THEN	
		SET @limit_if_condition = '';
	ELSE
		SET @limit_if_condition = ' LIMIT 1000';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details",@tbl_category,"
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, @p_filter_condition, @addition_condition,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND (p_category_code = '' OR p_category_code IS NULL)
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_Cord3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- SET @getStockNumberStmt = ' 1 as stock_num ';
	-- -===============================================================================
/*	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, "
			) AS all_product ",
		" UNION ALL  ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt, "
	) AS product_info_ok ");
	*/
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt);
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectInfo = CONCAT(" 
		product_info_limit.product_goods_code,
		product_info_limit.pro_detail_color_code,
		product_info_limit.pro_detail_size_code,
		product_info_limit.season_code,
		product_info_limit.create_date,
		(SELECT product_id FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_id,
		(SELECT new_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_new_product,
		(SELECT sale_off_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_sale_off_product,
		(SELECT is_restock_item FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item,
		(SELECT is_restock_item_always FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item_always,
		(SELECT restock_from FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_from,
		(SELECT restock_to FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_to,
		(SELECT slug_url FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_slug_url,
		(
			SELECT 
				(CASE 
					WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
						tbl_products.product_name 
				ELSE  
					tbl_products.product_name_display 
				END) AS product_product_name_display
			FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1
		) AS product_product_name_display,
		
		product_info_limit.product_brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_name,
		
		(SELECT product_name FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_name,
		(SELECT SectionName FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_SectionName,
		(SELECT product_image_details FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_details,
		(SELECT product_image_server FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_server,
		(SELECT active_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_active_date,
		(SELECT 
			(CASE 
				WHEN product_info_limit.sale_off_product IS NOT NULL AND product_info_limit.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END) AS price_sort
			FROM tbl_products_details 
			WHERE tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS price_for_sort,
		(SELECT create_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_create_date,
		
		(SELECT color_slug_url FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_color_slug_url,
		(SELECT product_detail_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_price_no_tax,
		(SELECT product_detail_saleoff_price FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price,
		(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price_no_tax,
		(
			SELECT
				(CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
						tbl_products_details.size_name 
				ELSE 
					tbl_products_details.size_display 
				END) AS detail_size_display
			FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_size_display,
		(SELECT barcode FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_barcode,
		(SELECT num_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_order,
		(SELECT num_rank FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_rank,
		(SELECT product_detail_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_order,
	");
		
	SET @selectStmtStrRun = CONCAT("
SELECT SQL_CALC_FOUND_ROWS product_info_final.* FROM (	
	SELECT ",@selectInfo, @selectJoinWishListStmt, @getStockNumberStmt, " 
	FROM ("
		,@selectStmtStr," 
	) AS product_info_limit
) AS product_info_final
", @addition_condition_rentsale, "
		", @orderStmt, "
		", @selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	/*SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			SELECT * FROM ( 
				SELECT tbl_products.goods_code", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION    
			SELECT tbl_products.goods_code", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS TBL_TMP ");*/
	
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtNoLimit = CONCAT("
		SELECT 				
			(SELECT `category_group_id` FROM `tbl_products_category` WHERE tbl_products.product_itemcode = tbl_products_category.ItemCode GROUP BY RSeqNo)
			 AS `product_product_category_id`,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.search_keywords 		AS product_search_keywords,
			tbl_products.price 			AS product_price,
			(SELECT `color_code` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `pro_detail_color_code` ,
			(SELECT `size_code` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `pro_detail_size_code` ,
			 (SELECT `product_detail_price_no_tax` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `pro_detail_product_detail_price_no_tax`
		");
	SET @selectStmtStrRunNoLimit = CONCAT(@selectStmtNoLimit, @selectFromStmt);
	
	PREPARE stmt3 FROM @selectStmtStrRunNoLimit;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search_hashtag` VARCHAR(10000), IN `p_gender` VARCHAR(50), IN `p_size` VARCHAR(50), IN `p_color` VARCHAR(50), IN `p_keyword` VARCHAR(50), IN `p_color_sort` INT(10), IN `p_onsale` INT(1))
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	
	SET @p_filter_condition = '';
	
	-- ----------------------------------------------------
	IF (p_sort = 'color') THEN
		SET @orderStmt = CONCAT("
		ORDER BY
			(CASE cdo
			 WHEN NULL THEN 1
			 WHEN '",p_color_sort,"' THEN 1
			 WHEN '",p_color_sort+1,"' THEN 2
			 WHEN '",p_color_sort-1,"' THEN 3
			 ELSE 10 END) ASC,
			cdo ASC,
			pro_detail_num_order DESC, 
			CAST(product_active_date AS DATE) 	DESC,
			product_goods_code 			ASC
		");
		
		SET @selectColorSort = CONCAT("
			LEFT JOIN (
				SELECT 	
					color_code as colors_color_code,
					color_name,
					color_displayorder AS cdo
				FROM 	
					tbl_colors
			) AS color_info
				ON color_info.colors_color_code	= product_info_final.pro_detail_color_code ");
	ELSE
		SET @orderStmt = getOrderStmtForProductList(p_sort, 'cord3');
		SET @selectColorSort = '';
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	tbl_products.goods_code 		AS product_goods_code,
			tbl_products.product_id			AS product_product_id,
			tbl_products.seqno,
			tbl_products.product_itemcode,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products.is_color_show 		AS product_is_color_show,
			tbl_products.brand_code			AS product_brand_code,
			tbl_products.sale_off_product,
			tbl_products.create_date,
			tbl_products.season_code,
			tbl_products_details.num_order 		AS pro_detail_num_order,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products.active_date 		AS product_active_date
	";
	-- --------------------------------------------------	
	
	/*
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	*/
	
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET @category_code = CONCAT("'",p_category_code,"'");
	END IF;
	
	SET p_add_and_condition_str = getSearchQuery(@category_code,p_price_start,p_price_end,'',p_search_brand,p_search_status);
	SET @p_filter_condition = getFilterQuery(p_search_hashtag,'','','',p_search_brand);
	
	SET @addition_condition = '';
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	SET @addition_condition_rentsale = '';
	IF (p_onsale = '1') THEN
		SET @addition_condition_rentsale = 
		CONCAT("
WHERE product_info_final.stock_num > 0
OR product_info_final.stock_num IS NOT NULL
OR product_info_final.stock_num != ''");
	END IF;
	
	IF (p_size IS NOT NULL AND p_size <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.size_code = '",p_size,"'");
	END IF;
	
	IF (p_color IS NOT NULL AND p_color <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.color_code = '",p_color,"'");
	END IF;
	
	IF (p_keyword IS NOT NULL AND p_keyword <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products.search_keywords like '%",p_keyword,"%'");
	END IF;
	
	IF (p_search_keyword IS NOT NULL AND p_search_keyword <> '') THEN
		SET @addition_condition = concat(@addition_condition, " 
			AND (
			1=2" );
		set @search = p_search_keyword;
		WHILE @search != '' DO
			SET @tmp_search = SUBSTRING_INDEX(@search,' ',1);
			SET @search = SUBSTRING(@search, CHAR_LENGTH(@tmp_search) + 1 + CHAR_LENGTH(','));
			SET @addition_condition =  CONCAT(@addition_condition, "
			OR tbl_products.product_name 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.product_name_display 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.goods_code 			like '%",REPLACE (@tmp_search," ",""),"%'			
			OR tbl_products.brand_name 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemcode 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemname 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.search_keywords 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.product_detail 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.prihtml1 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.SectionName 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.Memo3 				like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.Memo4 				like '%",REPLACE (@tmp_search," ",""),"%' 
			
			OR tbl_products_details.barcode 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.color_name 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.size_name 		like '%",REPLACE (@tmp_search," ",""),"%'");
		END WHILE;
		
		
		SET @addition_condition = CONCAT(@addition_condition, "
			)" );
			
			/*
		SET @addition_condition = 
		CONCAT(@addition_condition, " AND (tbl_products.product_name like '%",p_search_keyword,"%' 
			OR tbl_products.product_name_display 		like '%",p_search_keyword,"%'
			OR tbl_products.goods_code 			like '%",p_search_keyword,"%'			
			OR tbl_products.brand_name 			like '%",p_search_keyword,"%'			
			OR tbl_products.product_itemname 		like '%",p_search_keyword,"%'
			OR tbl_products.search_keywords 		like '%",p_search_keyword,"%' 
			OR tbl_products.product_detail 			like '%",p_search_keyword,"%' 
			OR tbl_products.prihtml1 			like '%",p_search_keyword,"%' 
			OR tbl_products_details.barcode 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.color_name 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.size_name 		like '%",p_search_keyword,"%' ) ");
			*/
	END IF;
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
		OR (p_category_code IS NOT NULL AND p_category_code 	<> '')
	THEN
		SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	IF 	
		@category_code <> ''
		OR p_price_start <> ''
		OR p_price_end <> ''
		OR p_search_brand <> ''
		OR @p_filter_condition <> '' 
		OR @addition_condition <> ''
	THEN	
		SET @limit_if_condition = '';
	ELSE
		SET @limit_if_condition = ' LIMIT 1000';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details",@tbl_category,"
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, @p_filter_condition, @addition_condition,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND (p_category_code = '' OR p_category_code IS NULL)
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_Cord3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- SET @getStockNumberStmt = ' 1 as stock_num ';
	-- -===============================================================================
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt, @orderStmt, @selectLimitStmt);
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectInfo = CONCAT(" 
		product_info_limit.product_goods_code,
		product_info_limit.pro_detail_color_code,
		product_info_limit.pro_detail_size_code,
		product_info_limit.season_code,
		product_info_limit.create_date,
		(SELECT product_id FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_id,
		(SELECT new_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_new_product,
		(SELECT sale_off_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_sale_off_product,
		(SELECT is_restock_item FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item,
		(SELECT is_restock_item_always FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item_always,
		(SELECT restock_from FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_from,
		(SELECT restock_to FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_to,
		(SELECT slug_url FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_slug_url,
		(
			SELECT 
				(CASE 
					WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
						tbl_products.product_name 
				ELSE  
					tbl_products.product_name_display 
				END) AS product_product_name_display
			FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1
		) AS product_product_name_display,
		
		product_info_limit.product_brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_name,
		
		(SELECT product_name FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_name,
		(SELECT SectionName FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_SectionName,
		(SELECT product_image_details FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_details,
		(SELECT product_image_server FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_server,
		(SELECT active_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_active_date,
		(SELECT 
			(CASE 
				WHEN product_info_limit.sale_off_product IS NOT NULL AND product_info_limit.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END) AS price_sort
			FROM tbl_products_details 
			WHERE tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS price_for_sort,
		(SELECT create_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_create_date,
		
		(SELECT color_slug_url FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_color_slug_url,
		(SELECT product_detail_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_price_no_tax,
		(SELECT product_detail_saleoff_price FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price,
		(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price_no_tax,
		(
			SELECT
				(CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
						tbl_products_details.size_name 
				ELSE 
					tbl_products_details.size_display 
				END) AS detail_size_display
			FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_size_display,
		(SELECT barcode FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_barcode,
		(SELECT num_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_order,
		(SELECT num_rank FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_rank,
		(SELECT product_detail_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_order,
	");
		
	SET @selectStmtStrRun = CONCAT("
SELECT * FROM (	
	SELECT ",@selectInfo, @selectJoinWishListStmt, @getStockNumberStmt, " 
	FROM ("
		,@selectStmtStr," 
	) AS product_info_limit
) AS product_info_final
", @addition_condition_rentsale, @selectColorSort);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT 'skip'";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	/*
	SET @selectStmtNoLimit = CONCAT("
		SELECT 				
			(SELECT `category_group_id` FROM `tbl_products_category` WHERE tbl_products.product_itemcode = tbl_products_category.ItemCode GROUP BY RSeqNo)
				AS `product_product_category_id`,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.search_keywords 		AS product_search_keywords,
			tbl_products.price 			AS product_price,
			tbl_products_details.`color_code` 	AS `pro_detail_color_code`,
			tbl_products_details.`size_code` 	AS `pro_detail_size_code`,
			tbl_products_details.`product_detail_price_no_tax` AS `pro_detail_product_detail_price_no_tax`
		");
	SET @selectStmtStrRunNoLimit = CONCAT(@selectStmtNoLimit, @selectFromStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRunNoLimit);
	*/
	SET @selectStmtStrRunNoLimit = "SELECT 'skip'";
	PREPARE stmt3 FROM @selectStmtStrRunNoLimit;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
	-- INSERT INTO tbl_sys_log(sys_log) VALUES ('out');
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all_filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all_filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_all_filter`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search_hashtag` VARCHAR(10000), IN `p_gender` VARCHAR(50), IN `p_size` VARCHAR(50), IN `p_color` VARCHAR(50), IN `p_keyword` VARCHAR(50), IN `p_color_sort` INT(10), IN `p_onsale` INT(1))
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	
	SET @p_filter_condition = '';
	
	-- ----------------------------------------------------
	IF (p_sort = 'color') THEN
		SET @orderStmt = CONCAT("
		ORDER BY
			(CASE cdo
			 WHEN NULL THEN 1
			 WHEN '",p_color_sort,"' THEN 1
			 WHEN '",p_color_sort+1,"' THEN 2
			 WHEN '",p_color_sort-1,"' THEN 3
			 ELSE 10 END) ASC,
			cdo ASC,
			pro_detail_num_order DESC, 
			CAST(product_active_date AS DATE) 	DESC,
			product_goods_code 			ASC
		");
		
		SET @selectColorSort = CONCAT("
			LEFT JOIN (
				SELECT 	
					color_code as colors_color_code,
					color_name,
					color_displayorder AS cdo
				FROM 	
					tbl_colors
			) AS color_info
				ON color_info.colors_color_code	= product_info_final.pro_detail_color_code ");
	ELSE
		SET @orderStmt = getOrderStmtForProductList(p_sort, '');
		SET @selectColorSort = '';
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET @category_code = CONCAT("'",p_category_code,"'");
	END IF;
	
	SET p_add_and_condition_str = getSearchQuery(@category_code,p_price_start,p_price_end,'',p_search_brand,p_search_status);
	SET @p_filter_condition = getFilterQuery(p_search_hashtag,'','','',p_search_brand);
	
	SET @addition_condition = '';
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	SET @addition_condition_rentsale = '';
	IF (p_onsale = '1') THEN
		SET @addition_condition_rentsale = 
		CONCAT("
WHERE product_info_final.stock_num > 0
OR product_info_final.stock_num IS NOT NULL
OR product_info_final.stock_num != ''");
	END IF;
	
	IF (p_size IS NOT NULL AND p_size <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.size_code = '",p_size,"'");
	END IF;
	
	IF (p_color IS NOT NULL AND p_color <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.color_code = '",p_color,"'");
	END IF;
	
	IF (p_keyword IS NOT NULL AND p_keyword <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products.search_keywords like '%",p_keyword,"%'");
	END IF;
	
	IF (p_search_keyword IS NOT NULL AND p_search_keyword <> '') THEN
		SET @addition_condition = CONCAT(@addition_condition, " 
			AND (
			1=2" );
		SET @search = p_search_keyword;
		WHILE @search != '' DO
			SET @tmp_search = SUBSTRING_INDEX(@search,' ',1);
			SET @search = SUBSTRING(@search, CHAR_LENGTH(@tmp_search) + 1 + CHAR_LENGTH(','));
			SET @addition_condition =  CONCAT(@addition_condition, "
			OR tbl_products.product_name 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_name_display 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.goods_code 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.brand_name 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemcode 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_itemname 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.search_keywords 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.product_detail 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.prihtml1 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.SectionName 			like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.Memo3 				like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.Memo4 				like '%",REPLACE (@tmp_search," ",""),"%'
			 
			OR tbl_products_details.barcode 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.color_name 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.size_name 		like '%",REPLACE (@tmp_search," ",""),"%'");
		END WHILE;
		
		
		SET @addition_condition = CONCAT(@addition_condition, "
			)" );
			
			/*
		SET @addition_condition = 
		CONCAT(@addition_condition, " AND (tbl_products.product_name like '%",p_search_keyword,"%' 
			OR tbl_products.product_name_display 		like '%",p_search_keyword,"%'
			OR tbl_products.goods_code 			like '%",p_search_keyword,"%'			
			OR tbl_products.brand_name 			like '%",p_search_keyword,"%'			
			OR tbl_products.product_itemname 		like '%",p_search_keyword,"%'
			OR tbl_products.search_keywords 		like '%",p_search_keyword,"%' 
			OR tbl_products.product_detail 			like '%",p_search_keyword,"%' 
			OR tbl_products.prihtml1 			like '%",p_search_keyword,"%' 
			OR tbl_products_details.barcode 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.color_name 		like '%",p_search_keyword,"%' 
			OR tbl_products_details.size_name 		like '%",p_search_keyword,"%' ) ");
			*/
	END IF;
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
		OR (p_category_code IS NOT NULL AND p_category_code 	<> '')
	THEN
		SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details",@tbl_category,"
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, @p_filter_condition, @addition_condition,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND (p_category_code = '' OR p_category_code IS NULL)
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	SET @selectStmtStrRun = "SELECT 'skip'";
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT 'skip'";
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtNoLimit = CONCAT("
		SELECT 				
			(SELECT `category_group_id` FROM `tbl_products_category` WHERE tbl_products.product_itemcode = tbl_products_category.ItemCode GROUP BY RSeqNo)
				AS `product_product_category_id`,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.search_keywords 		AS product_search_keywords,
			tbl_products.price 			AS product_price,
			tbl_products_details.`color_code` 	AS `pro_detail_color_code`,
			tbl_products_details.`size_code` 	AS `pro_detail_size_code`,
			tbl_products_details.`product_detail_price_no_tax` AS `pro_detail_product_detail_price_no_tax`
		");
	SET @selectStmtStrRunNoLimit = CONCAT(@selectStmtNoLimit, @selectFromStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRunNoLimit);
	PREPARE stmt3 FROM @selectStmtStrRunNoLimit;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_color` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_color` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByGroupCategoryIdFilter_color`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_goods_code` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_color_sort` INT(10), IN `p_section` VARCHAR(50))
BEGIN	
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	-- ----------------------------------------------------
	IF (p_sort = 'color') THEN
		SET @orderStmt = CONCAT("
		ORDER BY
			(CASE cdo
			 WHEN NULL THEN 1
			 WHEN '",p_color_sort,"' THEN 1
			 WHEN '",p_color_sort+1,"' THEN 2
			 WHEN '",p_color_sort-1,"' THEN 3
			 ELSE 10 END) ASC,
			cdo ASC,
			(CASE season_code
			 WHEN '20222' THEN 9
			 WHEN '20221' THEN 8
			 WHEN '20212' THEN 7
			 WHEN '20211' THEN 6
			 WHEN '20202' THEN 5
			 WHEN '20201' THEN 4
			 WHEN '20192' THEN 3
			 WHEN '20191' THEN 2
			 ELSE 1 END) DESC,
			season_code DESC,
			create_date DESC, 
			CAST(active_date AS DATE) 	DESC,
			product_goods_code 			DESC
		");
		/*
			cdo ASC,
			CAST(active_date AS DATE) 	DESC,
			product_goods_code 		desc
		*/
		SET @selectColorSort = CONCAT("(SELECT color_displayorder FROM tbl_colors WHERE tbl_colors.`color_code` = tbl_products_details.color_code LIMIT 1) AS cdo,");
	ELSE
		SET @orderStmt = '';
		SET @selectColorSort = '';
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = CONCAT("
		SELECT 	",@selectColorSort,"
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.product_id			AS product_product_id,
			tbl_products.seqno,
			tbl_products.product_itemcode,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products.is_color_show 		AS product_is_color_show,
			tbl_products.brand_code			AS product_brand_code,
			tbl_products.sale_off_product,
			tbl_products.create_date,
			tbl_products.season_code
	");
	-- --------------------------------------------------	
	
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET @category_code = CONCAT("'",p_category_code,"'");
	END IF;
	
	SET @section_condition = '';
	IF  p_section IS NOT NULL AND p_section <> '' THEN
		SET @section_condition = CONCAT("AND tbl_products.SectionCode = '",p_section,"'");
	END IF;
	
	SET p_add_and_condition_str = getSearchQuery(@category_code,'','','','','');
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code != '",p_goods_code,"'
			",@section_condition,"
			",p_add_and_condition_str,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND (p_category_code = '' OR p_category_code IS NULL)
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_Cord3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt);
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectInfo = CONCAT(" 
		product_info_limit.product_goods_code,
		product_info_limit.pro_detail_color_code,
		product_info_limit.pro_detail_size_code,
		product_info_limit.season_code,
		product_info_limit.create_date,
		(SELECT product_id FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_id,
		(SELECT new_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_new_product,
		(SELECT sale_off_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_sale_off_product,
		(SELECT is_restock_item FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item,
		(SELECT is_restock_item_always FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item_always,
		(SELECT restock_from FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_from,
		(SELECT restock_to FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_to,
		(SELECT slug_url FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_slug_url,
		(
			SELECT 
				(CASE 
					WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
						tbl_products.product_name 
				ELSE  
					tbl_products.product_name_display 
				END) AS product_product_name_display
			FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1
		) AS product_product_name_display,
		
		product_info_limit.product_brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_name,
		
		(SELECT product_name FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_name,
		(SELECT SectionName FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_SectionName,
		(SELECT product_image_details FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_details,
		(SELECT product_image_server FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_server,
		(SELECT active_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_active_date,
		(SELECT 
			(CASE 
				WHEN product_info_limit.sale_off_product IS NOT NULL AND product_info_limit.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END) AS price_sort
			FROM tbl_products_details 
			WHERE tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS price_for_sort,
		(SELECT create_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_create_date,
		
		(SELECT color_slug_url FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_color_slug_url,
		(SELECT product_detail_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_price_no_tax,
		(SELECT product_detail_saleoff_price FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price,
		(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price_no_tax,
		(
			SELECT
				(CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
						tbl_products_details.size_name 
				ELSE 
					tbl_products_details.size_display 
				END) AS detail_size_display
			FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_size_display,
		(SELECT barcode FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_barcode,
		(SELECT num_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_order,
		(SELECT num_rank FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_rank,
		(SELECT product_detail_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_order,
	");
		
	SET @selectStmtStrRun = CONCAT("	
SELECT ",@selectInfo, @selectJoinWishListStmt, @getStockNumberStmt, " 
FROM ("
	,@selectStmtStr,"
		",@orderStmt, "
		", @selectLimitStmt," 
) AS product_info_limit
 ");
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByProductCodes` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByProductCodes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByProductCodes`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT, IN `p_gender` VARCHAR(50))
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	tbl_products.goods_code 		AS product_goods_code,
			tbl_products.product_id			AS product_product_id,
			tbl_products.seqno,
			tbl_products.product_itemcode,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products.is_color_show 		AS product_is_color_show,
			tbl_products.brand_code			AS product_brand_code,
			tbl_products.sale_off_product,
			tbl_products.create_date,
			tbl_products.season_code
	";
	-- --------------------------------------------------
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND (
				tbl_products.goods_code 			IN (",p_product_codes,")
				OR tbl_products_details.barcode IN (", p_product_codes ,")
			)
			AND tbl_products.goods_code 			<> ''");
			
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_Cord3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
/*	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
*/
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt);
	-- -===============================================================================
	
	
	
	
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectInfo = CONCAT(" 
		product_info_limit.product_goods_code,
		product_info_limit.pro_detail_color_code,
		product_info_limit.pro_detail_size_code,
		product_info_limit.season_code,
		product_info_limit.create_date,
		(SELECT product_id FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_id,
		(SELECT new_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_new_product,
		(SELECT sale_off_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_sale_off_product,
		(SELECT is_restock_item FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item,
		(SELECT is_restock_item_always FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item_always,
		(SELECT restock_from FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_from,
		(SELECT restock_to FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_to,
		(SELECT slug_url FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_slug_url,
		(
			SELECT 
				(CASE 
					WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
						tbl_products.product_name 
				ELSE  
					tbl_products.product_name_display 
				END) AS product_product_name_display
			FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1
		) AS product_product_name_display,
		
		product_info_limit.product_brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_name,
		
		(SELECT product_name FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_name,
		(SELECT SectionName FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_SectionName,
		(SELECT product_image_details FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_details,
		(SELECT product_image_server FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_server,
		(SELECT active_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_active_date,
		(SELECT 
			(CASE 
				WHEN product_info_limit.sale_off_product IS NOT NULL AND product_info_limit.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END) AS price_sort
			FROM tbl_products_details 
			WHERE tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS price_for_sort,
		(SELECT create_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_create_date,
		
		(SELECT color_slug_url FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_color_slug_url,
		(SELECT product_detail_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_price_no_tax,
		(SELECT product_detail_saleoff_price FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price,
		(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price_no_tax,
		(
			SELECT
				(CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
						tbl_products_details.size_name 
				ELSE 
					tbl_products_details.size_display 
				END) AS detail_size_display
			FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_size_display,
		(SELECT barcode FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_barcode,
		(SELECT num_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_order,
		(SELECT num_rank FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_rank,
		(SELECT product_detail_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_order,
	");
	
	SET @selectStmtStrRun = CONCAT("
SELECT SQL_CALC_FOUND_ROWS product_info_final.* FROM (	
	SELECT ",@selectInfo, @selectJoinWishListStmt, @getStockNumberStmt, " 
	FROM ("
		,@selectStmtStr," 
	) AS product_info_limit
) AS product_info_final
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
/*	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	*/
	--	 insert into tbl_sys_log (sys_log) values (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(500), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_gender` VARCHAR(50))
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE search_section VARCHAR(1000) DEFAULT NULL;
	
	DECLARE Num_key INT DEFAULT 1;
	
	SET search_keyword_master = '';
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	tbl_products.goods_code 		AS product_goods_code,
			tbl_products.product_id			AS product_product_id,
			tbl_products.seqno,
			tbl_products.product_itemcode,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products.is_color_show 		AS product_is_color_show,
			tbl_products.brand_code			AS product_brand_code,
			tbl_products.sale_off_product,
			tbl_products.create_date,
			tbl_products.season_code
	";
	
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
		
	SET @selectFromStmtForRelated = '';
	
	SET @check_multiple_keyword = '';
	IF p_search_key_word <> '' AND p_search_key_word IS NOT NULL
	THEN
		SET @code_multiple_key = p_search_key_word;
		WHILE @code_multiple_key != '' DO
			SET @tmp_multiple_key = SUBSTRING_INDEX(@code_multiple_key,' ',1);
			SET @code_multiple_key = SUBSTRING(@code_multiple_key, CHAR_LENGTH(@tmp_multiple_key) + 1 + CHAR_LENGTH(' '));
			IF @tmp_multiple_key != '' 
			THEN
				SET @brand_condition = '';
				SET @category_condition = '';
				SET @check_multiple_item = '';
				SET @item_condition = '';
				
				SELECT 	GROUP_CONCAT(brand_code SEPARATOR ",")
				FROM 	tbl_brands 
				WHERE 	brand_name LIKE CONCAT("%",@tmp_multiple_key,"%") OR brand_name_display LIKE CONCAT("%",@tmp_multiple_key,"%") OR brand_katagana LIKE CONCAT("%",@tmp_multiple_key,"%")
				INTO @search_brand_master;
				
				WHILE @search_brand_master != '' DO
					SET @tmp_search_brand_master = SUBSTRING_INDEX(@search_brand_master,',',1);
					SET @search_brand_master = SUBSTRING(@search_brand_master, CHAR_LENGTH(@tmp_search_brand_master) + 1 + CHAR_LENGTH(','));
					SET @brand_condition = 
						CONCAT(@brand_condition, "OR tbl_products.brand_code = '",@tmp_search_brand_master, "' ");
				
				END WHILE;
				SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
				FROM 	tbl_products_category 
				WHERE 	name_display LIKE CONCAT("%",@tmp_multiple_key,"%")
				INTO @search_item_master;
				WHILE @search_item_master != '' DO
					SET @tmp_search_item_master = SUBSTRING_INDEX(@search_item_master,',',1);
					SET @search_item_master = SUBSTRING(@search_item_master, CHAR_LENGTH(@tmp_search_item_master) + 1 + CHAR_LENGTH(','));
					SET @item_condition = 
						CONCAT(@item_condition, "OR tbl_products.product_itemcode = '",@tmp_search_item_master, "' ");
				END WHILE;
				SELECT 	GROUP_CONCAT(id SEPARATOR ",")
				FROM 	tbl_products_category_group 
				WHERE 	category_group_name LIKE CONCAT("%",@tmp_multiple_key,"%")
				INTO @search_category;
				WHILE @search_category != '' DO
					SET @tmp_search_category = SUBSTRING_INDEX(@search_category,',',1);
					SET @search_category = SUBSTRING(@search_category, CHAR_LENGTH(@tmp_search_category) + 1 + CHAR_LENGTH(','));
			/*		SET @category_condition = 
						CONCAT(@category_condition, "
							OR tbl_products.product_category_id = '",@tmp_search_category, "' ");
			*/		
					SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
					FROM 	tbl_products_category 
					WHERE 	category_group_id = @tmp_search_category
						-- AND IsDisplay = 1
					INTO @search_item;
					WHILE @search_item != '' DO
					SET @tmp_search_item = SUBSTRING_INDEX(@search_item,',',1);
					SET @search_item = SUBSTRING(@search_item, CHAR_LENGTH(@tmp_search_item) + 1 + CHAR_LENGTH(','));
					SET @category_condition = 
						CONCAT(@category_condition, "
							OR tbl_products.product_itemcode = '",@tmp_search_item, "' ");
					END WHILE;
				END WHILE;
				SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
				FROM 	tbl_products_category 
				WHERE 	`Name` LIKE CONCAT("%",@tmp_search_category,"%") OR name_display LIKE CONCAT("%",@tmp_search_category,"%")
				INTO 	@itemcode_from_group_category;
				
				SET @code = @itemcode_from_group_category;
				WHILE @code != '' DO
					SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
					SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
					SET @check_multiple_item = 
						CONCAT(@check_multiple_item, "
							OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
						");
				END WHILE;
				SELECT 	GROUP_CONCAT(search_key SEPARATOR ",")
				FROM 	tbl_search_key 
				WHERE 	CONCAT("'", `related_keys_search`, "'") LIKE CONCAT("%'",@tmp_search_category, "'%")
					-- and category_group_status = 1
				INTO @search_keyword_master;
				WHILE @search_keyword_master != '' DO
					SET @tmp_search_keyword_master = SUBSTRING_INDEX(@search_keyword_master,',',1);
					SET @search_keyword_master = SUBSTRING(@search_keyword_master, CHAR_LENGTH(@tmp_search_keyword_master) + 1 + CHAR_LENGTH(','));
					SET @selectFromStmtForRelated = 
						CONCAT(@selectFromStmtForRelated, "
							OR tbl_products.search_keywords LIKE '%",@tmp_search_keyword_master, "%' ");
				END WHILE;
				
				IF @check_multiple_keyword = ''
				THEN
					SET @check_multiple_keyword = 
					CONCAT("
					(
						tbl_products.product_name 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.product_name_display 		like '%",@tmp_multiple_key,"%'
						OR tbl_products.goods_code 			like '%",@tmp_multiple_key,"%'
						
						OR tbl_products.brand_name 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.SectionName 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.Memo3 				like '%",@tmp_multiple_key,"%'
						OR tbl_products.Memo4 				like '%",@tmp_multiple_key,"%'
						
						OR tbl_products.goods_code 			like '%",@tmp_multiple_key,"%'  
						OR tbl_products.product_detail 			like '%",@tmp_multiple_key,"%' 
						OR tbl_products.prihtml1 			like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.barcode 		like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.color_name 		like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.size_name 		like '%",@tmp_multiple_key,"%'
						
						OR tbl_products_details.size_display 		like '%",@tmp_multiple_key,"%'
						OR tbl_products.search_keywords 		like '%",@tmp_multiple_key,"%'
						",@brand_condition,"
						",@item_condition,"
						",@category_condition,"
						",@check_multiple_item,"
						
					)");
				ELSE
					SET @brand_condition = '';
					SET @category_condition = '';
					SET @check_multiple_item = '';
					SET @item_condition = '';
				
					SELECT 	GROUP_CONCAT(brand_code SEPARATOR ",")
					FROM 	tbl_brands 
					WHERE 	brand_name LIKE CONCAT("%",@tmp_multiple_key,"%") OR brand_name_display LIKE CONCAT("%",@tmp_multiple_key,"%") OR brand_katagana LIKE CONCAT("%",@tmp_multiple_key,"%")
					INTO @search_brand_master;
					
					WHILE @search_brand_master != '' DO
						SET @tmp_search_brand_master = SUBSTRING_INDEX(@search_brand_master,',',1);
						SET @search_brand_master = SUBSTRING(@search_brand_master, CHAR_LENGTH(@tmp_search_brand_master) + 1 + CHAR_LENGTH(','));
						SET @brand_condition = 
							CONCAT(@brand_condition, "OR tbl_products.brand_code = '",@tmp_search_brand_master, "' ");
					
					END WHILE;
					SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
					FROM 	tbl_products_category 
					WHERE 	name_display LIKE CONCAT("%",@tmp_multiple_key,"%")
					INTO @search_item_master;
					WHILE @search_item_master != '' DO
						SET @tmp_search_item_master = SUBSTRING_INDEX(@search_item_master,',',1);
						SET @search_item_master = SUBSTRING(@search_item_master, CHAR_LENGTH(@tmp_search_item_master) + 1 + CHAR_LENGTH(','));
						SET @item_condition = 
							CONCAT(@item_condition, "OR tbl_products.product_itemcode = '",@tmp_search_item_master, "' ");
					END WHILE;
					SELECT 	GROUP_CONCAT(id SEPARATOR ",")
					FROM 	tbl_products_category_group 
					WHERE 	category_group_name LIKE CONCAT("%",@tmp_multiple_key,"%")
					INTO @search_category;
					WHILE @search_category != '' DO
						SET @tmp_search_category = SUBSTRING_INDEX(@search_category,',',1);
						SET @search_category = SUBSTRING(@search_category, CHAR_LENGTH(@tmp_search_category) + 1 + CHAR_LENGTH(','));
				/*		SET @category_condition = 
							CONCAT(@category_condition, "
								OR tbl_products.product_category_id = '",@tmp_search_category, "' ");
				*/		
						SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
						FROM 	tbl_products_category 
						WHERE 	category_group_id = @tmp_search_category
							-- AND IsDisplay = 1
						INTO @search_item;
						WHILE @search_item != '' DO
						SET @tmp_search_item = SUBSTRING_INDEX(@search_item,',',1);
						SET @search_item = SUBSTRING(@search_item, CHAR_LENGTH(@tmp_search_item) + 1 + CHAR_LENGTH(','));
						SET @category_condition = 
							CONCAT(@category_condition, "
								OR tbl_products.product_itemcode = '",@tmp_search_item, "' ");
						END WHILE;
					END WHILE;
					SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
					FROM 	tbl_products_category 
					WHERE 	`Name` LIKE CONCAT("%",@tmp_search_category,"%") OR name_display LIKE CONCAT("%",@tmp_search_category,"%")
					INTO 	@itemcode_from_group_category;
					
					SET @code = @itemcode_from_group_category;
					WHILE @code != '' DO
						SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
						SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
						SET @check_multiple_item = 
							CONCAT(@check_multiple_item, "
								OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
							");
					END WHILE;
					
					SET @check_multiple_keyword = 
						CONCAT(@check_multiple_keyword, "
					AND (
						tbl_products.product_name 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.product_name_display 		like '%",@tmp_multiple_key,"%'
						OR tbl_products.goods_code 			like '%",@tmp_multiple_key,"%'
						
						OR tbl_products.brand_name 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.SectionName 			like '%",@tmp_multiple_key,"%'
						OR tbl_products.Memo3 				like '%",@tmp_multiple_key,"%'
						OR tbl_products.Memo4 				like '%",@tmp_multiple_key,"%'
						
						OR tbl_products.goods_code 			like '%",@tmp_multiple_key,"%'  
						OR tbl_products.product_detail 			like '%",@tmp_multiple_key,"%' 
						OR tbl_products.prihtml1 			like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.barcode 		like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.color_name 		like '%",@tmp_multiple_key,"%' 
						OR tbl_products_details.size_name 		like '%",@tmp_multiple_key,"%'
						
						OR tbl_products_details.size_display 		like '%",@tmp_multiple_key,"%'
						OR tbl_products.search_keywords 		like '%",@tmp_multiple_key,"%' 
						",@brand_condition,"
						",@item_condition,"
						",@category_condition,"
						",@check_multiple_item," 
					
					)
					");
				END IF;
			END IF;
		END WHILE;
	END IF;
	
	SET @addition_condition = '';
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @addition_condition = 
		CONCAT("AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	IF p_search_key_word = 'レディース' THEN
		SELECT 	GROUP_CONCAT(StaffCode SEPARATOR "','")
		FROM 	tbl_staff 
		WHERE 	gender = 'ladies' AND STATUS = '1'
		INTO 	search_section;
	ELSEIF p_search_key_word = 'メンズ' THEN
		SELECT 	GROUP_CONCAT(StaffCode SEPARATOR "','")
		FROM 	tbl_staff 
		WHERE 	gender = 'mens' AND STATUS = '1'
		INTO 	search_section;
	ELSEIF p_search_key_word = 'キッズ' THEN
		SELECT 	GROUP_CONCAT(StaffCode SEPARATOR "','")
		FROM 	tbl_staff 
		WHERE 	gender = 'kids' AND STATUS = '1'
		INTO 	search_section;
	ELSE
		SET search_section = '';
	END IF;
	IF search_section != '' THEN
		SET @addition_condition = 
		CONCAT("AND tbl_products.SectionCode IN ('",search_section,"')");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_brands,
			tbl_products_category
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND ",@check_multiple_keyword,"
				
			",@selectFromStmtForRelated,"
			
			",@addition_condition,"
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_Cord3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, "
			) AS all_product ",
		" UNION ALL  ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt, "
	) AS product_info_ok ");
	
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= 1 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectInfo = CONCAT("
		SQL_CALC_FOUND_ROWS 
		product_info_limit.product_goods_code,
		product_info_limit.pro_detail_color_code,
		product_info_limit.pro_detail_size_code,
		product_info_limit.season_code,
		product_info_limit.create_date,
		(SELECT product_id FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_id,
		(SELECT new_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_new_product,
		(SELECT sale_off_product FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_sale_off_product,
		(SELECT is_restock_item FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item,
		(SELECT is_restock_item_always FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_is_restock_item_always,
		(SELECT restock_from FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_from,
		(SELECT restock_to FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_restock_to,
		(SELECT slug_url FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_slug_url,
		(
			SELECT 
				(CASE 
					WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
						tbl_products.product_name 
				ELSE  
					tbl_products.product_name_display 
				END) AS product_product_name_display
			FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1
		) AS product_product_name_display,
		
		product_info_limit.product_brand_code,
		product_info_limit.product_itemcode,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_name,
		(
			SELECT tbl_products_category.Name AS item_name_display
			FROM tbl_products_category WHERE tbl_products_category.product_category_id = product_info_limit.product_itemcode LIMIT 1
		) AS item_Name_name,
		(
			SELECT tbl_brands.brand_katagana AS brand_katagana
			FROM tbl_brands WHERE tbl_brands.brand_code = product_info_limit.product_brand_code LIMIT 1
		) AS brand_brand_katagana,
		
		(SELECT product_name FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_name,
		(SELECT SectionName FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_SectionName,
		(SELECT product_image_details FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_details,
		(SELECT product_image_server FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_product_image_server,
		(SELECT active_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_active_date,
		(SELECT 
			(CASE 
				WHEN product_info_limit.sale_off_product IS NOT NULL AND product_info_limit.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END) AS price_sort
			FROM tbl_products_details 
			WHERE tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS price_for_sort,
		(SELECT create_date FROM tbl_products WHERE tbl_products.`goods_code` = product_info_limit.product_goods_code LIMIT 1) AS product_create_date,
		
		(SELECT color_slug_url FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_color_slug_url,
		(SELECT product_detail_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_price_no_tax,
		(SELECT product_detail_saleoff_price FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price,
		(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_saleoff_price_no_tax,
		(
			SELECT
				(CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
						tbl_products_details.size_name 
				ELSE 
					tbl_products_details.size_display 
				END) AS detail_size_display
			FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_size_display,
		(SELECT barcode FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_barcode,
		(SELECT num_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_order,
		(SELECT num_rank FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS pro_detail_num_rank,
		(SELECT product_detail_order FROM tbl_products_details 
			WHERE 	tbl_products_details.`RSeqNo` = product_info_limit.seqno 
				AND tbl_products_details.`color_code` = product_info_limit.pro_detail_color_code LIMIT 1
		) AS pro_detail_product_detail_order,
	");
		
	SET @selectStmtStrRun = CONCAT("
SELECT ",@selectInfo, @selectJoinWishListStmt, @getStockNumberStmt, " 
FROM ("
		,@selectStmtStr," 
) AS product_info_limit
		", @orderStmt, "
		", @selectLimitStmt);
		
        INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `DECO_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `DECO_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `DECO_sp_searchProduct_fontend`(IN `p_search_key_word_1_byte` VARCHAR(20), IN `p_search_key_word_2_byte` VARCHAR(20), IN `p_category_code` VARCHAR(255), IN `p_price_1` VARCHAR(255), IN `p_price_2` VARCHAR(255), IN `p_price_3` VARCHAR(255), IN `p_price_4` VARCHAR(255), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master_1_byte VARCHAR(1000) DEFAULT NULL;
	DECLARE search_keyword_master_2_byte VARCHAR(1000) DEFAULT NULL;
	-- Hoa xuan them tim kiem rieng cho kh Deco #358513191 --
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"\\","\\\\");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"'","\\'");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,'"','\\"');	
	
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"\\","\\\\");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"'","\\'");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,'"','\\"');
	
	
	
	
	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_1_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_1_byte, ',%')
	INTO search_keyword_master_1_byte;
	IF 
		search_keyword_master_1_byte IS NOT NULL 
		AND search_keyword_master_1_byte <> '' 
	THEN
		
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_1_byte = p_search_key_word_1_byte;
	END IF;
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_2_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_2_byte, ',%')
	INTO search_keyword_master_2_byte;
	IF 
		search_keyword_master_2_byte IS NOT NULL 
		AND search_keyword_master_2_byte <> '' 
	THEN
		
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_2_byte = p_search_key_word_2_byte;
	END IF;
	
	
	
	
	SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products 
				JOIN tbl_products_details 
						ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
						AND tbl_products_details.product_detail_status = 0
				LEFT JOIN tbl_brands 
					ON tbl_products.brand_code = tbl_brands.brand_code
				LEFT JOIN tbl_products_category 
					ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			WHERE 
				tbl_products.product_status 		= 1
				AND (
				tbl_products.product_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_1_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_1_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_2_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_2_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_2_byte,"%'
				) 
			");
	
	-- ==================================================	
	IF (p_category_code <> '') THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				) 
				OR
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				)
			) ");
	END IF; 
	
	-- ==================================================	
	IF (p_price_1 <> '' OR p_price_2 <> '' OR p_price_3 <> '' OR p_price_4 <> '') THEN		
		SET @selectFromStmt_tmp = "";	
		IF (p_price_1 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 0 AND tbl_products_details.product_detail_price_no_tax <= 3000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_2 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 3000 AND tbl_products_details.product_detail_price_no_tax <= 5000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_3 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 5000 AND tbl_products_details.product_detail_price_no_tax <= 7000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_4 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 7000 ) ");
		END IF;
		
		SET @selectFromStmt = CONCAT(@selectFromStmt, " AND (" ,SUBSTR(@selectFromStmt_tmp, 4, 1000), ") ");
	END IF;
	
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `FRAISE_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `FRAISE_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `FRAISE_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Note: manifest sap xep khac ban chung = D18100501
 */
	
	-- Hoa xuan add D18100501-No1
	-- Sap xep theo product_active_date -> brand order -> product_goods_code
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' 		THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					tbl_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';
		-- Đóng code gây lỗi
		/*SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					t_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';*/
	END IF;
	SET @selectLimitStmt = 
		CONCAT(" LIMIT ",indexFrom,",",indexLimit, " ");
	-- insert into tbl_sys_log (sys_log) values (concat('p_sort: ',p_sort, '; @orderStmt: ', @orderStmt) );	
	-- -===============================================================================
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND 
			(
				tbl_products.product_itemcode = '",p_category_code,"' 
				OR tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
			)
		");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	-- D18100501-No1==================================================================
	SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info_ok.product_brand_code ");
	-- Đóng code gây lỗi
	/*SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info.product_brand_code ) as t_brand_order ");*/
	-- -===============================================================================
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@selectBrandOrderStmt,  "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		 ",@orderStmt, "
		",@selectLimitStmt);
	
	-- -===============================================================================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- -===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- -===============================================================================	
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `GROUPPOTANAKA_sp_products_getItemGroupForMenuByBrandGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `GROUPPOTANAKA_sp_products_getItemGroupForMenuByBrandGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GROUPPOTANAKA_sp_products_getItemGroupForMenuByBrandGroupCode`(IN `p_brand_group_code` VARCHAR(200))
BEGIN
	SELECT * from tbl_products_category_group where category_group_status = 1 and id in (
		select category_group_id FROM tbl_products_category WHERE ItemCode IN (
			SELECT product_itemcode FROM tbl_products WHERE brand_id IN (
				SELECT brand_id FROM tbl_brands WHERE group_id IN (
					SELECT id FROM tbl_brands_group WHERE group_code = p_brand_group_code
	)))) ORDER BY category_group_show_order, category_group_name asc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `GRUPPOTANAKA_sp_FrontEnd_Product_getProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `GRUPPOTANAKA_sp_FrontEnd_Product_getProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GRUPPOTANAKA_sp_FrontEnd_Product_getProductById`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	DECLARE vseqno 		VARCHAR(20);
	DECLARE vgoodcode 	VARCHAR(20);
	DECLARE vproduct_id 	BIGINT(20);
	IF (p_product_id <> 0) THEN
		
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status = 1 
			AND tbl_products.product_id = p_product_id 
		INTO vseqno, vgoodcode, vproduct_id;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status=1 
			AND goods_code = p_goods_code 
		INTO vseqno, vgoodcode, vproduct_id;
	END IF;
	IF (p_product_id <> 0 OR p_goods_code <> '') THEN
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name,
					
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
						) AS tbl_wish_tmp
					) AS total_favorite,
				
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
						) AS tbl_wish_tmp
					) AS total_favorite_by_color,
				
					(
						SELECT 	tbl_brands_group.`select_size` 
						FROM 	tbl_brands, tbl_brands_group
						WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
							AND tbl_brands_group.id = tbl_brands.group_id
						GROUP BY tbl_brands.brand_id
					) AS select_size
				FROM 	
					tbl_products 
				WHERE 	
					tbl_products.product_status = 1 
					AND product_id = vproduct_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name ,
					
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
					) AS tbl_wish_tmp
				) AS total_favorite,
				
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
					) AS tbl_wish_tmp
				) AS total_favorite_by_color,
				
				(
					SELECT 	tbl_brands_group.`select_size` 
					FROM 	tbl_brands, tbl_brands_group
					WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
						AND tbl_brands_group.id = tbl_brands.group_id
					GROUP BY tbl_brands.brand_id
				) AS select_size
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status = 1
				AND product_id = vproduct_id;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode, 
			pd.size_code as SizeCode, 
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_code;
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",vgoodcode,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		
		-- 8 list all detail order by size
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY   s.display_order ASC, pd.size_code ASC;
		
		-- 9. GET STOCK ALL COLOR ---------------------------------------------------
		
		SET @getStockNumberStmtAllColor = getStockNumberAllColorAllSizeStmt(
				'',
				vgoodcode,
				'',
				'',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);	
		SET @selectStmtStockAllColor = 
		CONCAT(
		" SELECT ",@getStockNumberStmtAllColor);
		
		-- insert into tbl_sys_log(sys_log) values( @selectStmtStockAllColor );
		
		PREPARE stmt FROM @selectStmtStockAllColor;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- =====================================================
		-- 10. select cai gi day nhi? (AnHQH) -- T_T ko biet lay cai gi luon T_T nhin giong phan 2 lay thong tin tbl_products_details
		SET @selectStmtColorLst = 
		CONCAT(
		"SELECT 
			pd.*,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
		FROM 
			tbl_products_details AS pd
		WHERE
			pd.RSeqNo = '",vseqno,"' 
			AND pd.product_detail_status= 0
		GROUP BY product_goods_code, color_code
		");
		
		PREPARE stmt FROM @selectStmtColorLst;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- ================================================================================
		-- 11. Lay thong tin tbl_products_category_group
		SELECT  * 
		FROM 
			tbl_products_category_group 
		WHERE id = (
			SELECT category_group_id 
			FROM tbl_products_category 
			WHERE ItemCode = (
				SELECT product_itemcode FROM tbl_products WHERE goods_code = vgoodcode
			)
		);
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `GRUPPOTANAKA_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `GRUPPOTANAKA_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GRUPPOTANAKA_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale'
		AND p_category_code 	<> 'whatnew' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'whatnew' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product <> 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @select_size = CONCAT("
		,(
			SELECT 	tbl_brands_group.`select_size` 
			FROM 	tbl_brands, tbl_brands_group
			WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
				AND tbl_brands_group.id = tbl_brands.group_id
			GROUP BY tbl_brands.brand_id
		) AS select_size
	");
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @select_size, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @select_size, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HAPUNA_sp_products_ad_date_expired` */

/*!50003 DROP PROCEDURE IF EXISTS  `HAPUNA_sp_products_ad_date_expired` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HAPUNA_sp_products_ad_date_expired`(`p_date_expired` VARCHAR(25))
BEGIN
	UPDATE tbl_products SET  date_expired = p_date_expired, date_new_start = DATE_FORMAT(CURDATE(), "%Y/%m/%d")
	WHERE tbl_products.new_product = 1;
	
	SELECT 'ok' AS msg;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductByCategorySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductByCategorySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductByCategorySlugUrl`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_new` VARCHAR(20))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	
	IF (p_sort = '' AND p_new = 'hapuna-new')
	THEN
		SET @orderStmt = CONCAT("ORDER BY  	product_new_product DESC, 
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC,
					pro_detail_product_detail_order 	ASC");
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
		OR p_SlugUrl 	<> 'myess'
		OR p_SlugUrl 	<> 'myess_new'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
		AND p_SlugUrl 	<> 'myess'
		AND p_SlugUrl 	<> 'myess_new'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess_new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1
			AND tbl_products.new_product = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
	-- 327512714: Sua restock
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				is_restock_item = 1 
				AND (
					is_restock_item_always = 1 
					OR( 
						DATE(NOW()) BETWEEN 
							DATE(restock_from) AND DATE(restock_to)
					)
				)
			)  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	
	/*
	327512714: Sua restock
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	*/
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductByCategorySlugUrl_Sale` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductByCategorySlugUrl_Sale` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductByCategorySlugUrl_Sale`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_new` VARCHAR(20))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product = 1
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
		OR p_SlugUrl 	<> 'myess'
		OR p_SlugUrl 	<> 'myess_new'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.sale_off_product = 1
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
		AND p_SlugUrl 	<> 'myess'
		AND p_SlugUrl 	<> 'myess_new'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess_new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1
			AND tbl_products.new_product = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
	-- 327512714: Sua restock
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				is_restock_item = 1 
				AND (
					is_restock_item_always = 1 
					OR( 
						DATE(NOW()) BETWEEN 
							DATE(restock_from) AND DATE(restock_to)
					)
				)
			)  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	
	/*
	327512714: Sua restock
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	*/
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `K3_sp_products_hashtag_getHashtagForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `K3_sp_products_hashtag_getHashtagForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `K3_sp_products_hashtag_getHashtagForMenu`()
BEGIN
	SELECT
	*
	FROM tbl_products_hashtag 
	WHERE 
		status = 1
		AND is_show_menu = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `KANKOU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `KANKOU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KANKOU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Note: manifest sap xep khac ban chung = D18100501
 */
	
	-- Hoa xuan add D18100501-No1
	-- Sap xep theo product_active_date -> brand order -> product_goods_code
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' 		THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					tbl_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';
		-- Đóng code gây lỗi
		/*SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					t_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';*/
	END IF;
	SET @selectLimitStmt = 
		CONCAT(" LIMIT ",indexFrom,",",indexLimit, " ");
	-- insert into tbl_sys_log (sys_log) values (concat('p_sort: ',p_sort, '; @orderStmt: ', @orderStmt) );	
	-- -===============================================================================
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND 
			(
				tbl_products.product_itemcode = '",p_category_code,"' 
				OR tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
			)
		");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	-- D18100501-No1==================================================================
	SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info_ok.product_brand_code ");
	-- Đóng code gây lỗi
	/*SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info.product_brand_code ) as t_brand_order ");*/
	-- -===============================================================================
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@selectBrandOrderStmt,  "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		 ",@orderStmt, "
		",@selectLimitStmt);
	
	-- -===============================================================================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- -===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- -===============================================================================	
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_Product_GetProductByCategoryCodeBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_Product_GetProductByCategoryCodeBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_Product_GetProductByCategoryCodeBrandCode`(IN `p_category_code` VARCHAR(20), IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Note: manifest sap xep khac ban chung = D18100501
 */
	
	-- Hoa xuan add D18100501-No1
	-- Sap xep theo product_active_date -> brand order -> product_goods_code
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' 	THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' 		THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					tbl_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';
		-- Đóng code gây lỗi
		/*SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					t_brand_order.brand_show_order ASC,
					product_goods_code 	ASC ';*/
	END IF;
	SET @selectLimitStmt = 
		CONCAT(" LIMIT ",indexFrom,",",indexLimit, " ");
	-- insert into tbl_sys_log (sys_log) values (concat('p_sort: ',p_sort, '; @orderStmt: ', @orderStmt) );	
	-- -===============================================================================
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	IF (p_brand_code IS NOT NULL AND p_brand_code != '') THEN
		SET @brand_condition = CONCAT("AND tbl_products.brand_code = '",p_brand_code,"'");
	ELSE
		SET @brand_condition = '';
	END IF;	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.brand_code                     <> 'R' 
			",@brand_condition," ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND 
			(
				tbl_products.product_itemcode = '",p_category_code,"' 
				OR tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
			)
		");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	-- D18100501-No1==================================================================
	SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info_ok.product_brand_code ");
	-- Đóng code gây lỗi
	/*SET @selectBrandOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code as brand_brand_code,
					CASE WHEN show_order IS NULL OR show_order = '' THEN 
							9999
						ELSE  
							show_order
							
						END as brand_show_order
				FROM 
					tbl_brands 
			) AS tbl_brand_order
				ON tbl_brand_order.brand_brand_code = product_info.product_brand_code ) as t_brand_order ");*/
	-- -===============================================================================
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@selectBrandOrderStmt,  "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		 ",@orderStmt, "
		",@selectLimitStmt);
	
	-- -===============================================================================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- -===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- -===============================================================================	
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MASSIMO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `MASSIMO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MASSIMO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
			
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
	
	SET @selectStmtStr3 = CONCAT("
		SELECT 	TBL_TMP.product_product_itemcode FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MIYAKO_sp_FrontEnd_Product_getProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `MIYAKO_sp_FrontEnd_Product_getProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MIYAKO_sp_FrontEnd_Product_getProductById`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	DECLARE vseqno VARCHAR(20);
	DECLARE vgoodcode VARCHAR(20);
	IF (p_product_id <> 0) THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code 
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status = 1 
			AND tbl_products.product_id = p_product_id 
		INTO vseqno,vgoodcode;
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name 
				FROM 	
					tbl_products 
				WHERE 	
					tbl_products.product_status = 1 
					AND product_id = p_product_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name 
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status=1 
				AND product_id = p_product_id;
		END IF;
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);		
		
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode, 
			pd.size_code as SizeCode, 
			tbl_size.display_order, 
			
			
			
			CASE 
				WHEN tbl_colors.color_display IS NOT NULL AND tbl_colors.color_display <> '' THEN 
					tbl_colors.color_display
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			", @getStockNumberStmt1,"
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_Code; 
		
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode; 
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",p_goods_code,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (SELECT * FROM tbl_products_details 
		WHERE tbl_products_details.RSeqNo = vseqno) AS pd
		LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
		ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno 
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status=1 
			AND goods_code = p_goods_code 
		INTO vseqno;
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name 
				FROM 
					tbl_products 
				WHERE 
					tbl_products.product_status = 1 
					AND goods_code 	= p_goods_code
			) AS timp LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id AS r_product_id 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = p_customer_id
					AND tbl_wish_list.color_code = p_color_code
			) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name 
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status = 1 AND goods_code = p_goods_code;
		END IF;
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
	
	
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*,
			pd.color_code as ColorCode, 
			pd.size_code as SizeCode, 
			tbl_size.display_order, 
			CASE 
				WHEN tbl_colors.color_display IS NOT NULL AND tbl_colors.color_display <> '' THEN 
					tbl_colors.color_display
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			",@getStockNumberStmt1,"
		FROM 
			tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT * FROM tbl_products_material WHERE tbl_products_material.RSeqNo = vseqno AND tbl_products_material.color_code=p_color_Code;
		
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = p_goods_code;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",p_goods_code,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 7 list all detail
		
		SELECT * FROM (SELECT * FROM tbl_products_details 
		WHERE tbl_products_details.RSeqNo = vseqno) AS pd
		LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
		ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		-- 8 list all detail by size
		
		SELECT * FROM (SELECT * FROM tbl_products_details 
		WHERE tbl_products_details.RSeqNo = vseqno) AS pd
		LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
		ON pd.size_code = s.s_size_code
		ORDER BY  s.display_order,s.s_size_code ASC;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MORE_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `MORE_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MORE_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListMore(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `NORT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `NORT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `NORT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- --------------------------------------------------
	SET @whereRecommended = '';
	/* Toan - 20/05/30 - bo nvu nay
	IF (p_sort = "recommended") THEN
		SET @whereRecommended = ' AND `product_is_recommended_item` = 1 ';
	END IF;
	*/
	-- --------------------------------------------------	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'NORTHBRAIN');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			((product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0))';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@whereRecommended,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				((product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)) "
				,@whereRecommended,
		") AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `OFFICE3_sp_getnameBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `OFFICE3_sp_getnameBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `OFFICE3_sp_getnameBrand`(IN `p_brad_code` TEXT)
BEGIN
	SELECT 
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
				tbl_brands.brand_name
			ELSE 
				tbl_brands.brand_name_display
			END) AS name_display
	FROM 
		tbl_brands 
	WHERE 
		`brand_code` = p_brad_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `OFFICE3_sp_getSeasoncode` */

/*!50003 DROP PROCEDURE IF EXISTS  `OFFICE3_sp_getSeasoncode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `OFFICE3_sp_getSeasoncode`(IN `p_season` VARCHAR(255))
BEGIN
	SELECT set_season_code FROM tbl_set_seasons WHERE set_season_name_display = (SELECT set_season_name_display FROM tbl_set_seasons WHERE set_season_code = p_season);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `OFFICE3_sp_set_seasons_getByAll_ForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `OFFICE3_sp_set_seasons_getByAll_ForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `OFFICE3_sp_set_seasons_getByAll_ForMenu`()
BEGIN
	SELECT * FROM tbl_set_seasons WHERE set_season_is_menu = 1 GROUP BY set_season_name_display ORDER BY set_season_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `RAKUDO_sp_Product_GetProductByCategorySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `RAKUDO_sp_Product_GetProductByCategorySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RAKUDO_sp_Product_GetProductByCategorySlugUrl`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
		OR p_SlugUrl 	<> 'myess'
		OR p_SlugUrl 	<> 'myess_new'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
		AND p_SlugUrl 	<> 'myess'
		AND p_SlugUrl 	<> 'myess_new'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess_new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1
			AND tbl_products.new_product = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
	-- 327512714: Sua restock
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				is_restock_item = 1 
				AND (
					is_restock_item_always = 1 
					OR( 
						DATE(NOW()) BETWEEN 
							DATE(restock_from) AND DATE(restock_to)
					)
				)
			)  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	
	/*
	327512714: Sua restock
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	*/
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListRakudo(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all'
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all'
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupSale` */

/*!50003 DROP PROCEDURE IF EXISTS  `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupSale` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RAKUDO_sp_Product_GetProductByCategorySlugUrlAndCateGroupSale`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListRakudo(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product               = 1
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all'
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				AND tbl_products.sale_off_product               = 1
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all'
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RAKUDO_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `RAKUDO_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RAKUDO_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_item_code` VARCHAR(20), IN `p_design_code` TEXT, IN `p_lifestyle` TEXT, IN `p_footwidthshape` TEXT, IN `p_feature` TEXT, IN `p_heelheight` TEXT, IN `p_aterial` TEXT, IN `p_color` TEXT, IN `p_footsize_from` VARCHAR(20), IN `p_footsize_to` VARCHAR(20), IN `p_price_from` VARCHAR(20), IN `p_price_to` VARCHAR(20), IN `p_sort` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
					
					
		-- price			
	SET @search_by_price = '';
	IF p_price_from <> '' AND p_price_to <> '' THEN
		SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price between ",p_price_from," AND ",p_price_to," ");
	ELSEIF p_price_from <> '' THEN
		SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price > ",p_price_from," ");
	ELSEIF p_price_to <> '' THEN
		SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price < ",p_price_to," ");
	END IF;
		-- item code
	SET @search_by_item_code = '';
	IF p_item_code <> '' THEN
		SET @search_by_item_code =  CONCAT(" AND tbl_products.product_itemcode = '",p_item_code,"' ");
	END IF;
		-- design
	SET @search_by_design_code = '';
	IF p_design_code <> '' THEN
		SET @search_by_design_code =  CONCAT(" AND (",p_design_code,")");
	END IF;
		-- lifestyle 
	SET @search_by_lifestyle_code = '';
	IF p_lifestyle <> '' THEN
		SET @search_by_lifestyle_code =  CONCAT(" AND (",p_lifestyle,")");
	END IF;
		-- footwidthshape 
	SET @search_by_footwidthshape_code = '';
	IF p_footwidthshape <> '' THEN
		SET @search_by_footwidthshape_code =  CONCAT(" AND (",p_footwidthshape,")");
	END IF;
		-- feature 
	SET @search_by_feature_code = '';
	IF p_feature <> '' THEN
		SET @search_by_feature_code =  CONCAT(" AND (",p_feature,")");
	END IF;
		-- heelheight 
	SET @search_by_heelheight_code = '';
	IF p_heelheight <> '' THEN
		SET @search_by_heelheight_code =  CONCAT(" AND (",p_heelheight,")");
	END IF;
		-- aterial 
	SET @search_by_aterial_code = '';
	IF p_aterial <> '' THEN
		SET @search_by_aterial_code =  CONCAT(" AND (",p_aterial,")");
	END IF;
		-- color 
	SET @search_by_color_code = '';
	IF p_color <> '' THEN
		SET @search_by_color_code =  CONCAT(" AND (",p_color,")");
	END IF;
		-- footsize	
	SET @search_by_footsize = '';
	SET @join_size = '';
	IF p_footsize_from <> '' AND p_footsize_to <> '' THEN
		-- SET @search_by_footsize =  CONCAT(" AND tbl_size.foot_size between ",p_footsize_from," AND ",p_footsize_to," ");
		SET @size_list = '';
		SELECT IFNULL(CONCAT("'",REPLACE(GROUP_CONCAT(`size_code` SEPARATOR '\t'),'\t',"','"),"'"),"") INTO @size_list
						FROM `tbl_size_chart` 
						WHERE `chart_size` BETWEEN p_footsize_from AND p_footsize_to;				
		SET @search_by_footsize = CONCAT(" AND tbl_size.size_code IN (
						",@size_list,") ");
		SET @join_size =  CONCAT(" JOIN tbl_size ON tbl_products_details.size_code = tbl_size.size_code  "," ");
	END IF;
	
	/*
	-- neu co nhap tim kiem moi vao
	SET @search_by_key_word = '';	
	IF p_search_key_word <> '' THEN
		SET @search_by_key_word =  CONCAT(" AND (
					tbl_products.product_name like '%",p_search_key_word,"%'
					OR tbl_products.goods_code like '%",p_search_key_word,"%'
					) ");
	end if;
	*/
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
			
			
		
		-- get select fields from function
		SET @selectStmt = getListColumnForSelectingProductList();
		-- --------------------------------------------------
		IF (p_customer_id = '') THEN
			SET @selectStmt =  CONCAT(@selectStmt,",
				'0' AS is_wished ");
		END IF;
		
		
		-- ===================================================
		SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
		SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
		SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
		SELECT 	search_key 
		FROM 	tbl_search_key 
		WHERE 	search_key = p_search_key_word
			OR CONCAT(',', `related_keys_search`, ',') LIKE CONCAT("%,'", p_search_key_word, "',%")
		INTO search_keyword_master;
		
		IF 
			search_keyword_master IS NOT NULL 
			AND search_keyword_master <> '' 
		THEN
			
			SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
			SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
			SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
		ELSE
			SET search_keyword_master = p_search_key_word;
		END IF;
		
		
		SET @check_multiple_keyword = '';
		IF p_search_key_word <> '' AND p_search_key_word IS NOT NULL
		THEN
			SET @code = p_search_key_word;
			WHILE @code != '' DO
				SET @tmp = SUBSTRING_INDEX(@code,' ',1);
				SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp) + 1 + CHAR_LENGTH(' '));
				IF @tmp != '' 
				THEN
					SET @check_multiple_keyword = 
						CONCAT(@check_multiple_keyword, " OR tbl_products.search_keywords LIKE '%" ,@tmp, "%' ");
				END IF;
			END WHILE;
		END IF;
		-- ===================================================
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products 
				JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
				", @join_size ,"
			WHERE 
				tbl_products.product_status = 1 				
				AND (
					tbl_products.product_name 			like '%",p_search_key_word,"%'
					OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
					OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
					OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'							
					",@check_multiple_keyword,"
				) "			
				, @search_by_price
				, @search_by_design_code
				, @search_by_item_code
				, @search_by_lifestyle_code
				, @search_by_footwidthshape_code
				, @search_by_feature_code
				, @search_by_heelheight_code
				, @search_by_aterial_code
				, @search_by_color_code
				, @search_by_footsize
			);
		SET @fullColorSelectFromStmt = 
			CONCAT(@selectFromStmt, "
				AND tbl_products.is_color_show = 0 ");
		SET @fixedColorSelectFromStmt = 
			CONCAT(@selectFromStmt, "
				AND tbl_products.is_color_show = 1
				AND tbl_products_details.is_main_color = 1 ");
		SET @selectGroupStmt = 
			CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
		-- -===============================================================================
		
		SET @getStockNumberStmt = getStockNumberStmt(
			'product_info',
			'product_goods_code',
			'pro_detail_color_code',
			'pro_detail_size_code',
			'product_is_color_show',
			1,
			1,
			0,
			1,
			p_shop_list
		);
		-- -===============================================================================
		SET @selectStmtStr = CONCAT("
		SELECT * FROM (
			SELECT 	product_info.*,  
				", @getStockNumberStmt, "
			FROM ( 
				SELECT * FROM ( ",
					@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
				) AS all_product ",
			" UNION   ", 
				@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
			) AS product_info  
		) AS product_info_ok ");
		-- -===============================================================================
		
		IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id = ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id = product_info_ok.product_product_id
				AND wish_list_info.color_code = product_info_ok.pro_detail_color_code ");
		ELSE
			SET @selectJoinWishListStmt = " ";
		END IF;
		
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
			 ",
			@orderStmt, "
			",@selectLimitStmt);
		-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);	
		PREPARE stmt FROM @selectStmtStrRun;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		SET @selectStmtStr2 = CONCAT("
			SELECT 	COUNT(*) AS total_items FROM ( 
				", @selectStmtStr, "
				WHERE 
					(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
					OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
			) AS TBL_TMP 	
		 ");
	 
		PREPARE stmt2 FROM @selectStmtStr2;
		EXECUTE stmt2;
		DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_getAllBanner_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_getAllBanner_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_getAllBanner_frontend`()
BEGIN
	SELECT * FROM tbl_banner WHERE `item_code` LIKE '%top%' ORDER BY `order_num` ASC LIMIT 4;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_getcategory_newarria` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_getcategory_newarria` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_getcategory_newarria`()
BEGIN
	SELECT * FROM `tbl_products` p
	INNER JOIN tbl_brands hp
	    ON p.`brand_id` = hp.`brand_id`
	INNER JOIN `tbl_products_category` h
	    ON p.`product_itemcode` = h.`ItemCode`
	    
	WHERE `is_show_as_menu` = 1 
		AND `product_status` = 1
		AND `IsShowAsMenu` = 1
	GROUP BY `ItemCode`
	ORDER BY `ItemCode` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_getTopBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_getTopBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_getTopBanner`()
BEGIN
	SELECT * FROM tbl_banner WHERE `item_code` = 'TOP' AND `banner_status` = 1 ORDER BY order_num ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Hashtag_Getone` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Hashtag_Getone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Hashtag_Getone`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_hashtag AS ht 
	WHERE 
		ht.is_show_menu = 1
		AND ht.status = 1 
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
		
	ORDER BY
	 show_order ASC,
	 create_date DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Product_GetProductByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Product_GetProductByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Product_GetProductByBrandCode`(IN `p_search_key_word` VARCHAR(20), IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
	
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';	
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
		
	IF (p_search_key_word <> '') THEN
		SET @selectKeyword =  CONCAT("
		AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
			) 
		
		");
	ELSE
		SET @selectKeyword = '';
	END IF;
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	ELSE
		SET @selectAnd = '';
	END IF;
	
	IF (section <> '') THEN
		SET @selectSeccsion =  CONCAT("AND tbl_products.SectionCode = ",section,"");
	ELSE
		SET @selectSeccsion = '';
	END IF;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			",@selectAnd ,@selectSeccsion ,@selectKeyword ,"");
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (brand_name_tmp);
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (",p_brand_code,")
				) OR (
					tbl_products.brand_code IN (",p_brand_code,")
				)
			)
			
			 ");
			 
			 
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	 -- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Product_GetProductByBrandId` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Product_GetProductByBrandId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Product_GetProductByBrandId`(IN `p_search_key_word` VARCHAR(20), IN `p_brand_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
	
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';	
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
		
	IF (p_search_key_word <> '') THEN
		SET @selectKeyword =  CONCAT("
		AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
			) 
		
		");
	ELSE
		SET @selectKeyword = '';
	END IF;
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	ELSE
		SET @selectAnd = '';
	END IF;
	
	IF (section <> '') THEN
		SET @selectSeccsion =  CONCAT("AND tbl_products.SectionCode = ",section,"");
	ELSE
		SET @selectSeccsion = '';
	END IF;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_id = p_brand_id
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_id SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_id;
	
	IF @brand_id IS NOT NULL AND @brand_id <> ''
	THEN
		SET @brand_id_list = CONCAT(@brand_id_list, @brand_id);
	END IF;
	
	SET @brand_id_list = CONCAT(@brand_id_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			",@selectAnd ,@selectSeccsion ,@selectKeyword ,"");
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (brand_name_tmp);
	IF 
		p_brand_id 	IS NOT NULL 
		AND p_brand_id 	<> '' 
		AND p_brand_id 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_id IN (",p_brand_id,")
				) OR (
					tbl_products.brand_id IN (",p_brand_id,")
				)
			)
			
			 ");
			 
			 
	END IF;
	
	IF 
		p_brand_id IS NOT NULL 
		AND p_brand_id = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_id IN (",@brand_id_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_id = p_brand_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Product_GetProductByCategoryCode`(IN `p_search_key_word` VARCHAR(20), IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	SET search_keyword_master = '';	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
		
	IF (p_search_key_word <> '') THEN
		SET @selectKeyword =  CONCAT("
		AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
			) 
		
		");
	ELSE
		SET @selectKeyword = '';
	END IF;
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	ELSE
		SET @selectAnd = '';
	END IF;
	
	IF (section <> '') THEN
		SET @selectSeccsion =  CONCAT("AND tbl_products.SectionCode = ",section,"");
	ELSE
		SET @selectSeccsion = '';
	END IF;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			",@selectAnd ,@selectSeccsion ,@selectKeyword ,"");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Product_GetProductByGroupCategoryId`(IN `p_search_key_word` VARCHAR(20), IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';	
SET @orderStmt = '';
SET @orderStmt = getOrderStmtForProductList(p_sort, 'HARMONY');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	
	
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
		
	IF (p_search_key_word <> '') THEN
		SET @selectKeyword =  CONCAT("
		AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
			) 
		
		");
	ELSE
		SET @selectKeyword = '';
	END IF;
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	ELSE
		SET @selectAnd = '';
	END IF;
	
	IF (section <> '') THEN
		SET @selectSeccsion =  CONCAT("AND tbl_products.SectionCode = ",section,"");
	ELSE
		SET @selectSeccsion = '';
	END IF;
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			",@selectAnd ,@selectSeccsion ,@selectKeyword ,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
		
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
		");		
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- sua cach lay so ton		
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REYES_sp_Product_GetProductByCategorySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `REYES_sp_Product_GetProductByCategorySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REYES_sp_Product_GetProductByCategorySlugUrl`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
		OR p_SlugUrl 	<> 'myess'
		OR p_SlugUrl 	<> 'myess_new'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
		AND p_SlugUrl 	<> 'myess'
		AND p_SlugUrl 	<> 'myess_new'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'myess_new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_myess = 1
			AND tbl_products.new_product = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
	-- 327512714: Sua restock
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				is_restock_item = 1 
				AND (
					is_restock_item_always = 1 
					OR( 
						DATE(NOW()) BETWEEN 
							DATE(restock_from) AND DATE(restock_to)
					)
				)
			)  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	
	/*
	327512714: Sua restock
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	*/
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `SPREAD_sp_Product_GetSaleItemsForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `SPREAD_sp_Product_GetSaleItemsForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SPREAD_sp_Product_GetSaleItemsForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE vi_actual_num bigINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num tinyint(1) DEFAULT 0;
	DECLARE vb_is_actual_zero tinyint(1) DEFAULT 0;
	DECLARE vb_is_shop_stock tinyint(1) DEFAULT 0;
	Select actual_num, is_actual_num, is_actual_zero, is_shop_stock into vi_actual_num, vb_is_actual_num, vb_is_actual_zero, vb_is_shop_stock
	From tbl_settings;
	IF vb_is_actual_num = 1 THEN
		IF vb_is_actual_zero = 1 THEN
			SET @stock_stmt = CONCAT('CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,') ELSE SUM(tbl_stock_num.KanoNum) END AS stock_num');
			SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE SUM(TBL_stock_tmp.StockNum) END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum) ELSE 0 END AS StockNum');
		ELSEIF vb_is_actual_zero = 0 THEN
			SET @stock_stmt = CONCAT('CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
			SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum) ELSE 0 END AS StockNum');
		END IF;
	ELSEIF vb_is_actual_num = 0 THEN
		SET @stock_stmt = 'CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum) ELSE 0 END AS stock_num';
		SET @stock_tbl_stmt = CONCAT('CASE WHEN (SUM(TBL_stock_tmp.StockNum) > 0) THEN SUM(TBL_stock_tmp.StockNum) ELSE 0 END AS stock_num');
		SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum)  ELSE 0 END AS StockNum');
	END IF;
	IF vb_is_shop_stock = 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') ELSE SUM(tbl_stock_num.StockNum) END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE SUM(TBL_stock_tmp.StockNum) END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum)  ELSE 0 END AS StockNum');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum)  ELSE 0 END AS StockNum');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET @stock_stmt = 'CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum) ELSE 0 END AS stock_num';
			SET @stock_tbl_stmt = CONCAT('CASE WHEN (SUM(TBL_stock_tmp.StockNum) > 0) THEN SUM(TBL_stock_tmp.StockNum) ELSE 0 END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum)  ELSE 0 END AS StockNum');
		END IF;
	END IF;
SET @orderStmt = '';
IF p_sort	= 'priceAscend' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_price 	ASC ';
ELSEIF p_sort	= 'priceDescend' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_price 	DESC ';
ELSEIF p_sort	= 'popular' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
ELSEIF p_sort 	= 'new' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ';
ELSEIF p_sort	= '' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ';
END IF;
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_top 	= 1 
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.hot_product 	        = 1
			AND tbl_products.sale_off_product 	    = 1 
			AND tbl_products.product_status 		= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	-- -===============================================================================
	
	SET @getStuckNumberByColor = CONCAT("
			LEFT JOIN (
				SELECT 
					GoodCode,
					ColorCode,
					",@stock_stmt,"
				FROM 
					tbl_stock_num ");
	IF p_shop_list <> "'-1999'" THEN
		SET @getStuckNumberByColor = CONCAT(@getStuckNumberByColor, "
								WHERE 	ShopCode IN (",   p_shop_list ,") ");
	END IF;
	SET @getStuckNumberByColor = CONCAT(@getStuckNumberByColor, "
				GROUP BY GoodCode, ColorCode
			) AS stock_num_info 
				ON stock_num_info.GoodCode = all_product_tmp.product_goods_code
				AND stock_num_info.ColorCode = all_product_tmp.pro_detail_color_code ");
	
	
	SET @getStuckNumberAllColor = CONCAT("
			LEFT JOIN (
				SELECT 
					GoodCode,
					ColorCode,
					",@stock_tbl_stmt,"
				FROM (
					SELECT 
						GoodCode,
						ColorCode,
						",@stock_not_sum_stmt,"
					FROM 
						tbl_stock_num  ");
	IF p_shop_list <> "'-1999'" THEN
		SET @getStuckNumberAllColor = CONCAT(@getStuckNumberAllColor, "
								WHERE 	ShopCode IN (",   p_shop_list ,") ");
	END IF;
	SET @getStuckNumberAllColor = CONCAT(@getStuckNumberAllColor, " GROUP BY GoodCode, ColorCode, SizeCode
			) AS TBL_stock_tmp
				GROUP BY GoodCode
			) AS stock_num_info 
				ON stock_num_info.GoodCode = product_by_color_tmp.product_goods_code");
	
	
	
	
	
	
	
	
	
	SET @selectStmtStr = CONCAT("SELECT * FROM ( 
						SELECT * FROM (  
							SELECT * FROM (  ",
								@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, "
							) AS all_product_tmp ",
							@getStuckNumberByColor,
						" ) AS all_product ",
					" UNION 
					
						SELECT * FROM (  ", 
							@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
						) AS product_by_color_tmp ",
					@getStuckNumberAllColor, "
		) AS product_info  ");
	-- -===============================================================================	
	
			
		IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@orderStmt, "
		",@selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `SPREAD_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `SPREAD_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SPREAD_sp_searchProduct_fontend`(IN `p_search_key_word_1_byte` VARCHAR(20), IN `p_search_key_word_2_byte` VARCHAR(20), IN `p_category_code` VARCHAR(255), IN `p_price_1` VARCHAR(255), IN `p_price_2` VARCHAR(255), IN `p_price_3` VARCHAR(255), IN `p_price_4` VARCHAR(255), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master_1_byte VARCHAR(1000) DEFAULT NULL;
	DECLARE search_keyword_master_2_byte VARCHAR(1000) DEFAULT NULL;
	-- Hoa xuan them tim kiem rieng cho kh Spread #358513191 --
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"\\","\\\\");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"'","\\'");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,'"','\\"');	
	
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"\\","\\\\");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"'","\\'");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,'"','\\"');
	
	
	
	
	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_1_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_1_byte, ',%')
	INTO search_keyword_master_1_byte;
	IF 
		search_keyword_master_1_byte IS NOT NULL 
		AND search_keyword_master_1_byte <> '' 
	THEN
		
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_1_byte = p_search_key_word_1_byte;
	END IF;
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_2_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_2_byte, ',%')
	INTO search_keyword_master_2_byte;
	IF 
		search_keyword_master_2_byte IS NOT NULL 
		AND search_keyword_master_2_byte <> '' 
	THEN
		
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_2_byte = p_search_key_word_2_byte;
	END IF;
	
	
	
	
	SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products 
				JOIN tbl_products_details 
						ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
						AND tbl_products_details.product_detail_status = 0
				LEFT JOIN tbl_brands 
					ON tbl_products.brand_code = tbl_brands.brand_code
				LEFT JOIN tbl_products_category 
					ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			WHERE 
				tbl_products.product_status 		= 1
				AND (
				tbl_products.product_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_1_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_1_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_2_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_2_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_2_byte,"%'
				) 
			");
	
	-- ==================================================	
	IF (p_category_code <> '') THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				) 
				OR
				(
					tbl_products.product_itemcode IN 
					(
					SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN 
						(
						SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
										tbl_products_category.Name
									ELSE 
										tbl_products_category.name_display
									END)
							FROM 
								tbl_products_category 
							WHERE ItemCode IN ( ",p_category_code," )
						)
					)	
				)
			) ");
	END IF; 
	
	-- ==================================================	
	IF (p_price_1 <> '' OR p_price_2 <> '' OR p_price_3 <> '' OR p_price_4 <> '') THEN		
		SET @selectFromStmt_tmp = "";	
		IF (p_price_1 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 0 AND tbl_products_details.product_detail_price_no_tax <= 10000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_2 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 10000 AND tbl_products_details.product_detail_price_no_tax <= 20000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_3 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 20000 AND tbl_products_details.product_detail_price_no_tax <= 30000 ) ");
		END IF;
		
		-- ==================================================	
		IF (p_price_4 <> '') THEN
			SET @selectFromStmt_tmp = 
			CONCAT(@selectFromStmt_tmp, " OR ( tbl_products_details.product_detail_price_no_tax > 30000 ) ");
		END IF;
		
		SET @selectFromStmt = CONCAT(@selectFromStmt, " AND (" ,SUBSTR(@selectFromStmt_tmp, 4, 1000), ") ");
	END IF;
	
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_changeStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_changeStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_changeStatus`(IN `p_id` INT, IN `p_status` VARCHAR(1))
BEGIN
	UPDATE `tbl_account_vip` SET `acc_status` = p_status WHERE `acc_id` = p_id;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_check` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_check` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_check`(`p_date` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_account_vip 
		WHERE  `acc_status`=0 AND `acc_activation_date` <= p_date AND `acc_deactivation_date` >= p_date ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_delete`(`p_id` BIGINT)
BEGIN
	DELETE FROM `tbl_account_vip` WHERE `tbl_account_vip`.`acc_id` = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_getall`()
BEGIN
	SELECT * FROM `tbl_account_vip` ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_getbyid`(`p_id` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_account_vip` WHERE `tbl_account_vip`.`acc_id` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_login` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_login` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_login`(`p_password` VARCHAR(255), `p_date` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_account_vip 
		WHERE `acc_password` = p_password AND `acc_status`=0 AND `acc_activation_date` <= p_date AND `acc_deactivation_date` >= p_date limit 1;
	update tbl_account_vip set last_active = now()
		WHERE `acc_password` = p_password AND `acc_status`=0 AND `acc_activation_date` <= p_date AND `acc_deactivation_date` >= p_date LIMIT 1;
	SELECT * FROM `tbl_account_vip` 
		WHERE `acc_password` = p_password AND `acc_status`=0;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_checkoldpass` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_checkoldpass` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_checkoldpass`(`p_user_name` VARCHAR(200), `p_password` VARCHAR(50))
BEGIN
 IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_user_name AND tbl_customers.passwords = p_password and tbl_customers.customer_status=1)) THEN
  SELECT 1 AS success;  
 ELSE
  SELECT 0 AS success;
 END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_check_changeemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_check_changeemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_check_changeemail`(`p_email` VARCHAR(200), `p_oldemail` VARCHAR(200))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email and email != p_oldemail)) THEN
		IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email and customer_status=-1)) THEN
			SELECT -1 AS success;
		else
			SELECT 1 AS success;		
		end if;
		
	ELSE
		SELECT 0 AS success;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_check_reset_email_withphone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_check_reset_email_withphone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_check_reset_email_withphone`(`p_email` VARCHAR(200), `p_phone` VARCHAR(50))
BEGIN
	DECLARE v_customer_status int;
	SET v_customer_status = (SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email and tbl_customers.`phone`=p_phone );
	IF((v_customer_status=1 )or (v_customer_status=2)) THEN
		update tbl_customers set email_encode=SHA1(p_email) WHERE tbl_customers.email=p_email;
		SELECT 1 AS success;
	
	elseif(v_customer_status=0) then
		SELECT -1 AS success;
	else
		SELECT 0 AS success;
	END IF;
	SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_check_reset_without_dateofbirth` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_check_reset_without_dateofbirth` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_check_reset_without_dateofbirth`(`p_email` VARCHAR(200))
BEGIN
	DECLARE v_customer_status INT;
	SET v_customer_status = (SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email );
	IF((v_customer_status=1 )OR (v_customer_status=2)) THEN
		UPDATE tbl_customers SET email_encode=SHA1(p_email) WHERE tbl_customers.email=p_email;
		SELECT 1 AS success;
	
	ELSEIF(v_customer_status=0) THEN
		SELECT -1 AS success;
	ELSE
		SELECT 0 AS success;
	END IF;
	SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_get_customer_id` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_get_customer_id` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_get_customer_id`(`p_email` VARCHAR(200))
BEGIN
	SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email and ( customer_status=-1 or customer_status=2);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_reset_password` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_reset_password` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_reset_password`(`p_email_encode` VARCHAR(200), `p_password` VARCHAR(50))
BEGIN
	UPDATE tbl_customers
		SET
			
			tbl_customers.passwords = p_password		
	
		WHERE
			tbl_customers.email_encode = p_email_encode;
	SELECT 1 AS success;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_acount_clickactived` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_acount_clickactived` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_acount_clickactived`(`p_email_encoded` TEXT)
BEGIN
			
		
	update tbl_customers set `clickactived`=1 where email_encode=p_email_encoded and `customer_status`=1;
			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addCampaignDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addCampaignDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addCampaignDetail`(`p_campaign_id` BIGINT(10), `p_uploader_code` VARCHAR(100), `p_uploader_name` VARCHAR(200))
BEGIN
	SET @now = NOW();
	insert into `tbl_campaign_detail` (`campaign_id`,`create_date`,`campaign_image`,
		`uploader_code`,`uploader_name`,`voter`,`status`) values (
		p_campaign_id,@now,'',p_uploader_code,p_uploader_name,0,0);
	SELECT 'ok' AS msg;
	SELECT `campaign_detail_id` FROM `tbl_campaign_detail` where `create_date`=@now 
		and `campaign_id` = p_campaign_id and `uploader_code` = p_uploader_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_Authority_GetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_Authority_GetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_Authority_GetAll`()
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM `tbl_users` WHERE `role_text`='マスター権限';
	IF (total_records > 0) THEN
		SELECT * FROM `tbl_users` WHERE `role_text`='マスター権限' limit 1;
	else
		SELECT * FROM `tbl_users` WHERE `user_name`='admin' LIMIT 1;
	END IF;	
	SELECT COUNT(*) INTO total_records FROM `tbl_users` WHERE `role_text`='閲覧用権限';
	IF (total_records > 0) THEN
		SELECT * FROM `tbl_users` WHERE `role_text`='閲覧用権限' LIMIT 1;	
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_campaign_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_campaign_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_campaign_export`(`p_campaign_id` VARCHAR(10))
BEGIN
	SELECT * FROM `tbl_campaign_vote` as tbl WHERE tbl.`campaign_id` = p_campaign_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_checkvoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_checkvoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_checkvoice`()
BEGIN
	SELECT COUNT(*) AS total_items FROM tbl_voice Where `status` = 1 ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_customer_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_customer_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_customer_export`(`p_type_obj` VARCHAR(50))
BEGIN
	if (p_type_obj = 'all') then
		SELECT  customer_code, if(`customer_name`!='',`customer_name`,`first_name`) as customer_name, `email` FROM `tbl_customers` WHERE `email`!='' AND  ( passwords !='' or passwords is not NULL);
	else if (p_type_obj = 'emailmagazine') then
		SELECT  customer_code, if(`customer_name`!='',`customer_name`,`first_name`) as customer_name, `email` FROM `tbl_customers` WHERE `email`!='' AND  ( passwords !='' or passwords is not NULL) and  emailmagazine=1;
	end if;
	end if;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_deleteMaintenanceImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_deleteMaintenanceImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_deleteMaintenanceImage`()
BEGIN	
	update tbl_maintenance set maintenance_image='';	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_delete_shop_contact_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_delete_shop_contact_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_delete_shop_contact_byid`(IN `shop_contact_id` BIGINT(11))
BEGIN
	DELETE FROM tbl_shop_contact_info WHERE id = shop_contact_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_delete_toppagegroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_delete_toppagegroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_delete_toppagegroup`(`p_top_page_g_id` INT)
BEGIN
	delete from `tbl_top_page` where `top_page_g_id` = p_top_page_g_id;
	DELETE FROM `tbl_top_page_group` WHERE `top_page_g_id` = p_top_page_g_id;	
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllBlog` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllBlog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllBlog`()
BEGIN
	SELECT * FROM tbl_blog ORDER BY tbl_blog.id_ DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllCampaign` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllCampaign` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllCampaign`()
BEGIN
	SELECT * FROM tbl_campaign ORDER BY campaign_id DESC ;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllHashtag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllHashtag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllHashtag`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_products_hashtag ORDER BY hashtag_id DESC ;
	SELECT COUNT(*) AS total_items FROM tbl_products_hashtag;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllMedia`()
BEGIN
	SELECT * FROM tbl_media ORDER BY tbl_media.media_id DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllNews`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_news ORDER BY tbl_news.news_id DESC LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_news;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllShop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllShop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllShop`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_shop ORDER BY tbl_shop.shop_id DESC ;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_shop;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllShop_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllShop_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllShop_frontend`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * 
	FROM tbl_shop 
	WHERE shop_status = 1
	ORDER BY tbl_shop.shop_id DESC ;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_shop;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllVoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllVoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllVoice`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_voice ORDER BY tbl_voice.voice_id DESC LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_voice;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAll_mail_sample` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAll_mail_sample` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAll_mail_sample`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_mail_sample ORDER BY tbl_mail_sample.email_id  LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_mail_sample;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getBlogById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getBlogById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getBlogById`(IN `p_id` INT)
BEGIN
	SELECT * FROM `tbl_blog` WHERE id_ = p_id;
	SELECT * FROM `tbl_author`;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCampaignById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCampaignById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCampaignById`(IN `p_campaign_id` BIGINT)
BEGIN
	SELECT * FROM `tbl_campaign` WHERE campaign_id = p_campaign_id;
	SELECT * FROM `tbl_campaign_detail` WHERE `campaign_id` = p_campaign_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerByBarCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerByBarCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerByBarCode`(IN `p_barcode` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_customers WHERE barcode = p_barcode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerByEmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerByEmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerByEmail`(IN `p_email` VARCHAR(200))
BEGIN
	SELECT * FROM tbl_customers WHERE email = p_email;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerRankUpBySeqNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerRankUpBySeqNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerRankUpBySeqNo`(IN `p_seqno` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_customer_rankup` WHERE `SeqNo` = p_seqno;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerRankUpDefault` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerRankUpDefault` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerRankUpDefault`()
BEGIN
	SELECT * FROM `tbl_customer_rankup` WHERE `Default_Type`=1 limit 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerRankUpTypeBySeqNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerRankUpTypeBySeqNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerRankUpTypeBySeqNo`(IN `p_seqno` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_customer_rankup_type` WHERE `SeqNo` = p_seqno;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getHashtagById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getHashtagById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getHashtagById`(IN `p_hastag_id` BIGINT)
BEGIN
	SELECT * 
	FROM 
		tbl_products_hashtag 
	WHERE 
		hashtag_id = p_hastag_id;
	SELECT * FROM tbl_products_hashtag_detail WHERE hashtag_id = p_hastag_id;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getMediaById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getMediaById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getMediaById`(IN `p_media_id` BIGINT)
BEGIN
	SELECT * FROM tbl_media WHERE media_id = p_media_id;
	SELECT * FROM tbl_shop ORDER BY shop_name;
	SELECT * FROM tbl_keyword ORDER BY show_order;
	SELECT * FROM tbl_media_category;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getMediaById_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getMediaById_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getMediaById_mida`(IN `p_media_id` BIGINT)
BEGIN
	SELECT * FROM tbl_media WHERE media_id = p_media_id;
	SELECT * FROM tbl_shop ORDER BY shop_name;
	SELECT * FROM tbl_keyword ORDER BY show_order;
	SELECT * FROM tbl_media_category;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getMediaById_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getMediaById_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getMediaById_realmccoys`(IN `p_media_id` BIGINT)
BEGIN
	SELECT * FROM tbl_media WHERE media_id = p_media_id;
	SELECT * FROM tbl_shop ORDER BY shop_name;
	SELECT * FROM tbl_keyword where keyword_role = '1' ORDER BY show_order;
	SELECT * FROM tbl_media_category;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getmypagemaker` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getmypagemaker` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getmypagemaker`()
BEGIN
		SELECT * FROM `tbl_mypagemaker` limit 1;
	
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getNewsById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getNewsById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getNewsById`(IN `p_news_id` BIGINT)
BEGIN
	SELECT * FROM tbl_news WHERE news_id = p_news_id;
	SELECT * FROM tbl_news_category;
	SELECT * FROM tbl_keyword WHERE keyword_role = '0' ORDER BY show_order;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getpreferencesfromec` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getpreferencesfromec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getpreferencesfromec`()
BEGIN
	SELECT * FROM `tbl_preferencesfromec` limit 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getRankUp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getRankUp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getRankUp`(`p_rank_default` VARCHAR(4))
BEGIN
	SELECT * FROM `tbl_customer_rankup` ORDER BY tbl_customer_rankup.`Rank_Code` DESC;
	SELECT * FROM `tbl_customer_rankup_type`;
	SELECT * FROM `tbl_preferencesfromec`;
	if(p_rank_default!='') then
		UPDATE tbl_customer_rankup set `Default_Type`=0;
		UPDATE tbl_customer_rankup SET `Default_Type`=1 where `Rank_Code`=p_rank_default;
		
	end if;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSendEmailById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSendEmailById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSendEmailById`(IN `p_email_id` BIGINT)
BEGIN
	SELECT * FROM tbl_sendemail WHERE email_id = p_email_id;
	select * from `tbl_products_category`;	
	select tbl_customers.customer_code,tbl_customers.first_name,tbl_customers.email,tbl_customers.email_encode from tbl_customers WHERE email IS NOT NULL AND email <> '';
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting`(`p_columnname` VARCHAR(50))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records > 0) THEN
		-- create one record		
		SET @selectStmt = CONCAT('select ',p_columnname,' as contents from tbl_settings ');
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
	
	SELECT 'ok' AS msg;
	END IF;
	
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSettings_is_show_shop_from_4d` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSettings_is_show_shop_from_4d` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSettings_is_show_shop_from_4d`(IN `p_is_show_shop_from_4d` TINYINT(1))
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		-- create one record
		INSERT INTO tbl_settings(
				is_show_shop_from_4d)
		VALUES(
			p_is_show_shop_from_4d
		);
	ELSE
		--  update
		UPDATE
			tbl_settings
		SET
			is_show_shop_from_4d 	= p_is_show_shop_from_4d
		;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_all`()
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF (total_records > 0) THEN
		-- select one record		
		select  * from tbl_settings limit 1 ;
	
		SELECT 'ok' AS msg;
	END IF;
	
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_googleshopping` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_googleshopping` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_googleshopping`()
BEGIN
	SELECT  * FROM tbl_settings_googleshopping LIMIT 1 ;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_mailsetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_mailsetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_mailsetting`()
BEGIN
	SELECT * FROM tbl_settings_mail;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_search`()
BEGIN
	SELECT  product_code FROM tbl_settings LIMIT 1 ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_shopcontactinfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_shopcontactinfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_shopcontactinfo`()
BEGIN
	SELECT
		*
	FROM 
		tbl_shop_contact_info;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_shopcontactinfo_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_shopcontactinfo_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_shopcontactinfo_byid`(IN `p_shop_contact_id` BIGINT(11))
BEGIN
	SELECT
		*
	FROM 
		tbl_shop_contact_info
	WHERE 
		id = p_shop_contact_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_shopinfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_shopinfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_shopinfo`()
BEGIN
	SELECT	*
		/* shop_info_shop_name,
		shop_info_key_word,
		shop_info_description,
		shop_info_logo ,
		website_image */
	FROM 
		tbl_settings 
	LIMIT 1 ;
	-- ----------------------------------
	SELECT
		*
	FROM 
		tbl_shop_contact_info;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_social` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_social` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_social`()
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records > 0) THEN
		-- select one record		
		select  linkfacebook,linktwitter,linkinstagram,linkpinterest from tbl_settings limit 1 ;
	
	SELECT 'ok' AS msg;
	END IF;
	
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_staticpage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_staticpage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_staticpage`()
BEGIN
	SELECT * FROM tbl_static_pages ORDER BY static_page_id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_StaticPageById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_StaticPageById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_StaticPageById`(IN `p_static_page_id` BIGINT(11))
BEGIN
	SELECT * FROM tbl_static_pages WHERE static_page_id = p_static_page_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_toppage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_toppage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_toppage`()
BEGIN
	SELECT * FROM `tbl_top_page` ORDER BY `top_page_order_num`,`top_page_id` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_TopPageById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_TopPageById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_TopPageById`(IN `p_top_page_g_id` BIGINT(20))
BEGIN
	SELECT * FROM `tbl_top_page_group` WHERE `top_page_g_id` = p_top_page_g_id;
	SELECT * FROM (SELECT `top_page_id`,`top_page_image`,`top_page_link`,`top_page_type`,`top_page_iframe`,
		IF(`top_page_order_num`=0,999999999,`top_page_order_num`) AS `top_page_order_num`,
		`top_page_g_id`,`top_page_name`
		FROM `tbl_top_page` WHERE `top_page_g_id` = p_top_page_g_id) AS tmp
		ORDER BY tmp.`top_page_order_num`,tmp.`top_page_id`;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_toppagegroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_toppagegroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_toppagegroup`()
BEGIN
	SELECT * FROM `tbl_top_page_group` ORDER BY `top_page_g_order_num`,`top_page_g_id` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getSetting_uploadfile` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getSetting_uploadfile` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getSetting_uploadfile`()
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records > 0) THEN
		-- select one record		
		select  file_link,file_title from tbl_settings limit 1 ;
	
	SELECT 'ok' AS msg;
	END IF;
	
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getShopByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getShopByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getShopByCode`(IN `p_shop_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_shop WHERE shop_code = p_shop_code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getShopById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getShopById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getShopById`(IN `p_shop_id` BIGINT)
BEGIN
	SELECT * FROM tbl_shop WHERE shop_id = p_shop_id;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getVoiceById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getVoiceById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getVoiceById`(IN `p_voice_id` BIGINT)
BEGIN
	SELECT * FROM tbl_voice WHERE voice_id = p_voice_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_get_mail_sampleById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_get_mail_sampleById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_get_mail_sampleById`(IN `p_email_id` BIGINT)
BEGIN
	SELECT * FROM tbl_mail_sample WHERE email_id = p_email_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_importbirth` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_importbirth` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_importbirth`()
BEGIN
	SELECT * FROM tbl_customers  where length(tbl_customers.birthday)<10;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_magazine_exportlstemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_magazine_exportlstemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_magazine_exportlstemail`()
BEGIN
select `register_date`,`email_status`,`email_name`,`gender`,`chronology` from `tbl_mail_magazine_register`;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_magazine_searchlstemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_magazine_searchlstemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_magazine_searchlstemail`(IN `p_mail_list` TEXT, IN `p_skip` INT, IN `p_limit` INT)
BEGIN
declare v_total_email int default 0;
DECLARE v_index INT DEFAULT 0;
DECLARE v_email_name VARCHAR(255);
Set p_mail_list = REPLACE(p_mail_list,",","','");
	
	
SET @selectStmt = CONCAT("SELECT * FROM tbl_mail_magazine_register WHERE email_name IN ('",p_mail_list,"') order by id DESC 
	LIMIT ", p_skip ,",",p_limit);
      
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
      	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_restore_staticpagedraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_restore_staticpagedraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_restore_staticpagedraft`(IN `p_static_page_id` BIGINT)
BEGIN
	DELETE FROM tbl_static_page_drafts 
	WHERE 	static_page_code = (SELECT static_page_code FROM tbl_static_pages WHERE static_page_id = p_static_page_id);
	INSERT INTO tbl_static_page_drafts (SELECT * FROM tbl_static_pages WHERE tbl_static_pages.static_page_id = p_static_page_id);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveAuthorAvatar` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveAuthorAvatar` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveAuthorAvatar`(IN `p_id` INT, IN `p_thumbnail` VARCHAR(255))
BEGIN
	UPDATE tbl_author
	SET
		tbl_author.`avatar_` = CASE WHEN p_thumbnail = '' THEN tbl_author.avatar_ ELSE p_thumbnail END
		
	WHERE `tbl_author`.`id_` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveBlog` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveBlog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveBlog`(`p_mode` VARCHAR(20), `p_id` BIGINT(20), `p_title` VARCHAR(255), `p_short` TEXT, `p_contents` TEXT, `p_status` INT(4), `p_author` VARCHAR(200), `p_date` VARCHAR(40))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO `tbl_blog`(
				`title_`,
				`short_`,
				`content_`,
				`create_`,				
				`status_`,
				`date_`,
				`author_`
		) VALUES(
			p_title,
			p_short,
			p_contents, 
			NOW(),
			p_status,
			p_date,
			p_author
		);
		SELECT MAX(id_) AS 'id_' FROM tbl_blog;
	ELSE
		UPDATE tbl_blog
		SET
			title_ 		= p_title,
			short_ 		= p_short,
			content_ 	= p_contents,
			status_ 	= p_status,
			date_ 		= p_date,
			modify_ 	= NOW(),
			author_		= p_author
		WHERE
			id_ = p_id;
			
		SELECT p_id AS 'id_' ;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveBlogImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveBlogImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveBlogImage`(IN `p_id` INT, IN `p_image` VARCHAR(255))
BEGIN
	UPDATE 	`tbl_blog`
	SET
		tbl_blog.image_ = CASE WHEN p_image = '' THEN tbl_blog.image_ ELSE p_image END
	WHERE 	tbl_blog.id_ = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_savecolorgroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_savecolorgroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_savecolorgroup`(`p_mode` VARCHAR(20), `p_colorgroup_code` VARCHAR(20), `p_colorgroup_name` TEXT, `p_colorgroup_html_code` TEXT, `p_color_code` TEXT, `p_display_order` INT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_colorsgroup`( colorgroup_name, colorgroup_html_code, color_code , display_order)
		VALUES(p_colorgroup_name, p_colorgroup_html_code, p_color_code, p_display_order);
	ELSE
		UPDATE 	`tbl_colorsgroup`
		SET
			colorgroup_name 	= p_colorgroup_name,
			colorgroup_html_code    = p_colorgroup_html_code,
			color_code              = p_color_code,
			display_order           = p_display_order		
		WHERE
			colorgroup_code 	= p_colorgroup_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveCustomerImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveCustomerImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveCustomerImage`(IN `p_customer_code` VARCHAR(13), IN `p_customer_image` VARCHAR(500))
BEGIN
	UPDATE `tbl_customers`
	SET
		`customer_identification`= concat(`customer_identification`,p_customer_image)		
	WHERE `customer_code` = p_customer_code;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveCustomerImageQuick` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveCustomerImageQuick` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveCustomerImageQuick`(IN `p_customer_code` VARCHAR(13), IN `p_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE 	`tbl_customers`
	SET 	`customer_identification` = p_image_detail
	WHERE 	`customer_code` = p_customer_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveHashtagImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveHashtagImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveHashtagImage`(IN `hashtag_id` INT, IN `p_banner` VARCHAR(255))
BEGIN
	UPDATE tbl_products_hashtag
	SET
		tbl_products_hashtag.banner = CASE WHEN p_banner = '' THEN tbl_products_hashtag.banner ELSE p_banner END
		
	WHERE tbl_products_hashtag.hashtag_id = hashtag_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveMediaCategoryImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveMediaCategoryImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveMediaCategoryImage`(IN `p_category_id` INT, IN `p_category_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_media_category
	SET
		tbl_media_category.category_image = CASE WHEN p_category_image = '' THEN tbl_media_category.category_image ELSE p_category_image END
	WHERE 	tbl_media_category.id = p_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveMediaImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveMediaImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveMediaImage`(IN `p_media_id` INT, IN `p_media_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_media
	SET
		tbl_media.media_image = CASE WHEN p_media_image = '' THEN tbl_media.media_image ELSE p_media_image END
	WHERE 	tbl_media.media_id = p_media_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveNewsThumnail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveNewsThumnail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveNewsThumnail`(IN `p_news_id` INT, IN `p_thumbnail` VARCHAR(255))
BEGIN
	UPDATE tbl_news
	SET
		tbl_news.news_image = CASE WHEN p_thumbnail = '' THEN tbl_news.news_image ELSE p_thumbnail END
		
	WHERE tbl_news.news_id = p_news_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSearchprice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSearchprice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSearchprice`(IN `tb_searchprice_id` INT, IN `tb_price_start` INT, IN `tb_end_price` INT)
BEGIN
	IF (tb_searchprice_id = '' or tb_searchprice_id is null) THEN
		INSERT INTO `tbl_searchprice`(
			`price_start`,
			`end_price`
		) VALUES (
			tb_price_start,
			tb_end_price
		);
		
	ELSE
		UPDATE  `tbl_searchprice`
		SET
			`price_start` 	= tb_price_start,			
			`end_price` 	= tb_end_price
		WHERE
			`searchprice_id` = tb_searchprice_id;
			
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_coupon` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_coupon` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_coupon`(`p_issuepointbycoupon` TINYINT(1), `p_usecoupon` TINYINT(1), `p_contentcoupon` TEXT)
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings(issuepointbycoupon,usecoupon,contentcoupon) values(
		p_issuepointbycoupon, p_usecoupon,p_contentcoupon
		);
		
	ELSE
		--  update 
		UPDATE tbl_settings 
		SET 
			issuepointbycoupon = p_issuepointbycoupon,
			usecoupon = p_usecoupon,
			contentcoupon = p_contentcoupon
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_creditoption` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_creditoption` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_creditoption`(`p_is_capture` TINYINT(1))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings(is_capture) values(
		p_is_capture
		);
		
	ELSE
		--  update 
		UPDATE tbl_settings 
		SET 
			is_capture = p_is_capture
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_social` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_social` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_social`(`p_link1` VARCHAR(200), `p_link2` VARCHAR(200), `p_link3` VARCHAR(200), `p_link4` VARCHAR(200))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings(linkfacebook,linktwitter,linkinstagram,linkpinterest) values(
		p_link1, p_link2,p_link3,p_link4
		);
		
	ELSE
		--  update 
		UPDATE tbl_settings 
		SET 
			linkfacebook = p_link1,
			linktwitter = p_link2,
			linkinstagram = p_link3,
			linkpinterest = p_link4
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_staticpage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_staticpage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_staticpage`(IN `p_static_page_id` BIGINT(11), IN `p_static_page_title` TEXT, IN `p_static_page_content` TEXT, IN `p_static_page_status` TINYINT(2))
BEGIN
	UPDATE 	tbl_static_pages
	SET
		static_page_title 	= p_static_page_title,
		static_page_content	= p_static_page_content,
		static_page_status	= p_static_page_status,
		update_date		= NOW()
	WHERE	static_page_id		= p_static_page_id;
	SELECT 'ok' AS 'msg';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_uploadfile` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_uploadfile` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_uploadfile`(`p_link1` VARCHAR(200), `p_link2` VARCHAR(500))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings(file_title,file_link) values(
		p_link1, p_link2
		);
		
	ELSE
		--  update 
		UPDATE tbl_settings 
		SET 
			file_title = p_link1,
			file_link = p_link2
			
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_zoomimage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_zoomimage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_zoomimage`(IN `p_zoomimage` INT)
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings ;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		-- create one record
		INSERT INTO tbl_settings(zoomimage) VALUES(p_zoomimage);
	ELSE
		--  update
		UPDATE tbl_settings SET zoomimage = p_zoomimage;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveShopImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveShopImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveShopImage`(IN `p_shop_id` INT, IN `p_shop_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_shop
	SET
		tbl_shop.`shop_logo` = CASE WHEN p_shop_image = '' THEN tbl_shop.`shop_logo` ELSE p_shop_image END
	WHERE 	tbl_shop.`shop_id` = p_shop_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveStaffImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveStaffImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveStaffImage`(IN `p_section_code` INT, IN `p_staff_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_staff
	SET
		tbl_staff.`staff_image` = CASE WHEN p_staff_image = '' THEN tbl_staff.`staff_image` ELSE p_staff_image END
	WHERE 	tbl_staff.`StaffCode` = p_section_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveVoiceThumnail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveVoiceThumnail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveVoiceThumnail`(IN `p_voice_id` INT, IN `p_thumbnail` VARCHAR(255))
BEGIN
	UPDATE tbl_voice
	SET
		tbl_voice.voice_image = CASE WHEN p_thumbnail = '' THEN tbl_voice.voice_image ELSE p_thumbnail END
		
	WHERE tbl_voice.voice_id = p_voice_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_dateexpired` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_dateexpired` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_dateexpired`()
BEGIN
	--  update 
		UPDATE 	tbl_products 
		SET date_expired = ''
		WHERE date_expired != '' AND (date_expired = '0000/00/00' OR date_expired = '0');
		
		UPDATE 	tbl_products 
		SET date_new_start = ''
		WHERE date_new_start != '' AND (date_new_start = '0000/00/00' OR date_new_start = '0');
		
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_toppagegroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_toppagegroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_toppagegroup`(IN `p_top_page_g_id` BIGINT(20), IN `p_top_page_g_status` TINYINT(4), IN `p_top_page_g_order_num` INT(11))
BEGIN
	UPDATE 	`tbl_top_page_group`
	SET
		`top_page_g_status` 	= p_top_page_g_status,
		`top_page_g_order_num`	= p_top_page_g_order_num
	WHERE	`top_page_g_id`		= p_top_page_g_id;
	SELECT 'ok' AS 'msg';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_search_hashtag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_search_hashtag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_search_hashtag`()
BEGIN
	SELECT * FROM tbl_products_hashtag ORDER BY tbl_products_hashtag.hashtag_id DESC;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_StaticPageDraftByStaticpapgeDraftId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_StaticPageDraftByStaticpapgeDraftId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_StaticPageDraftByStaticpapgeDraftId`(IN `p_static_page_draft_id` BIGINT(11))
BEGIN
	SELECT * FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_StaticPageDraftByStaticpapgeId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_StaticPageDraftByStaticpapgeId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_StaticPageDraftByStaticpapgeId`(IN `p_static_page_id` BIGINT(11))
BEGIN
	SELECT * FROM tbl_static_pages_draft WHERE static_page_id = p_static_page_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_staticpage_delete_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_staticpage_delete_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_staticpage_delete_all`()
BEGIN
	DELETE FROM tbl_static_pages;
	DELETE FROM tbl_static_page_drafts;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_staticpage_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_staticpage_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_staticpage_insert`(IN `p_static_page_title` TEXT, IN `p_static_page_content` TEXT, IN `p_static_page_status` TINYINT(2), IN `p_link_preview` VARCHAR(200))
BEGIN
	INSERT INTO tbl_static_pages (
		static_page_title, 
		static_page_content, 
		static_page_status, 
		create_date, 
		link_preview)
	VALUES (
		p_static_page_title, 
		p_static_page_content,
		p_static_page_status,
		NOW(), 
		p_link_preview
	);
	SELECT 'ok' AS 'msg';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_updatepassCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_updatepassCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_updatepassCustomer`(`p_insert` TEXT)
BEGIN
	
	Set @strQuery = concat('',p_insert);
	
	PREPARE statement FROM @strQuery;
	EXECUTE statement;
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_updatepickup4u` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_updatepickup4u` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_updatepickup4u`(IN `tb_pickup4u_id` INT, IN `tb_pickup4u_text` TEXT, IN `p_mode` TEXT)
BEGIN
	IF (p_mode = 'I') THEN
		INSERT INTO tbl_pickup4u(
			pickup4u_text
		) VALUES (
			tb_pickup4u_text
		);
	ELSE
		UPDATE  `tbl_pickup4u`
		SET
			`pickup4u_text` = tb_pickup4u_text
		WHERE
			`pickup4u_id` = tb_pickup4u_id;
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_affiliateByid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_affiliateByid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_affiliateByid`(`p_affiliate_id` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_affiliate WHERE tbl_affiliate.`affiliate_id` = p_affiliate_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_allproduct_getbrandcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_allproduct_getbrandcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_allproduct_getbrandcode`()
BEGIN
	SELECT 
		brand_code, goods_code 
	FROM 
		tbl_products
	WHERE 
		tbl_products.`product_status` = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_aterial_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_aterial_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_aterial_getall`()
BEGIN
	SELECT * FROM tbl_aterial WHERE aterial_status = 1 ORDER BY tbl_aterial.display_order ASC, tbl_aterial.aterial_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_aterial_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_aterial_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_aterial_getbycode`(`p_aterial_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_aterial WHERE tbl_aterial.aterial_code = p_aterial_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_aterial_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_aterial_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_aterial_save`(`p_mode` VARCHAR(20), `p_aterial_code` VARCHAR(20), `p_aterial_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_aterial(aterial_code, aterial_name, display_order, created_at)
		VALUES(p_aterial_code, p_aterial_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_aterial
		SET
			aterial_name 	= p_aterial_name,
			display_order = p_display_order
		WHERE
			aterial_code 	= p_aterial_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_author_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_author_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_author_delete`(`p_id` INT)
BEGIN
	DELETE FROM `tbl_author` WHERE `tbl_author`.`id_` = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_author_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_author_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_author_getall`()
BEGIN
	SELECT * FROM `tbl_author` ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_author_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_author_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_author_getbyid`(`p_id` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_author` WHERE `tbl_author`.`id_` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Baggyportec_FrontEnd_Product_GetCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Baggyportec_FrontEnd_Product_GetCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Baggyportec_FrontEnd_Product_GetCode`(IN `p_slug_url` TEXT)
BEGIN
	
	SELECT 	* 
	FROM 	
		tbl_products_details 	AS pd,
		tbl_products 		AS p
		 
	WHERE 
		p.SeqNo 	= pd.RSeqNO 
		AND p.slug_url 	= p_slug_url 
		AND (
			pd.`product_detail_color_status`=0
			OR pd.`product_detail_color_status` IS NULL
		);
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_BannerDelete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_BannerDelete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_BannerDelete`(`p_banner_id` INT)
BEGIN
	DELETE FROM tbl_banner WHERE tbl_banner.banner_id = p_banner_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brandgroup_getbybrandcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brandgroup_getbybrandcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brandgroup_getbybrandcode`(IN `p_brand_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_brands_group WHERE id = (Select group_id from tbl_brands where brand_code = p_brand_code);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_BrandGroup_GetByProductSaleOff` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_BrandGroup_GetByProductSaleOff` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_BrandGroup_GetByProductSaleOff`()
BEGIN
	SELECT * FROM tbl_brands_group WHERE tbl_brands_group.`id` 
	IN (SELECT tbl_brands.`group_id` FROM tbl_brands WHERE tbl_brands.`brand_code`
	IN (SELECT tbl_products.`brand_code` FROM tbl_products WHERE tbl_products.`sale_off_product` = '1')) 
	AND tbl_brands_group.`group_status` = '1'
	ORDER BY tbl_brands_group.`show_order` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_brands 
	WHERE 
		brand_status = 1
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForMenu`()
BEGIN
	SELECT 
		tbl_brands.*,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_as_menu 	= 1
	GROUP BY brand_name_display
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForMenu_office3` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForMenu_office3` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForMenu_office3`()
BEGIN
	SELECT 
		tbl_brands.*,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_as_menu 	= 1
	GROUP BY brand_name_display
	ORDER BY
	 brand_name_display ASC,
	 show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandGroupForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandGroupForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandGroupForMenu`()
BEGIN
	SELECT 
		*
	FROM 
		 tbl_brands_group 
	WHERE 
		group_status 	= 1
	GROUP BY group_name
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_group_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_group_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_group_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_brands_group 
	WHERE 
		group_status = 1
	ORDER BY show_order ASC, group_name ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Brand_getBrandrecommend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Brand_getBrandrecommend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Brand_getBrandrecommend`()
BEGIN
        SELECT *
	FROM 
		tbl_brands 
	WHERE 
		brand_status 	= 1
		AND is_show_top_page 	= 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brand_get_menu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brand_get_menu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brand_get_menu`()
BEGIN
	-- Modified: 2020/04/11
	-- SELECT * FROM tbl_brands WHERE tbl_brands.ecsite =1 and tbl_brands.is_show_as_menu =1;
	SELECT * FROM tbl_brands WHERE tbl_brands.is_show_as_menu =1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_CalculateGoodsPrice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_CalculateGoodsPrice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_CalculateGoodsPrice`(`_CalTaxMethod` VARCHAR(40), `_TaxRoundType` INT, `_TaxRate` DOUBLE)
BEGIN
	update `tbl_products_details` set 
		`product_detail_price2`=product_detail_price_no_tax+A000CalculateTax_Price(`product_detail_price_no_tax`,_CalTaxMethod,_TaxRoundType,_TaxRate),
		`product_detail_saleoff_price2`=product_detail_saleoff_price_no_tax+A000CalculateTax_Price(`product_detail_saleoff_price_no_tax`,_CalTaxMethod,_TaxRoundType,_TaxRate);
	select 'OK' as msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cancelProductDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cancelProductDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cancelProductDraft`(IN `p_product_draft_id` BIGINT(20))
BEGIN
	update tbl_products_draft set is_updated = 2 where product_draft_id = p_product_draft_id; -- is_updated 2/ cancel
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cancelstaticpagedraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cancelstaticpagedraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cancelstaticpagedraft`(IN `p_static_page_draft_id` BIGINT(20))
BEGIN
	UPDATE tbl_static_pages_draft SET is_updated = 2 WHERE static_page_draft_id = p_static_page_draft_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cart_check_email` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cart_check_email` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cart_check_email`(`p_email` VARCHAR(200))
BEGIN
	SELECT first_name,last_name FROM tbl_customers WHERE tbl_customers.email=p_email;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cart_check_price` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cart_check_price` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cart_check_price`(IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_size_code` VARCHAR(50))
BEGIN
SELECT * FROM `tbl_products` AS pr,`tbl_products_details`  AS dt WHERE pr.SeqNo=dt.RSeqNo 
AND pr.`goods_code`=p_goods_code AND dt.`color_code`=p_color_code AND dt.`size_code`=p_size_code LIMIT 1;
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cart_update_customer_info` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cart_update_customer_info` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cart_update_customer_info`(IN `d_customer_code` VARCHAR(40), IN `d_first_name` VARCHAR(200), IN `d_last_name` VARCHAR(200), IN `d_post_code` VARCHAR(50), IN `d_state` VARCHAR(50), IN `d_city` VARCHAR(50), IN `d_address` VARCHAR(500), IN `d_address2` VARCHAR(500), IN `d_phone` VARCHAR(50), IN `d_email` VARCHAR(200), IN `d_shopcode` VARCHAR(20), IN `d_shopname` VARCHAR(50))
BEGIN
	if d_shopcode='' then	-- Huy add shop 2020/10/28 764901713 More
		UPDATE `tbl_customers`
		SET `first_name`=d_first_name,
		`last_name`=d_last_name,
		`postcode`=d_post_code,
		`state`=d_state,
		`city`=d_city,
		`address`=d_address,
		`address2`=d_address2,
		`phone`=d_phone,
		`modified_date`=NOW()
		WHERE `customer_code`=d_customer_code;
	else
		UPDATE `tbl_customers`
		SET `shopcode`=d_shopcode,
		`shopname`=d_shopname,
		`modified_date`=NOW()
		WHERE `customer_code`=d_customer_code;
	end if;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cashpaysetting_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cashpaysetting_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cashpaysetting_all`()
BEGIN
	SELECT * FROM tbl_cashpaysetting;
	SELECT * FROM tbl_cashpayrange ORDER BY id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_CategoryGetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_CategoryGetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_CategoryGetAll`()
BEGIN
	-- SELECT * FROM tbl_category;
	-- hoa xuan sua thanh bang tbl_products_category 181023
	SELECT * FROM tbl_products_category;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getall`()
BEGIN
	SELECT * FROM tbl_products_category_group
	ORDER BY category_group_show_order ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getall_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getall_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getall_frontend`()
BEGIN
	SELECT * FROM tbl_products_category_group
	where category_group_status = 1
	ORDER BY category_group_show_order ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getbygoodscode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getbygoodscode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getbygoodscode`(IN `p_goods_code` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_products_category_group WHERE 
	id = (Select category_group_id from tbl_products_category where 
	ItemCode = (select product_itemcode from tbl_products where goods_code = p_goods_code)
	);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getbyid`(IN `p_category_group_id` INT(11))
BEGIN
	SELECT * FROM tbl_products_category_group WHERE tbl_products_category_group.id = p_category_group_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getbyitemcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getbyitemcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getbyitemcode`(IN `p_item_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_category_group WHERE id = (Select category_group_id from tbl_products_category where ItemCode = p_item_code);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_getGroupByParentName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_getGroupByParentName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_getGroupByParentName`(IN `p_parent_name` VARCHAR(255))
BEGIN	
	SELECT 
		* 
	FROM 
		tbl_products_category_group 
	WHERE 
		category_group_status = 1 
		AND category_group_parent_name = p_parent_name
	ORDER BY category_group_show_order asc;
	Select * from tbl_banner where item_code = p_parent_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorysmall_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorysmall_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorysmall_getall`()
BEGIN
	SELECT * FROM tbl_products_category_small
	ORDER BY category_small_show_order;
	
	SELECT * FROM tbl_products_category_small
	where category_small_status = 1
	ORDER BY category_small_show_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorysmall_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorysmall_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorysmall_getbyid`(IN `p_category_small_id` INT(11))
BEGIN
	SELECT * FROM tbl_products_category_small WHERE tbl_products_category_small.id = p_category_small_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Category_GetByProductSaleOff` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Category_GetByProductSaleOff` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Category_GetByProductSaleOff`()
BEGIN
	SELECT * FROM tbl_products_category where tbl_products_category.`product_category_id`
	IN (Select tbl_products.`product_category_id` from tbl_products where tbl_products.`sale_off_product` = '1')  AND tbl_products_category.`isDisplay` = '1';
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Category_getCategoryByParentId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Category_getCategoryByParentId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Category_getCategoryByParentId`(IN `p_parent_id` INT(11))
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_category 
	WHERE 
		category_status = 1 
		AND parent_id = p_parent_id
	ORDER BY show_order ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Category_getCategoryByParentName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Category_getCategoryByParentName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Category_getCategoryByParentName`(IN `p_parent_name` VARCHAR(255))
BEGIN	
	SELECT 
		* 
	FROM 
		tbl_products_category 
	WHERE 
		IsDisplay = 1 
		AND category_group_id = (select `id` from tbl_products_category_group where category_group_name = p_parent_name) 
	ORDER BY OrderNumber;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Category_getCategoryParents` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Category_getCategoryParents` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Category_getCategoryParents`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_category 
	WHERE 
		category_status = 1 
		AND parent_id IS NULL 
	ORDER BY show_order ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Category_GetCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Category_GetCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Category_GetCode`(IN `p_slug_url` TEXT)
BEGIN
	SELECT * FROM tbl_products_category WHERE tbl_products_category.slug_url = p_slug_url;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_changeCampaignDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_changeCampaignDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_changeCampaignDetail`(IN `p_campaign_detail_id` BIGINT(10), IN `p_status` INT(4))
BEGIN
		UPDATE `tbl_campaign_detail`
		SET					
			STATUS 	= p_status	
		WHERE
			tbl_campaign_detail.`campaign_detail_id` = p_campaign_detail_id;			
	SELECT 'ok' AS msg;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ChangeStaticPageCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ChangeStaticPageCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ChangeStaticPageCode`()
BEGIN	
	UPDATE tbl_static_pages SET static_page_code = REPLACE (static_page_code,'OPERAPORT_', '')
	WHERE static_page_code like 'OPERAPORT_%';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ChangeStaticPageCode_Operaport` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ChangeStaticPageCode_Operaport` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ChangeStaticPageCode_Operaport`()
BEGIN	
	UPDATE tbl_static_pages SET static_page_code = REPLACE (static_page_code,'OPERAPORT_', '')
	WHERE static_page_code like 'OPERAPORT_%';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_changeStatusBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_changeStatusBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_changeStatusBrand`(`p_brand_id` INT, `p_brand_status` TINYINT(1))
BEGIN
	UPDATE 	tbl_brands
	SET	brand_status	= p_brand_status
	WHERE	brand_id 	= p_brand_id;
	
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_changeStatusBrandGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_changeStatusBrandGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_changeStatusBrandGroup`(`p_brand_group_id` INT(11), `p_brand_group_status` TINYINT(1))
BEGIN
	UPDATE 	tbl_brands_group
	SET	group_status		= p_brand_group_status
	WHERE	tbl_brands_group.id 	= p_brand_group_id;
	
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_changeStatusCategoryGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_changeStatusCategoryGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_changeStatusCategoryGroup`(`p_product_category_group_id` INT(11), `p_category_group_status` TINYINT(1))
BEGIN
	UPDATE 	tbl_products_category_group
	SET	category_group_status	= p_category_group_status
	WHERE	id 			= p_product_category_group_id;
	
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_changeStatusProductCat` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_changeStatusProductCat` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_changeStatusProductCat`(`p_product_category_id` INT(11), `p_IsDisplay` TINYINT(1))
BEGIN
	UPDATE 	tbl_products_category
	SET	IsDisplay		= p_IsDisplay
	WHERE	product_category_id 	= p_product_category_id;
	
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_checkCurrentLoginAccountVip` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_checkCurrentLoginAccountVip` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_checkCurrentLoginAccountVip`()
BEGIN
	SELECT * FROM tbl_account_vip WHERE TIMESTAMPDIFF(MINUTE, last_active, NOW()) <= 30;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_checkMaintenance` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_checkMaintenance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_checkMaintenance`()
BEGIN	
	SELECT * FROM `tbl_maintenance` WHERE 
		`maintenance_type`=1 OR (`maintenance_type`=2 AND 
		NOW() >= STR_TO_DATE(CONCAT(IFNULL(`startdate`,'1900-01-01'),' ',IFNULL(`starttime`,'00:00')),'%Y/%m/%d %H:%i')
		AND 
		NOW() <= STR_TO_DATE(CONCAT(IFNULL(`enddate`,'1900-01-01'),' ',IFNULL(`endtime`,'00:00')),'%Y/%m/%d %H:%i')
		)
	ORDER BY `maintenance_id` DESC LIMIT 1;			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_check_exist_affiliate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_check_exist_affiliate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_check_exist_affiliate`(`p_affiliate_id` VARCHAR(50))
BEGIN
	SELECT COUNT(*) AS totala FROM `tbl_affiliate` WHERE `tbl_affiliate`.`affiliate_name` = p_affiliate_id;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_check_is_not_sold_out` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_check_is_not_sold_out` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_check_is_not_sold_out`(IN `p_goods_code` VARCHAR(50))
BEGIN
SELECT `is_not_sold_out` FROM `tbl_products` WHERE `goods_code`=p_goods_code ;
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_clearSecretBrandItemById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_clearSecretBrandItemById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_clearSecretBrandItemById`(IN `p_secret_sale_id` INT(11))
BEGIN
	delete from tbl_secret_sale_brand where secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_item WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_product WHERE secret_sale_id = p_secret_sale_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_colorgroup_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_colorgroup_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_colorgroup_getall`()
BEGIN
	SELECT * FROM `tbl_colorsgroup` ORDER BY `tbl_colorsgroup`.`colorgroup_code` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_colorgroup_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_colorgroup_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_colorgroup_getbycode`(`p_colorgroup_code` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_colorsgroup` WHERE `tbl_colorsgroup`.`colorgroup_code` = p_colorgroup_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_getall`()
BEGIN
	SELECT * FROM tbl_colors ORDER BY tbl_colors.color_displayorder ASC, tbl_colors.color_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_getbycode`(`p_color_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_colors WHERE tbl_colors.color_code = p_color_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_get_keyword` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_get_keyword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_get_keyword`()
BEGIN
	SELECT * FROM tbl_colors
	where tbl_colors.`color_keyword` <> ''
	ORDER BY tbl_colors.color_displayorder ASC, tbl_colors.color_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_jamsync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_jamsync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_jamsync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN		
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_colors(
		SeqNo,
		RSeqNo,
		create_date,
		color_code,
		color_name,
		color_abbre,
		TimeStamp,		
		color_displayorder
		)
		VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;                    
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_delete`(`p_id` BIGINT)
BEGIN
	DELETE FROM `tbl_coordinate_book` WHERE `tbl_coordinate_book`.`coordinate_id` = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_getAll`()
BEGIN
	SELECT * FROM `tbl_coordinate_book` ORDER BY `coordinate_id` DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_getAll_font` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_getAll_font` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_getAll_font`()
BEGIN
	SELECT * FROM `tbl_coordinate_book` 	
	where `coordinate_status` = 1
	ORDER BY `coordinate_id` DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_getByID` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_getByID` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_getByID`(IN `p_id` BIGINT)
BEGIN
	SELECT * FROM `tbl_coordinate_book` WHERE `coordinate_id` = p_id;
	SELECT MAX(coordinate_id) AS 'coordinate_id' FROM tbl_coordinate_book;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_saveImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_saveImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_saveImage`(IN `p_id` INT, IN `p_image` VARCHAR(255))
BEGIN
	UPDATE 	`tbl_coordinate_book`
	SET
		tbl_coordinate_book.`coordinate_image` = CASE WHEN p_image = '' 
		THEN tbl_coordinate_book.coordinate_image 
		ELSE p_image END
	WHERE 	tbl_coordinate_book.`coordinate_id` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_saveURL` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_saveURL` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_saveURL`(IN `p_id` INT, IN `p_url` VARCHAR(255))
BEGIN
	UPDATE 	`tbl_coordinate_book`
	SET
		tbl_coordinate_book.`coordinate_url` = p_url
	WHERE 	tbl_coordinate_book.`coordinate_id` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coupon_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coupon_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coupon_delete`(`p_coupon_code` VARCHAR(32))
BEGIN
	DELETE FROM tbl_coupon WHERE coupon_code = p_coupon_code;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coupon_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coupon_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coupon_getbycode`(`p_coupon_code` VARCHAR(32))
BEGIN
	SELECT * FROM tbl_coupon WHERE coupon_code = p_coupon_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coupon_getbycode_order` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coupon_getbycode_order` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coupon_getbycode_order`(`p_coupon_code` VARCHAR(32))
BEGIN
	SELECT * FROM tbl_coupon WHERE coupon_code = p_coupon_code and startdate <=Now() AND enddate >=NOW()  ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coupon_get_paging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coupon_get_paging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coupon_get_paging`(`p_skip` INT, `p_limit` INT)
BEGIN
	SELECT * FROM tbl_coupon;-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_coupon;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_creditcard_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_creditcard_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_creditcard_add`(IN `dcustomer_id` VARCHAR(50), IN `dcredit_number` VARCHAR(200), IN `dcredit_type` VARCHAR(200), IN `dcredit_name` VARCHAR(200), IN `dcredit_security` VARCHAR(200), IN `dcredit_month` VARCHAR(2), IN `dcredit_year` VARCHAR(2), IN `dpays_num` VARCHAR(50))
BEGIN
INSERT INTO tbl_credit_card(customer_id,credit_number,credit_type,credit_name,credit_security,expiration_month,expiration_year,credit_pays_num,create_date,modified_date)
values(dcustomer_id,dcredit_number,dcredit_type,dcredit_name,dcredit_security,dcredit_month,dcredit_year,dpays_num,date(CURRENT_TIMESTAMP),date(CURRENT_TIMESTAMP));
select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_creditcard_getbycustomercode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_creditcard_getbycustomercode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_creditcard_getbycustomercode`(IN `dcustomercode` VARCHAR(50))
BEGIN
select * from tbl_credit_card where customer_id=dcustomercode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customers_shipaddress_deleteByID` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customers_shipaddress_deleteByID` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customers_shipaddress_deleteByID`(IN `p_shipaddress_id` VARCHAR(20))
BEGIN
	DELETE
	FROM 	tbl_customers_shipaddress 
	WHERE 	shipaddress_id = p_shipaddress_id;
	
	select 'ok' as 'success';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customers_shipaddress_getByCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customers_shipaddress_getByCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customers_shipaddress_getByCustomer`(IN `p_customer_code` VARCHAR(20))
BEGIN
	SELECT 	
		*
	FROM 	tbl_customers_shipaddress 
	WHERE 	customer_code = p_customer_code
	ORDER BY shipaddress_id DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customers_shipaddress_getByID` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customers_shipaddress_getByID` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customers_shipaddress_getByID`(IN `p_shipaddress_id` VARCHAR(20))
BEGIN
	SELECT * 
	FROM 	tbl_customers_shipaddress 
	WHERE 	shipaddress_id = p_shipaddress_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_checkbarcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_checkbarcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_checkbarcode`(`p_customer_code` VARCHAR(13), `p_customer_barcode` VARCHAR(20))
BEGIN
	
	DECLARE _barcode Varchar(20);
	
	
	SELECT `barcode`  INTO  _barcode from `tbl_customers` where `customer_code`=p_customer_code;
	
	
	if((_barcode is NUll) OR (_barcode=''))then
		Update `tbl_customers` 
		set `barcode` =  p_customer_barcode 
		WHERE `customer_code` = p_customer_code;
		
		Select p_customer_barcode AS 'BarCode';
		
		
	else
		SELECT _barcode as 'BarCode' ;
	end if;
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_check_exist_email` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_check_exist_email` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_check_exist_email`(`p_email` VARCHAR(200))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email )) THEN
		IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email and (customer_status=-1 or  customer_status=2))) THEN
			SELECT -1 AS success;
		else
			SELECT 1 AS success;		
		end if;
		
	ELSE
		SELECT 0 AS success;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_check_exist_email_status` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_check_exist_email_status` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_check_exist_email_status`(`p_email` VARCHAR(200))
BEGIN
	SELECT customer_status as success FROM tbl_customers WHERE tbl_customers.email=p_email ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getcoupon` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getcoupon` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getcoupon`(IN `p_customer_code` VARCHAR(13))
BEGIN
	SELECT couponinfo
	FROM `tbl_orders` 
	WHERE customer_code = p_customer_code and couponinfo != ''
	;-- GROUP BY couponinfo;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankbycode`(IN `p_customer_code` VARCHAR(13))
BEGIN
SELECT `rank` from `tbl_customers` where `customer_code`=p_customer_code limit 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup_money` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup_money` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup_money`(`p_customer_code` VARCHAR(13), `p_date` VARCHAR(20))
BEGIN
	
select SUM(`total_amount`) as Total_Amount from `tbl_orders` where customer_code=p_customer_code
and `created_on`>=p_date;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup_rankdateEC` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup_rankdateEC` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup_rankdateEC`(`p_customer_code` VARCHAR(13))
BEGIN
	
	SELECT 	
		tbl_customers.`uprank_dateEC`
	FROM `tbl_customers` 
	WHERE `customer_code`=p_customer_code ;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup_updaterankCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup_updaterankCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup_updaterankCode`(`p_customer_code` VARCHAR(13), `p_rank_code` VARCHAR(10))
BEGIN
	
	update `tbl_customers` set `rank`=p_rank_code where `customer_code`=p_customer_code;
	
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup_updaterankdateEC` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup_updaterankdateEC` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup_updaterankdateEC`(`p_customer_code` VARCHAR(13), `p_rank_ngaytoihan` VARCHAR(10))
BEGIN
	
	update `tbl_customers` set `uprank_dateEC`=date(p_rank_ngaytoihan) where `customer_code`=p_customer_code;
	
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_savenewpass` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_savenewpass` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_savenewpass`(`p_customer_code` VARCHAR(200), `p_password` VARCHAR(50), `p_modified_date` VARCHAR(40))
BEGIN
		UPDATE tbl_customers
		SET
			tbl_customers.passwords = p_password,			
			tbl_customers.modified_date = p_modified_date				
		WHERE
			tbl_customers.customer_code = p_customer_code;
		SELECT 1 AS success;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_update_payid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_update_payid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_update_payid`(IN `p_customer_code` TEXT, IN `p_customer_payid` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE tbl_customers
	SET
		cus_pay_id = p_customer_payid
	WHERE tbl_customers.customer_code = p_customer_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_update_question` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_update_question` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_update_question`(`p_customer_code` VARCHAR(13), `p_hospital` VARCHAR(255), `p_question` VARCHAR(10))
BEGIN
		
		UPDATE tbl_customers
		SET
			tbl_customers.customer_hospital = p_hospital,			
			tbl_customers.question = p_question
			
	
		WHERE
			tbl_customers.`customer_code` = p_customer_code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteAllGiftDetailByGiftDetailId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteAllGiftDetailByGiftDetailId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteAllGiftDetailByGiftDetailId`(IN `p_gift_id` BIGINT(20), IN `p_gift_detail_id` TEXT)
BEGIN
	SET @selectStmtStr2 = CONCAT("
		DELETE FROM tbl_gift_detail 
		WHERE 
			gift_id = ",p_gift_id,"
			AND gift_detail_id NOT IN (",p_gift_detail_id,")
	");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteAllGiftDetailByGiftId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteAllGiftDetailByGiftId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteAllGiftDetailByGiftId`(IN `p_gift_id` BIGINT)
BEGIN
	delete from tbl_gift_product_detail where gift_id = p_gift_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteAllGiftProductDetailByGiftId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteAllGiftProductDetailByGiftId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteAllGiftProductDetailByGiftId`(IN `p_gift_id` BIGINT)
BEGIN
	delete from tbl_gift_product_detail where gift_id = p_gift_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteBlog` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteBlog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteBlog`(`p_id` INT)
BEGIN
	DELETE FROM `tbl_blog` WHERE tbl_blog.id_ = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteBrand`(`p_brand_id` INT)
BEGIN
	DELETE FROM tbl_brands WHERE brand_id = p_brand_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteCampaign` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteCampaign` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteCampaign`(`p_campaign_id` BIGINT)
BEGIN
	delete from `tbl_campaign_detail` where tbl_campaign_detail.`campaign_id` = p_campaign_id;
	DELETE FROM `tbl_campaign` WHERE tbl_campaign.campaign_id = p_campaign_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteCampaignDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteCampaignDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteCampaignDetail`(`p_campaign_detail_id` BIGINT)
BEGIN
	delete from `tbl_campaign_detail` where tbl_campaign_detail.`campaign_detail_id` = p_campaign_detail_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteCategory`(`p_product_category_id` INT)
BEGIN
	DELETE FROM tbl_products_category WHERE tbl_products_category.product_category_id = p_product_category_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteCategoryGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteCategoryGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteCategoryGuide`(`p_category_guide_id` INT)
BEGIN
	DELETE FROM tbl_category_guide WHERE tbl_category_guide.category_guide_id = p_category_guide_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteColor`(`p_color_id` INT)
BEGIN
	DELETE FROM tbl_colors WHERE tbl_colors.color_id = p_color_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteColorgroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteColorgroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteColorgroup`(`p_colorgroup_code` BIGINT)
BEGIN
	DELETE FROM `tbl_colorsgroup` WHERE `tbl_colorsgroup`.`colorgroup_code` = p_colorgroup_code;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deletecredit` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deletecredit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deletecredit`(`p_customer_id` INT, `p_credit_id` INT)
BEGIN
	DELETE FROM tbl_credit_card WHERE tbl_credit_card.credit_id = p_credit_id and tbl_credit_card.customer_id= p_customer_id;
	SELECT '1' AS success;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteFavorite` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteFavorite` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteFavorite`(`p_id` INT, `p_customer_id` INT)
BEGIN
	DELETE FROM tbl_wish_list WHERE tbl_wish_list.item_id = p_id;
	SELECT count(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id =p_customer_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteFavoriteBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteFavoriteBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteFavoriteBrand`(`p_id` INT, `p_customer_id` INT)
BEGIN
	DELETE FROM tbl_wish_list_brand WHERE tbl_wish_list_brand.item_id = p_id;
	SELECT COUNT(*) AS total_list FROM tbl_brands, tbl_wish_list_brand WHERE tbl_brands.product_id = tbl_wish_list_brand.product_id AND tbl_wish_list_brand.customer_id =p_customer_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteGift` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteGift` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteGift`(IN `p_gift_id` BIGINT)
BEGIN
	DELETE FROM tbl_gift WHERE gift_id = p_gift_id;
	DELETE FROM tbl_gift_detail WHERE gift_id = p_gift_id;
	DELETE FROM tbl_gift_product_detail WHERE gift_id = p_gift_id;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteHashtag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteHashtag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteHashtag`(`p_hashtag_id` BIGINT)
BEGIN
	delete from tbl_products_hashtag_detail where tbl_products_hashtag_detail.hashtag_id = p_hashtag_id;
	DELETE FROM tbl_products_hashtag WHERE tbl_products_hashtag.hashtag_id = p_hashtag_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteHashtag_banner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteHashtag_banner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteHashtag_banner`(IN `p_hashtag_id` BIGINT)
BEGIN
	UPDATE tbl_products_hashtag
	SET
		tbl_products_hashtag.banner = ''
	WHERE tbl_products_hashtag.hashtag_id = p_hashtag_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteInstaAccount` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteInstaAccount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteInstaAccount`(IN `p_insta_acc_id` VARCHAR(100))
BEGIN
	DELETE FROM tbl_instagram_account WHERE insta_acc_id = p_insta_acc_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteKeyword` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteKeyword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteKeyword`(`p_keyword_id` INT)
BEGIN
	DELETE FROM `tbl_keyword` WHERE `keyword_id` = p_keyword_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteMail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteMail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteMail`(`p_email_id` BIGINT)
BEGIN
	DELETE FROM tbl_sendemail WHERE tbl_sendemail.email_id = p_email_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteMaterials` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteMaterials` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteMaterials`(`p_seqno` VARCHAR(20))
BEGIN
	DELETE FROM tbl_products_material WHERE tbl_products_material.SeqNo = p_seqno;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteMedia`(`p_media_id` BIGINT)
BEGIN
	DELETE FROM tbl_media WHERE tbl_media.media_id = p_media_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteNews`(`p_news_id` BIGINT)
BEGIN
	DELETE FROM tbl_news WHERE tbl_news.news_id = p_news_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteOrder`(`p_order_id` BIGINT)
BEGIN
	DELETE FROM tbl_orders WHERE tbl_orders.order_id = p_order_id;
	DELETE FROM tbl_order_detail WHERE tbl_order_detail.order_id = p_order_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteOrderDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteOrderDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteOrderDetail`(`p_order_code` TEXT)
BEGIN
	Delete from tbl_order_detail where tbl_order_detail.order_code = p_order_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteProduct`(`p_product_id` BIGINT)
BEGIN
	DELETE FROM tbl_products WHERE tbl_products.product_id = p_product_id;
	DELETE FROM tbl_products_details WHERE tbl_products_details.product_id = p_product_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteProductDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteProductDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteProductDetail`(`p_product_id` BIGINT, `p_product_detail_id` INT)
BEGIN
	DELETE FROM tbl_products_details WHERE product_id = p_product_id AND tbl_products_details.product_detail_id = p_product_detail_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteProductDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteProductDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteProductDraft`(`p_product_draft_id` BIGINT)
BEGIN
	DELETE FROM tbl_products_draft WHERE tbl_products_draft.product_draft_id = p_product_draft_id;
	DELETE FROM tbl_products_draft_details WHERE tbl_products_draft_details.product_draft_id = p_product_draft_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_DeleteRetailTrackingBySeqno` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_DeleteRetailTrackingBySeqno` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_DeleteRetailTrackingBySeqno`(`p_seqno` BIGINT)
BEGIN
		delete from manipulationtracking where manipulationtracking.SeqNo = p_seqno;	
		SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteSearchKey` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteSearchKey` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteSearchKey`(IN `p_search_key_id` INT)
BEGIN
	DELETE FROM `tbl_search_key` WHERE `search_key_id` = p_search_key_id;
	DELETE FROM `tbl_search_key_detail` WHERE `search_key_id` = p_search_key_id;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deletesearchprice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deletesearchprice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deletesearchprice`()
BEGIN
	DELETE FROM `tbl_searchprice`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteSetProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteSetProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteSetProduct`(`p_set_product_id` INT)
BEGIN
	DELETE FROM tbl_set_product WHERE tbl_set_product.set_id = p_set_product_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteShop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteShop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteShop`(`p_shop_id` BIGINT)
BEGIN
	DELETE FROM tbl_shop WHERE tbl_shop.shop_id = p_shop_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteSize` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteSize` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteSize`(`p_size_id` INT)
BEGIN
	DELETE FROM tbl_size WHERE tbl_size.size_id = p_size_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deletestaticpagedraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deletestaticpagedraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deletestaticpagedraft`(IN `p_static_page_draft_id` BIGINT(20))
BEGIN
	DELETE FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteVoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteVoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteVoice`(`p_voice_id` BIGINT)
BEGIN
	DELETE FROM tbl_voice WHERE tbl_voice.voice_id = p_voice_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delete_imagecomment` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delete_imagecomment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_imagecomment`(IN `p_product_id` BIGINT(11), IN `p_imgcomment_name` TEXT)
BEGIN
	IF(EXISTS(SELECT * FROM tbl_imagecomment WHERE tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name)) THEN 
		DELETE FROM tbl_imagecomment WHERE tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delete_material_jamsync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delete_material_jamsync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_material_jamsync`(`p_rseqno` VARCHAR(20))
BEGIN
	DELETE FROM tbl_products_material WHERE tbl_products_material.RSeqNo = p_rseqno;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delete_size_guide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delete_size_guide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_size_guide`(`p_seqno` BIGINT(20))
BEGIN
	DELETE FROM tbl_products_size_guide WHERE tbl_products_size_guide.SeqNo = p_seqno;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delete_size_guide_jamsync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delete_size_guide_jamsync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delete_size_guide_jamsync`(`p_goodcode` VARCHAR(20))
BEGIN
	-- Modified: 2020/02/05
	DELETE FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = p_goodcode;
	-- DELETE FROM tbl_products_size_guide WHERE tbl_products_size_guide.rseqno = p_goodcode;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delievrydatetime_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delievrydatetime_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delievrydatetime_all`()
BEGIN
	select * from tbl_deliverydate where 1=1 order by area_code ASC;
	select * from tbl_deliverytime where 1=1 order by id ASC;
	SELECT * FROM tbl_deliveryrange WHERE 1=1 ORDER BY id DESC limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delievrydatetime_cord3_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delievrydatetime_cord3_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delievrydatetime_cord3_all`()
BEGIN
	SELECT * FROM tbl_deliverytime WHERE 1=1 ORDER BY id ASC;
	SELECT * FROM tbl_deliverydate_cord3 WHERE method_code=1 ORDER BY area_code ASC;
	SELECT * FROM tbl_deliverydate_cord3 WHERE method_code=2 ORDER BY area_code ASC;
	SELECT * FROM tbl_deliverydate_cord3 WHERE method_code=3 ORDER BY area_code ASC;
	SELECT * FROM tbl_deliverydate_cord3 WHERE method_code=4 ORDER BY area_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliverydate_by_state` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliverydate_by_state` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliverydate_by_state`(IN `dstate` VARCHAR(50))
BEGIN
SELECT * FROM tbl_deliverydate WHERE area_name= dstate OR area_name_eng LIKE CONCAT('%',dstate,'%') LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliverydate_cord3_by_state` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliverydate_cord3_by_state` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliverydate_cord3_by_state`(IN `dmethod` VARCHAR(255), IN `dstate` VARCHAR(50))
BEGIN
SELECT * FROM tbl_deliverydate_cord3 WHERE method_name=dmethod AND area_name like concat('%',dstate,'%') LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliveryrange_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliveryrange_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliveryrange_all`()
BEGIN
select * from `tbl_deliveryrange` where 1=1 order by  id DESC limit 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliverytime_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliverytime_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliverytime_all`()
BEGIN
select * from tbl_deliverytime where 1=1 order by id asc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delProductGroupByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delProductGroupByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delProductGroupByCode`(IN `p_product_group_code` VARCHAR(50))
BEGIN
	DELETE FROM tbl_products_group WHERE product_group_code = p_product_group_code;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delProductGroupItemByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delProductGroupItemByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delProductGroupItemByCode`(IN `p_product_group_code` VARCHAR(50))
BEGIN
	delete FROM tbl_products_group_item WHERE product_group_code = p_product_group_code;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delProductGroupItemRelatedByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delProductGroupItemRelatedByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delProductGroupItemRelatedByCode`(IN `p_product_group_code` VARCHAR(50))
BEGIN
	DELETE FROM tbl_products_group_item_related WHERE product_group_code = p_product_group_code;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delProductGroupRelatedByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delProductGroupRelatedByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delProductGroupRelatedByCode`(IN `p_product_group_code` VARCHAR(50))
BEGIN
	DELETE FROM tbl_products_group_related WHERE product_group_code = p_product_group_code;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_delSecretSaleBrandItemProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_delSecretSaleBrandItemProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_delSecretSaleBrandItemProduct`(IN `p_secret_sale_id` INT, IN `p_brand_code` VARCHAR(50), IN `p_item_code` VARCHAR(50))
BEGIN
	if p_brand_code is not null and p_brand_code != ''
	then
		delete from tbl_secret_sale_brand_product where secret_sale_id = p_secret_sale_id and brand_code = p_brand_code;
	END IF;
	
	IF p_item_code IS NOT NULL AND p_item_code != ''
	then
		DELETE FROM tbl_secret_sale_item_product WHERE secret_sale_id = p_secret_sale_id AND item_code = p_item_code;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_design_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_design_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_design_getall`()
BEGIN
	SELECT * FROM tbl_design WHERE design_status = 1 ORDER BY tbl_design.display_order ASC, tbl_design.design_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_design_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_design_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_design_getbycode`(`p_design_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_design WHERE tbl_design.design_code = p_design_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_design_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_design_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_design_save`(`p_mode` VARCHAR(20), `p_design_code` VARCHAR(20), `p_design_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_design(design_code, design_name, display_order, created_at)
		VALUES(p_design_code, p_design_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_design
		SET
			design_name 	= p_design_name,
			display_order = p_display_order
		WHERE
			design_code 	= p_design_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_export_setting_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_export_setting_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_export_setting_getbyid`()
BEGIN
  SELECT * FROM  tbl_export_setting LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_export_update_time` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_export_update_time` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_export_update_time`(`p_id` BIGINT(11), `p_last_update` VARCHAR(20))
BEGIN
UPDATE tbl_export_setting
    SET
      tbl_export_setting.last_update = p_last_update
    WHERE id = p_id;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_feature_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_feature_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_feature_getall`()
BEGIN
	SELECT * FROM tbl_feature WHERE feature_status = 1 ORDER BY tbl_feature.display_order ASC, tbl_feature.feature_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_feature_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_feature_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_feature_getbycode`(`p_feature_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_feature WHERE tbl_feature.feature_code = p_feature_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_feature_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_feature_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_feature_save`(`p_mode` VARCHAR(20), `p_feature_code` VARCHAR(20), `p_feature_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_feature(feature_code, feature_name, display_order, created_at)
		VALUES(p_feature_code, p_feature_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_feature
		SET
			feature_name 	= p_feature_name,
			display_order = p_display_order
		WHERE
			feature_code 	= p_feature_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_font_shape2_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_font_shape2_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_font_shape2_getall`()
BEGIN
	SELECT * FROM `tbl_shape2` 
		where tbl_shape2.`status_` = 1
	ORDER BY tbl_shape2.`order_` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_footwidthshape_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_footwidthshape_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_footwidthshape_getall`()
BEGIN
	SELECT * FROM tbl_footwidthshape WHERE footwidthshape_status = 1 ORDER BY tbl_footwidthshape.display_order ASC, tbl_footwidthshape.footwidthshape_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_footwidthshape_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_footwidthshape_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_footwidthshape_getbycode`(`p_footwidthshape_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_footwidthshape WHERE tbl_footwidthshape.footwidthshape_code = p_footwidthshape_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_footwidthshape_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_footwidthshape_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_footwidthshape_save`(`p_mode` VARCHAR(20), `p_footwidthshape_code` VARCHAR(20), `p_footwidthshape_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_footwidthshape(footwidthshape_code, footwidthshape_name, display_order, created_at)
		VALUES(p_footwidthshape_code, p_footwidthshape_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_footwidthshape
		SET
			footwidthshape_name 	= p_footwidthshape_name,
			display_order = p_display_order
		WHERE
			footwidthshape_code 	= p_footwidthshape_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_getPageConfigInfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_getPageConfigInfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_getPageConfigInfo`()
BEGIN
	SELECT 
		*
	FROM 
		tbl_settings;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_getProductSlugUrlByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_getProductSlugUrlByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_getProductSlugUrlByCode`(IN `p_slug_url` TEXT)
BEGIN
	
	SELECT 	slug_url 
	FROM 	tbl_products 
	WHERE 	slug_url = p_slug_url
		or goods_code = p_slug_url;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_getTagInfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_getTagInfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_getTagInfo`()
BEGIN
	SELECT 
		*
	FROM 
		tbl_tag;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_GetCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_GetCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_GetCode`(IN `p_slug_url` TEXT, IN `p_color_slug_url` TEXT)
BEGIN
	
	SELECT 	* 
	FROM 	
		tbl_products_details 	AS pd,
		tbl_products 		as p
		 
	WHERE 
		p.SeqNo 	= pd.RSeqNO 
		AND p.slug_url 	= p_slug_url 
		-- tuaannv thêm 20190614 nhưng chưa mở code
		AND (
			pd.`product_detail_color_status`=0
			or pd.`product_detail_color_status` is null
		)
		AND pd.color_slug_url = p_color_slug_url;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getDetailByGoodcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getDetailByGoodcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getDetailByGoodcode`(IN `p_goods_code` VARCHAR(50))
BEGIN
		
	-- 1. GET PRODUCT DETAIL INFO ---------------------------------------------------
	
	SET @selectStmt = 
	CONCAT(
	"SELECT * FROM tbl_products_details  
	WHERE
		product_detail_status= 0
		AND product_goods_code = '",p_goods_code,"'");
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getProductById`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	DECLARE vseqno 		VARCHAR(20);
	DECLARE vgoodcode 	VARCHAR(20);
	DECLARE vproduct_id 	BIGINT(20);
	IF (p_product_id <> 0) THEN
		
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.goods_code NOT IN (SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings)
			AND tbl_products.product_status = 1 
			AND tbl_products.product_id = p_product_id 
		INTO vseqno, vgoodcode, vproduct_id;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status=1 
			AND goods_code = p_goods_code 
		INTO vseqno, vgoodcode, vproduct_id;
	END IF;
	IF (p_product_id <> 0 OR p_goods_code <> '') THEN
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name,
					
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
						) AS tbl_wish_tmp
					) AS total_favorite,
				
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
						) AS tbl_wish_tmp
					) AS total_favorite_by_color
				FROM 	
					tbl_products 
				WHERE 	
					tbl_products.product_status = 1 
					AND product_id = vproduct_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name ,
					
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
					) AS tbl_wish_tmp
				) AS total_favorite,
				
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
					) AS tbl_wish_tmp
				) AS total_favorite_by_color
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status = 1
				AND product_id = vproduct_id;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode,
			pd.size_code as SizeCode,
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE WHEN tbl_colors.`color_displayorder` IS NULL THEN "'-1000'" ELSE tbl_colors.`color_displayorder`  END AS displayorder,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY tbl_colors.color_displayorder ASC, pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_code;
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",vgoodcode,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		
		-- 8 list all detail order by size
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY   s.display_order ASC, pd.size_code ASC;
		
		-- 9. GET STOCK ALL COLOR ---------------------------------------------------
		
		SET @getStockNumberStmtAllColor = getStockNumberAllColorAllSizeStmt(
				'',
				vgoodcode,
				'',
				'',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);	
		SET @selectStmtStockAllColor = 
		CONCAT(
		" SELECT ",@getStockNumberStmtAllColor);
		
		-- insert into tbl_sys_log(sys_log) values( @selectStmtStockAllColor );
		
		PREPARE stmt FROM @selectStmtStockAllColor;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- =====================================================
		-- 10. select cai gi day nhi? (AnHQH) -- T_T ko biet lay cai gi luon T_T nhin giong phan 2 lay thong tin tbl_products_details
		SET @selectStmtColorLst = 
		CONCAT(
		"SELECT 
			pd.*,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
		FROM 
			tbl_products_details AS pd
		WHERE
			pd.RSeqNo = '",vseqno,"' 
			AND pd.product_detail_status= 0
		GROUP BY product_goods_code, color_code
		");
		
		PREPARE stmt FROM @selectStmtColorLst;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- ================================================================================
		-- 11. Lay thong tin tbl_products_category_group
		SELECT  * 
		FROM 
			tbl_products_category_group 
		WHERE id = (
			SELECT category_group_id 
			FROM tbl_products_category 
			WHERE ItemCode = (
				SELECT product_itemcode FROM tbl_products WHERE goods_code = vgoodcode
			)
		);
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getProductById_haveWishList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getProductById_haveWishList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getProductById_haveWishList`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	DECLARE vseqno 		VARCHAR(20);
	DECLARE vgoodcode 	VARCHAR(20);
	DECLARE vproduct_id 	BIGINT(20);
	IF (p_product_id <> 0) THEN
		
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.goods_code NOT IN (SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings)
			AND tbl_products.product_status = 1 
			AND tbl_products.product_id = p_product_id 
		INTO vseqno, vgoodcode, vproduct_id;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_status=1 
			AND goods_code = p_goods_code 
		INTO vseqno, vgoodcode, vproduct_id;
	END IF;
	IF (p_product_id <> 0 OR p_goods_code <> '') THEN
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name,
					
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
						) AS tbl_wish_tmp
					) AS total_favorite,
				
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
						) AS tbl_wish_tmp
					) AS total_favorite_by_color
				FROM 	
					tbl_products 
				WHERE 	
					tbl_products.product_status = 1 
					AND product_id = vproduct_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name ,
					
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
					) AS tbl_wish_tmp
				) AS total_favorite,
				
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
					) AS tbl_wish_tmp
				) AS total_favorite_by_color
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status = 1
				AND product_id = vproduct_id;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		
		
		IF (p_customer_id <> '') THEN
			SET @selectWishList = "wish_list_info.is_wished,";
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= ",vproduct_id,"
					AND wish_list_info.color_code	= pd.color_code ");
		ELSE
			SET @selectWishList = "";
			SET @selectJoinWishListStmt = " ";
		END IF;
	
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode,
			pd.size_code as SizeCode,
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE WHEN `color_displayorder` IS NULL THEN "'-1000'" ELSE `color_displayorder`  END AS displayorder,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			", @selectWishList ,"
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
			",@selectJoinWishListStmt,"
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY tbl_colors.color_displayorder ASC, pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_code;
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",vgoodcode,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		
		-- 8 list all detail order by size
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY   s.display_order ASC, pd.size_code ASC;
		
		-- 9. GET STOCK ALL COLOR ---------------------------------------------------
		
		SET @getStockNumberStmtAllColor = getStockNumberAllColorAllSizeStmt(
				'',
				vgoodcode,
				'',
				'',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);	
		SET @selectStmtStockAllColor = 
		CONCAT(
		" SELECT ",@getStockNumberStmtAllColor);
		
		-- insert into tbl_sys_log(sys_log) values( @selectStmtStockAllColor );
		
		PREPARE stmt FROM @selectStmtStockAllColor;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- =====================================================
		-- 10. select cai gi day nhi? (AnHQH) -- T_T ko biet lay cai gi luon T_T nhin giong phan 2 lay thong tin tbl_products_details
		SET @selectStmtColorLst = 
		CONCAT(
		"SELECT 
			pd.*,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
		FROM 
			tbl_products_details AS pd
		WHERE
			pd.RSeqNo = '",vseqno,"' 
			AND pd.product_detail_status= 0
		GROUP BY product_goods_code, color_code
		");
		
		PREPARE stmt FROM @selectStmtColorLst;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- ================================================================================
		-- 11. Lay thong tin tbl_products_category_group
		SELECT  * 
		FROM 
			tbl_products_category_group 
		WHERE id = (
			SELECT category_group_id 
			FROM tbl_products_category 
			WHERE ItemCode = (
				SELECT product_itemcode FROM tbl_products WHERE goods_code = vgoodcode
			)
		);
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getProductById_Preview` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getProductById_Preview` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getProductById_Preview`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	-- Giong sp_FrontEnd_Product_getProductById nhung bo doan check status = 1
	DECLARE vseqno 		VARCHAR(20);
	DECLARE vgoodcode 	VARCHAR(20);
	DECLARE vproduct_id 	BIGINT(20);
	IF (p_product_id <> 0) THEN
		
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_id = p_product_id 
		INTO vseqno, vgoodcode, vproduct_id;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			goods_code = p_goods_code 
		INTO vseqno, vgoodcode, vproduct_id;
	END IF;
	IF (p_product_id <> 0 OR p_goods_code <> '') THEN
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name,
					
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
						) AS tbl_wish_tmp
					) AS total_favorite,
				
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
						) AS tbl_wish_tmp
					) AS total_favorite_by_color
				FROM 	
					tbl_products 
				WHERE 	
					product_id = vproduct_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name ,
					
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
					) AS tbl_wish_tmp
				) AS total_favorite,
				
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
					) AS tbl_wish_tmp
				) AS total_favorite_by_color
			FROM 
				tbl_products 
			WHERE 
				product_id = vproduct_id;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode, 
			pd.size_code as SizeCode, 
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_code;
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",vgoodcode,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		
		-- 8 list all detail order by size
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY   s.display_order ASC, pd.size_code ASC;
		
		-- 9. GET STOCK ALL COLOR ---------------------------------------------------
		
		SET @getStockNumberStmtAllColor = getStockNumberAllColorAllSizeStmt(
				'',
				vgoodcode,
				'',
				'',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);	
		SET @selectStmtStockAllColor = 
		CONCAT(
		" SELECT ",@getStockNumberStmtAllColor);
		
		-- insert into tbl_sys_log(sys_log) values( @selectStmtStockAllColor );
		
		PREPARE stmt FROM @selectStmtStockAllColor;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- =====================================================
		-- 10. select cai gi day nhi? (AnHQH) -- T_T ko biet lay cai gi luon T_T nhin giong phan 2 lay thong tin tbl_products_details
		SET @selectStmtColorLst = 
		CONCAT(
		"SELECT 
			pd.*,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
		FROM 
			tbl_products_details AS pd
		WHERE
			pd.RSeqNo = '",vseqno,"' 
			AND pd.product_detail_status= 0
		GROUP BY product_goods_code, color_code
		");
		
		PREPARE stmt FROM @selectStmtColorLst;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- ================================================================================
		-- 11. Lay thong tin tbl_products_category_group
		SELECT  * 
		FROM 
			tbl_products_category_group 
		WHERE id = (
			SELECT category_group_id 
			FROM tbl_products_category 
			WHERE ItemCode = (
				SELECT product_itemcode FROM tbl_products WHERE goods_code = vgoodcode
			)
		);
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_GetSlugURL` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_GetSlugURL` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_GetSlugURL`(IN `p_good_code` TEXT, IN `p_color_code` TEXT)
BEGIN
	
		SELECT * FROM tbl_products as p,tbl_products_details as pd WHERE p.SeqNo = pd.RSeqNO 
		AND p.goods_code = p_good_code 
		-- tuaannv thêm 20190614 nhưng chưa mở code
		AND pd.`product_detail_color_status`=0
		AND pd.color_code = p_color_code
		AND tbl_products.goods_code NOT IN (SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings );
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_GetSlugURL_Bagg` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_GetSlugURL_Bagg` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_GetSlugURL_Bagg`(IN `p_good_code` TEXT, IN `p_color_code` TEXT)
BEGIN
	
		SELECT * FROM tbl_products AS p,tbl_products_details AS pd WHERE p.SeqNo = pd.RSeqNO 
		AND p.goods_code = p_good_code 
		-- tuaannv thêm 20190614 nhưng chưa mở code
		AND pd.`product_detail_color_status`=0
		AND pd.color_code = p_color_code;
		
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_SecretSale_getProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_SecretSale_getProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_SecretSale_getProductById`(IN `p_product_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT)
BEGIN
	DECLARE vseqno 		VARCHAR(20);
	DECLARE vgoodcode 	VARCHAR(20);
	DECLARE vproduct_id 	BIGINT(20);
	IF (p_product_id <> 0) THEN
		
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			tbl_products.product_id = p_product_id 
		INTO vseqno, vgoodcode, vproduct_id;
	ELSEIF(p_goods_code <> '') THEN
		SELECT 
			tbl_products.Seqno,
			tbl_products.goods_code,
			tbl_products.product_id
		FROM 
			tbl_products 
		WHERE 
			goods_code = p_goods_code 
		INTO vseqno, vgoodcode, vproduct_id;
	END IF;
	IF (p_product_id <> 0 OR p_goods_code <> '') THEN
		-- 1. GET PRODUCT INFO ---------------------------------------------------
		IF p_customer_id <> 0 THEN
			SELECT * FROM (
				SELECT 
					tbl_products.*, 
					(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
					(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_brand_name , 
					(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS item_item_name,
					
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
						) AS tbl_wish_tmp
					) AS total_favorite,
				
					(SELECT COUNT(*) FROM (
							SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
						) AS tbl_wish_tmp
					) AS total_favorite_by_color
				FROM 	
					tbl_products 
				WHERE 	
					 product_id = vproduct_id
			) AS timp
				LEFT JOIN (
					SELECT 	tbl_wish_list.product_id AS r_product_id 
					FROM 	tbl_wish_list 
					WHERE 	
						tbl_wish_list.customer_id = p_customer_id
						AND tbl_wish_list.color_code = p_color_code
				) AS wl ON timp.product_id = wl.r_product_id;
		ELSE
			SELECT 
				tbl_products.*, 
				(SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
				(SELECT 
					(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
						tbl_brands.brand_name
					ELSE 
						tbl_brands.brand_name_display
					END) AS brand_name_display
				FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
				AS brand_brand_name , 
				(SELECT 
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display
				FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
				AS item_item_name ,
					
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id
					) AS tbl_wish_tmp
				) AS total_favorite,
				
				(SELECT COUNT(*) FROM (
						SELECT product_id, customer_id FROM tbl_wish_list WHERE tbl_wish_list.product_id = vproduct_id GROUP BY customer_id, color_code
					) AS tbl_wish_tmp
				) AS total_favorite_by_color
			FROM 
				tbl_products 
			WHERE 
				product_id = vproduct_id;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode, 
			pd.size_code as SizeCode, 
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");
		
		
		
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
		SELECT 
			* 
		FROM 
			tbl_products_material 
		WHERE 
			tbl_products_material.RSeqNo 		= vseqno 
			AND tbl_products_material.color_code 	= p_color_code;
		-- 4. GET PRODUCT SIZE GUIDE INFO ---------------------------------------------------
		SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = vgoodcode;
		-- 5. get product options
		SELECT * FROM tbl_products_options WHERE RSeqNo = vseqno ORDER BY option_index ASC;
		-- 6 get set product
		SET @selectStmt = 
		CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE tbl_set_of_products.set_type = 2 and tbl_set_of_products.set_status = 1 and tbl_set_of_products.set_content like '%",vgoodcode,"%' order by set_id desc limit 1");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		-- 7 list all detail
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
		
		-- 8 list all detail order by size
		
		SELECT * FROM (
			SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = vseqno
		) AS pd
			LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY   s.display_order ASC, pd.size_code ASC;
		
		-- 9. GET STOCK ALL COLOR ---------------------------------------------------
		
		SET @getStockNumberStmtAllColor = getStockNumberAllColorAllSizeStmt(
				'',
				vgoodcode,
				'',
				'',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);	
		SET @selectStmtStockAllColor = 
		CONCAT(
		" SELECT ",@getStockNumberStmtAllColor);
		
		-- insert into tbl_sys_log(sys_log) values( @selectStmtStockAllColor );
		
		PREPARE stmt FROM @selectStmtStockAllColor;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- =====================================================
		-- 10. select cai gi day nhi? (AnHQH) -- T_T ko biet lay cai gi luon T_T nhin giong phan 2 lay thong tin tbl_products_details
		SET @selectStmtColorLst = 
		CONCAT(
		"SELECT 
			pd.*,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
		FROM 
			tbl_products_details AS pd
		WHERE
			pd.RSeqNo = '",vseqno,"' 
			AND pd.product_detail_status= 0
		GROUP BY product_goods_code, color_code
		");
		
		PREPARE stmt FROM @selectStmtColorLst;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		
		-- ================================================================================
		-- 11. Lay thong tin tbl_products_category_group
		SELECT  * 
		FROM 
			tbl_products_category_group 
		WHERE id = (
			SELECT category_group_id 
			FROM tbl_products_category 
			WHERE ItemCode = (
				SELECT product_itemcode FROM tbl_products WHERE goods_code = vgoodcode
			)
		);
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAboutus_Strawberryjam` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAboutus_Strawberryjam` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAboutus_Strawberryjam`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	SELECT * FROM tbl_straw_aboutas
	ORDER BY create_date DESC
	
	LIMIT indexFrom ,indexLimit;
	SELECT 	COUNT(*) AS total_items
	FROM 	tbl_straw_aboutas
	WHERE
		1=1;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBanner`()
BEGIN
	SELECT * FROM tbl_banner;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBanner_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBanner_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBanner_frontend`()
BEGIN
	SELECT * FROM tbl_banner 
	where 
		tbl_banner.banner_status = 1
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
	order by tbl_banner.order_num asc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBanner_frontend_by_item_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBanner_frontend_by_item_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBanner_frontend_by_item_code`(IN `p_item_code` TEXT)
BEGIN
/**
 * User:hoaxuan
 * Date:19/09/2018
 * Note: them store nay cho kh kentucky, lay banner theo item code
 */
	SELECT * FROM tbl_banner 
	WHERE 
		(
			UPPER(tbl_banner.item_code) = UPPER(p_item_code)
			OR p_item_code = ''
		)
		AND tbl_banner.banner_status = 1 
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY tbl_banner.order_num;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBrandPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBrandPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBrandPaging`(`p_skip` INT, `p_limit` INT)
BEGIN
	SELECT 
		tbl_brands.*,
		tbl_brands_group.group_name
	FROM 
		tbl_brands
		LEFT JOIN tbl_brands_group ON tbl_brands.group_id = tbl_brands_group.id
	-- where ecsite = true //Đã check ở 4D rồi còn check ở đây làm cái gì
	order by tbl_brands_group.show_order asc, tbl_brands.show_order asc;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_brands;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBrandPaging_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBrandPaging_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBrandPaging_mida`(`p_skip` INT, `p_limit` INT)
BEGIN
	SELECT 
		tbl_brands.*,
		tbl_brands_group.group_name
	FROM 
		tbl_brands
		LEFT JOIN tbl_brands_group ON tbl_brands.group_id = tbl_brands_group.id
	WHERE `tbl_brands`.`brand_status`=1 AND tbl_brands.is_show_as_menu = 1
	-- where ecsite = true //Đã check ở 4D rồi còn check ở đây làm cái gì
	ORDER BY tbl_brands_group.show_order ASC, tbl_brands.show_order ASC;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_brands;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCampaignHomeLink` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCampaignHomeLink` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCampaignHomeLink`()
BEGIN
	SELECT *
	FROM tbl_campaign
	WHERE status = 1
	ORDER BY enddate DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCategoriesPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCategoriesPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCategoriesPaging`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT * FROM tbl_products_category 
	-- Modified: 2020/04/11
	-- Where ecsite = true
	ORDER BY tbl_products_category.create_date DESC LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_products_category;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCategory`()
BEGIN
	select * from tbl_products_category
	-- Where ecsite = true //Đã check ở 4D rồi còn check ở đây làm cái gì
	order by IsDisplay DESC, OrderNumber ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCategoryGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCategoryGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCategoryGroup`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_category_group
	
	ORDER BY category_group_show_order, category_group_name ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCategory_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCategory_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCategory_frontend`()
BEGIN
	SELECT  * FROM tbl_products_category
	WHERE IsDisplay = 1
	ORDER BY OrderNumber ASC;
	
	SELECT product_itemcode, multiple_item_code FROM tbl_products WHERE product_status = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllColor`()
BEGIN
	select * from tbl_colors order by tbl_colors.color_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllInformation` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllInformation` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllInformation`(IN `p_info_code` INT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	SELECT * FROM `tbl_straw_information`
	ORDER BY create_date DESC
	
	LIMIT indexFrom ,indexLimit;
	SELECT 	COUNT(*) AS total_items
	FROM 	tbl_straw_information
	WHERE
		1=1
		AND info_status = 1;
		
	select * from tbl_straw_information
	where info_code = p_info_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllKeywordPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllKeywordPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllKeywordPaging`(`p_skip` INT, `p_limit` INT, `p_is_keyword` INT)
BEGIN
	SELECT 
		tbl_keyword.*		
	FROM 
		tbl_keyword	
	where is_keyword = p_is_keyword 
	order by tbl_keyword.show_order asc;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_keyword WHERE is_keyword = p_is_keyword;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllKeywordPagingOfMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllKeywordPagingOfMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllKeywordPagingOfMedia`(`p_skip` INT, `p_limit` INT, `p_is_keyword` INT)
BEGIN
	SELECT 
		tbl_keyword.*		
	FROM 
		tbl_keyword	
	WHERE is_keyword = p_is_keyword And keyword_role = '1'
	ORDER BY tbl_keyword.show_order ASC;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_keyword WHERE is_keyword = p_is_keyword;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllKeywordPagingOfNew` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllKeywordPagingOfNew` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllKeywordPagingOfNew`(`p_skip` INT, `p_limit` INT, `p_is_keyword` INT)
BEGIN
	SELECT 
		tbl_keyword.*		
	FROM 
		tbl_keyword	
	WHERE is_keyword = p_is_keyword AND keyword_role = '0'
	ORDER BY tbl_keyword.show_order ASC;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_keyword WHERE is_keyword = p_is_keyword;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllListKeywordInMedia_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllListKeywordInMedia_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllListKeywordInMedia_realmccoys`()
BEGIN
		
	-- ===================================================		
	SELECT DISTINCT keyword_list FROM tbl_media WHERE keyword_id !='' AND media_status = 1
	AND ((tbl_media.start_date <= CURRENT_TIMESTAMP()) AND (tbl_media.end_date >= CURRENT_TIMESTAMP()));
	
	-- ===================================================
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllProductGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllProductGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllProductGroup`()
BEGIN
	SELECT * FROM tbl_products_group;
	SELECT * FROM tbl_products_group_related;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllProductGroupItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllProductGroupItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllProductGroupItem`()
BEGIN
	SELECT * FROM tbl_products_group_item GROUP BY product_group_code, product_goods_code;
	SELECT * FROM tbl_products_group_item_related GROUP BY product_group_code, product_goods_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllRankUp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllRankUp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllRankUp`()
BEGIN
	SELECT * FROM `tbl_customer_rankup` WHERE Rank_Display=1 ORDER BY SeqNo ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllRankUpType` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllRankUpType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllRankUpType`()
BEGIN
	SELECT * FROM `tbl_customer_rankup_type` ORDER BY SeqNo ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllSearchKey` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllSearchKey` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllSearchKey`()
BEGIN
	SELECT 
		tbl_search_key.*		
	FROM 
		tbl_search_key 
	ORDER BY tbl_search_key.`search_key_id` DESC;
	-- LIMIT p_skip,p_limit;
	-- SELECT COUNT(*) AS total_items FROM tbl_search_key;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllSearchprice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllSearchprice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllSearchprice`()
BEGIN
	-- SELECT * FROM tbl_category;
	-- ngoc son 
	SELECT * FROM `tbl_searchprice`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllSeasonFromGood` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllSeasonFromGood` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllSeasonFromGood`()
BEGIN
	SELECT `season_code`,`season_name` 
	FROM `tbl_products`
	WHERE season_name <> ''
	GROUP BY season_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllSetProductPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllSetProductPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllSetProductPaging`(`p_skip` INT, `p_limit` INT)
BEGIN
	SELECT * FROM tbl_set_product LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_set_product;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllSize` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllSize` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllSize`()
BEGIN
	select * from tbl_size order by tbl_size.size_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAll_extendEcomerce` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAll_extendEcomerce` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAll_extendEcomerce`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT * FROM tbl_extend_ecomerce ORDER BY tbl_extend_ecomerce.ID DESC LIMIT p_skip,p_limit;
  SELECT COUNT(*) AS total_items FROM tbl_extend_ecomerce;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBannerById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBannerById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBannerById`(IN `p_banner_id` BIGINT)
BEGIN
	
		SELECT * FROM tbl_banner WHERE banner_id = p_banner_id;
		SELECT item.ItemCode,item.Name From tbl_products_category as item;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBarCodeProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBarCodeProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBarCodeProduct`(IN `p_goodscode` VARCHAR(20), IN `p_color_code` VARCHAR(20), IN `p_size_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_details WHERE 
	tbl_products_details.RSeqNo = (SELECT tbl_products.Seqno FROM tbl_products WHERE  tbl_products.goods_code = p_goodscode)
	and tbl_products_details.color_code = p_color_code
	and tbl_products_details.size_code = p_size_code;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBlogBanner_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBlogBanner_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBlogBanner_realmccoys`()
BEGIN
	SELECT * FROM tbl_banner WHERE `item_code` = 'BLOG' AND `banner_status` = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBlogById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBlogById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBlogById`(IN `p_id` BIGINT)
BEGIN
	-- ===================================================
	SELECT * 
	FROM `tbl_blog` 
	WHERE 
		`id_` = p_id
		And `status_` = 1
	;
	-- ===================================================		
	SELECT * FROM tbl_author ORDER BY `author_order` DESC, `author_` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBrandByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBrandByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBrandByCode`(IN `p_brand_code` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_brands WHERE brand_code = p_brand_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBrandById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBrandById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBrandById`(`p_brand_id` INT)
BEGIN
	SELECT * FROM tbl_brands WHERE brand_id = p_brand_id;
	SELECT * FROM tbl_brands_group;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBrandGroupById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBrandGroupById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBrandGroupById`(`p_brand_id` INT)
BEGIN
	SELECT * FROM tbl_brands_group WHERE id = p_brand_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBrandItemByProductCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBrandItemByProductCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBrandItemByProductCode`(IN `p_list_code` TEXT)
BEGIN
	set @selectStmtStrRun = CONCAT("
	SELECT tbl_products.brand_code, tbl_products.product_itemcode 
	FROM tbl_products, tbl_products_details 
	WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo`
	AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (" , p_list_code , ")
	GROUP BY tbl_products.brand_code, tbl_products.product_itemcode"
	);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetBrandOrItemByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetBrandOrItemByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetBrandOrItemByCode`(IN `p_brand_code` VARCHAR(50), IN `p_item_code` VARCHAR(20))
BEGIN
	SELECT brand_name_display, brand_name
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
	
	SELECT name_display, NAME
	FROM tbl_products_category
	WHERE ItemCode = p_item_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCalendar` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCalendar` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCalendar`(IN `p_jyear` INT(4), IN `p_jmonth` INT(2))
BEGIN
	SELECT jyear, jmonth, jday, jwday, jholiday FROM tbl_calendar WHERE tbl_calendar.jyear = p_jyear AND tbl_calendar.jmonth = p_jmonth ORDER BY jday ASC;
    
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCampaignById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCampaignById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCampaignById`(IN `p_campaign_id` BIGINT)
BEGIN
	SELECT * FROM tbl_campaign WHERE campaign_id = p_campaign_id;
	SELECT * FROM tbl_campaign_detail WHERE campaign_id = p_campaign_id AND `status`=1 ORDER BY voter DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCategoryByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCategoryByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCategoryByCode`(`p_product_category_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_category WHERE tbl_products_category.ItemCode = p_product_category_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCategoryById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCategoryById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCategoryById`(`p_product_category_id` INT)
BEGIN
	SELECT * FROM tbl_products_category WHERE tbl_products_category.product_category_id = p_product_category_id;
	SELECT * FROM tbl_products_category_group ORDER BY category_group_show_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCategorycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCategorycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCategorycode`(IN `p_product_category_code` VARCHAR(10))
BEGIN
	SELECT * FROM tbl_products_category WHERE tbl_products_category.`ItemCode` = p_product_category_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCategoryGroupCodeByName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCategoryGroupCodeByName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCategoryGroupCodeByName`(IN `p_category_group_id` VARCHAR(20))
BEGIN
	SELECT tbl_products_category_group.id FROM tbl_products_category_group 
	WHERE UPPER(category_group_name) = p_category_group_id
	AND category_group_status = 1;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCategoryGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCategoryGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCategoryGuide`(`p_product_category_id` INT)
BEGIN
	SELECT * FROM tbl_category_guide WHERE tbl_category_guide.product_category_id = p_product_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getColorByGoodcodes` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getColorByGoodcodes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getColorByGoodcodes`(`p_goods_codes` VARCHAR(1000))
BEGIN
	SET @selectStmtStrRun = CONCAT("
	SELECT product_goods_code, tbl_colors.`color_code` AS color_code, tbl_colors.color_html_code FROM tbl_products_details 
	LEFT JOIN tbl_colors ON tbl_products_details.`color_code` = tbl_colors.`color_code` 
	WHERE tbl_products_details.`product_goods_code` IN (",p_goods_codes,") AND tbl_products_details.product_detail_status = 0 
	GROUP BY product_goods_code, color_code");
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getColor_SizeByGoodcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getColor_SizeByGoodcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getColor_SizeByGoodcode`(`p_goods_code` VARCHAR(50))
BEGIN
	SELECT 	color_code
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code;
	
	SELECT 	size_code
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code;
	
	SELECT 	color_code
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code
	GROUP BY color_code;
	
	SELECT 'ok' AS msg;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getColor_SizeByGoodcode2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getColor_SizeByGoodcode2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getColor_SizeByGoodcode2`(`p_goods_code` VARCHAR(50))
BEGIN
	SELECT 	*
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code;
	
	SELECT 	*
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code;
	
	SELECT 	*
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code
	GROUP BY color_code;
	
        SELECT 	*
	FROM 	tbl_products_details 
	WHERE product_goods_code = p_goods_code
	GROUP BY color_code;	
	
	SELECT 'ok' AS msg;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getColumnsFromTable` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getColumnsFromTable` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getColumnsFromTable`(IN `p_table_schema` VARCHAR(200), IN `p_table_name` VARCHAR(200))
BEGIN
	SELECT 	
		COLUMN_NAME, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH
	FROM 	
		INFORMATION_SCHEMA.COLUMNS
	WHERE 	
		table_name = p_table_name
		AND table_schema = p_table_schema
	;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getContractCondition` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getContractCondition` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getContractCondition`(IN `iCode` VARCHAR(200))
BEGIN
    SELECT * FROM `tbl_contractcondition` WHERE ContracConditionCode=iCode;
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getContractConditionFromSetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getContractConditionFromSetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getContractConditionFromSetting`()
BEGIN
    SELECT  con.ContracConditionCode, con.`ContracConditionName`
FROM tbl_settings , tbl_contractcondition AS con
WHERE  tbl_settings.ContracConditionCode = con.`ContracConditionCode` limit 1;
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCustomerById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCustomerById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCustomerById`(IN `p_email` VARCHAR(200), IN `p_password` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_customers WHERE tbl_customers.email = p_email and tbl_customers.password = p_password;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getCustomerCodebyEmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getCustomerCodebyEmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getCustomerCodebyEmail`(IN `demail` VARCHAR(255))
BEGIN
	select * from tbl_customers where email=demail and customer_status<>-1 limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getDetailProductByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getDetailProductByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getDetailProductByCode`(IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(20), IN `p_size_code` VARCHAR(20))
BEGIN
	
		SELECT *
		FROM tbl_products
		LEFT JOIN tbl_products_details ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE tbl_products.goods_code = p_goods_code 
		and tbl_products_details.color_code = p_color_code
		and tbl_products_details.size_code = p_size_code;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getDraftProductsFrom49ByProductId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getDraftProductsFrom49ByProductId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getDraftProductsFrom49ByProductId`(IN `p_product_id` TEXT)
BEGIN
	select  * from tbl_products_draft where product_id = p_product_id 
	ORDER BY apply_date DESC limit 49, 1000;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getEmailLog` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getEmailLog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getEmailLog`(IN `p_order_code` VARCHAR(255))
BEGIN
	SELECT * FROM `tbl_mail_logs` WHERE `code` = p_order_code order by id desc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getExtendEcomerce_ByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getExtendEcomerce_ByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getExtendEcomerce_ByCode`(IN `p_good_code` VARCHAR(30))
BEGIN
  SELECT * FROM tbl_extend_ecomerce WHERE goods_color_code=p_good_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getExtendEcomerce_ByListGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getExtendEcomerce_ByListGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getExtendEcomerce_ByListGoodsCode`(IN `p_goods_code` VARCHAR(30))
BEGIN
	SELECT * FROM tbl_extend_ecomerce WHERE goods_color_code in (p_goods_code);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getFavoriteProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getFavoriteProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getFavoriteProduct`(IN `p_customer_id` BIGINT, IN `p_product_id` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_wish_list WHERE tbl_wish_list.customer_id = p_customer_id AND tbl_wish_list.product_id = p_product_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getGiftList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getGiftList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getGiftList`()
BEGIN
	SELECT * FROM tbl_gift
	order by show_order DESC, gift_id desc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getGroupBrandById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getGroupBrandById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getGroupBrandById`(`p_brandg_id` INT)
BEGIN
	SELECT * FROM tbl_brands_group WHERE id = p_brandg_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getidnewblog_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getidnewblog_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getidnewblog_realmccoys`()
BEGIN
			SELECT tbl_media.media_id
			FROM tbl_media			
			WHERE 
				media_status = 1
				AND (
					tbl_media.published_date IS NULL
					OR tbl_media.published_date <= CURRENT_TIMESTAMP()
				);
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getidnew_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getidnew_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getidnew_realmccoys`()
BEGIN
	SELECT tbl_news.news_id FROM tbl_news WHERE tbl_news.status = 1 AND
	                        (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getInstagramByProductCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getInstagramByProductCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getInstagramByProductCode`(`p_content` VARCHAR(200))
BEGIN
	SELECT 
		*
	FROM  
		tbl_instagram_data
	WHERE 	tbl_instagram_data.goods_codes LIKE CONCAT ("%'",p_content,"'%")
	ORDER BY instagram_id DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getItemByIdFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getItemByIdFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getItemByIdFontEnd`(IN `p_key_id` VARCHAR(255))
BEGIN
/**
 * User:hoaxuan
 * Note: rieng cho tabisuga 
 */
	SET @strSelect =
	CONCAT("SELECT * FROM tbl_products_category
		WHERE product_category_id IN (",   p_key_id ,") ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@strSelect);
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getKeywordById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getKeywordById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getKeywordById`(`p_keyword_id` INT)
BEGIN
	SELECT * FROM `tbl_keyword` WHERE `keyword_id` = p_keyword_id;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getKeywordByIdFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getKeywordByIdFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getKeywordByIdFontEnd`(IN `p_key_id` VARCHAR(255))
BEGIN
/**
 * User:hoaxuan
 * Note: rieng cho tabisuga 
 */
	SET @strSelect =
	CONCAT("SELECT * FROM tbl_keyword
		WHERE keyword_id IN (",   p_key_id ,") ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@strSelect);
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getKeywordByName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getKeywordByName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getKeywordByName`(IN `p_key_name` VARCHAR(255))
BEGIN
/**
 * User:hoaxuan
 * Date:24/12/2018
 * Note: rieng cho tabisuga 
 */
	SET @strSelect =
	CONCAT("SELECT * FROM tbl_keyword
		WHERE keyword_name IN (",   p_key_name ,") ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@strSelect);
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getKeywordFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getKeywordFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getKeywordFontEnd`(IN `p_type` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:24/12/2018
 * Note: rieng cho tabisuga 
 */
	SELECT tbl_keyword.*,
		(CASE WHEN tbl_keyword.show_order > 0 THEN 
					tbl_keyword.show_order
				ELSE 
					999 
				END) AS show_order2
	 FROM tbl_keyword
	WHERE keyword_status = 1 AND is_keyword = p_type
	ORDER BY show_order2 ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getKonbiniInfoConfig` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getKonbiniInfoConfig` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getKonbiniInfoConfig`()
BEGIN
	SELECT * FROM tbl_konbini_info_config;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getlistcredit` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getlistcredit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getlistcredit`(IN `p_customer_id` VARCHAR(50))
BEGIN
	select * from tbl_credit_card where customer_id = p_customer_id
	 order by credit_id desc; 
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getList_Product_Related` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getList_Product_Related` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getList_Product_Related`(IN `p_slug_url` VARCHAR(200))
BEGIN
	SELECT product_recovery FROM tbl_products WHERE slug_url = p_slug_url;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getlookbook_relateProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getlookbook_relateProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getlookbook_relateProduct`(IN `p_goods_code` VARCHAR(50))
BEGIN
	SET @selectWhereLike = '';
	IF 
		p_goods_code 	<> '' 
	THEN
		SET @selectWhereLike = 
			CONCAT(" AND tbl_set_of_products.set_content LIKE '%", p_goods_code, "%'");
	END IF;
	
	SET @selectStmtStr = CONCAT("SELECT * FROM tbl_set_of_products 
								WHERE tbl_set_of_products.set_status = 1
								AND tbl_set_of_products.set_type =1
								", @selectWhereLike,"
								ORDER BY tbl_set_of_products.set_id DESC"
								
							);
 
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMailRemindContent_ByEmailAndId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMailRemindContent_ByEmailAndId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMailRemindContent_ByEmailAndId`(IN `p_customer_email` VARCHAR(200), IN `p_MailRemind_Id_List` TEXT)
BEGIN
	-- Get danh sach nhung record tinh den ca size
	SET @selectStmt2 = CONCAT("
		SELECT 	*
		FROM 	tbl_mail_remind_order 
		WHERE 	customer_email = '", p_customer_email, "' 
		AND 	id IN (", p_MailRemind_Id_List, ") "
	);-- Danh sach email ma khong co size.
	-- insert into tbl_sys_log(sys_log) values (@selectStmt2);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMailRemindOrderTmp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMailRemindOrderTmp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMailRemindOrderTmp`()
BEGIN
		SELECT * FROM tbl_mail_remind_order_tmp;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMailRemindWishListTmp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMailRemindWishListTmp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMailRemindWishListTmp`()
BEGIN
	select * from  tbl_mail_remind_wish_list_tmp;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMaintenance` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMaintenance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMaintenance`()
BEGIN	
	SELECT * FROM tbl_maintenance order by `maintenance_id` desc limit 1;		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMaterialJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMaterialJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMaterialJamSync`(IN `p_rseqno` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_material WHERE `RSeqNo` = p_rseqno limit 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getMaterialsBySeqNo_ColorCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getMaterialsBySeqNo_ColorCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getMaterialsBySeqNo_ColorCode`(IN `p_seqno` VARCHAR(20), IN `p_color_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_material as pm WHERE pm.RSeqNo = p_seqno and pm.color_code = p_color_code
	Order by pm.`SeqNo` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getNewsBanner_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getNewsBanner_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getNewsBanner_realmccoys`()
BEGIN
	SELECT * FROM tbl_banner WHERE `item_code` = 'NEWS' AND `banner_status` = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getnumberusecopounbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getnumberusecopounbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getnumberusecopounbycode`(IN `dcustomer_code` VARCHAR(20), IN `dcouponcode` VARCHAR(255))
BEGIN
 SET @stmtcoupon =CONCAT("select count(*) as total from tbl_orders where customer_code='",dcustomer_code,"' and couponinfo like '%",dcouponcode,"%'");
     PREPARE stmt FROM @stmtcoupon;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrderById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrderById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrderById`(IN `p_order_id` BIGINT)
BEGIN
	SELECT tbl_orders.* ,tbl_customers.`isblack`
	FROM tbl_orders 
	LEFT JOIN `tbl_customers`
	ON tbl_orders.`customer_code` = tbl_customers.`customer_code` 
	WHERE order_id = p_order_id;
	SELECT * FROM tbl_order_detail WHERE order_id = p_order_id;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrderByIdforsendmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrderByIdforsendmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrderByIdforsendmail`(IN `p_order_id` BIGINT)
BEGIN
select * from (SELECT * FROM tbl_orders where order_id = p_order_id) as od left join (select customer_code,postcode,state,city,address,
address2,phone,email from tbl_customers) as cus on od.customer_code= cus.customer_code ;
	SELECT * FROM tbl_order_detail WHERE order_id = p_order_id and (is_cancel = 0 OR is_cancel IS NULL);	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrderDetailByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrderDetailByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrderDetailByCode`(IN `p_order_id` VARCHAR(255))
BEGIN
SELECT product_name,size_name,color_name, product_image,order_code,goods_code,color_code,order_detail_id,order_id,product_id         
  FROM tbl_order_detail
  WHERE tbl_order_detail.`order_detail_id` =p_order_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrdererrorById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrdererrorById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrdererrorById`(IN `p_order_id` BIGINT)
BEGIN
	SELECT * FROM tbl_orders_tmp WHERE order_id = p_order_id;
	SELECT * FROM tbl_order_detail_tmp WHERE order_id = p_order_id;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getpickup4u` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getpickup4u` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getpickup4u`()
BEGIN
	-- SELECT * FROM tbl_category;
	-- ngoc son 
	SELECT * FROM `tbl_pickup4u`;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getPriceGiftProductByGiftCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getPriceGiftProductByGiftCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getPriceGiftProductByGiftCode`(IN `p_gift_code` VARCHAR(200))
BEGIN
    
    SELECT 	
	SUM(gd.`total_price_goods_wrapping`) + g.`gift_bag_price` AS total_price, g.* ,gd.`total_price_goods_wrapping`
	FROM 	tbl_gift AS g, tbl_gift_detail AS gd
	WHERE 	gift_status = 1
		AND g.`gift_id` = gd.`gift_id`
		AND g.`gift_code` = p_gift_code
	GROUP BY g.`gift_id`
	ORDER BY g.show_order DESC, g.create_date DESC, g.gift_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductBrand_Related` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductBrand_Related` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductBrand_Related`(IN `p_brand_id` BIGINT)
BEGIN
	SELECT * FROM tbl_products WHERE tbl_products.brand_id = p_brand_id order by tbl_products.create_date desc limit 8;
	SELECT * FROM tbl_products_details where tbl_products_details.product_id = (SELECT tbl_products.product_id FROM tbl_products WHERE tbl_products.brand_id = p_brand_id order by tbl_products.create_date desc limit 8);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductByCode`(IN `p_goods_code` VARCHAR(50))
BEGIN
	
		SELECT * FROM tbl_products WHERE tbl_products.goods_code = p_goods_code;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductByCode2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductByCode2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductByCode2`(IN `p_goods_code` VARCHAR(50))
BEGIN
SET @selectStmt = 
	CONCAT(
	"SELECT * FROM tbl_products_details  
	WHERE
		AND product_goods_code LIKE '",p_goods_code,"'");
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;	
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductByListGoodCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductByListGoodCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductByListGoodCode`(IN `p_goods_code` VARCHAR(50))
BEGIN
	
		SELECT * FROM tbl_products WHERE tbl_products.goods_code = p_goods_code;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductDraftById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductDraftById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductDraftById`(IN `p_product_draft_id` BIGINT)
BEGIN
	
	SELECT	* FROM tbl_products_draft WHERE product_draft_id = p_product_draft_id;
		
	SELECT 	tbl_products_draft_details.* 
	FROM 	
		tbl_products_draft_details 
	WHERE 	tbl_products_draft_details.product_draft_id = p_product_draft_id
	order by tbl_products_draft_details.color_code asc;
	
	SELECT 
		tbl_products_category.Name 
	FROM tbl_products_category 
	WHERE 	ItemCode = (select ItemCode from tbl_products_draft where product_draft_id = p_product_draft_id);
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductDraftReadyForUpdate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductDraftReadyForUpdate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductDraftReadyForUpdate`()
BEGIN
	
	SELECT 
		product_draft_id, 
		product_id 
	FROM 	tbl_products_draft 
	WHERE 
		apply_date < CURRENT_TIMESTAMP() 
		AND is_updated = 0
	limit 500;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductDraftSizeGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductDraftSizeGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductDraftSizeGuide`(IN `p_product_draft_id` INT)
BEGIN
	SELECT * FROM tbl_products_draft_size_guide 
	WHERE tbl_products_draft_size_guide.goodscode = (
		Select tbl_products_draft.goods_code from tbl_products_draft WHERE tbl_products_draft.product_draft_id = p_product_draft_id)
		AND tbl_products_draft_size_guide.product_draft_id = p_product_draft_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductGroupById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductGroupById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductGroupById`(IN `p_product_group_id` INT)
BEGIN
	SELECT * FROM tbl_products_group WHERE product_group_id = p_product_group_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductGroupItemByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductGroupItemByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductGroupItemByCode`(IN `p_product_group_code` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_products_group_item WHERE product_group_code = p_product_group_code group by product_group_code, product_goods_code;
	SELECT * FROM tbl_products_group_item_related WHERE product_group_code = p_product_group_code GROUP BY product_group_code, product_goods_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductImageByGoodCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductImageByGoodCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductImageByGoodCode`(IN `p_good_code` VARCHAR(50))
BEGIN
	
		SELECT tbl_products.product_id,tbl_products.product_image,tbl_products.product_image_details FROM tbl_products WHERE goods_code = p_good_code;
		select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductMaterial` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductMaterial` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductMaterial`(`p_product_id` INT)
BEGIN
	SELECT * FROM tbl_products_material WHERE RSeqNo = (Select tbl_products.SeqNo from tbl_products WHERE tbl_products.product_id = p_product_id)
	Order by tbl_products_material.`SeqNo` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductsDraftByProductId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductsDraftByProductId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductsDraftByProductId`(IN `p_product_id` TEXT)
BEGIN
	SELECT * FROM tbl_products_draft 
	WHERE 	product_id = p_product_id 
	ORDER BY apply_date DESC;
/*
	SELECT * FROM tbl_products_draft 
	WHERE 	product_id = p_product_id 
		AND is_updated = 0 
	ORDER BY create_date ASC;
	SELECT * FROM tbl_products_draft 
	WHERE 	product_id = p_product_id 
		AND is_updated = 1
	ORDER BY create_date DESC;
	SELECT * FROM tbl_products_draft 
	WHERE 	product_id = p_product_id 
		AND is_updated = 2
	ORDER BY create_date DESC;
*/
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductSizeGuideJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductSizeGuideJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductSizeGuideJamSync`(`p_good_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = p_good_code limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getRentalById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getRentalById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getRentalById`(IN `p_order_id` BIGINT)
BEGIN
	SELECT * FROM tbl_rental WHERE order_id = p_order_id;
	SELECT * FROM tbl_rental_detail WHERE order_id = p_order_id;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getRetailTracking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getRetailTracking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getRetailTracking`()
BEGIN
	SET SESSION group_concat_max_len = 999999999;
	SELECT group_concat(`SeqNo` separator 'г') as `SeqNo`,
		GROUP_CONCAT(`data` SEPARATOR 'г') as `data`,
		GROUP_CONCAT(`clientid` SEPARATOR 'г') as `clientid`
		FROM manipulationtracking ORDER BY manipulationtracking.SeqNo ASC LIMIT 100;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getRetailTrackingonebyone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getRetailTrackingonebyone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getRetailTrackingonebyone`()
BEGIN
	select * from manipulationtracking order by manipulationtracking.SeqNo asc limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getSearchKeyById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getSearchKeyById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getSearchKeyById`(IN `search_key_id` INT)
BEGIN
	SELECT 
		tbl_search_key.*		
	FROM 
		tbl_search_key 
	where tbl_search_key.search_key_id = search_key_id
	ORDER BY tbl_search_key.`search_key_id` DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetSecretSaleBrandOrItemProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetSecretSaleBrandOrItemProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetSecretSaleBrandOrItemProductById`(IN `p_secret_sale_id` INT(11), IN `p_brand_code` VARCHAR(50), IN `p_item_code` VARCHAR(50))
BEGIN
	IF p_brand_code IS NOT NULL AND p_brand_code != ''
	THEN
		select * FROM tbl_secret_sale_brand_product WHERE secret_sale_id = p_secret_sale_id AND brand_code = p_brand_code;
	END IF;
	
	IF p_item_code IS NOT NULL AND p_item_code != ''
	THEN
		SELECT * FROM tbl_secret_sale_item_product WHERE secret_sale_id = p_secret_sale_id AND item_code = p_item_code;
	END IF;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getSetProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getSetProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getSetProductById`(`p_set_product_id` INT)
BEGIN
	SELECT * FROM tbl_set_product WHERE tbl_set_product.set_id = p_set_product_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getShopHasStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getShopHasStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getShopHasStock`(IN `p_good_code` VARCHAR(20), IN `p_color_code` VARCHAR(20))
BEGIN
	-- SELECT s.shop_name,s.state,s.city,s.address2,s.address,s.tel,s.shop_site, 1 as stock_num
        -- FROM tbl_shop as s where s.shop_able =1;
	SELECT s.shop_name,s.state,s.city,s.addrees2,s.address,s.tel,s.shop_site, SUM(sn.StockNum) as stock_num
	FROM tbl_shop AS s, tbl_stock_num AS sn
	WHERE s.shop_code = sn.ShopCode and sn.GoodCode = p_good_code and sn.ColorCode =p_color_code
	GROUP BY sn.ShopCode,sn.GoodCode,sn.ColorCode;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getSizePriceDetails` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getSizePriceDetails` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getSizePriceDetails`(IN `p_product_id` TEXT)
BEGIN
      SET @selectStmt2 = 'SELECT * FROM tbl_products_details WHERE RSeqNo IN (';
      SET @selectStmt2 = CONCAT(@selectStmt2,p_product_id,')');
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getStaffById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getStaffById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getStaffById`(IN `p_staff_code` BIGINT)
BEGIN
	
		SELECT 
			 tbl_staff.SeqNo,
			 tbl_staff.RSeqNo,
			 tbl_staff.CreatedDate,
	                 tbl_staff.ModifiedDate,
		         tbl_staff.StaffCode,
			 tbl_staff.StaffName,
			 tbl_staff.TimeStamp,
			 tbl_staff.chkSection,
			 tbl_staff.order,
			 tbl_staff.display_name,
			 tbl_staff.status,
			 tbl_staff.show_menu,
			 tbl_staff.staff_image,
			 tbl_staff.staff_height,
			 tbl_shop.shop_name
		FROM tbl_staff
		LEFT JOIN tbl_shop ON  tbl_staff.shopcode = tbl_shop.shop_code
		WHERE StaffCode = p_staff_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getStaticpageDraftReadyForUpdate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getStaticpageDraftReadyForUpdate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getStaticpageDraftReadyForUpdate`()
BEGIN	
	SELECT 
		static_page_draft_id, 
		static_page_id 
	FROM 	tbl_static_pages_draft 
	WHERE 
		apply_date < CURRENT_TIMESTAMP() 
		AND is_updated = 0;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getstyling_relateProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getstyling_relateProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getstyling_relateProduct`(IN `p_goods_code` VARCHAR(50))
BEGIN
	SET @selectWhereLike = '';
	IF 
		p_goods_code 	<> '' 
	THEN
		SET @selectWhereLike = 
			CONCAT(" AND tbl_set_of_products.set_content LIKE '%", p_goods_code, "%'");
	END IF;
	
	SET @selectStmtStr = CONCAT("SELECT * FROM tbl_set_of_products 
								WHERE tbl_set_of_products.set_status = 1
								AND tbl_set_of_products.set_type =2
								", @selectWhereLike,"
								ORDER BY tbl_set_of_products.set_id DESC"
								
							);
 
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getTableInfoFromDatabase` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getTableInfoFromDatabase` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTableInfoFromDatabase`(IN `p_table_schema` VARCHAR(200), IN `p_table_name` VARCHAR(200))
BEGIN
	SELECT 	
		*
	FROM 	
		INFORMATION_SCHEMA.COLUMNS
	WHERE 	
		table_schema = p_table_schema
		AND table_name = p_table_name
	;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getTableNamesFromDatabase` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getTableNamesFromDatabase` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTableNamesFromDatabase`(IN `p_table_schema` VARCHAR(200))
BEGIN
	SELECT 	
		TABLE_NAME
	FROM 	
		INFORMATION_SCHEMA.COLUMNS
	WHERE 	
		table_schema = p_table_schema
	GROUP BY TABLE_NAME
;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetTaxRate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetTaxRate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetTaxRate`()
BEGIN
	declare p_taxpercent double default 8;
	select `TaxPercent` into p_taxpercent from `tbl_taxrates` 
		where DATE(REPLACE(`AppliedDate`,'/','-'))<=DATE(NOW())
		order by DATE(REPLACE(`AppliedDate`,'/','-')) desc limit 1;
	select p_taxpercent/100 as `TaxPercent`;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetTaxRate_Date` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetTaxRate_Date` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetTaxRate_Date`(`dinvoicedate` TEXT)
BEGIN
	SELECT `TaxPercent` FROM `tbl_taxrates` 
		WHERE DATE(REPLACE(`AppliedDate`,'/','-'))<=DATE(dinvoicedate)
		ORDER BY DATE(REPLACE(`AppliedDate`,'/','-')) DESC LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetTaxRate_Date2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetTaxRate_Date2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetTaxRate_Date2`(`dinvoicedate` TEXT)
BEGIN
	SELECT `TaxPercent2` FROM `tbl_taxrates` 
		WHERE DATE(REPLACE(`AppliedDate`,'/','-'))<=DATE(dinvoicedate)
		ORDER BY DATE(REPLACE(`AppliedDate`,'/','-')) DESC LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getTemplateEmailById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getTemplateEmailById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getTemplateEmailById`(IN `p_template_email_id` BIGINT)
BEGIN
	SELECT * FROM `tbl_template_email` WHERE template_email_id = p_template_email_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getVoiceById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getVoiceById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getVoiceById`(IN `p_voice_id` BIGINT)
BEGIN
	-- ===================================================
	SELECT * FROM tbl_voice WHERE voice_id = p_voice_id;
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_Brand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_Brand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_Brand`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT
	tbl_wish_list_brand.*
	, tbl_brands.*
  FROM 
	tbl_wish_list_brand
	, tbl_brands
  WHERE		tbl_brands.brand_code = tbl_wish_list_brand.brand_code 
  AND 		tbl_wish_list_brand.customer_id = p_customer_id 
  
  ORDER BY 	tbl_wish_list_brand.item_id DESC 
  LIMIT 	p_skip,p_limit;
  
  
  
  
  SELECT COUNT(*) 
  AS total_items 
  FROM tbl_wish_list 
  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_GoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_GoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_GoodColor`(IN `p_product_id` BIGINT(20), IN `p_color_code` VARCHAR(20))
BEGIN
	SELECT COUNT(DISTINCT customer_id) AS total_item FROM `tbl_wish_list` WHERE `product_id`=p_product_id AND `color_code`=p_color_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_allTemplateEmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_allTemplateEmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_allTemplateEmail`()
BEGIN
	SELECT * FROM tbl_template_email;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_data_goods_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_data_goods_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_data_goods_code`(IN `p_goods_code` TEXT)
BEGIN
	select `product_name` From `tbl_products` where `goods_code` = p_goods_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_imagecomment` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_imagecomment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_imagecomment`(IN `p_product_id` BIGINT(11))
BEGIN
	SELECT * 
	FROM tbl_imagecomment 
	WHERE  	tbl_imagecomment.product_id = p_product_id ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_lookbook_group` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_lookbook_group` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_lookbook_group`(`p_for_customer` VARCHAR(200))
BEGIN
	SELECT * FROM  tbl_lookbook_group WHERE for_customer = p_for_customer;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_lookbook_group_by_id` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_lookbook_group_by_id` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_lookbook_group_by_id`(`p_group_id` INT, `p_for_customer` VARCHAR(200))
BEGIN
	SELECT * FROM  tbl_lookbook_group WHERE group_id = p_group_id AND for_customer = p_for_customer;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_lookbook_group_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_lookbook_group_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_lookbook_group_frontend`(`p_for_customer` VARCHAR(200))
BEGIN
	SELECT * FROM  tbl_lookbook_group WHERE group_status = 1 AND for_customer = p_for_customer;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_mail_notsend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_mail_notsend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_mail_notsend`()
BEGIN
 
    SELECT * FROM `tbl_mail_notsend` WHERE  `send_status` = 0 AND `send_count` < 3;
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_paytypeuse` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_paytypeuse` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_paytypeuse`()
BEGIN
    -- DANNGUYEN created 2018-09-17 ---
    select * from `tbl_paytypeuse` where 1=1;
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_searchprice_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_searchprice_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_searchprice_byid`(IN `p_searchprice_id` INT)
BEGIN
	-- SELECT * FROM tbl_category;
	-- ngoc son 
	SELECT * FROM `tbl_searchprice` where `tbl_searchprice`.`searchprice_id` = p_searchprice_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_shoplist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_shoplist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_shoplist`()
BEGIN
	SELECT
		*
		
	FROM
		tbl_shop
	where `shop_status`=1
	
	ORDER BY `shop_code` ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_giftGetDescriptionTemplate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_giftGetDescriptionTemplate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_giftGetDescriptionTemplate`()
BEGIN
	SELECT * FROM tbl_gift WHERE is_gift_description_template = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_hashtag_byslug` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_hashtag_byslug` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_hashtag_byslug`(IN `p_keyword` TEXT)
BEGIN
	select * 
	from tbl_products_hashtag 
	where 	slug = p_keyword 
		AND tbl_products_hashtag.status=1 
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	limit 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_hashtag_checkslug` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_hashtag_checkslug` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_hashtag_checkslug`(IN `d_slug` VARCHAR(200))
BEGIN
	SET @selectStmt=CONCAT("
	select 
		* 
	from 
		tbl_products_hashtag 
	where 
		keyword like '%",d_slug,"%' 
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	limit 1;"
	);
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Hashtag_GetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Hashtag_GetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Hashtag_GetAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_hashtag as ht 
	WHERE 
		ht.status = 1 
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY create_date desc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Hashtag_GetAll_Paging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Hashtag_GetAll_Paging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Hashtag_GetAll_Paging`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_hashtag as ht 
	WHERE 
		ht.status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY show_order DESC, create_date desc LIMIT p_skip,p_limit;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_heelheight_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_heelheight_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_heelheight_getall`()
BEGIN
	SELECT * FROM tbl_heelheight WHERE heelheight_status = 1 ORDER BY tbl_heelheight.display_order ASC, tbl_heelheight.heelheight_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_heelheight_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_heelheight_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_heelheight_getbycode`(`p_heelheight_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_heelheight WHERE tbl_heelheight.heelheight_code = p_heelheight_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_heelheight_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_heelheight_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_heelheight_save`(`p_mode` VARCHAR(20), `p_heelheight_code` VARCHAR(20), `p_heelheight_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_heelheight(heelheight_code, heelheight_name, display_order, created_at)
		VALUES(p_heelheight_code, p_heelheight_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_heelheight
		SET
			heelheight_name 	= p_heelheight_name,
			display_order = p_display_order
		WHERE
			heelheight_code 	= p_heelheight_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_delete`(`p_holiday_id` INT)
BEGIN
	DELETE FROM tbl_holiday where holiday_id=p_holiday_id;
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_getall`()
begin
select * from tbl_holiday where 1=1;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_getall_holidaydate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_getall_holidaydate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_getall_holidaydate`()
begin
select holiday_date from tbl_holiday where 1=1;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_getall_order` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_getall_order` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_getall_order`()
begin
	select * from tbl_holiday order by holiday_date asc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_getbyid`(IN `id` INT)
begin
select * from tbl_holiday where holiday_id=id limit 1;
   END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_holiday_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_holiday_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_holiday_save`(`p_mode` VARCHAR(20), `p_holiday_id` INT, `p_holiday_name` VARCHAR(255), `p_holiday_date` DATE)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_holiday(holiday_name,holiday_date)
		VALUES(p_holiday_name,p_holiday_date);
	ELSE
		UPDATE tbl_holiday
		SET
		tbl_holiday.holiday_name = p_holiday_name,
		tbl_holiday.holiday_date = p_holiday_date		
		WHERE
			tbl_holiday.holiday_id = p_holiday_id;
	END IF;
	SELECT 'ok' AS msg;
	IF(p_mode<>'C') THEN
		SELECT p_holiday_id AS holiday_id;
	ELSE
		SELECT MAX(holiday_id) AS holiday_id FROM tbl_holiday;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_insertlog` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_insertlog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insertlog`(IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	insert into tbl_sys_log(sys_log)
		VALUES (atData);
		
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_insertlog2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_insertlog2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insertlog2`(IN `atData` LONGTEXT)
    NO SQL
BEGIN
	
	INSERT INTO tbl_sys_log_2(sys_log)
		VALUES (atData);
		
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_insert_mail_notsend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_insert_mail_notsend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insert_mail_notsend`(IN `d_modules` VARCHAR(255), IN `d_code` VARCHAR(255), IN `d_to_name` VARCHAR(255), IN `d_to_mail` VARCHAR(255), IN `d_subject` VARCHAR(255), IN `d_mail_body` TEXT, IN `d_status` INT, IN `d_exeption` TEXT)
BEGIN
DECLARE aiMonth   INT;
 SET aiMonth=3;  
   DELETE FROM tbl_mail_notsend WHERE TIMESTAMPDIFF(MONTH,TIMESTAMP (tbl_mail_notsend.`time_stamp`,'YYYY-MM-DD HH:MM:SS'),TIMESTAMP(NOW(),'YYYY-MM-DD HH:MM:SS' ))>=aiMonth;
INSERT INTO tbl_mail_notsend(`modules`,`code`,`to_name`,`to_mail`,`subject`,`body_mail`,`send_status`,`mail_exception`)
values(d_modules,d_code,d_to_name,d_to_mail,d_subject,d_mail_body,d_status,d_exeption);
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_instagram_data_getDataOnsite` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_instagram_data_getDataOnsite` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_instagram_data_getDataOnsite`()
BEGIN
	
	SELECT 	*
	FROM  	tbl_instagram_data
	WHERE 	is_onsite = 1
	ORDER BY tbl_instagram_data.instagram_created_time ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ins_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ins_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ins_delete`(IN `p_insta_acc_id` VARCHAR(100))
BEGIN
	DELETE FROM tbl_instagram_api WHERE ins_id = p_insta_acc_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ins_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ins_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ins_getAll`()
BEGIN
	SELECT * from tbl_instagram_api order by ins_id desc LIMIT 0,1;
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ins_instagram_token` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ins_instagram_token` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ins_instagram_token`(IN `ins_name` VARCHAR(255), IN `ins_exp_date` VARCHAR(40), IN `ins_token` TEXT)
BEGIN
	INSERT INTO tbl_instagram_api(`ins_name`,`ins_exp_date`,`ins_token`)
	values(ins_name,ins_exp_date,ins_token);
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lifestyle_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lifestyle_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lifestyle_getall`()
BEGIN
	SELECT * FROM tbl_lifestyle WHERE lifestyle_status = 1 ORDER BY tbl_lifestyle.display_order ASC, tbl_lifestyle.lifestyle_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lifestyle_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lifestyle_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lifestyle_getbycode`(`p_lifestyle_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_lifestyle WHERE tbl_lifestyle.lifestyle_code = p_lifestyle_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lifestyle_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lifestyle_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lifestyle_save`(`p_mode` VARCHAR(20), `p_lifestyle_code` VARCHAR(20), `p_lifestyle_name` VARCHAR(50), `p_display_order` INT(11), `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_lifestyle(lifestyle_code, lifestyle_name, display_order, created_at)
		VALUES(p_lifestyle_code, p_lifestyle_name, p_display_order, p_created_at);
	ELSE
		UPDATE 	tbl_lifestyle
		SET
			lifestyle_name 	= p_lifestyle_name,
			display_order = p_display_order
		WHERE
			lifestyle_code 	= p_lifestyle_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_login_admin` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_login_admin` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_login_admin`(`p_user_name` VARCHAR(50), `p_password` VARCHAR(255))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_users WHERE tbl_users.user_name=p_user_name AND tbl_users.password = p_password)) THEN
		SELECT 1 AS login_success;
		SELECT * FROM tbl_users WHERE tbl_users.user_name=p_user_name AND tbl_users.password = p_password;
	ELSE
		SELECT 0 AS login_success;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_group_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_group_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_group_delete`(`p_group_id` BIGINT)
BEGIN
	DELETE FROM  tbl_lookbook_group WHERE group_id = p_group_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_keyword_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_keyword_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_keyword_getall`()
BEGIN
	SELECT * FROM tbl_lookbook_keyword ORDER BY keyword_id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_keyword_getbygender` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_keyword_getbygender` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_keyword_getbygender`(IN `p_gender_related` VARCHAR(50))
BEGIN
	SET @selectStmtStr = CONCAT("
	SELECT * 
	FROM tbl_lookbook_keyword 
	WHERE tbl_lookbook_keyword.keyword_related LIKE '%",p_gender_related,"%'");
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr);
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_keyword_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_keyword_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_keyword_getbyid`(IN `p_lookbook_keyword_id` INT(11))
BEGIN
	SELECT * FROM tbl_lookbook_keyword WHERE tbl_lookbook_keyword.keyword_id = p_lookbook_keyword_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_keyword_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_keyword_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_keyword_save`(`p_mode` VARCHAR(20), `p_lookbook_keyword_id` INT(11), `p_lookbook_keyword_code` VARCHAR(50), `p_lookbook_keyword_name` VARCHAR(100), `p_lookbook_keyword_related` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_lookbook_keyword(
			keyword_code,
			keyword_name,
			keyword_related
		) VALUES (
			p_lookbook_keyword_code,
			p_lookbook_keyword_name,
			p_lookbook_keyword_related
		);
	ELSE
		UPDATE tbl_lookbook_keyword
		SET
			keyword_code 		= p_lookbook_keyword_code,
			keyword_name 		= p_lookbook_keyword_name,
			keyword_related		= p_lookbook_keyword_related
		WHERE
			tbl_lookbook_keyword.keyword_id 	= p_lookbook_keyword_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_delete`(`p_lbk_id` BIGINT)
BEGIN
	DELETE FROM tbl_look_book WHERE lbk_id = p_lbk_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_delete_IdNotIn` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_delete_IdNotIn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_delete_IdNotIn`(`p_id_list` VARCHAR(255), `p_lbk_season_id` BIGINT, `p_lbk_year_id` BIGINT)
BEGIN
	SET @selectStmtStr = CONCAT("
			DELETE FROM tbl_look_book 
			WHERE 	lbk_id NOT IN (", p_id_list ,") 
				AND lbk_season_id = ", p_lbk_season_id, " 
				AND lbk_year_id = ", p_lbk_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_getAll`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:03/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, get all lookbook
 */
	SELECT * 
	FROM tbl_look_book
	WHERE lbk_status=1
	ORDER BY lbk_id LIMIT indexFrom,indexLimit;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_getById`(`p_lbk_id` BIGINT)
BEGIN
	SELECT * FROM  tbl_look_book WHERE lbk_id = p_lbk_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_season_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_season_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_season_getById`(`p_lset_season_id` BIGINT)
BEGIN
	SELECT * FROM tbl_set_seasons WHERE set_season_id = p_lset_season_id;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_season_getForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_season_getForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_season_getForMenu`()
BEGIN
/**
 * User:hoaxuan
 * Date:03/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, tao danh sach left menu
 */
	SELECT * 
	FROM tbl_look_book_season
	WHERE lbk_season_status=1 AND lbk_season_is_show_as_menu=1
	ORDER BY lbk_season_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_updateLookBookImg` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_updateLookBookImg` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_updateLookBookImg`(`p_lbk_id` BIGINT, `p_lbk_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_look_book
	SET 	lbk_image = p_lbk_image
	WHERE 	lbk_id = p_lbk_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_year_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_year_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_year_delete`(`p_lbk_year_id` BIGINT)
BEGIN
	DELETE FROM tbl_look_book_year WHERE lbk_year_id = p_lbk_year_id;
	DELETE FROM tbl_look_book_season WHERE lbk_year_id = p_lbk_year_id;
	DELETE FROM tbl_look_book WHERE lbk_year_id = p_lbk_year_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_year_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_year_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_year_getAll`()
BEGIN
	SELECT * FROM tbl_look_book_year ORDER BY lbk_year_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_year_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_year_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_year_getById`(`p_lbk_year_id` BIGINT)
BEGIN
	SELECT * FROM tbl_look_book_year WHERE lbk_year_id = p_lbk_year_id;
	SELECT * FROM tbl_look_book_season WHERE lbk_year_id = p_lbk_year_id ORDER BY lbk_season_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_year_getForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_year_getForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_year_getForMenu`()
BEGIN
/**
 * User:hoaxuan
 * Date:03/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, tao danh sach left menu
 */
	SELECT * 
	FROM tbl_look_book_year
	WHERE lbk_year_status=1 AND lbk_year_is_show_as_menu=1
	ORDER BY lbk_year_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_log_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_log_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_log_add`(IN `d_modules` VARCHAR(255), IN `d_code` VARCHAR(255), IN `d_to_name` VARCHAR(255), IN `d_to_mail` VARCHAR(255), IN `d_subject` VARCHAR(255), IN `d_mail_body` TEXT, IN `d_status` INT, IN `d_exeption` TEXT, IN `d_mailfrom` INT)
BEGIN
DECLARE aiMonth   INT;
 SET aiMonth=3;  
   DELETE FROM tbl_mail_logs WHERE TIMESTAMPDIFF(MONTH,TIMESTAMP (tbl_mail_logs.`time_stamp`,'YYYY-MM-DD HH:MM:SS'),TIMESTAMP(NOW(),'YYYY-MM-DD HH:MM:SS' ))>=aiMonth;
INSERT INTO tbl_mail_logs(`modules`,`code`,`to_name`,`to_mail`,`subject`,`body_mail`,`send_status`,`mail_exception`,`mail_from`)
values(d_modules,d_code,d_to_name,d_to_mail,d_subject,d_mail_body,d_status,d_exeption,d_mailfrom);
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_magazine_register_getby_gender` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_magazine_register_getby_gender` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_magazine_register_getby_gender`(IN `p_list_gender` TEXT, IN `p_list_chronology` TEXT)
BEGIN
		
	SET p_list_gender = REPLACE(p_list_gender,",","','");	
	SET p_list_chronology = REPLACE(p_list_chronology,",","','");	
	
	SET @selectStmt = CONCAT("SELECT `email_name` FROM tbl_mail_magazine_register WHERE `gender` IN ('",p_list_gender,"') 
	 and `chronology` IN ('",p_list_chronology,"')" );
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_magazine_register_getForSendMail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_magazine_register_getForSendMail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_magazine_register_getForSendMail`(IN `mail_list` TEXT)
BEGIN
	SELECT * FROM tbl_mail_magazine_register WHERE mail_list not like CONCAT('%',email_name, ",%") and email_status=1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_magazine_register_terminate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_magazine_register_terminate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_magazine_register_terminate`(IN `p_mail_name` VARCHAR(255))
BEGIN
	IF (
		(SELECT COUNT(*) FROM tbl_mail_magazine_register WHERE UPPER(email_name) = UPPER(p_mail_name) AND email_status = 1) > 0
	) THEN
		UPDATE 	tbl_mail_magazine_register 
		SET 	email_status	= 0
		WHERE 	UPPER(email_name) = UPPER(p_mail_name);
	
		SELECT 1 as 'result';
	ELSE
		SELECT 0 AS 'result';
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_sample_getcontentbytitle` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_sample_getcontentbytitle` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_sample_getcontentbytitle`(IN `dcode` VARCHAR(255))
BEGIN
     /*------DN 2018-09-10 D18090401  マニフェスト --------------------*/
select * from `tbl_mail_sample` where `email_title`=dcode limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_materials_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_materials_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_materials_getall`()
BEGIN
	SELECT * FROM tbl_materials ORDER BY display_order,materials_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_materials_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_materials_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_materials_getbycode`(`p_materials_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_materials WHERE tbl_materials.materials_code = p_materials_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_materials_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_materials_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_materials_save`(IN `p_mode` VARCHAR(20), IN `p_materials_code` VARCHAR(20), IN `p_materials_name` VARCHAR(255), IN `p_display_name` TEXT, IN `p_display_order` DOUBLE, IN `p_materials_description` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_materials(materials_code, materials_name, display_name, display_order, materials_description)
		VALUES(p_materials_code, p_materials_name, p_display_name, p_display_order, p_materials_description);
	ELSE
		UPDATE tbl_materials
		SET
			display_name = p_display_name,
			materials_name = p_materials_name,
			display_order = p_display_order,
			materials_description = p_materials_description
		WHERE
			materials_code = p_materials_code;
	END IF;	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_ByMediaDate_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_ByMediaDate_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_ByMediaDate_realmccoys`(IN `p_media_date` VARCHAR(40), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	SELECT tbl_media.*
		FROM tbl_media
		WHERE tbl_media.`media_date` LIKE CONCAT("%",p_media_date,"%") AND media_status = 1;	
				
	
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Media_getHotMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Media_getHotMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Media_getHotMedia`(IN `p_index_from` INT, IN `p_index_to` INT)
BEGIN
	SELECT 
		* 
	FROM 
		tbl_media 
	WHERE 
		media_status = 1
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY media_date DESC, media_id DESC 
	LIMIT 	p_index_from, p_index_to;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getMediaById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getMediaById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getMediaById`(IN `p_media_id` BIGINT)
BEGIN
	SELECT * FROM `tbl_media` 
	WHERE 		
		`media_status` = 1 
		AND (
			(NOW() BETWEEN `start_date` AND `end_date`)
			OR `unlimited` = 1
		) 
	AND media_id = p_media_id ORDER BY media_id DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_GetmediaByTime_fontend_searchhastag_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_GetmediaByTime_fontend_searchhastag_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_GetmediaByTime_fontend_searchhastag_mida`(IN `p_tag` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT *
	FROM 
		tbl_media 
	WHERE 
	        tbl_media.media_status = 1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())))
		AND tbl_media.`keyword_list` LIKE CONCAT("%",p_tag,"%")
	ORDER BY tbl_media.`media_date` ASC;		
	
										
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getmedia_bykeyword_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getmedia_bykeyword_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getmedia_bykeyword_mida`(IN `p_keyword` VARCHAR(50))
BEGIN
	        SELECT *
		FROM tbl_media
		WHERE tbl_media.`keyword_list` LIKE CONCAT("%",p_keyword,"%") AND tbl_media.media_status = 1 
	        ORDER BY tbl_media.`media_date` DESC;	
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getmedia_bykeyword_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getmedia_bykeyword_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getmedia_bykeyword_realmccoys`(IN `p_keyword` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SELECT tbl_media.*
		FROM tbl_media
		WHERE tbl_media.`keyword_list` LIKE CONCAT("%",p_keyword,"%") AND tbl_media.media_status = 1;
	
	
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getmedia_bytitle_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getmedia_bytitle_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getmedia_bytitle_mida`(IN `p_keyword` VARCHAR(50))
BEGIN
	        SELECT *
		FROM tbl_media
		WHERE tbl_media.`media_title` LIKE CONCAT("%",p_keyword,"%") AND tbl_media.media_status = 1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())))
	        ORDER BY tbl_media.`media_date` DESC;	
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getmedia_date_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getmedia_date_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getmedia_date_realmccoys`()
BEGIN
	SELECT  tbl_media.`media_date` FROM tbl_media WHERE media_status = 1 AND tbl_media.`media_date` IS NOT NULL;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getnews_bykeyword_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getnews_bykeyword_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getnews_bykeyword_realmccoys`(IN `p_keyword` VARCHAR(50))
BEGIN
	        SELECT *
		FROM tbl_news
		WHERE tbl_news.`keyword_list` LIKE CONCAT("%",p_keyword,"%");
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getShopByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getShopByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getShopByCode`(IN `p_shop_code` INT)
BEGIN
	SELECT tbl_media.*
		FROM tbl_media
	LEFT JOIN tbl_shop ON tbl_shop.`shop_code` = tbl_media.`shop_code`
		WHERE tbl_media.`shop_code` = p_shop_code;
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getShopByCode_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getShopByCode_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getShopByCode_realmccoys`(IN `p_shop_code` VARCHAR(255))
BEGIN
	SELECT tbl_shop.`shop_name`,tbl_shop.`display_name`,tbl_shop.`shop_code`
	FROM tbl_shop
	WHERE tbl_shop.`shop_code` = p_shop_code;
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getShopByCode_realmccoys_getshopcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getShopByCode_realmccoys_getshopcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getShopByCode_realmccoys_getshopcode`()
BEGIN
	SELECT DISTINCT  tbl_media.`shop_code` FROM tbl_media WHERE media_status = 1 AND tbl_media.`shop_code` IS NOT NULL;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getShopByShopCode_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getShopByShopCode_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getShopByShopCode_realmccoys`(IN `p_shop_code` VARCHAR(30))
BEGIN
	        SELECT *
		FROM tbl_media
		WHERE shop_code = p_shop_code AND media_status = 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_gettitlemedia_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_gettitlemedia_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_gettitlemedia_mida`()
BEGIN
	        SELECT tbl_media.media_title
		FROM tbl_media
		WHERE tbl_media.media_status = 1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())));	
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_modalwindow_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_modalwindow_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_modalwindow_getall`()
BEGIN
	SELECT * FROM `tbl_modalwindow` ORDER BY tbl_modalwindow.`modalwindow_code` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_modalwindow_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_modalwindow_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_modalwindow_getbycode`(`p_modalwindow_code` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_modalwindow` WHERE `tbl_modalwindow`.`modalwindow_code` = p_modalwindow_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_modalwindow_getfronend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_modalwindow_getfronend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_modalwindow_getfronend`()
BEGIN
	SELECT * FROM `tbl_modalwindow` WHERE modalwindow_status = 1 AND `no_period` = 1 ORDER BY tbl_modalwindow.`no_period` DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_modalwindow_getfronendtime` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_modalwindow_getfronendtime` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_modalwindow_getfronendtime`(IN `p_time` DATETIME)
BEGIN
	SELECT * FROM `tbl_modalwindow` WHERE modalwindow_status = 1 AND `modalwindow_from` <=  p_time AND `modalwindow_to` >= p_time;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_News_getHotNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_News_getHotNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_News_getHotNews`()
BEGIN
	SELECT 	*
	FROM 	tbl_news
	where 	status = 1
		and (
			public_date is null
			or public_date <= CURRENT_TIMESTAMP()
		)
	order by tbl_news.news_date desc, news_id desc
	LIMIT 5;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_News_getNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_News_getNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_News_getNews`(`p_limit_num` INT)
BEGIN
	SELECT * 
	FROM tbl_news 
	where 
		status=1 
		AND (
			public_date IS NULL
			OR public_date <= CURRENT_TIMESTAMP()
		)
	order by tbl_news.news_date desc, news_id desc 
	LIMIT 0,p_limit_num;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_news_getNewsDate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_news_getNewsDate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_news_getNewsDate`()
BEGIN
	SET @selectStmt = '
		SELECT `news_date` FROM  `tbl_news` WHERE status = 1  
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			ORDER BY news_date DESC ';
			
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmt);
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_nppaysetting_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_nppaysetting_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_nppaysetting_add`(IN `p_isusepay` INT, IN `p_note` TEXT, IN `p_moneyship` FLOAT)
BEGIN
DECLARE total_records BIGINT(11) DEFAULT 0;
SELECT COUNT(*) INTO total_records FROM tbl_nppaysetting ;
IF(total_records = 0) THEN
	-- create one record		
	INSERT INTO tbl_nppaysetting(`isUsePay`,`note`,`MoneyShip`)
	VALUES(p_isusepay,p_note,p_moneyship);
ELSE
	--  update 
	UPDATE 	tbl_nppaysetting
	SET 
		isUsePay 	= p_isusepay,
		note 		= p_note,
		MoneyShip 	= p_moneyship,
		`timestamp` 	= CURRENT_TIMESTAMP;
END IF;
UPDATE tbl_paytypeuse SET `pay_use`=p_isusepay WHERE `pay_type`='nppay';
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_nppaysetting_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_nppaysetting_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_nppaysetting_all`()
BEGIN
	SELECT * FROM tbl_nppaysetting;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_one_getCategorycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_one_getCategorycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_one_getCategorycode`(IN `p_product_category_code` VARCHAR(10))
BEGIN
	SELECT category_group_id FROM tbl_products_category WHERE ItemCode = p_product_category_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_OrderDetail_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_OrderDetail_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_OrderDetail_backend`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	-- 2018/07/25 DAN Add product_images-- 
	-- 2019-01-07 DN Add is_gift
	IF(p_mode = 'C') THEN
		
          SET @insertStmt = CONCAT('INSERT INTO tbl_order_detail
		(order_id,order_code,product_id,goods_code,barcode,product_name,quantity
		,sale_price,unit_cost,color_code,color_name,size_code,size_name,Seqno,is_cancel,product_image,is_pre_order,is_gift)
		VALUES ',atData);
	
PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_checkordercode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_checkordercode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_checkordercode`(`dorder_code` VARCHAR(255))
BEGIN
select count(*) as msg from tbl_orders where order_code=dorder_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_details_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_details_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_details_add`(`doder_code` VARCHAR(255), `dorder_id` INT, `dproduct_id` INT, `dproduct_name` VARCHAR(100), `dquantity` INT, `dunit_cost` DECIMAL(10,2), `dcolor_id` INT, `dcolor_name` VARCHAR(255), `dsize_id` INT, `dsize_name` VARCHAR(255), `dproduct_images` VARCHAR(255), `dgoods_code` VARCHAR(20), `dcolor_code` VARCHAR(10), `dsize_code` VARCHAR(10), `dbarcode` VARCHAR(50), `dsales_price` BIGINT, `dseqno` VARCHAR(15))
BEGIN
insert into tbl_order_detail(order_code,order_id,product_id,product_name,quantity,unit_cost,color_id,color_name,size_id,size_name,product_image,
goods_code,color_code,size_code,barcode,sale_price,Seqno)
values(doder_code,dorder_id,dproduct_id,dproduct_name,dquantity,dunit_cost,dcolor_id,dcolor_name,dsize_id,dsize_name,dproduct_images,
dgoods_code,dcolor_code,dsize_code,dbarcode,dsales_price,dseqno);
call sp_products_details_updaterank(dgoods_code,dcolor_code,dsize_code,dquantity);
call sp_stock_num_updatestock(dgoods_code,dcolor_code,dsize_code,dquantity);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_export_hapuna` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_export_hapuna` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_export_hapuna`(IN `dstartdate` DATE, IN `denddate` DATE)
BEGIN
	SELECT * FROM tbl_orders 
	WHERE DATE(DATE_FORMAT(`created_on`,'%Y/%m/%d'))>=dstartdate AND DATE(DATE_FORMAT(`created_on`,'%Y/%m/%d'))<=denddate;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_getbycode`(IN `p_order_code` VARCHAR(500))
BEGIN
SELECT * FROM (SELECT * FROM tbl_orders WHERE order_code = p_order_code) AS od LEFT JOIN (SELECT customer_code,postcode,state,city,address,
address2,phone,email FROM tbl_customers) AS cus ON od.customer_code= cus.customer_code ;
SELECT * FROM tbl_order_detail WHERE order_code =p_order_code AND (is_cancel = 0 OR is_cancel IS NULL);	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_getByCouponCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_getByCouponCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_getByCouponCode`(IN `p_coupon_code` TEXT)
BEGIN
	
      SET @selectsmt=Concat("SELECT * FROM tbl_orders  where couponinfo like '%", p_coupon_code,"%' ORDER BY customer_code DESC");
	
      PREPARE stmt FROM @selectsmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_ismail4d` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_ismail4d` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_ismail4d`(IN `p_order_code` VARCHAR(500), IN `p_ismail4d` INT)
BEGIN
Update tbl_orders SET ismail4d=p_ismail4d WHERE order_code=p_order_code;
SELECT 'ok' as msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_patch_tracking_url` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_patch_tracking_url` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_patch_tracking_url`()
BEGIN
DECLARE	itracking_name VARCHAR(255) DEFAULT '';
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` ORDER BY  tracking_use DESC,id ASC LIMIT 1;
update tbl_orders set `delivery_company` =itracking_name where delivery_company IS NULL or delivery_company='';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_uptosales` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_uptosales` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_uptosales`(IN `dorder_code` VARCHAR(20), IN `dchtosales` INT)
BEGIN
update tbl_orders SET chkToSales=dchtosales where order_code=dorder_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_order_jamsync_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_order_jamsync_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_order_jamsync_update`(IN `p_order_code` TEXT, IN `p_other_pay_money` FLOAT, IN `p_delivery_company_no` VARCHAR(50), IN `p_status` INT, IN `p_debt_money_pay_date` VARCHAR(50), IN `p_order_comments2` TEXT)
BEGIN
	UPDATE tbl_orders
	SET
		tbl_orders.status = p_status,
		tbl_orders.other_pay_money = p_other_pay_money,
		tbl_orders.debt_money_pay_date = p_debt_money_pay_date,
		tbl_orders.invoice_code = p_delivery_company_no,
		tbl_orders.comments2=p_order_comments2
	WHERE tbl_orders.order_code = p_order_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_payjp_log_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_payjp_log_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_payjp_log_add`(IN `d_pay_log` TEXT)
BEGIN
DECLARE aiMonth   INT;
 SET aiMonth=3;  
   DELETE FROM tbl_payjp_logs WHERE TIMESTAMPDIFF(MONTH,TIMESTAMP (tbl_payjp_logs.`time_stamp`,'YYYY-MM-DD HH:MM:SS'),TIMESTAMP(NOW(),'YYYY-MM-DD HH:MM:SS' ))>=aiMonth;
INSERT INTO tbl_payjp_logs(`data_log`)
values(`d_pay_log`);
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_delete`(`p_id` BIGINT)
BEGIN
	DELETE FROM tbl_prepointsettings_auto WHERE pointsettings_id = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_getall`()
BEGIN
	SELECT * FROM tbl_prepointsettings_auto ORDER BY applydate DESC ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_getbyid`(`p_id` BIGINT)
BEGIN
	SELECT * FROM tbl_prepointsettings_auto WHERE pointsettings_id = p_id;
	SELECT * FROM tbl_products_category;
	SELECT * FROM tbl_brands;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_getcur` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_getcur` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_getcur`()
BEGIN
	SELECT * FROM tbl_prepointsettings_auto
		 where applydate<=NOW() ORDER BY applydate DESC ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_prepointsettings_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_prepointsettings_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_prepointsettings_getall`()
BEGIN
	SELECT * FROM tbl_prepointsettings LIMIT 1;
	SELECT * FROM tbl_customer_setpointbyrank;
	SELECT IsRegisterAddPoint,InitialPoint,IsUsePointSettings,IsUsePointRate, is_reward_point, point_plus_type, fixed_point_plus, point_percent_plus FROM tbl_settings LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_prepointsettings_getvalidpointtime` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_prepointsettings_getvalidpointtime` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_prepointsettings_getvalidpointtime`()
BEGIN
	SELECT 
		ValidPointTime
		,ValidPointTimeUnit 
	FROM tbl_prepointsettings 
	WHERE 1=1 LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productCheckUpadteFromTblDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productCheckUpadteFromTblDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productCheckUpadteFromTblDraft`(IN `p_product_id` BIGINT(20), IN `p_product_draft_id` BIGINT(20))
BEGIN
	-- tbl_products_draft - START
	DECLARE product_draft_id_selected BIGINT(20); 	
	DECLARE SeqNo_selected VARCHAR(20); 	
	DECLARE RSeqNo_selected VARCHAR(20); 	
	DECLARE product_name_selected VARCHAR(200); 	
	DECLARE product_category_id_selected INT(11); 	
	DECLARE product_itemcode_selected VARCHAR(10); 	
	DECLARE product_itemname_selected VARCHAR(200); 	
	DECLARE product_detail_short_selected LONGTEXT; 	
	DECLARE product_detail_selected LONGTEXT; 	
	DECLARE price_selected FLOAT; 	
	DECLARE create_date_selected VARCHAR(40); 	
	DECLARE hot_product_selected INT(4); 	
	DECLARE brand_id_selected INT(11); 	
	DECLARE brand_name_selected VARCHAR(100); 	
	DECLARE goods_code_selected VARCHAR(50); 	
	DECLARE brand_code_selected VARCHAR(50); 	
	DECLARE sale_off_product_selected TINYINT(4);
	DECLARE set_id_selected INT(11);
	DECLARE product_setmain_selected TINYINT(4);
	DECLARE product_image_selected VARCHAR(255);
	DECLARE product_image_details_selected TEXT;
	DECLARE new_product_selected TINYINT(4);
	DECLARE product_saleoff_price_selected FLOAT;
	DECLARE product_status_selected TINYINT(4);
	DECLARE MaterialID_selected BIGINT(11);
	DECLARE MaterialName_selected VARCHAR(50);
	DECLARE hashtag_name_selected VARCHAR(500);
	DECLARE slug_url_selected TEXT;
	DECLARE link_img_instagram_selected TEXT;
	DECLARE caption_instagram_selected TEXT;
	DECLARE hashtag_instagram_selected TEXT;
	DECLARE prihtml_selected TEXT;
	DECLARE SeqNo_old_selected VARCHAR(20);
	DECLARE RSeqNo_old_selected VARCHAR(20);
	DECLARE product_name_old_selected VARCHAR(200);
	DECLARE product_category_id_old_selected INT(11);
	DECLARE product_itemcode_old_selected VARCHAR(10);
	DECLARE product_itemname_old_selected VARCHAR(200);
	DECLARE product_detail_short_old_selected LONGTEXT;
	DECLARE product_detail_old_selected LONGTEXT;
	DECLARE price_old_selected FLOAT;
	DECLARE create_date_old_selected VARCHAR(40);
	DECLARE hot_product_old_selected INT(4);
	DECLARE brand_id_old_selected INT(11);
	DECLARE brand_name_old_selected VARCHAR(100);
	DECLARE goods_code_old_selected VARCHAR(50);
	DECLARE brand_code_old_selected VARCHAR(50);
	DECLARE sale_off_product_old_selected TINYINT(4);
	DECLARE set_id_old_selected INT(11);
	DECLARE product_setmain_old_selected TINYINT(4);
	DECLARE product_image_old_selected VARCHAR(255);
	DECLARE product_image_details_old_selected TEXT;
	DECLARE new_product_old_selected TINYINT(4);
	DECLARE product_saleoff_price_old_selected FLOAT;
	DECLARE product_status_old_selected TINYINT(4);
	DECLARE MaterialID_old_selected BIGINT(11);
	DECLARE MaterialName_old_selected VARCHAR(50);
	DECLARE hashtag_name_old_selected VARCHAR(500);
	DECLARE slug_url_old_selected TEXT;
	DECLARE link_img_instagram_old_selected TEXT;
	DECLARE caption_instagram_old_selected TEXT;
	DECLARE hashtag_instagram_old_selected TEXT;
	DECLARE prihtml_old_selected TEXT;
	DECLARE ROW_COUNT_TMP INT;
	DECLARE apply_date_selected TIMESTAMP;
	DECLARE is_sold_out_selected TINYINT;
	DECLARE prihtml1_selected TEXT;
	DECLARE product_name_display_selected VARCHAR(255);
	DECLARE is_show_option_selected TINYINT(2);
	DECLARE is_recommended_item_selected TINYINT(2);
	DECLARE is_pre_order_selected TINYINT(2);
	DECLARE is_fixed_all_option_name_selected TINYINT(1);
	DECLARE is_color_show_selected TINYINT(1);
	DECLARE is_contact_selected TINYINT(1);
	DECLARE is_comming_soon_selected TINYINT(1);
	DECLARE memo_selected TEXT; 
	DECLARE option_title_selected TEXT;  
	DECLARE gender_men_selected TINYINT(1);
	DECLARE gender_women_selected TINYINT(1);
	DECLARE gender_unisex_selected TINYINT(1);
	
	DECLARE product_recovery_selected TEXT;  
	DECLARE search_keywords_selected TEXT;  
	
	DECLARE apply_date_old_selected TIMESTAMP;
	DECLARE is_sold_out_old_selected TINYINT;
	DECLARE prihtml1_old_selected TEXT;
	DECLARE product_name_display_old_selected VARCHAR(255);
	DECLARE is_show_option_old_selected TINYINT(2);
	DECLARE is_recommended_item_old_selected TINYINT(2);
	DECLARE is_pre_order_old_selected TINYINT(2);
	DECLARE is_fixed_all_option_name_old_selected TINYINT(1);
	DECLARE is_color_show_old_selected TINYINT(1);
	DECLARE is_contact_old_selected TINYINT(1);
	DECLARE is_comming_soon_old_selected TINYINT(1);
	DECLARE memo_old_selected TEXT;
	DECLARE option_title_old_selected TEXT;
	DECLARE gender_men_old_selected TINYINT(1);
	DECLARE gender_women_old_selected TINYINT(1);
	DECLARE gender_unisex_old_selected TINYINT(1);
	
	
	DECLARE product_recovery_old_selected TEXT;  
	DECLARE search_keywords_old_selected TEXT;  
	
	DECLARE is_free_ship_selected TINYINT(1);
	DECLARE free_ship_from_selected TIMESTAMP;
	DECLARE free_ship_to_selected TIMESTAMP;
	
	DECLARE is_free_ship_old_selected TINYINT(1);
	DECLARE free_ship_from_old_selected TIMESTAMP;
	DECLARE free_ship_to_old_selected TIMESTAMP;
	
	DECLARE is_coupon_unavailable_selected TINYINT(1);
	DECLARE is_coupon_unavailable_old_selected TINYINT(1);
	
	DECLARE counter		INT 		DEFAULT 0;
	DECLARE recordNum	INT 		DEFAULT 0;
	DECLARE p_SeqNo_loop VARCHAR(20);
	DECLARE p_product_draft_id_loop BIGINT(20);
	DECLARE p_products_draft_detail_id_loop BIGINT(20);
	
	DECLARE count_sizeguide		INT 		DEFAULT 0;
	DECLARE recordNum_sizeguide	INT 		DEFAULT 0;
	DECLARE p_SeqNo_sizeguide_loop VARCHAR(20);
	
	DECLARE Cur1 CURSOR FOR
	SELECT SeqNo, product_draft_id,products_draft_detail_id 
	FROM tbl_products_draft_details 
	WHERE product_draft_id = p_product_draft_id;
				
	DECLARE Cur1_sizeguide CURSOR FOR
	SELECT SeqNo
	FROM tbl_products_draft_size_guide 
	WHERE product_draft_id = p_product_draft_id;
	
	-- Lay thong tin record de thay doi!
	SELECT COUNT(*)
	FROM 	
		tbl_products_draft 
	WHERE 
		product_id = p_product_id
			AND apply_date < CURRENT_TIMESTAMP() 
			AND is_updated = 0 
	INTO ROW_COUNT_TMP;
	CASE WHEN ROW_COUNT_TMP > 0 THEN
		-- Toan 596930004 20/06/17 -- START
		SELECT product_draft_id, SeqNo, RSeqNo, product_name, product_category_id, product_itemcode, product_itemname, product_detail_short, product_detail, price, create_date, hot_product, brand_id, brand_name, goods_code, brand_code, sale_off_product, set_id, product_setmain, product_image, product_image_details, new_product, product_saleoff_price, product_status, MaterialID, MaterialName, hashtag_name, slug_url, link_img_instagram, caption_instagram, hashtag_instagram, prihtml, SeqNo_old, RSeqNo_old, product_name_old, product_category_id_old, product_itemcode_old, product_itemname_old, product_detail_short_old, product_detail_old, price_old, create_date_old, hot_product_old, brand_id_old, brand_name_old, goods_code_old, brand_code_old, sale_off_product_old, set_id_old, product_setmain_old, product_image_old, product_image_details_old, new_product_old, product_saleoff_price_old, product_status_old, MaterialID_old, MaterialName_old, hashtag_name_old, slug_url_old, link_img_instagram_old, caption_instagram_old, hashtag_instagram_old, prihtml_old, apply_date, is_sold_out, prihtml1, product_name_display, is_show_option, is_recommended_item, is_pre_order, is_fixed_all_option_name, is_color_show, is_contact, is_comming_soon, memo, option_title, product_recovery, search_keywords,   is_sold_out_old, prihtml1_old, product_name_display_old, is_show_option_old, is_recommended_item_old, is_pre_order_old, is_fixed_all_option_name_old, is_color_show_old, is_contact_old, is_comming_soon_old, memo_old, option_title_old, product_recovery_old, search_keywords_old, is_free_ship, free_ship_from, free_ship_to, is_free_ship_old, free_ship_from_old, free_ship_to_old, is_coupon_unavailable, is_coupon_unavailable_old, gender_men, gender_women, gender_unisex, gender_men_old, gender_women_old, gender_unisex_old
		FROM 	
			tbl_products_draft 
		WHERE 
			product_id = p_product_id
				AND apply_date < CURRENT_TIMESTAMP() 
				AND is_updated = 0 
		ORDER BY product_draft_id DESC
		LIMIT 1
		INTO 	product_draft_id_selected,SeqNo_selected,RSeqNo_selected,product_name_selected,product_category_id_selected,product_itemcode_selected,product_itemname_selected,product_detail_short_selected,product_detail_selected,price_selected,create_date_selected,hot_product_selected,brand_id_selected,brand_name_selected,goods_code_selected,brand_code_selected,sale_off_product_selected,set_id_selected,product_setmain_selected,product_image_selected,product_image_details_selected,new_product_selected,product_saleoff_price_selected,product_status_selected,MaterialID_selected,MaterialName_selected,hashtag_name_selected,slug_url_selected,link_img_instagram_selected,caption_instagram_selected,hashtag_instagram_selected,prihtml_selected,SeqNo_old_selected,RSeqNo_old_selected,product_name_old_selected,product_category_id_old_selected,product_itemcode_old_selected,product_itemname_old_selected,product_detail_short_old_selected,product_detail_old_selected,price_old_selected,create_date_old_selected,hot_product_old_selected,brand_id_old_selected,brand_name_old_selected,goods_code_old_selected,brand_code_old_selected,sale_off_product_old_selected,set_id_old_selected,product_setmain_old_selected,product_image_old_selected,product_image_details_old_selected,new_product_old_selected,product_saleoff_price_old_selected,product_status_old_selected,MaterialID_old_selected,MaterialName_old_selected,hashtag_name_old_selected,slug_url_old_selected,link_img_instagram_old_selected,caption_instagram_old_selected,hashtag_instagram_old_selected,prihtml_old_selected, apply_date_selected, is_sold_out_selected, prihtml1_selected, product_name_display_selected, is_show_option_selected, is_recommended_item_selected, is_pre_order_selected, is_fixed_all_option_name_selected, is_color_show_selected, is_contact_selected, is_comming_soon_selected, memo_selected, option_title_selected, product_recovery_selected, search_keywords_selected,  is_sold_out_old_selected, prihtml1_old_selected, product_name_display_old_selected, is_show_option_old_selected, is_recommended_item_old_selected, is_pre_order_old_selected, is_fixed_all_option_name_old_selected, is_color_show_old_selected, is_contact_old_selected, is_comming_soon_old_selected, memo_old_selected, option_title_old_selected, product_recovery_old_selected, search_keywords_old_selected, is_free_ship_selected, free_ship_from_selected, free_ship_to_selected, is_free_ship_old_selected, free_ship_from_old_selected, free_ship_to_old_selected, is_coupon_unavailable_selected, is_coupon_unavailable_old_selected, gender_men_selected, gender_women_selected, gender_unisex_selected, gender_men_old_selected, gender_women_old_selected, gender_unisex_old_selected;
		-- Toan 596930004 20/06/17 -- END
		
		/***********************************************************
		/**                                                        *
		/** Update bang TBL_PRODUCTS                               *
		/**                                                        *
		/**********************************************************/
		SET @myUpdateTblProducts = " UPDATE tbl_products SET ";
		SET @myUpdateTblProductsColumns = CONCAT("product_id = '" , p_product_id , "'");
		SET @myUpdateTblProductsCondition = CONCAT(" WHERE product_id = ", p_product_id , " ");
		SET @IS_COMMA = '';
				
		-- Toan 596930004 20/06/23 -- START
		IF SeqNo_selected != SeqNo_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(SeqNo_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " SeqNo = '"  , REPLACE(SeqNo_selected, "'", "\\'")  , "' ");
			END IF;
		ELSE 
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(SeqNo_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " SeqNo = '"  , REPLACE(SeqNo_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF RSeqNo_selected != RSeqNo_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(RSeqNo_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " RSeqNo = '"  , REPLACE(RSeqNo_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF product_name_selected != product_name_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_name_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_name = '"  , REPLACE(product_name_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF product_category_id_selected != product_category_id_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_category_id_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_category_id = '"  , REPLACE(product_category_id_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF product_itemcode_selected != product_itemcode_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_itemcode_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_itemcode = '"  , REPLACE(product_itemcode_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF product_itemname_selected != product_itemname_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_itemname_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_itemname = '"  , REPLACE(product_itemname_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF product_detail_short_selected != product_detail_short_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_detail_short_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_detail_short = '"  , REPLACE(product_detail_short_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF product_detail_selected != product_detail_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_detail_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_detail = '"  , REPLACE(product_detail_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
/* 
Toan - 200624 - START
		IF price_selected != price_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(price_selected IS NOT NULL AND price_selected != "")	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " price = '"  , REPLACE(price_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
*/
		IF hot_product_selected != hot_product_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(hot_product_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " hot_product = '"  , REPLACE(hot_product_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF brand_id_selected != brand_id_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(brand_id_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " brand_id = '"  , REPLACE(brand_id_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF brand_name_selected != brand_name_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(brand_name_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " brand_name = '"  , REPLACE(brand_name_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF goods_code_selected != goods_code_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(goods_code_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " goods_code = '"  , REPLACE(goods_code_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF brand_code_selected != brand_code_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(brand_code_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " brand_code = '"  , REPLACE(brand_code_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
	
		IF sale_off_product_selected != sale_off_product_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(sale_off_product_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " sale_off_product = '"  , REPLACE(sale_off_product_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF set_id_selected != set_id_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(set_id_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " set_id = '"  , REPLACE(set_id_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF product_setmain_selected != product_setmain_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_setmain_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_setmain = '"  , REPLACE(product_setmain_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF product_image_selected != product_image_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_image_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_image = '"  , REPLACE(product_image_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF product_image_details_selected != product_image_details_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_image_details_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_image_details = '"  , REPLACE(product_image_details_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
		IF new_product_selected != new_product_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(new_product_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " new_product = '"  , REPLACE(new_product_selected, "'", "\\'") , "' ");
			END IF;
		END IF;
/* 
Toan - 200624 - START
		IF product_saleoff_price_selected != product_saleoff_price_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_saleoff_price_selected IS NOT NULL AND product_saleoff_price_selected != "")	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_saleoff_price = '"  , REPLACE(product_saleoff_price_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
*/ 
		IF product_status_selected != product_status_old_selected THEN
			IF (@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_status_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_status = '"  , REPLACE(product_status_selected, "'", "\\'")  , "' ");
			END IF;
			
			IF (product_status_selected = 1) THEN
				-- Modified: 2019/12/25. 358497640 #Yellowdivision｜イエローデビジョン
				-- SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, ", product_active_date = NOW() ");
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, ", active_date = NOW() ");
			END IF;
		END IF;
		IF MaterialID_selected != MaterialID_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(MaterialID_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " MaterialID = '"  , REPLACE(MaterialID_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF MaterialName_selected != MaterialName_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(MaterialName_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " MaterialName = '"  , REPLACE(MaterialName_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF hashtag_name_selected != hashtag_name_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(hashtag_name_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " hashtag_name = '"  , REPLACE(hashtag_name_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF slug_url_selected != slug_url_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(slug_url_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " slug_url = '"  , REPLACE(slug_url_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF link_img_instagram_selected != link_img_instagram_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(link_img_instagram_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " link_img_instagram = '"  , REPLACE(link_img_instagram_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF caption_instagram_selected != caption_instagram_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(caption_instagram_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " caption_instagram = '"  , REPLACE(caption_instagram_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF hashtag_instagram_selected != hashtag_instagram_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(hashtag_instagram_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " hashtag_instagram = '"  , REPLACE(hashtag_instagram_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF prihtml_selected != prihtml_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(prihtml_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " prihtml = '"  , REPLACE(prihtml_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF is_sold_out_selected != is_sold_out_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_sold_out_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_sold_out = '"  , REPLACE(is_sold_out_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		
		
		
		IF prihtml1_selected != prihtml1_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(prihtml1_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " prihtml1 = '"  , REPLACE(prihtml1_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		
		
		IF product_name_display_selected != product_name_display_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_name_display_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_name_display = '"  , REPLACE(product_name_display_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF is_show_option_selected != is_show_option_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_show_option_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_show_option = '"  , REPLACE(is_show_option_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF is_recommended_item_selected != is_recommended_item_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_recommended_item_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_recommended_item = '"  , REPLACE(is_recommended_item_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF is_pre_order_selected != is_pre_order_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_pre_order_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_pre_order = '"  , REPLACE(is_pre_order_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF is_color_show_selected != is_color_show_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_color_show_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_color_show = '"  , REPLACE(is_color_show_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF is_contact_selected != is_contact_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_contact_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_contact = '"  , REPLACE(is_contact_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF gender_men_selected != gender_men_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(gender_men_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " gender_men = '"  , REPLACE(gender_men_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;	
		
		IF gender_women_selected != gender_women_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(gender_women_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " gender_women = '"  , REPLACE(gender_women_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF gender_unisex_selected != gender_unisex_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(gender_unisex_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " gender_unisex = '"  , REPLACE(gender_unisex_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF is_comming_soon_selected != is_comming_soon_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_comming_soon_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_comming_soon = '"  , REPLACE(is_comming_soon_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;		
		
		IF memo_selected != memo_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(memo_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " memo = '"  , REPLACE(memo_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;	
		
		IF option_title_selected != option_title_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(option_title_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " option_title = '"  , REPLACE(option_title_selected, "'", "\\'")   , "' ");
			END IF;
		END IF;		
		
		
		IF product_recovery_selected != product_recovery_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(product_recovery_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " product_recovery = '"  , REPLACE(product_recovery_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		IF search_keywords_selected != search_keywords_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(search_keywords_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " search_keywords = '"  , REPLACE(search_keywords_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		
		-- Toan 596930004 20/06/17 -- START
		IF is_free_ship_selected != is_free_ship_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_free_ship_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_free_ship = '"  , REPLACE(is_free_ship_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF free_ship_from_selected != free_ship_from_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(free_ship_from_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " free_ship_from = '"  , REPLACE(free_ship_from_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF free_ship_to_selected != free_ship_to_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(free_ship_to_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " free_ship_to = '"  , REPLACE(free_ship_to_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		IF is_coupon_unavailable_selected != is_coupon_unavailable_old_selected THEN
			IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
				SET @IS_COMMA = " , ";
			END IF;
			IF(is_coupon_unavailable_selected IS NOT NULL)	THEN
				SET @myUpdateTblProductsColumns  = CONCAT(@myUpdateTblProductsColumns, @IS_COMMA, " is_coupon_unavailable = '"  , REPLACE(is_coupon_unavailable_selected, "'", "\\'")  , "' ");
			END IF;
		END IF;
		-- Toan 596930004 20/06/17 -- END
		-- Toan 596930004 20/06/23 -- END
		
		-- Ket thuc Cong chuoi tao cau lenh update!.
		
		-- INSERT INTO `tbl_sys_log`(`sys_log`) VALUES(@myUpdateTblProductsColumns);
		IF(@myUpdateTblProductsColumns IS NOT NULL AND @myUpdateTblProductsColumns != "")	THEN 
			SET @selectStmt = CONCAT(@myUpdateTblProducts, @myUpdateTblProductsColumns, @myUpdateTblProductsCondition);
			-- INSERT INTO `tbl_sys_log`(`sys_log`) VALUES(@selectStmt);
			PREPARE stmt FROM @selectStmt;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;
			-- ===== END ===============================================================================
			UPDATE 	tbl_products_draft SET is_updated = 1
			WHERE 
				product_id = p_product_id
					and product_draft_id = p_product_draft_id
					AND apply_date < CURRENT_TIMESTAMP() 
					AND is_updated = 0 ;
					
			SELECT 	'OK' AS RESULT, 
				product_draft_id_selected AS product_draft_id,
				SeqNo_selected AS product_SeqNo,
				goods_code_selected AS goods_code,
				p_product_id AS product_id;
				
			-- Toan S20090804 20/09/08 update draft call chung stored - start
			SET counter = 1;
			OPEN Cur1;
			SELECT FOUND_ROWS() INTO recordNum;
			cur1_loop: LOOP	
				FETCH NEXT FROM Cur1 INTO p_SeqNo_loop, p_product_draft_id_loop,p_products_draft_detail_id_loop;
				IF (p_SeqNo_loop!='') THEN
					CALL sp_productDetailCheckUpadteFromTblDraft(p_SeqNo_loop, p_product_draft_id_loop,p_products_draft_detail_id_loop);
				END IF;
				SET counter = counter + 1;
				IF (counter>recordNum) THEN
					LEAVE cur1_loop;
				END IF;
			END LOOP;
			CLOSE Cur1;
			
			SET count_sizeguide = 1;
			OPEN Cur1_sizeguide;
			SELECT FOUND_ROWS() INTO recordNum_sizeguide;
			cur1_sizeguide_loop:LOOP	
				FETCH NEXT FROM Cur1_sizeguide INTO p_SeqNo_sizeguide_loop;
				IF (p_SeqNo_sizeguide_loop!='') THEN
					CALL sp_productSizeGuideCheckUpadteFromTblDraft(p_SeqNo_sizeguide_loop);
				END IF;
				SET count_sizeguide = count_sizeguide + 1;
				IF (count_sizeguide>recordNum_sizeguide) THEN
					LEAVE cur1_sizeguide_loop;
				END IF;
			END LOOP;
			CLOSE Cur1_sizeguide;
			-- Toan S20090804 20/09/08 update draft call chung stored - end
		ELSE 
			SELECT 'THERE IS NO UPDATING_22222!';
		END IF;
	ELSE 
		SELECT 'THERE IS NO UPDATING_1111111!';
	END CASE;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productDetailCheckUpadteFromTblDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productDetailCheckUpadteFromTblDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productDetailCheckUpadteFromTblDraft`(IN `p_product_detail_seqNo` TEXT, IN `p_product_draft_id` TEXT, IN `p_products_draft_detail_id` TEXT)
BEGIN
	-- tbl_products_draft - START
	DECLARE SeqNo_selected VARCHAR(20);
	DECLARE RSeqNo_selected VARCHAR(20);
	DECLARE product_draft_id_selected BIGINT(20);
	DECLARE product_id_selected BIGINT(20);
	DECLARE product_detail_id_selected INT(11);
	DECLARE barcode_selected VARCHAR(20);
	DECLARE color_id_selected INT(11);
	DECLARE color_code_selected VARCHAR(10);
	DECLARE color_name_selected TEXT;
	DECLARE size_id_selected INT(11);
	DECLARE size_code_selected VARCHAR(10);
	DECLARE size_name_selected TEXT;
	DECLARE product_detail_price_selected FLOAT;
	DECLARE product_detail_saleoff_price_selected FLOAT;
	DECLARE product_detail_status_selected TINYINT(4);
	DECLARE product_detail_top_selected TINYINT(4);
	DECLARE product_detail_order_selected INT(11);
	DECLARE num_rank_selected BIGINT(20);
	DECLARE color_slug_url_selected TEXT;
	DECLARE order_status_selected INT(4);
	DECLARE barcode_old_selected VARCHAR(20);
	DECLARE color_id_old_selected INT(11);
	DECLARE color_code_old_selected VARCHAR(10);
	DECLARE color_name_old_selected TEXT;
	DECLARE size_id_old_selected INT(11);
	DECLARE size_code_old_selected VARCHAR(10);
	DECLARE size_name_old_selected TEXT;
	DECLARE product_detail_price_old_selected FLOAT;
	DECLARE product_detail_saleoff_price_old_selected FLOAT;
	DECLARE product_detail_status_old_selected TINYINT(4);
	DECLARE product_detail_top_old_selected TINYINT(4);
	DECLARE product_detail_order_old_selected INT(11);
	DECLARE num_rank_old_selected BIGINT(20);
	DECLARE color_slug_url_old_selected TEXT;
	DECLARE order_status_old_selected INT(4);
	
		
	DECLARE product_detail_price_no_tax_selected 		FLOAT;
	DECLARE product_detail_saleoff_price_no_tax_selected 	FLOAT;
	
	DECLARE product_detail_price_no_tax_old_selected 	FLOAT;
	DECLARE product_detail_saleoff_price_no_tax_old_selected FLOAT;
	
	
	-- Lay thong tin record de thay doi!
	SELECT 
		SeqNo,
		RSeqNo,
		product_draft_id,
		product_id,
		product_detail_id,
		barcode,
		color_id,
		color_code,
		color_name,
		size_id,
		size_code,
		size_name,
		product_detail_price,
		product_detail_saleoff_price,
		product_detail_status,
		product_detail_top,
		product_detail_order,
		num_rank,
		color_slug_url,
		order_status,
		barcode_old,
		color_id_old,
		color_code_old,
		color_name_old,
		size_id_old,
		size_code_old,
		size_name_old,
		product_detail_price_old,
		product_detail_saleoff_price_old,
		product_detail_status_old,
		product_detail_top_old,
		product_detail_order_old,
		num_rank_old,
		color_slug_url_old,
		order_status_old,
		product_detail_price_no_tax,
		product_detail_saleoff_price_no_tax,
	
		product_detail_price_no_tax_old,
		product_detail_saleoff_price_no_tax_old
	FROM 	
		tbl_products_draft_details 
	WHERE 
		SeqNo = p_product_detail_seqNo
		AND product_draft_id = p_product_draft_id
		AND products_draft_detail_id = p_products_draft_detail_id
	LIMIT 1
	INTO 	SeqNo_selected,
		RSeqNo_selected,
		product_draft_id_selected,
		product_id_selected,
		product_detail_id_selected,
		barcode_selected,
		color_id_selected,
		color_code_selected,
		color_name_selected,
		size_id_selected,
		size_code_selected,
		size_name_selected,
		product_detail_price_selected,
		product_detail_saleoff_price_selected,
		product_detail_status_selected,
		product_detail_top_selected,
		product_detail_order_selected,
		num_rank_selected,
		color_slug_url_selected,
		order_status_selected,
		barcode_old_selected,
		color_id_old_selected,
		color_code_old_selected,
		color_name_old_selected,
		size_id_old_selected,
		size_code_old_selected,
		size_name_old_selected,
		product_detail_price_old_selected,
		product_detail_saleoff_price_old_selected,
		product_detail_status_old_selected,
		product_detail_top_old_selected,
		product_detail_order_old_selected,
		num_rank_old_selected,
		color_slug_url_old_selected,
		order_status_old_selected,
		product_detail_price_no_tax_selected,
		product_detail_saleoff_price_no_tax_selected,
	
		product_detail_price_no_tax_old_selected,
		product_detail_saleoff_price_no_tax_old_selected;
 
/***********************************************************
/**                                                        *
/** Update bang TBL_PRODUCTS_DETAIL                        *
/**                                                        *
/**********************************************************/
	SET @myUpdateTblProductsDetail = " UPDATE tbl_products_details SET ";
	SET @myUpdateTblProductsDetailColumns = "";
	SET @myUpdateTblProductsDetailCondition = CONCAT(" WHERE SeqNo = '", p_product_detail_seqNo ,"' ");
	SET @IS_COMMA = "";
	IF barcode_selected != barcode_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " barcode = '"  , barcode_id_selected  ,"' ");
	END IF;
	IF color_id_selected != color_id_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " color_id = '"  , color_id_selected  ,"' ");
	END IF;
	IF color_code_selected != color_code_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " color_code = '"  , color_code_selected  ,"' ");
	END IF;
	IF color_name_selected != color_name_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " color_name = '"  , color_name_selected  ,"' ");
	END IF;
	IF size_id_selected != size_id_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " size_id = '"  , size_id_selected  ,"' ");
	END IF;
	IF size_code_selected != size_code_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " size_code = '"  , size_code_selected  ,"' ");
	END IF;
	IF size_name_selected != size_name_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " size_name = '"  , size_name_selected  ,"' ");
	END IF;
	IF product_detail_price_selected != product_detail_price_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_price = '"  , product_detail_price_selected  ,"' ");
	END IF;
	IF product_detail_saleoff_price_selected != product_detail_saleoff_price_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_saleoff_price = '"  , product_detail_saleoff_price_selected  ,"' ");
	END IF;
	IF product_detail_status_selected != product_detail_status_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_status = '"  , product_detail_status_selected  ,"' ");
	END IF;
	IF product_detail_top_selected != product_detail_top_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_top = '"  , product_detail_top_selected  ,"' ");
	END IF;
	IF product_detail_order_selected != product_detail_order_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_order = '"  , product_detail_order_selected  ,"' ");
	END IF;
	IF num_rank_selected != num_rank_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " num_rank = '"  , num_rank_selected  ,"' ");
	END IF;
	IF color_slug_url_selected != color_slug_url_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " color_slug_url = '"  , color_slug_url_selected  ,"' ");
	END IF;
	IF order_status_selected != order_status_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " order_status = '"  , order_status_selected  ,"' ");
	END IF;
	
	
	
	
	
	
	IF product_detail_price_no_tax_selected != product_detail_price_no_tax_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_price_no_tax = '"  , product_detail_price_no_tax_selected  ,"' ");
	END IF;
	
	
	
	IF product_detail_saleoff_price_no_tax_selected != product_detail_saleoff_price_no_tax_old_selected THEN 
		IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
			SET @IS_COMMA = " , ";
		END IF;
		SET @myUpdateTblProductsDetailColumns  = CONCAT(@myUpdateTblProductsDetailColumns, @IS_COMMA, " product_detail_saleoff_price_no_tax = '"  , product_detail_saleoff_price_no_tax_selected  ,"' ");
	END IF;
	
	
	
	IF (@myUpdateTblProductsDetailColumns IS NOT NULL AND @myUpdateTblProductsDetailColumns != "")	THEN 
		SET @selectStmt = CONCAT(@myUpdateTblProductsDetail, @myUpdateTblProductsDetailColumns, @myUpdateTblProductsDetailCondition);
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		-- ===== END ===============================================================================
		SELECT 	'OK' AS RESULT;
	ELSE 
		SELECT 'THERE IS NO UPDATING!';
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ProductdetailOrderbySizecode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ProductdetailOrderbySizecode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ProductdetailOrderbySizecode`(IN `p_product_id` BIGINT)
BEGIN
	
		-- order theo size
		SELECT * FROM (
			SELECT * FROM tbl_products_details 
			WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)
		) AS pd
			LEFT JOIN (
				SELECT 
					tbl_size.display_order,
					tbl_size.`size_code` AS s_size_code 
				FROM tbl_size
			) AS s
				ON pd.size_code = s.s_size_code
		ORDER BY s.display_order,pd.size_code ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productsets_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productsets_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productsets_getall`()
BEGIN
	SELECT * FROM tbl_product_sets ORDER BY tbl_product_sets.created_at DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productsets_getall_cart` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productsets_getall_cart` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productsets_getall_cart`()
BEGIN
	SET @selectStmtStr = CONCAT("SELECT sets_code, sets_name_display, sets_url, sets_products, sets_price_no_tax, sets_total_product_price_no_tax
								FROM tbl_product_sets 
								WHERE sets_status = 1
								ORDER BY ( sets_total_product_price_no_tax -  sets_price_no_tax ) DESC
								
							");
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productsets_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productsets_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productsets_getbycode`(`p_sets_code` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_product_sets WHERE tbl_product_sets.sets_code = p_sets_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_group_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_group_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_group_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_products_category_group 
	WHERE 
		category_group_status = 1
	ORDER BY category_group_show_order ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_group_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_group_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_group_getById`(IN `p_group_category_Id` VARCHAR(200))
BEGIN
	SELECT * FROM tbl_products_category_group WHERE id = p_group_category_Id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_updaterank` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_updaterank` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_updaterank`(`dgoods_code` VARCHAR(20), `dcolor_code` VARCHAR(10), `dsize_code` VARCHAR(10), `dquantity` BIGINT)
BEGIN
	declare dseqno varchar(20) default '';
        declare dnum_randk bigint default 0;
     select Seqno into dseqno from tbl_products where goods_code=dgoods_code limit 1;
     select num_rank into dnum_randk from tbl_products_details where Rseqno=dseqno and color_code=dcolor_code and size_code=dsize_code limit 1;
 update tbl_products_details set num_rank=dnum_randk+dquantity where Rseqno=dseqno and color_code=dcolor_code and size_code=dsize_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_draft_shop_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_draft_shop_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_draft_shop_add`(IN `p_product_goods_code` VARCHAR(20), IN `p_shop_SeqNo` VARCHAR(20), IN `p_product_draft_id` BIGINT(20))
BEGIN
	INSERT INTO tbl_products_draft_shop (product_goods_code, shop_SeqNo, product_draft_id)
	VALUES (p_product_goods_code, p_shop_SeqNo, p_product_draft_id);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_draft_shop_delete_by_product` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_draft_shop_delete_by_product` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_draft_shop_delete_by_product`(IN `p_product_goods_code` VARCHAR(20), IN `p_product_draft_id` BIGINT(20))
BEGIN
	DELETE FROM tbl_products_draft_shop WHERE product_goods_code = p_product_goods_code AND product_draft_id = p_product_draft_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_hashtag_getAllHashTag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_hashtag_getAllHashTag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_hashtag_getAllHashTag`(IN `p_select_index_from` INT, IN `p_select_index_to` INT)
BEGIN
	-- ================================================
	SELECT
		*
	FROM 	tbl_products_hashtag
	WHERE 
		status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	
	ORDER BY hashtag_title
	LIMIT p_select_index_from, p_select_index_to;
	
	-- ================================================
	SELECT 	COUNT(*) AS total_items
	FROM 	tbl_products_hashtag  
	WHERE 
		STATUS = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_hashtag_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_hashtag_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_hashtag_getById`(IN `p_hashtag_id` BIGINT)
BEGIN
	SELECT * FROM tbl_products_hashtag WHERE hashtag_id = p_hashtag_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_hashtag_getHashtagForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_hashtag_getHashtagForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_hashtag_getHashtagForMenu`()
BEGIN
/**
 * User:hoaxuan
 * Date:03/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, tao danh sach left menu
 */
	SELECT
		PH.*
	FROM tbl_products_hashtag as PH
	WHERE 
		PH.status = 1
		AND PH.is_show_menu = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY hashtag_title;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_hashtag_getTagMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_hashtag_getTagMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_hashtag_getTagMenu`()
BEGIN
	SELECT
		*
	FROM 	tbl_products_hashtag
	WHERE 
		status = 1 AND is_show_menu = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY `hashtag_id` desc;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_options_delete_SeqNoNotIn` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_options_delete_SeqNoNotIn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_options_delete_SeqNoNotIn`(`p_SeqNo_list` VARCHAR(255), `p_RSeqNo` VARCHAR(255))
BEGIN
	SET @selectStmtStr = CONCAT("
			DELETE 	FROM tbl_products_options 
			WHERE 	SeqNo NOT IN (", p_SeqNo_list ,") 
				AND RSeqNo = '", p_RSeqNo, "' ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_options_getbyproduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_options_getbyproduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_options_getbyproduct`(IN `productseqno` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_products_options WHERE RSeqNo=productseqno ORDER BY option_index ASC;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_options_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_options_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_options_save`(IN `p_SeqNo` TEXT, IN `p_RSeqNo` VARCHAR(20), IN `p_option_name` VARCHAR(255), IN `p_option_value` VARCHAR(255), IN `p_option_index` TINYINT)
BEGIN
	IF(p_SeqNo = 0) THEN
		INSERT INTO tbl_products_options (
			RSeqNo,
			option_name,
			option_value,
			option_index,
			create_date
		) VALUES (
			p_RSeqNo,
			p_option_name,
			p_option_value,
			p_option_index,
			NOW()
		);
	ELSE
		UPDATE tbl_products_options
		SET
			option_name	= p_option_name,
			option_value	= p_option_value,
			option_index	= p_option_index
		WHERE 	SeqNo 		= p_SeqNo;
	END IF;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_shop_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_shop_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_shop_add`(IN `p_product_goods_code` VARCHAR(20), IN `p_shop_SeqNo` VARCHAR(20))
BEGIN
	INSERT INTO tbl_products_shop (product_goods_code, shop_SeqNo)
	VALUES (p_product_goods_code, p_shop_SeqNo);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_shop_delete_by_product` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_shop_delete_by_product` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_shop_delete_by_product`(IN `p_product_goods_code` VARCHAR(20))
BEGIN
	DELETE FROM tbl_products_shop WHERE product_goods_code = p_product_goods_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ProductUpdateSlug` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ProductUpdateSlug` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ProductUpdateSlug`(IN `p_lstgoodscode` TEXT CHARSET utf8)
BEGIN
	
	SET @insertStmt = CONCAT('update tbl_products set slug_url=goods_code where goods_code in ',p_lstgoodscode);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
	
	SET @insertStmt = CONCAT('UPDATE `tbl_products_details` SET color_slug_url=color_code WHERE RSeqNo in (select seqno from tbl_products where goods_code in ',p_lstgoodscode,')');
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;                            	  
		
	  SELECT 'ok' AS msg;	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_CountSaleProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_CountSaleProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_CountSaleProduct`()
BEGIN
   SELECT COUNT(*) AS sale FROM tbl_products WHERE tbl_products.`sale_off_product` = 1 AND tbl_products.product_status = 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_DelRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_DelRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_DelRanking`(IN `p_seqno` VARCHAR(100), IN `p_color_code` VARCHAR(100))
BEGIN
	
	update tbl_products_details set product_ranking=0 where RSeqNo=p_seqno and color_code=p_color_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_DelRankingProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_DelRankingProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_DelRankingProduct`(IN `p_seqno` VARCHAR(100))
BEGIN
	update 
		tbl_products_details 
	set 
		product_ranking = 0 
	where 
		RSeqNo = p_seqno;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_getall`()
BEGIN
	SELECT * from tbl_products;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getAllProductGenderFrontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getAllProductGenderFrontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getAllProductGenderFrontend`()
BEGIN
	SELECT
		product_itemcode,
		product_itemname,
		gender_men,
		gender_women,
		gender_unisex
	FROM
		tbl_products
	WHERE
		product_status = 1 and
		(
			gender_men = 1
			or gender_women = 1
			or gender_unisex = 1
		);
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetAllRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetAllRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetAllRanking`()
BEGIN
	
	SELECT tbl_products.`product_id` as p_id,tbl_products.`SeqNo` as p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
		Where tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND tbl_products_details.product_ranking>0 and tbl_products_details.product_ranking is not null
		group by tbl_products.`goods_code`,tbl_products_details.`color_code`
		ORDER BY tbl_products_details.`product_ranking`,tbl_products.goods_code ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetAllRankingByProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetAllRankingByProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetAllRankingByProduct`()
BEGIN
	SELECT 
		tbl_products.product_id as p_id,
		tbl_products.SeqNo 	as p_seqno,
		tbl_products.*,
		tbl_products_details.*
	FROM 
		tbl_products, 
		tbl_products_details 
	Where 
		tbl_products.SeqNo = tbl_products_details.RSeqNo
		AND tbl_products_details.product_ranking > 0
		and tbl_products_details.product_ranking is not null
	group by 
		tbl_products.goods_code
	ORDER BY
		tbl_products_details.product_ranking asc,
		tbl_products_details.is_main_color desc,
		tbl_products.goods_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetAllRankinglimit3` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetAllRankinglimit3` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetAllRankinglimit3`()
BEGIN
	SELECT tbl_products.`product_id` AS p_id,tbl_products.`SeqNo` AS p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
		WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND tbl_products_details.product_ranking>0 AND tbl_products_details.product_ranking IS NOT NULL
		GROUP BY tbl_products.`goods_code`,tbl_products_details.`color_code`
		ORDER BY tbl_products_details.`product_ranking`,tbl_products.goods_code LIMIT 3;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetAllRankinglimit6` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetAllRankinglimit6` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetAllRankinglimit6`()
BEGIN
	SELECT tbl_products.`product_id` AS p_id,tbl_products.`SeqNo` AS p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
		WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND tbl_products_details.product_ranking>0 AND tbl_products_details.product_ranking IS NOT NULL
		GROUP BY tbl_products.`goods_code`,tbl_products_details.`color_code`
		ORDER BY tbl_products_details.`product_ranking`,tbl_products.goods_code LIMIT 6;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetAllRanking_Limit` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetAllRanking_Limit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetAllRanking_Limit`(IN `p_limit_start` BIGINT, IN `p_limit_end` BIGINT)
BEGIN
	SELECT tbl_products.`product_id` AS p_id,tbl_products.`SeqNo` AS p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
		WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND tbl_products_details.product_ranking>0 AND tbl_products_details.product_ranking IS NOT NULL
		GROUP BY tbl_products.`goods_code`,tbl_products_details.`color_code`
		ORDER BY tbl_products_details.`product_ranking`,tbl_products.goods_code 
		LIMIT p_limit_start,p_limit_end;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetBestSellerByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetBestSellerByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetBestSellerByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_is_get_sale_product` TINYINT(1), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE count_number INT;
	DECLARE str  VARCHAR(255);
	DECLARE interval_number INT;
	-- =============================================
	
	SET count_number = 0;
	SET interval_number = 10;
	
	
	-- Tinh toan ngay de select san pham best seller sao cho it nhat dc 10 san pham
	WHILE count_number  <= 10 AND interval_number <= 20 DO
		IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
		-- 
			SELECT COUNT(goods_code) FROM (
				SELECT 	tbl_order_detail.goods_code, COUNT(tbl_order_detail.goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM 	tbl_order_detail
						LEFT JOIN tbl_orders   ON tbl_order_detail.order_code = tbl_orders.order_code
						LEFT JOIN tbl_products ON tbl_order_detail.goods_code = tbl_products.goods_code
				WHERE 	
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category AS cat_tmp WHERE cat_tmp.category_group_id = p_group_category_id)
					AND (
						DATE(tbl_orders.created_on) 
							BETWEEN DATE(NOW()) - INTERVAL interval_number DAY  AND  DATE(NOW())
					)
				GROUP BY goods_code
				ORDER BY total_bought DESC
			) AS tbl_tmp1 INTO count_number ;
		ELSE 
			SELECT COUNT(goods_code) FROM (
				SELECT 	goods_code, COUNT(goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM 	tbl_order_detail 
						LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
				WHERE 	
					DATE(tbl_orders.created_on) 
						BETWEEN DATE(NOW()) - INTERVAL interval_number DAY  AND  DATE(NOW())
				GROUP BY goods_code
				ORDER BY total_bought DESC
			) AS tbl_tmp1 INTO count_number;
		END IF;	
	SET interval_number = interval_number + 10;
	END WHILE;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListBestSeller(p_sort, '');
	-- ----------------------------------------------------
	
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
			
	if (p_is_get_sale_product = 0) then
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.sale_off_product 		<> 1 
			");	
	end if;
	
	-- Modified: 2020/02/07. Chuyen doan kiem tra nay ra vong ngoai cung
	/*IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.goods_code IN (
		
		
			SELECT goods_code FROM (
				SELECT tbl_order_detail.goods_code, COUNT(tbl_order_detail.goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM tbl_order_detail 
					LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
					LEFT JOIN tbl_products pro_tml_2 ON tbl_order_detail.goods_code = pro_tml_2.goods_code
				WHERE 
					pro_tml_2.product_itemcode IN (SELECT ItemCode FROM tbl_products_category AS cat_tmp WHERE cat_tmp.category_group_id = ",p_group_category_id,")
					AND ( DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) )
				GROUP BY goods_code
				ORDER BY total_bought DESC
				LIMIT 0, 11
			) AS tbl_tmp2
			
			
		)  ");
			
			
			
	ELSE 
	SET @selectFromStmt = CONCAT(@selectFromStmt, " 
		AND tbl_products.goods_code IN (
	
	
		SELECT goods_code FROM (
			SELECT goods_code, COUNT(goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
			FROM tbl_order_detail 
				LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
			WHERE 
				 DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) 
			GROUP BY goods_code
			ORDER BY total_bought DESC
			LIMIT 0, 11
		) AS tbl_tmp2
		
		
		
		
	)  ");
				
	END IF;	*/
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = " 
		WHERE stock_num > 0 
	";
	
	-- Modified: 2020/02/07	
	SET @selectJoinTotalBought = '';
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
		SET @selectJoinTotalBought = 
				CONCAT(@selectJoinTotalBought, " 
			 JOIN (
				SELECT tbl_order_detail.goods_code AS tmp_goods_code, COUNT(tbl_order_detail.goods_code) AS total_bought
				FROM tbl_order_detail 
					LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
					LEFT JOIN tbl_products pro_tml_2 ON tbl_order_detail.goods_code = pro_tml_2.goods_code
				WHERE 
					pro_tml_2.product_itemcode IN (SELECT ItemCode FROM tbl_products_category AS cat_tmp WHERE cat_tmp.category_group_id = ",p_group_category_id,")
					AND ( DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) )
				GROUP BY goods_code
				ORDER BY total_bought DESC
								
			) AS tbl_tmp2	
			ON tbl_tmp2.tmp_goods_code = product_info_ok.product_goods_code				
		  ");		
			
	ELSE 
		SET @selectJoinTotalBought = CONCAT(@selectJoinTotalBought, " 
			 JOIN (
				SELECT goods_code AS tmp_goods_code, COUNT(goods_code) AS total_bought 
				FROM tbl_order_detail 
					LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
				WHERE 
					 DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) 
				GROUP BY goods_code
				ORDER BY total_bought DESC
							
			) AS tbl_tmp2		
			ON tbl_tmp2.tmp_goods_code = product_info_ok.product_goods_code
		  ");
				
	END IF;		
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @selectJoinTotalBought, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_getbycode`(IN `p_product_code` TEXT)
BEGIN
	SELECT * FROM tbl_products WHERE tbl_products.`goods_code` = p_product_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_GetBySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_GetBySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_GetBySlugUrl`(IN `p_product_code` TEXT, IN `p_slug_url` TEXT, IN `slug_url` TEXT)
BEGIN
	DECLARE vcode varchar(20);
	SELECT tbl_products.product_code FROM tbl_products WHERE tbl_products.product_status=1 and tbl_products.slug_url = p_slug_url INTO vcode;
		
	SELECT * FROM tbl_products as p	WHERE p.product_code = vcode;
	SELECT * FROM tbl_products_details as pd WHERE pd.product_code = vcode;
	SELECT * FROM tbl_products_material as pm WHERE pm.product_code = vcode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetColorByGoodCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetColorByGoodCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetColorByGoodCode`(IN `p_good_code` VARCHAR(50))
BEGIN
	SELECT p.goods_code, p.product_name, p.sale_off_product, pd.color_code, pd.color_name,
		pd.product_detail_price_no_tax, pd.product_detail_saleoff_price_no_tax, pd.product_detail_price
	FROM tbl_products AS p,tbl_products_details AS pd
	WHERE p.goods_code = p_good_code AND p.SeqNo = pd.RSeqNo
	GROUP BY pd.color_code;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getColorFavorite` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getColorFavorite` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getColorFavorite`(IN `p_customer_id` BIGINT(20), IN `p_goods_id` VARCHAR(50))
BEGIN
/**
 * User:hoaxuan
 * Date:21/12/2018
 * Note: dung de check san pham yeu thich theo tat ca mau cua san pham
 */
 select * from tbl_wish_list where customer_id=p_customer_id and product_id = p_goods_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetDetailsByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetDetailsByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetDetailsByCode`(IN `p_good_code` VARCHAR(50))
BEGIN
		
		SELECT * FROM tbl_products AS p,tbl_products_details AS pd
		WHERE p.goods_code = p_good_code AND p.SeqNo = pd.RSeqNo;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetDetailsByColorCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetDetailsByColorCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetDetailsByColorCode`(IN `p_good_code` VARCHAR(50), IN `p_color_code` VARCHAR(20))
BEGIN
		
		select * from tbl_products as p,tbl_products_details as pd
		where p.goods_code = p_good_code and pd.color_code = p_color_code and p.SeqNo = pd.RSeqNo
		order by pd.size_code;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCode_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCode_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCode_mida`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroupCateItemEIR` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroupCateItemEIR` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroupCateItemEIR`(IN `p_brand_group_id` INT, IN `p_category_code` VARCHAR(200), IN `p_item_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_check_stock` VARCHAR(1), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT, IN `dateCurrent` VARCHAR(20))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	-- =======================================================
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");			
	
	-- =======================================================
	IF 
		p_brand_group_id 	IS NOT NULL 
		AND p_brand_group_id 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF p_item_code = 'sale' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF (p_item_code = 'new' OR p_item_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, 
			" AND tbl_products.new_product = 1 ",
			" AND  ( tbl_products.date_expired > '",dateCurrent, "'",
					" OR tbl_products.date_expired = 0 ",
					" OR tbl_products.date_expired = '0000/00/00'",
					" OR tbl_products.date_expired  IS NULL ",
				" )"
			);
	ELSEIF p_item_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_item_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF (p_item_code = 'restock-items' OR p_item_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.`SizeCode` = tbl_products_details.`size_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF (p_check_stock='1') THEN
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
			AND (stock_num > 0)
		",
		@orderStmt, "
		",@selectLimitStmt);
	ELSE
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	END IF;	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
	
	SELECT * FROM tbl_brands_group WHERE id = p_brand_group_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroupCateSlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroupCateSlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroupCateSlugUrl`(IN `p_brand_group_id` INT, IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
	-- =======================================================	
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	
	
	
	-- =======================================================
	IF 
		p_brand_group_id 	IS NOT NULL 
		AND p_brand_group_id 	<> '-1000' 
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
		");			
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroupEIR` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroupEIR` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroupEIR`(IN `p_brand_group_id` INT, IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_check_stock` VARCHAR(1), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 	VARCHAR(200) DEFAULT NULL;	
	DECLARE brand_name_tmp 	VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 			
			");
	
	-- =======================================================
	IF 
		p_brand_group_id 	IS NOT NULL 
		AND p_brand_group_id 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)");
	END IF;
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
		
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.`SizeCode` = tbl_products_details.`size_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	-- ======================1=====================	
	IF (p_check_stock='1') THEN
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
				AND (stock_num > 0)
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	ELSE
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	END IF;		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ======================2=====================
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ======================3=====================
	SELECT * FROM tbl_brands_group WHERE id = p_brand_group_id;
	
	-- ======================4=====================
	SELECT *
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandSeasonFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandSeasonFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandSeasonFilter`(IN `p_filter_shape_search` VARCHAR(500), IN `p_filter_brand_search` VARCHAR(500), IN `p_filter_size_search` VARCHAR(500), IN `p_filter_color_search` VARCHAR(500), IN `p_filter_season_search` VARCHAR(500), IN `p_filter_type_search_1` VARCHAR(100), IN `p_filter_type_search_2` VARCHAR(100), IN `p_filter_type_search_3` VARCHAR(100), IN `p_price_off_1` VARCHAR(20), IN `p_price_off_2` VARCHAR(20), IN `p_price_off_3` VARCHAR(20), IN `p_price_off_4` VARCHAR(20), IN `p_price_from` VARCHAR(20), IN `p_price_to` VARCHAR(20), IN `p_brand_code` VARCHAR(20), IN `p_season_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_rate_vip` FLOAT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
		
	-- -===============================================================================
	SET @search_by_price = '';
	IF p_price_from <> '' AND p_price_to <> '' THEN
		SET @search_by_price = CONCAT(" AND tbl_products_details.product_detail_saleoff_price_no_tax between ",p_price_from," AND ",p_price_to," ");
	ELSEIF p_price_from <> '' THEN
		SET @search_by_price = CONCAT(" AND tbl_products_details.product_detail_saleoff_price_no_tax > ",p_price_from," ");
	ELSEIF p_price_to <> '' THEN
		SET @search_by_price = CONCAT(" AND tbl_products_details.product_detail_saleoff_price_no_tax < ",p_price_to," ");
	END IF;
	
	-- -===============================================================================	
	SET @search_by_price_off = '';
	IF p_price_off_1 <> '' OR p_price_off_2 <> '' OR p_price_off_3 <> '' OR p_price_off_4 <> '' THEN 
		IF p_price_off_1 <> '' THEN
			SET @search_by_price_off = CONCAT(@search_by_price_off,"OR ROUND(((tbl_products_details.product_detail_saleoff_price_no_tax/tbl_products_details.product_detail_price_no_tax)-1)*100 * -1) BETWEEN 0 AND 30 ");
		END IF;		
		
		IF p_price_off_2 <> '' THEN
			SET @search_by_price_off = CONCAT(@search_by_price_off,"OR ROUND(((tbl_products_details.product_detail_saleoff_price_no_tax/tbl_products_details.product_detail_price_no_tax)-1)*100 * -1) BETWEEN 30 AND 50 ");
		END IF;
		
		IF p_price_off_3 <> '' THEN
			SET @search_by_price_off = CONCAT(@search_by_price_off,"OR ROUND(((tbl_products_details.product_detail_saleoff_price_no_tax/tbl_products_details.product_detail_price_no_tax)-1)*100 * -1) BETWEEN 50 AND 70 ");
		END IF;
		
		IF p_price_off_4 <> '' THEN
			SET @search_by_price_off = CONCAT(@search_by_price_off,"OR ROUND(((tbl_products_details.product_detail_saleoff_price_no_tax/tbl_products_details.product_detail_price_no_tax)-1)*100 * -1) BETWEEN 70 AND 100 ");
		END IF;
		
		SET @search_by_price_off = SUBSTRING(@search_by_price_off, 3);
		SET @search_by_price_off = CONCAT(" AND (",@search_by_price_off,")");
	END IF;
			
	-- -===============================================================================
	SET @orderStmt = getOrderStmtForProductListFamilySale(p_sort, '');
	
	-- -===============================================================================
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- -===============================================================================
	SET @selectStmt = getListColumnForSelectingProductListFamilySale(p_rate_vip);
	
	-- -===============================================================================
	IF (p_customer_id = '') THEN
		SET @selectStmt = CONCAT(@selectStmt,", '0' AS is_wished ");
	END IF;
	SET @selectFromStmt = CONCAT(" FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- -===============================================================================
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	-- -===============================================================================
	IF 
		p_season_code 		IS NOT NULL 
		AND p_season_code 	<> '' 
		AND p_season_code 	<> 'all' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
					AND 
						( tbl_products.season_code like '%",p_season_code,"' 
						OR
						tbl_products.season_name like '%",p_season_code,"' 
						)
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_shape_search 		IS NOT NULL 
		AND p_filter_shape_search 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
					AND 
						 tbl_products.`ShapeCode2` IN (",p_filter_shape_search,")
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_brand_search 		IS NOT NULL 
		AND p_filter_brand_search 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
					AND 
						 tbl_products.`brand_code` IN (",p_filter_brand_search,")
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_season_search 		IS NOT NULL 
		AND p_filter_season_search 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
					AND 
						 tbl_products.`season_code` IN (",p_filter_season_search,")
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_type_search_1 		IS NOT NULL 
		AND p_filter_type_search_1 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
					AND 
						 tbl_products.`sale_off_product` = '0' 
					AND 
						 tbl_products.`family_sale_type` NOT IN ('1','2') 
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_type_search_2 		IS NOT NULL 
		AND p_filter_type_search_2 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 					
					AND 
						 tbl_products.`family_sale_type` = '1' 
				");
	END IF;
	
	-- -===============================================================================
	IF 
		p_filter_type_search_3 		IS NOT NULL 
		AND p_filter_type_search_3 	<> '' 
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 					
					AND 
						 tbl_products.`family_sale_type` = '2' 
				");
	END IF;
	
	-- -===============================================================================
	SET @search_by_size = '';
	IF 
		p_filter_size_search 		IS NOT NULL 
		AND p_filter_size_search 	<> '' 
	THEN
		SET @search_by_size = CONCAT(" 
					AND 
						 tbl_products_details.`size_code` IN (",p_filter_size_search,")
				");
	END IF;
	
	-- -===============================================================================
	SET @search_by_color = '';
	IF 
		p_filter_color_search 		IS NOT NULL 
		AND p_filter_color_search 	<> '' 
	THEN
		SET @search_by_color = CONCAT(" 
					AND 
						 tbl_products_details.`color_code` IN (",p_filter_color_search,")
				");
	END IF;
	
	-- -===============================================================================
	SET @fullColorSelectFromStmt = CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");			
	SET @selectGroupStmt = CONCAT(@search_by_color,@search_by_size,@search_by_price,@search_by_price_off,"
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
		
	SET @selectGroup2Stmt = CONCAT(@search_by_color,@search_by_size,@search_by_price,@search_by_price_off,"
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	SET @selectStmt2Str = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroup2Stmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroup2Stmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	-- -===============================================================================	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- -===============================================================================	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- -===============================================================================	
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
	
	-- -===============================================================================	
	-- lay tat ca mau size cua danh sach san pham
	SET @selectStmt2StrRun = CONCAT(@selectStmt2Str, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmt2StrRun);
	PREPARE stmt FROM @selectStmt2StrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCateAndBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCateAndBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCateAndBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_group_category_id` INT, IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListDateTime(p_category_code, p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	-- -===============================================================================
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	END IF;
	
	-- -===============================================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
	
	-- Get item info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @shop_list = '';
	IF p_shop_list <> "'-1999'" THEN
		SET @shop_list = CONCAT("AND ShopCode IN (", p_shop_list ,") ");
	END IF;
	
	IF (p_customer_id <> '') THEN
		SET @wish_list_info = CONCAT(", wish_list_info.*");
	ELSE
		SET @wish_list_info = " ";
	END IF;
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* ", @wish_list_info ," FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ,"
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategoryCodekuno_CATHERINE` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategoryCodekuno_CATHERINE` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategoryCodekuno_CATHERINE`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	-- -===============================================================================
	
	/* SET @shop_list = '';
	IF p_shop_list <> "'-1999'" THEN
		SET @shop_list = CONCAT("AND ShopCode IN (", p_shop_list ,") ");
	END IF;
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ,"
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND(
		   p_stock IS NOT NULL AND p_stock = '1'
		)
		
		THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	 -- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategoryCode_CATHERINE` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategoryCode_CATHERINE` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategoryCode_CATHERINE`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	-- -===============================================================================
	
	/* SET @shop_list = '';
	IF p_shop_list <> "'-1999'" THEN
		SET @shop_list = CONCAT("AND ShopCode IN (", p_shop_list ,") ");
	END IF;
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ,"
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND(
		   p_stock IS NOT NULL AND p_stock = '1'
		)
		
		THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	 -- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategoryCode_Filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategoryCode_Filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategoryCode_Filter`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_brand_code` VARCHAR(20), IN `p_size_code` VARCHAR(20), IN `p_color_code` VARCHAR(20))
BEGIN
/**
 * User:hoaxuan
 * Note: loc them san pham theo brand, item, color, size: dung cho harmony, fashion
 */	
	-- -===============================================================================
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get item name for search
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	-- -===============================================================================
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- -===============================================================================
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	-- -=============================================================================== 
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	-- -=============================================================================== 
	IF  p_brand_code 	<> '' 
	THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
		
	IF  p_size_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	IF  p_color_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	
	-- -===============================================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
		
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- -===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
	");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	-- -===============================================================================
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategoryCode_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategoryCode_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategoryCode_mida`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @shop_list = '';
	IF p_shop_list <> "'-1999'" THEN
		SET @shop_list = CONCAT("AND ShopCode IN (", p_shop_list ,") ");
	END IF;
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ,"
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND(
		   p_stock IS NOT NULL AND p_stock = '1'
		)
		
		THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	 -- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySeasonSizeColorAndBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySeasonSizeColorAndBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySeasonSizeColorAndBrand`(IN `p_category_code` VARCHAR(200), IN `p_season_code` VARCHAR(200), IN `p_size_code` TEXT, IN `p_color_code` TEXT, IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE season_name_tmp 	VARCHAR(200) DEFAULT NULL;
	DECLARE brand_count_tmp 	INT DEFAULT 0;
	DECLARE season_count_tmp 	INT DEFAULT 0;
	
	
	SELECT (
		CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
		ELSE 
				tbl_products_category.name_display
		END
		) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	
	SELECT 
		(
		CASE WHEN set_season_name_display IS NULL OR set_season_name_display = '' THEN
			set_season_name
		ELSE 
			set_season_name_display
		END
		) AS set_season_name 
	FROM 
		tbl_set_seasons 
	WHERE 	
		set_season_code = p_season_code
	INTO 	season_name_tmp;
	SELECT count(brand_code) 
	FROM 
		tbl_brands 
	WHERE 
		brand_name_display = brand_name_tmp
		or brand_name = brand_name_tmp
	INTO brand_count_tmp;
	SELECT 
		COUNT(set_season_code) 
	FROM 	tbl_set_seasons 
	WHERE 
		set_season_name = season_name_tmp 
		OR set_season_name_display = season_name_tmp
	INTO 	season_count_tmp;
	
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
			
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	-- Add season code
	
	IF 
		p_season_code 		IS NOT NULL 
		AND p_season_code 	<> '' 
	THEN
		if season_count_tmp 	> 0 then 
		
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
					AND tbl_products.season_code IN (SELECT set_season_code FROM tbl_set_seasons as season_tmp where season_tmp.set_season_name = '",season_name_tmp,"' OR season_tmp.set_season_name_display = '",season_name_tmp,"') ");
		else 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
					AND tbl_products.season_code = '",p_season_code,"' ");
		end if;
	END IF;
	
	
	-- Size code	
	IF 
		p_size_code 		IS NOT NULL 
		AND p_size_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	-- Color code
	IF 
		p_color_code 		IS NOT NULL 
		AND p_color_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	
	
	IF 
		p_brand_code 		IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		if brand_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
		else 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code = '",p_brand_code,"' ");
		end if;
	END IF;
	
	-- Set full color or only one main color.
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	-- Group by
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySeasonSizeColorAndBrandImgAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySeasonSizeColorAndBrandImgAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySeasonSizeColorAndBrandImgAll`(IN `p_category_code` VARCHAR(200), IN `p_season_code` VARCHAR(200), IN `p_size_code` TEXT, IN `p_color_code` TEXT, IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE season_name_tmp 	VARCHAR(200) DEFAULT NULL;
	DECLARE brand_count_tmp 	INT DEFAULT 0;
	DECLARE season_count_tmp 	INT DEFAULT 0;
	
	
	SELECT (
		CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
		ELSE 
				tbl_products_category.name_display
		END
		) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	
	
	SELECT 
		(
		CASE WHEN set_season_name_display IS NULL OR set_season_name_display = '' THEN
			set_season_name
		ELSE 
			set_season_name_display
		END
		) AS set_season_name 
	FROM 
		tbl_set_seasons 
	WHERE 	
		set_season_code = p_season_code
	INTO 	season_name_tmp;
	SELECT count(brand_code) 
	FROM 
		tbl_brands 
	WHERE 
		brand_name_display = brand_name_tmp
		or brand_name = brand_name_tmp
	INTO brand_count_tmp;
	SELECT 
		COUNT(set_season_code) 
	FROM 	tbl_set_seasons 
	WHERE 
		set_season_name = season_name_tmp 
		OR set_season_name_display = season_name_tmp
	INTO 	season_count_tmp;
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
			
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	-- Add season code
	
	IF 
		p_season_code 		IS NOT NULL 
		AND p_season_code 	<> '' 
	THEN
		if season_count_tmp 	> 0 then 
		
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
					AND tbl_products.season_code IN (SELECT set_season_code FROM tbl_set_seasons as season_tmp where season_tmp.set_season_name = '",season_name_tmp,"' OR season_tmp.set_season_name_display = '",season_name_tmp,"') ");
		else 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
					AND tbl_products.season_code = '",p_season_code,"' ");
		end if;
	END IF;
	
	
	-- Size code	
	IF 
		p_size_code 		IS NOT NULL 
		AND p_size_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	-- Color code
	IF 
		p_color_code 		IS NOT NULL 
		AND p_color_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	
	
	IF 
		p_brand_code 		IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		if brand_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
		else 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code = '",p_brand_code,"' ");
		end if;
	END IF;
	
	-- Set full color or only one main color.
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, " ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, " ");
			
	-- Group by
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code ");
	
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			", @selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok  ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySlugUrl`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		or p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
		OR p_SlugUrl 	<> 'outlet'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
		AND p_SlugUrl 	<> 'outlet'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'outlet' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_coupon_unavailable = 1  ");
	END IF;
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		or p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");	
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
	
	if p_group_category_id is not null OR p_group_category_id <> ''
	then
		SELECT 	*
		FROM 	tbl_products_category_group
		WHERE 	id = p_group_category_id;
	end if;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySlugUrl_cse` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySlugUrl_cse` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySlugUrl_cse`(IN `p_SlugUrl` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		or p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByGroupCategoryIdFilter_all` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByGroupCategoryIdFilter_all` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByGroupCategoryIdFilter_all`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search_hashtag` VARCHAR(10000), IN `p_gender` VARCHAR(50), IN `p_size` VARCHAR(50), IN `p_color` VARCHAR(50), IN `p_keyword` VARCHAR(50), IN `p_color_sort` INT(10), IN `p_onsale` INT(1))
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	
	SET @p_filter_condition = '';
	
	-- ----------------------------------------------------
	IF (p_sort = 'color') THEN
		SET @orderStmt = CONCAT("
		ORDER BY
			(CASE cdo
			 WHEN NULL THEN 1
			 WHEN '",p_color_sort,"' THEN 1
			 WHEN '",p_color_sort+1,"' THEN 2
			 WHEN '",p_color_sort-1,"' THEN 3
			 ELSE 10 END) ASC,
			cdo ASC,
			pro_detail_num_order DESC, 
			CAST(product_active_date AS DATE) 	DESC,
			product_goods_code 			ASC
		");
		
		SET @selectColorSort = CONCAT("
			LEFT JOIN (
				SELECT 	
					color_code as colors_color_code,
					color_name,
					color_displayorder AS cdo
				FROM 	
					tbl_colors
			) AS color_info
				ON color_info.colors_color_code	= product_info_final.pro_detail_color_code ");
	ELSE
		SET @orderStmt = getOrderStmtForProductList(p_sort, '');
		SET @selectColorSort = '';
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	IF  p_category_code IS NOT NULL AND p_category_code <> '' THEN
		SET @category_code = p_category_code;
	END IF;
	
	SET p_add_and_condition_str = getSearchQuery(@category_code,p_price_start,p_price_end,'',p_search_brand,p_search_status);
	SET @p_filter_condition = getFilterQuery(p_search_hashtag,'','','',p_search_brand);
	
	SET @addition_condition = '';
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	SET @addition_condition_rentsale = '';
	IF (p_onsale = '1') THEN
		SET @addition_condition_rentsale = 
		CONCAT("
WHERE product_info_final.stock_num > 0
OR product_info_final.stock_num IS NOT NULL
OR product_info_final.stock_num != ''");
	END IF;
	
	IF (p_size IS NOT NULL AND p_size <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.size_code IN (",p_size,")"); 
	END IF;
	
	IF (p_color IS NOT NULL AND p_color <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products_details.color_code IN (",p_color,")");
	END IF;
	
	IF (p_keyword IS NOT NULL AND p_keyword <> '') THEN
		SET @addition_condition = 
		CONCAT(@addition_condition," AND tbl_products.search_keywords like '%",p_keyword,"%'");
	END IF;
	
	IF (p_search_keyword IS NOT NULL AND p_search_keyword <> '') THEN
		SET @addition_condition = CONCAT(@addition_condition, " 
			AND (
			1=2" );
		SET @search = p_search_keyword;
		WHILE @search != '' DO
			SET @tmp_search = SUBSTRING_INDEX(@search,' ',1);
			SET @search = SUBSTRING(@search, CHAR_LENGTH(@tmp_search) + 1 + CHAR_LENGTH(','));
			SET @addition_condition =  CONCAT(@addition_condition, "
			OR tbl_products.product_name 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.product_name_display 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.goods_code 			like '%",REPLACE (@tmp_search," ",""),"%'			
			OR tbl_products.brand_name 			like '%",REPLACE (@tmp_search," ",""),"%'			
			OR tbl_products.product_itemname 		like '%",REPLACE (@tmp_search," ",""),"%'
			OR tbl_products.search_keywords 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.product_detail 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products.prihtml1 			like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.barcode 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.color_name 		like '%",REPLACE (@tmp_search," ",""),"%' 
			OR tbl_products_details.size_name 		like '%",REPLACE (@tmp_search," ",""),"%'");
		END WHILE;
		
		
		SET @addition_condition = CONCAT(@addition_condition, "
			)" );
	END IF;
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
		OR (p_category_code IS NOT NULL AND p_category_code 	<> '')
	THEN
		SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	IF 	
		@category_code <> ''
		OR p_price_start <> ''
		OR p_price_end <> ''
		OR p_search_brand <> ''
		OR @p_filter_condition <> '' 
		OR @addition_condition <> ''
	THEN	
		SET @limit_if_condition = '';
	ELSE
		SET @limit_if_condition = ' LIMIT 1000';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details",@tbl_category,"
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, @p_filter_condition, @addition_condition,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND (p_category_code = '' OR p_category_code IS NULL)
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- SET @getStockNumberStmt = ' 1 as stock_num ';
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	-- -===============================================================================
	SET @selectStmtStrTotal = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt);
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT product_info_limit.*,
			", @selectJoinWishListStmt, @getStockNumberStmt, " 
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info_limit  
	) AS product_info_final ");
	-- -===============================================================================
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr,"
", @orderStmt, "
", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStrRun3 = CONCAT("SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode ='", p_category_code, "'");
	-- SET @selectStmtStrRunNoLimit = CONCAT(@selectStmtNoLimit, @selectFromStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRunNoLimit);
	
	PREPARE stmt3 FROM @selectStmtStrRun3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
	-- INSERT INTO tbl_sys_log(sys_log) VALUES ('out');
	
	-- -===============================================================================
	SET @selectStmtStr4 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
		) AS TBL_TMP ");
	/*	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStrTotal, "
		) AS TBL_TMP ");
		*/
	
	PREPARE stmt2 FROM @selectStmtStr4;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByKeycate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByKeycate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByKeycate`(IN `p_keyword_id` BIGINT(11), IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code IN (",(SELECT CASE WHEN keyword_content IS NULL OR keyword_content = '' THEN "'-9999'" ELSE keyword_content END FROM tbl_keyword WHERE keyword_id = p_keyword_id),") ");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				AND tbl_products.goods_code IN (",(SELECT CASE WHEN keyword_content IS NULL OR keyword_content = '' THEN "'-9999'" ELSE keyword_content END FROM tbl_keyword WHERE keyword_id = p_keyword_id),") 
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductFilter_Price` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductFilter_Price` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductFilter_Price`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_product_detail_price` FLOAT, IN `p_category_group_id` TEXT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
		
	/*IF p_color_codes IS NOT NULL  AND p_color_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code  IN (",p_color_codes,")");
	
	END IF;*/
	IF (p_product_detail_price = 1000) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price,",tbl_products_details.product_detail_price <= ",p_product_detail_price,")");
	ELSEIF (p_product_detail_price = 5000) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price > 1000 AND tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price,",tbl_products_details.product_detail_price > 1000 AND tbl_products_details.product_detail_price <= ",p_product_detail_price,")");
	ELSEIF (p_product_detail_price = 10000) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price > 5000 AND tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price,",tbl_products_details.product_detail_price > 5000 AND tbl_products_details.product_detail_price <= ",p_product_detail_price,")");
	ELSEIF (p_product_detail_price = 20000) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price > 10000 AND tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price,",tbl_products_details.product_detail_price > 10000 AND tbl_products_details.product_detail_price <= ",p_product_detail_price,")");
	ELSEIF (p_product_detail_price = 30000) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price > 20000 AND tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price,",tbl_products_details.product_detail_price > 20000 AND tbl_products_details.product_detail_price <= ",p_product_detail_price,")");
	ELSEIF (p_product_detail_price = 30001) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(tbl_products.sale_off_product=1,tbl_products_details.product_detail_saleoff_price >= ",p_product_detail_price,",tbl_products_details.product_detail_price >= ",p_product_detail_price,")");
	END IF;
	
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
		AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id IN (",p_category_group_id,") ) 
		");
	END IF;		
	
		
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductPriceByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductPriceByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductPriceByCode`(IN `p_goods_code` VARCHAR(100))
BEGIN
	SELECT 
		product_detail_price,
		product_detail_saleoff_price,
		product_detail_price_no_tax,
		product_detail_saleoff_price_no_tax,
		product_goods_code
	FROM
		tbl_products_details
	WHERE 
		product_goods_code = p_goods_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductRankingHaveStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductRankingHaveStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductRankingHaveStock`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' OR p_sort = 'ranking' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_ranking ASC, product_goods_code 	ASC ';
	END IF;
	
	
	
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products_details.product_ranking > 0
			AND tbl_products_details.product_ranking is not null ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @selectFromStmt, @selectGroupStmt, " 
			) AS all_product 
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
				(
					SELECT 					
						(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
							SUM(tbl_stock_num.StockNum) 
						ELSE 
							0 
						END) AS stock_num_tmp
					FROM tbl_stock_num
					WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
						AND tbl_stock_num.StockNum <> 0 
						AND tbl_stock_num.r_product_detail_status = 0 
						AND ShopCode IN (", p_shop_list ,") 
				) AS stock_num", @selectFromStmt, @selectGroupStmt, " 
			) AS all_product 
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	IF p_category_code IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'ranking') THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_InsertShopStock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_InsertShopStock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_InsertShopStock`(IN `p_ShopCode` VARCHAR(255), IN `p_GoodCode` VARCHAR(255), IN `p_ColorCode` VARCHAR(255), IN `p_SizeCode` VARCHAR(255))
BEGIN
	insert into tbl_stock_num(
		ShopCode,
		GoodCode,
		ColorCode,
		SizeCode,
		StockNum
	) values (
		p_ShopCode,
		p_GoodCode,
		p_ColorCode,
		p_SizeCode,
		10
	);
			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_load_imgsv` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_load_imgsv` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_load_imgsv`()
BEGIN
	SELECT p.`goods_code`,pd.color_code FROM tbl_products as p, tbl_products_details as pd 
	Where p.seqno = pd.rseqno
	Group by p.goods_code,pd.color_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_load_imgsv_blank` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_load_imgsv_blank` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_load_imgsv_blank`()
BEGIN
	SELECT p.`goods_code`,pd.color_code FROM tbl_products as p, tbl_products_details as pd 
	Where p.seqno = pd.rseqno and (p.`product_image_server` = '' or p.`product_image_server` is null)
	Group by p.goods_code,pd.color_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_option_GetMenuHellHeight` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_option_GetMenuHellHeight` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_option_GetMenuHellHeight`()
BEGIN
	SELECT 	
		*, 
		CONCAT(option_name, option_value) AS MENU_DISPLAY  
	FROM 	tbl_products_options 
	WHERE 	UPPER(option_name) = UPPER('ヒール高') 
	GROUP BY option_value;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_savedateactive` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_savedateactive` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_savedateactive`(IN `p_goods_code` VARCHAR(50))
BEGIN
	UPDATE tbl_products
		SET
			tbl_products.active_date = now()
		WHERE
			tbl_products.goods_code = p_goods_code;
			
	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_savedateactive_hapuna` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_savedateactive_hapuna` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_savedateactive_hapuna`(IN `p_goods_code` VARCHAR(50))
BEGIN
	-- lam cho hapuna, chi luu lai ngay active o lan dau tien thay doi trang thai
	UPDATE tbl_products
		SET
			tbl_products.active_date = now(),
			tbl_products.`is_active_first` = 1
		WHERE
			tbl_products.goods_code = p_goods_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_SaveNumOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_SaveNumOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_SaveNumOrder`(IN `p_sql` LONGTEXT)
BEGIN		
	WHILE p_sql != '' DO
		SET @tmpSQL = SUBSTRING_INDEX(p_sql, ";", 1);
		-- INSERT INTO tbl_sys_log(sys_log) VALUES(@tmpSQL);
		SET p_sql = SUBSTRING(p_sql, CHAR_LENGTH(@tmpSQL) + 1 + CHAR_LENGTH(";"));
		PREPARE stmt FROM @tmpSQL;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	END WHILE;	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES('DONE');
	select 'OK' as result;			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_SaveTagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_SaveTagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_SaveTagInstagram`(IN `p_good_code` VARCHAR(20), IN `p_hashtag` TEXT, IN `p_link_img` TEXT, IN `p_caption` TEXT)
BEGIN
		UPDATE tbl_products
		SET
			tbl_products.link_img_instagram = p_link_img,
			tbl_products.caption_instagram = p_caption,
			tbl_products.hashtag_instagram =p_hashtag
		WHERE
			tbl_products.goods_code = p_good_code;
			
	
	
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_save_multi` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_save_multi` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_save_multi`(`p_sql` TEXT)
BEGIN
	SET @selectStmt2 = 'Update tbl_products Set ';
	SET @selectStmt2 = CONCAT(@selectStmt2,p_sql);
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_save_multi_draft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_save_multi_draft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_save_multi_draft`(IN `p_goods_code` VARCHAR(50), IN `p_field_draft` TEXT, IN `p_status_draft` TEXT)
BEGIN
	SET @p_status_draft = REPLACE (p_status_draft,"p_goods_code",concat("'",p_goods_code,"'"));
	SET @selectStmt = concat("
		INSERT INTO tbl_products_draft (
			SeqNo,
			RSeqNo,
			product_name,
			product_category_id,
			product_itemcode,
			product_itemname,
			product_detail_short,
			product_detail,
			price,
			create_date,
			hot_product,
			brand_id,
			brand_name,
			goods_code,
			brand_code,
			set_id,
			product_setmain,
			product_image,
			product_image_details,
			product_saleoff_price,
			MaterialID,
			MaterialName,
			hashtag_name,
			slug_url,
			link_img_instagram,
			caption_instagram,
			hashtag_instagram,
			prihtml,
			product_id,
			SeqNo_old,
			RSeqNo_old,
			product_name_old,
			product_category_id_old,
			product_itemcode_old,
			product_itemname_old,
			product_detail_short_old,
			product_detail_old,
			price_old,
			create_date_old,
			hot_product_old,
			brand_id_old,
			brand_name_old,
			goods_code_old,
			brand_code_old,
			sale_off_product_old,
			set_id_old,
			product_setmain_old,
			product_image_old,
			product_image_details_old,
			new_product_old,
			product_saleoff_price_old,
			product_status_old,
			MaterialID_old,
			MaterialName_old,
			hashtag_name_old,
			slug_url_old,
			link_img_instagram_old,
			caption_instagram_old,
			hashtag_instagram_old,
			prihtml_old,
			is_sold_out_old,
			prihtml1,
			product_name_display,
			is_show_option,
			is_pre_order,
			is_fixed_all_option_name,
			is_color_show,
			is_contact,
			is_comming_soon,
			memo,
			option_title,
			product_recovery,
			search_keywords,
			prihtml1_old,
			product_name_display_old,
			is_show_option_old,
			is_recommended_item_old,
			is_pre_order_old,
			is_fixed_all_option_name_old,
			is_color_show_old,
			is_contact_old,
			is_comming_soon_old,
			memo_old,
			option_title_old,
			product_recovery_old,
			search_keywords_old,
			is_free_ship_old,
			free_ship_from_old,
			free_ship_to_old,
			is_coupon_unavailable_old,"
			,p_field_draft, "
		) VALUES (
			(SELECT SeqNo 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT RSeqNo 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_name 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_category_id 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_itemcode 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_itemname 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_detail_short 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_detail 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT price 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			NOW(),
			(SELECT hot_product 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_id 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_name 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT goods_code 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_code 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT set_id 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_setmain 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_image 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_image_details 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_saleoff_price 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT MaterialID 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT MaterialName 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT hashtag_name 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT slug_url 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT link_img_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT caption_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT hashtag_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT prihtml 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_id 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT SeqNo 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT RSeqNo 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_name 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_category_id 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_itemcode 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_itemname 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_detail_short 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_detail 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT price 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT create_date 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT hot_product 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_id 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_name 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT goods_code 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT brand_code 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT sale_off_product 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT set_id 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_setmain 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_image 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_image_details 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT new_product 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_saleoff_price 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_status 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT MaterialID 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT MaterialName 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT hashtag_name 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT slug_url 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT link_img_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT caption_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT hashtag_instagram 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT prihtml 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_sold_out 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT prihtml1 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_name_display 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_show_option 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_pre_order 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_fixed_all_option_name 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_color_show 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_contact 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_comming_soon 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT memo 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT option_title 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_recovery 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT search_keywords 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT prihtml1 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_name_display 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_show_option 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_recommended_item 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_pre_order 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_fixed_all_option_name 	FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_color_show			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_contact 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_comming_soon 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT memo 				FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT option_title 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT product_recovery 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT search_keywords 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_free_ship 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT free_ship_from 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT free_ship_to 			FROM tbl_products WHERE goods_code = '",p_goods_code,"'),
			(SELECT is_coupon_unavailable 		FROM tbl_products WHERE goods_code = '",p_goods_code,"'),"
			,@p_status_draft,
			")"
			);
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt);
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_sets_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_sets_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_sets_delete`(`p_sets_code` VARCHAR(20))
BEGIN
	DELETE FROM tbl_product_sets WHERE sets_code = p_sets_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_UpdateRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_UpdateRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_UpdateRanking`(IN `p_seqno` VARCHAR(100), IN `p_color_code` VARCHAR(100), IN `p_rank` INT)
BEGIN
	
	UPDATE tbl_products_details SET product_ranking=p_rank WHERE RSeqNo=p_seqno AND color_code=p_color_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_UpdateRankingProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_UpdateRankingProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_UpdateRankingProduct`(IN `p_seqno1` VARCHAR(100), IN `p_rank1` INT, IN `p_seqno2` VARCHAR(100), IN `p_rank2` INT)
BEGIN
	update 
		tbl_products_details 
	set 
		product_ranking = p_rank1
	where 
		RSeqNo = p_seqno1;
	update 
		tbl_products_details 
	set 
		product_ranking = p_rank2 
	where 
		RSeqNo = p_seqno2;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_update_image_server` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_update_image_server` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_update_image_server`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = atData;
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_uploadfile` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_uploadfile` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_uploadfile`(IN `p_good_code` VARCHAR(20), IN `p_product_image` VARCHAR(255) CHARSET utf8, IN `p_product_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE tbl_products
	SET
		tbl_products.product_image = CASE WHEN p_product_image = '' THEN tbl_products.product_image ELSE p_product_image END,
		tbl_products.product_image_details = CONCAT(CASE WHEN tbl_products.product_image_details IS NULL THEN '' ELSE tbl_products.product_image_details END,',',p_product_image_detail)
	WHERE REPLACE(tbl_products.`goods_code`,'/','-') = REPLACE(p_good_code,'/','-');
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_quickDelete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_quickDelete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_quickDelete`(IN `p_table` VARCHAR(255), IN `p_param_id` VARCHAR(255), IN `p_id_name` VARCHAR(200))
BEGIN
	SET @sql_stmt = CONCAT("
	DELETE FROM tbl_",p_table," 
	WHERE 	",p_id_name," = '",p_param_id,"'
	");
	
	PREPARE stmt FROM @sql_stmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_quickEdit` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_quickEdit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_quickEdit`(IN `p_table` VARCHAR(255), IN `p_param_id` INT(10), IN `p_value` VARCHAR(250), IN `p_column_name` VARCHAR(200), IN `p_id_name` VARCHAR(200))
BEGIN
	SET @sql_stmt = CONCAT("
	UPDATE 	tbl_",p_table," 
	SET 	",p_column_name," = '",p_value,"' 
	WHERE 	",p_id_name," = '",p_param_id,"'
	");
	
	PREPARE stmt FROM @sql_stmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_recent_view_delete_cron` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_recent_view_delete_cron` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_recent_view_delete_cron`()
BEGIN
	DELETE FROM tbl_recent_view WHERE TIMESTAMPDIFF(MINUTE,`recent_time`, CURRENT_TIMESTAMP)>=10;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_recommended_addrow` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_recommended_addrow` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_recommended_addrow`(IN `p_rec_ss_time` VARCHAR(255), IN `p_rec_list_product` TEXT, IN `p_rec_create_date` DATE)
BEGIN
	
	INSERT INTO tbl_rec_list(rec_session_time, rec_list_product, rec_create_date)
	VALUE (p_rec_ss_time, p_rec_list_product, p_rec_create_date)
	ON DUPLICATE KEY UPDATE rec_list_product = p_rec_list_product;
		
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_recommended_deletelist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_recommended_deletelist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_recommended_deletelist`()
BEGIN
	
	DELETE from tbl_rec_list WHERE tbl_rec_list.rec_create_date >= ( CURDATE() - INTERVAL 10 DAY );
		
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_recommended_getlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_recommended_getlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_recommended_getlist`(IN `p_good_code` VARCHAR(20))
BEGIN
	
	Select * from tbl_rec_list WHERE tbl_rec_list.rec_list_product like Concat('%',p_good_code,'%');
		
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_registercustomerbycart` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_registercustomerbycart` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_registercustomerbycart`(IN `dpassword` VARCHAR(50), IN `demail` VARCHAR(255), IN `dbirthday` VARCHAR(50), IN `dmailmagazine` INT)
BEGIN
UPDATE tbl_customers SET passwords=dpassword,customer_status=0,`birthday`=dbirthday,`emailmagazine`=dmailmagazine  WHERE email=demail AND customer_status=2;
SELECT 'OK' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_approve` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_approve` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_approve`(IN `p_review_id` INT, IN `p_ispublic` INT)
BEGIN
  UPDATE tbl_review SET tbl_review.ispublic = p_ispublic WHERE id = p_review_id;
	SELECT 'ok' as msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_deleteById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_deleteById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_deleteById`(IN `p_review_id` INT)
BEGIN
  UPDATE tbl_review SET tbl_review.ispublic = 3 WHERE id = p_review_id;
	SELECT 'ok' as msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_getById`(IN `p_review_id` VARCHAR(255))
BEGIN
  SELECT product_name,
  size_name,color_name,goods_code,color_code,order_detail_id,order_id,product_id,
  review_images,review_comment,review_numstar,status,ispublic,customer_name,customer_code,
  date_create,date_modifire,product_image,order_code,status,ispublic,id    
  FROM tbl_review
  WHERE tbl_review.id =p_review_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_getlistcustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_getlistcustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_getlistcustomer`(IN `p_date` VARCHAR(20))
BEGIN
select customer_email,DATE_ADD(shipped_on, INTERVAL p_date DAY) as date_send,order_id  from tbl_orders where DATE_ADD(shipped_on, INTERVAL p_date DAY) = CURDATE()
	and (is_send_email = 0 or is_send_email is null) and 	
	status = 2 and shipped_on IS NOT NULL 
	and shipped_on <> '' ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_getOrderById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_getOrderById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_getOrderById`(IN `p_order_id` VARCHAR(255))
BEGIN
  SELECT product_name,
  size_name,color_name,goods_code,color_code,order_detail_id,order_id,product_id,
  review_images,review_comment,review_numstar,status,ispublic,customer_name,customer_code,
  date_create,date_modifire,product_image,order_code,status,ispublic,id    
  FROM tbl_review
  WHERE tbl_review.`order_detail_id` =p_order_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_getSetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_getSetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_getSetting`()
BEGIN
	SELECT * FROM tbl_review_setting LIMIT 0,1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_sendemail_complete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_sendemail_complete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_sendemail_complete`(IN `p_order_id` TEXT)
BEGIN
SET @select = CONCAT('update tbl_orders set is_send_email = 1 where order_id in (',p_order_id,')');
PREPARE stmt1 FROM @select;
EXECUTE stmt1;
select 'ok' as message;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveBrandJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveBrandJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveBrandJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_brands(
		SeqNo,RSeqNo,create_date,brand_code,brand_name,TimeStamp,ecsite,brand_name_display,
		is_show_as_menu)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveBrandSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveBrandSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveBrandSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atSeqNo` TEXT CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	SET @delStmt = CONCAT('DELETE FROM tbl_brands WHERE tbl_brands.SeqNo IN (',atSeqNo,')');
          PREPARE stmt FROM @delStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
              SET @insertStmt = CONCAT('INSERT INTO tbl_brands(SeqNo,RSeqNo,create_date,brand_code,brand_name,TimeStamp)
		VALUES ',atData);
		 PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
		SELECT 'ok' AS msg;
	
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCategorySync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCategorySync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCategorySync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atSeqNo` TEXT CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	 SET @delStmt = CONCAT('DELETE FROM tbl_products_category WHERE tbl_products_category.SeqNo IN (',atSeqNo,')');
          PREPARE delstmt FROM @delStmt;
          EXECUTE delstmt;
          DEALLOCATE PREPARE delstmt;
              SET @insertStmt = CONCAT('INSERT INTO tbl_products_category(`SeqNo`,`RSeqNo`,`create_date`,`ItemCode`,`Name`,`TimeStamp`)
		VALUES ',atData);
		  PREPARE insertstmt FROM @insertStmt;
          EXECUTE insertstmt;
          DEALLOCATE PREPARE insertstmt;
		
		SELECT 'ok' AS msg;
	
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCredit` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCredit` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCredit`(IN `p_customer_id` VARCHAR(50), IN `p_credit_id` BIGINT(20), IN `p_credit_number` VARCHAR(200), IN `p_credit_type` VARCHAR(200), IN `p_credit_name` VARCHAR(200), IN `p_credit_month` VARCHAR(2), IN `p_credit_year` VARCHAR(2))
BEGIN
update tbl_credit_card
set 
credit_type = p_credit_type,
credit_number = p_credit_number,
credit_name = p_credit_name,
expiration_month = p_credit_month,
expiration_year = p_credit_year,
modified_date = date(CURRENT_TIMESTAMP)
where credit_id = p_credit_id and customer_id = p_customer_id;
select '1' as success;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCustomerJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCustomerJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCustomerJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          /*SET @insertStmt = CONCAT('INSERT INTO tbl_customers(
		SeqNo,RSeqNo,create_date,modified_date,customer_code,customer_name,
		first_name,barcode,last_name,birthday,points,postcode,state,city,address,address2,phone,email,note,TimeStamp)
		VALUES ',atData);*/
	  SET @insertStmt = atData;
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCustomerRankJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCustomerRankJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCustomerRankJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_customer_rank(SeqNo,RSeqNo,customer_lever1,customer_lever2)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCustomerStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCustomerStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCustomerStatus`(`p_mode` VARCHAR(20), `p_customer_id` BIGINT(20), `p_customer_status` INT(4), `p_modified_date` VARCHAR(40))
BEGIN
	IF(p_mode = 'U') THEN
		UPDATE tbl_customers
		SET
			tbl_customers.customer_status = p_customer_status,
			tbl_customers.modified_date = p_modified_date,
			tbl_customers.email='',
			tbl_customers.passwords='',
			tbl_customers.email_encode=''
	
		WHERE
			tbl_customers.customer_id = p_customer_id;
	
	END IF;
	SELECT 1 AS success;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveHolidayJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveHolidayJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveHolidayJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8, IN `p_holiday_date` DATE)
BEGIN	
	IF(p_mode = 'C') THEN	  
	  delete from `tbl_holiday` where `holiday_date`=p_holiday_date;
          SET @insertStmt = CONCAT('INSERT INTO `tbl_holiday`(
		  `holiday_created`,
		  `holiday_modified`,
		  `holiday_date`,
		  `holiday_name`		  
		) VALUES ',atData);
	  -- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKeywordFromMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKeywordFromMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKeywordFromMedia`(IN `atData` LONGTEXT CHARSET utf8)
BEGIN
        SET @insertStmt = CONCAT('INSERT INTO tbl_keyword(
		keyword_code,
		keyword_name,
		show_order,
		keyword_status,
		is_keyword,
		TimeStamp)
		VALUES ',atData);
	-- INSERT INTO tbl_sys_log (`sys_log`) VALUE (@insertStmt);
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKeywordFromRealmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKeywordFromRealmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKeywordFromRealmccoys`(IN `atData` LONGTEXT CHARSET utf8)
BEGIN
        SET @insertStmt = CONCAT('INSERT INTO tbl_keyword(
		keyword_code,
		keyword_name,
		show_order,
		keyword_status,
		is_keyword,
		TimeStamp,
		keyword_role)
		VALUES ',atData);
	-- INSERT INTO tbl_sys_log (`sys_log`) VALUE (@insertStmt);
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKeywordJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKeywordJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKeywordJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
		SET @insertStmt = CONCAT('INSERT INTO tbl_products(SeqNo,search_keywords,goods_code)
		VALUES ',atData);
		PREPARE stmt FROM @insertStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
		SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveManiputionTracking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveManiputionTracking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveManiputionTracking`(`strData` LONGTEXT, `clientID` VARCHAR(3))
BEGIN
	INSERT INTO manipulationtracking (data,clientid) VALUES (strData,clientID);
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMaterialsBySeqNo_ColorCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMaterialsBySeqNo_ColorCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMaterialsBySeqNo_ColorCode`(IN `p_seqno` VARCHAR(20), IN `p_rseqno` VARCHAR(20), IN `p_color_code` VARCHAR(20), IN `p_material_name` VARCHAR(50), IN `p_mixedrate` DOUBLE, IN `p_area_name` VARCHAR(50))
BEGIN
	INSERT INTO tbl_products_material(SeqNo,RSeqNo,color_code,MaterialName,MixedRate,`Area`)
	VALUES (p_seqno,p_rseqno,p_color_code,p_material_name,p_mixedrate,p_area_name)
	ON DUPLICATE KEY UPDATE SeqNo = p_seqno,RSeqNo = p_rseqno,color_code = p_color_code,
MaterialName = p_material_name,MixedRate = p_mixedrate,`Area`=p_area_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMultipleItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMultipleItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMultipleItem`(IN `p_multiple_item_code` VARCHAR(10000), IN `p_goods_code` VARCHAR(50))
BEGIN
	UPDATE 	tbl_products
	SET 	multiple_item_code = p_multiple_item_code
	WHERE 	goods_code = p_goods_code;
	
	select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveOrderMoney` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveOrderMoney` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveOrderMoney`(IN `p_order_code` VARCHAR(255), IN `p_total_amount` INT, IN `p_total_quantity` INT, IN `p_shipping_fee` INT, IN `p_shipping_cost` INT, IN `p_usepoints` INT, IN `p_timepoints` INT, IN `p_tpoints` INT, IN `p_pointsmoney` DECIMAL, IN `p_coupon` DECIMAL)
BEGIN
	update tbl_orders set total_amount=p_total_amount,
	total_quantity=p_total_quantity,
	shipping_fee=p_shipping_fee,
	shipping_cost=p_shipping_cost,
	thistimeusepoint=p_usepoints,
	thistimeissuedpoint=p_timepoints,
	thistimeusemoney=p_pointsmoney,
	couponmoney=p_coupon,
	`timestamp`=CURRENT_TIMESTAMP
	where order_code=p_order_code;
select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_savePointDetail1JamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_savePointDetail1JamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_savePointDetail1JamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_pointdetail1(
		  `SeqNo`,
		  `RSeqNo`,
		  `Days`,
		  `Magnification`,
		  `No_`
          )
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_savePointDetail2JamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_savePointDetail2JamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_savePointDetail2JamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_pointdetail2(
		  `SeqNo`,
		  `RSeqNo`,
		  `ShopCode`,
		  `ShopName`,
		  `No_`
          )
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_savePointExceptionJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_savePointExceptionJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_savePointExceptionJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_pointexception(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `StartDate`,
		  `EndDate`,
		  `Spot_Magnification`,
		  `IsSpot`,
		  `Monthly`,
		  `Shop`,
		  `Magnification`,
		  `MergeKey`
          )
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductCategoryJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductCategoryJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductCategoryJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_products_category(SeqNo,RSeqNo,create_date,ItemCode,Name,TimeStamp,ecsite,name_display)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDetailNewSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDetailNewSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDetailNewSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_seqno` VARCHAR(20) CHARSET utf8, IN `p_RSeqNo` VARCHAR(20) CHARSET utf8, IN `p_color_code` VARCHAR(10) CHARSET utf8, IN `p_color_name` TEXT CHARSET utf8, IN `p_size_code` VARCHAR(10) CHARSET utf8, IN `p_size_name` TEXT CHARSET utf8)
BEGIN
	IF(p_mode='C') THEN
	  IF( NOT EXISTS(SELECT SeqNo FROM tbl_products_details WHERE tbl_products_details.SeqNo=p_seqno)) THEN
          INSERT INTO tbl_products_details (SeqNo,
		RSeqNo,
		color_code,
		color_name,
		size_code,
		size_name
		)values(p_seqno
		,p_RSeqNo
		,p_color_code
		,p_color_name
		,p_size_code
		,p_size_name);
	
	END IF;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDetailSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDetailSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDetailSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atSeqNo` TEXT CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode='C') THEN
	  SET @delStmt = CONCAT('DELETE FROM tbl_products_details WHERE tbl_products_details.SeqNo IN (',atSeqNo,')');
          PREPARE stmt FROM @delStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
SELECT SLEEP(3);
	-- insert product
          SET @insertStmt = CONCAT("INSERT INTO tbl_products_details (SeqNo, RSeqNo, color_code,
	color_name, 
	size_code, size_name) VALUES ", atData);
      PREPARE stmt FROM @insertStmt;
      EXECUTE stmt;
		
		SELECT 'ok' AS msg;
		
		
	ELSE
		SELECT 'NG' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDraft`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_product_draft_id` BIGINT(20), IN `p_product_name` VARCHAR(200), IN `p_product_category_id` INT(11), IN `p_brand_id` INT(11), IN `p_product_detail` LONGTEXT, IN `p_product_detail_short` LONGTEXT, IN `p_price` FLOAT, IN `p_hot_product` INT(4), IN `p_set_id` INT(11), IN `p_product_setmain` TINYINT(4), IN `p_brand_name` VARCHAR(100), IN `p_new_product` TINYINT(4), IN `p_sale_off_product` TINYINT(4), IN `p_product_status` TINYINT(4), IN `p_product_saleoff_price` FLOAT, IN `p_goods_code` VARCHAR(50), IN `p_slug_url` TEXT, IN `p_prihtml` TEXT, IN `p_product_id` BIGINT(20), IN `p_apply_date` TIMESTAMP, IN `p_str_delete_from_record_50` TEXT, IN `p_is_sold_out` TINYINT, IN `p_prihtml1` TEXT, IN `p_product_name_display` VARCHAR(255), IN `p_is_show_option` TINYINT(2), IN `p_is_recommended_item` TINYINT(2), IN `p_is_pre_order` TINYINT(2), IN `p_is_fixed_all_option_name` TINYINT(1), IN `p_is_color_show` TINYINT(1), IN `p_is_contact` TINYINT(1), IN `p_is_comming_soon` TINYINT(1), IN `p_memo` TEXT, IN `p_option_title` TEXT, IN `p_product_recovery` TEXT, IN `p_search_keywords` TEXT, IN `p_is_free_ship` TINYINT, IN `p_free_ship_from` TIMESTAMP, IN `p_free_ship_to` TIMESTAMP)
BEGIN
	IF (p_mode='C') THEN
		INSERT INTO tbl_products_draft (
			SeqNo,
			RSeqNo,
			product_name,
			product_category_id,
			product_itemcode,
			product_itemname,
			product_detail_short,
			product_detail,
			-- price,
			create_date,
			hot_product,
			brand_id,
			brand_name,
			goods_code,
			brand_code,
			sale_off_product,
			set_id,
			product_setmain,
			product_image,
			product_image_details,
			new_product,
			-- product_saleoff_price,
			product_status,
			MaterialID,
			MaterialName,
			hashtag_name,
			slug_url,
			link_img_instagram,
			caption_instagram,
			hashtag_instagram,
			prihtml,
			product_id,
			SeqNo_old,
			RSeqNo_old,
			product_name_old,
			product_category_id_old,
			product_itemcode_old,
			product_itemname_old,
			product_detail_short_old,
			product_detail_old,
			price_old,
			create_date_old,
			hot_product_old,
			brand_id_old,
			brand_name_old,
			goods_code_old,
			brand_code_old,
			sale_off_product_old,
			set_id_old,
			product_setmain_old,
			product_image_old,
			product_image_details_old,
			new_product_old,
			product_saleoff_price_old,
			product_status_old,
			MaterialID_old,
			MaterialName_old,
			hashtag_name_old,
			slug_url_old,
			link_img_instagram_old,
			caption_instagram_old,
			hashtag_instagram_old,
			prihtml_old,
			apply_date,
			is_sold_out,
			is_sold_out_old,
			
			
			
			prihtml1,
			product_name_display,
			is_show_option,
			is_recommended_item,
			is_pre_order,
			
			is_fixed_all_option_name,
			is_color_show,
			is_contact,
			is_comming_soon,
			memo,
			option_title,
			
			product_recovery,
			search_keywords,
			
			prihtml1_old,
			product_name_display_old,
			is_show_option_old,
			is_recommended_item_old,
			is_pre_order_old,
			
			is_fixed_all_option_name_old,
			is_color_show_old,
			is_contact_old,
			is_comming_soon_old,
			memo_old,
			option_title_old,
			
			
			
			product_recovery_old,
			search_keywords_old,
			is_free_ship,
			free_ship_from,
			free_ship_to,
			is_free_ship_old,
			free_ship_from_old,
			free_ship_to_old
		) VALUES (
			(SELECT SeqNo 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT RSeqNo 			FROM tbl_products WHERE product_id = p_product_id),
			p_product_name,
			p_product_category_id,
			(SELECT product_itemcode 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_itemname 	FROM tbl_products WHERE product_id = p_product_id),
			p_product_detail_short,
			p_product_detail,
			-- p_price,
			NOW(),
			p_hot_product,
			p_brand_id,
			p_brand_name,
			p_goods_code,
			(SELECT brand_code 		FROM tbl_products WHERE product_id = p_product_id),
			p_sale_off_product,
			p_set_id,
			p_product_setmain,
			(SELECT product_image 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_image_details 	FROM tbl_products WHERE product_id = p_product_id),
			p_new_product,
			-- p_product_saleoff_price,
			p_product_status,
			(SELECT MaterialID 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT MaterialName 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT hashtag_name 		FROM tbl_products WHERE product_id = p_product_id),
			p_slug_url,
			(SELECT link_img_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT caption_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT hashtag_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			p_prihtml,
			p_product_id,
			(SELECT SeqNo 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT RSeqNo 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_name 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_category_id 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_itemcode 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_itemname 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_detail_short 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_detail 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT price 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT create_date 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT hot_product 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT brand_id 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT brand_name 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT goods_code 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT brand_code 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT sale_off_product 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT set_id 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_setmain 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_image 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_image_details 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT new_product 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_saleoff_price 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_status 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT MaterialID 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT MaterialName 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT hashtag_name 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT slug_url 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT link_img_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT caption_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT hashtag_instagram 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT prihtml 		FROM tbl_products WHERE product_id = p_product_id),
			p_apply_date,
			p_is_sold_out,
			(SELECT is_sold_out 		FROM tbl_products WHERE product_id = p_product_id),
			
			
			
			
			
			
			p_prihtml1,
			p_product_name_display,
			p_is_show_option,
			p_is_recommended_item,
			p_is_pre_order,
			
			p_is_fixed_all_option_name,
			p_is_color_show,
			p_is_contact,
			p_is_comming_soon,
			p_memo,
			p_option_title,
			
			p_product_recovery,
			p_search_keywords,
			
			
			
			
			
			
			(SELECT prihtml1 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_name_display 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_show_option 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_recommended_item 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_pre_order 			FROM tbl_products WHERE product_id = p_product_id),
			
			(SELECT is_fixed_all_option_name 	FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_color_show			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_contact 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT is_comming_soon 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT memo 				FROM tbl_products WHERE product_id = p_product_id),
			(SELECT option_title 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT product_recovery 		FROM tbl_products WHERE product_id = p_product_id),
			(SELECT search_keywords 		FROM tbl_products WHERE product_id = p_product_id),
			p_is_free_ship,
			p_free_ship_from,
			p_free_ship_to,
			(SELECT is_free_ship 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT free_ship_from 			FROM tbl_products WHERE product_id = p_product_id),
			(SELECT free_ship_to 			FROM tbl_products WHERE product_id = p_product_id)
			
		);
		SET @v_stmt = CONCAT('delete from tbl_products_draft where product_draft_id in (',p_str_delete_from_record_50,')');
		PREPARE stmt FROM @v_stmt;
		EXECUTE stmt;
		SET @v_stmt2 = CONCAT('DELETE FROM tbl_products_draft_details WHERE tbl_products_draft_details.product_draft_id in (',p_str_delete_from_record_50,')');
		PREPARE stmt2 FROM @v_stmt2;
		EXECUTE stmt2;
	ELSE
		UPDATE 	tbl_products_draft
		SET
			product_name		= p_product_name,
			product_category_id	= p_product_category_id,
			product_detail_short	= p_product_detail_short,
			product_detail	 	= p_product_detail,
			-- price		 	= p_price,
			hot_product		= p_hot_product,
			brand_id		= p_brand_id,
			brand_name		= p_brand_name,
			goods_code		= p_goods_code,
			sale_off_product	= p_sale_off_product,
			set_id		 	= p_set_id,
			product_setmain	 	= p_product_setmain,
			new_product		= p_new_product,
			-- product_saleoff_price 	= p_product_saleoff_price,
			product_status	 	= p_product_status,
			slug_url		= p_slug_url,
			prihtml		 	= p_prihtml,
			apply_date		= p_apply_date,
			is_sold_out 		= p_is_sold_out,
			prihtml1			= p_prihtml1,
			product_name_display		= p_product_name_display,
			is_show_option			= p_is_show_option,
			is_recommended_item		= p_is_recommended_item,
			is_pre_order			= p_is_pre_order,
			
			is_fixed_all_option_name	= p_is_fixed_all_option_name,
			is_color_show			= p_is_color_show,
			is_contact			= p_is_contact,
			is_comming_soon			= p_is_comming_soon,
			memo				= p_memo,
			option_title			= p_option_title,
			product_recovery		= p_product_recovery,
			search_keywords			= p_search_keywords,
			is_free_ship 			= p_is_free_ship,
			free_ship_from 			= p_free_ship_from,
			free_ship_to 			= p_free_ship_to
			
		WHERE
			tbl_products_draft.product_draft_id	 = p_product_draft_id;
		SET @v_stmt = CONCAT('delete from tbl_products_draft where product_draft_id in (',p_str_delete_from_record_50,')');
		PREPARE stmt FROM @v_stmt;
		EXECUTE stmt;
		
		SET @v_stmt2 = CONCAT('DELETE FROM tbl_products_draft_details WHERE tbl_products_draft_details.product_draft_id in (',p_str_delete_from_record_50,')');
		PREPARE stmt2 FROM @v_stmt2;
		EXECUTE stmt2;
			
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_product_draft_id AS product_draft_id;
		SELECT 
			tbl_products_draft.product_image_details,
			tbl_products_draft.goods_code,
			tbl_products_draft.SeqNo 
		FROM 	
			tbl_products_draft 
		WHERE 
			tbl_products_draft.product_draft_id = p_product_draft_id;
	ELSE
		SELECT MAX(product_draft_id) AS product_draft_id,tbl_products_draft.product_image_details FROM tbl_products_draft;
		SELECT 
			tbl_products_draft.product_image_details,
			tbl_products_draft.goods_code,
			tbl_products_draft.SeqNo 
		FROM 	tbl_products_draft 
		WHERE 
			tbl_products_draft.product_draft_id = (SELECT MAX(product_draft_id) AS product_draft_id FROM tbl_products_draft);
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductGroup`(IN `p_mode` VARCHAR(10), IN `p_product_group_code` VARCHAR(50), IN `p_list_product_goodscode` VARCHAR(10000))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_products_group(
			product_group_code,
			list_product_goodscode)
		VALUES(
			p_product_group_code,
			p_list_product_goodscode);
	ELSE
		UPDATE tbl_products_group
		SET
			product_group_code 	= p_product_group_code
		,	list_product_goodscode 	= p_list_product_goodscode
		WHERE
			product_group_code = p_product_group_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductGroupRelated` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductGroupRelated` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductGroupRelated`(IN `p_mode` VARCHAR(10), IN `p_product_group_code` VARCHAR(50), IN `p_list_product_goodscode` VARCHAR(10000))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_products_group_related(
			product_group_code,
			list_product_goodscode)
		VALUES(
			p_product_group_code,
			p_list_product_goodscode);
	ELSE
		UPDATE tbl_products_group_related
		SET
			product_group_code 	= p_product_group_code
		,	list_product_goodscode 	= p_list_product_goodscode
		WHERE
			product_group_code = p_product_group_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductMaterialJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductMaterialJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductMaterialJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_products_material(SeqNo,RSeqNo,CreatedDate,ModifiedDate,MaterialCode,MaterialName,Area,MixedRate,Fabric,Area2,TimeStampSync,color_code)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductMaterialNewSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductMaterialNewSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductMaterialNewSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_seqno` VARCHAR(20) CHARSET utf8, IN `p_RSeqNo` VARCHAR(20) CHARSET utf8, IN `p_CreatedDate` DATE, IN `p_ModifiedDate` DATE, IN `p_MaterialCode` VARCHAR(10) CHARSET utf8, IN `p_MaterialName` VARCHAR(50) CHARSET utf8, IN `p_Area` VARCHAR(50) CHARSET utf8, IN `p_MixedRate` DOUBLE, IN `p_Fabric` VARCHAR(80) CHARSET utf8, IN `p_Area2` VARCHAR(20) CHARSET utf8, IN `p_TimeStampSync` VARCHAR(255) CHARSET utf8)
BEGIN
	IF(p_mode='C') THEN
	  IF( NOT EXISTS(SELECT SeqNo FROM tbl_products_material WHERE tbl_products_material.SeqNo=p_seqno)) THEN
          INSERT INTO tbl_products_material (SeqNo,
		RSeqNo,
		CreatedDate,
		ModifiedDate,
		MaterialCode,
		MaterialName,
		tbl_products_material.Area,
		MixedRate,
		Fabric,
		Area2,
		TimeStampSync
		)VALUES (p_seqno,
		p_RSeqNo,
		p_CreatedDate,
		p_ModifiedDate,
		p_MaterialCode,
		p_MaterialName,
		p_Area,
		p_MixedRate,
		p_Fabric,
		p_Area2,
		p_TimeStampSync);
	
	END IF;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductNewSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductNewSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductNewSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_seqno` VARCHAR(20) CHARSET utf8, IN `p_goodscode` VARCHAR(50) CHARSET utf8, IN `p_product_name` VARCHAR(200) CHARSET utf8, IN `p_product_itemcode` VARCHAR(10) CHARSET utf8, IN `p_product_itemname` VARCHAR(200) CHARSET utf8, IN `p_brand_code` VARCHAR(50) CHARSET utf8, IN `p_brand_name` VARCHAR(100) CHARSET utf8, IN `p_create_date` VARCHAR(40) CHARSET utf8, IN `p_product_detail` LONGTEXT CHARSET utf8, IN `p_price` FLOAT, IN `p_product_saleoff_price` FLOAT)
BEGIN
	IF(p_mode='C') THEN
	  IF( NOT EXISTS(SELECT goods_code FROM tbl_products WHERE tbl_products.goods_code=p_goodscode)) THEN
          INSERT INTO tbl_products (SeqNo,
		goods_code,
		product_name,
		product_itemcode,
		product_itemname,
		brand_code,
		brand_name,
		create_date,
		product_detail,
		price,
		product_saleoff_price
		)VALUES(p_seqno
		,p_goodscode
		,p_product_name
		,p_product_itemcode
		,p_product_itemname
		,p_brand_code
		,p_brand_name
		,p_create_date
		,p_product_detail
		,p_price
		,p_product_saleoff_price);
	
	END IF;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductSizeGuideJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductSizeGuideJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductSizeGuideJamSync`(IN `p_goodcode` VARCHAR(20), IN `p_category_guide_id` BIGINT(11), IN `p_category_guide_name` VARCHAR(250), IN `p_size_list` VARCHAR(250), IN `p_index_list` VARCHAR(250), IN `p_size_list_full` TEXT)
BEGIN
	
	INSERT INTO tbl_products_size_guide(goodscode,category_guide_id,category_guide_name,size_list,index_list,rseqno,size_list_full)
	VALUES(p_goodcode,p_category_guide_id,p_category_guide_name,p_size_list,p_index_list,p_goodcode,p_size_list_full);
	SELECT 'ok' AS msg;
			
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductUploadJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductUploadJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductUploadJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_products(SeqNo,product_detail,goods_code)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveRecentView` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveRecentView` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveRecentView`(`p_goods_code` VARCHAR(50), `p_color_code` VARCHAR(255), `p_ip` VARCHAR(50))
BEGIN
	delete from tbl_recent_view where goods_code = p_goods_code and color_code = p_color_code and ip = p_ip;
	
	insert into tbl_recent_view(goods_code, color_code, ip, recent_time) values (p_goods_code, p_color_code, p_ip, now());
	
	select count(*) as count_recent from tbl_recent_view where goods_code = p_goods_code AND color_code = p_color_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSearchKeyJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSearchKeyJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSearchKeyJamSync`(IN `p_search_key` VARCHAR(1000) CHARSET utf8, IN `p_lineno` INT(11), IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	SELECT COUNT(*) INTO @count FROM `tbl_search_key` WHERE `search_key`=p_search_key;
	IF(@count = 0) THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_search_key`(
		  `search_key`,
		  `lineno`
		) VALUES ',atData);
	  -- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	ELSE
	  UPDATE `tbl_search_key` SET `lineno`=p_lineno WHERE `search_key`=p_search_key;
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSeasonJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSeasonJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSeasonJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO `tbl_set_seasons`(SeqNo,RSeqNo,create_date,modified_date,set_season_code,set_season_name,set_season_name_display)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSecretSaleProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSecretSaleProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSecretSaleProduct`(IN `p_seqno` VARCHAR(20), IN `p_Rseqno` VARCHAR(20), IN `p_secret_sale_id` INT, IN `p_goods_code` VARCHAR(50), IN `p_saleoff` FLOAT)
BEGIN
	INSERT INTO tbl_secret_sale_product (
		SeqNo,
		RSeqNo,
		secret_sale_id,
		goods_code,
		saleoff_product,
		create_date,
		modified_date
	)VALUES(
		p_seqno,
		p_Rseqno,
		p_secret_sale_id,
		p_goods_code,
		p_saleoff,
		NOW(),
		NOW()
	);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSetProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSetProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSetProduct`(IN `p_mode` INT(20), IN `p_set_product_id` INT, IN `p_set_product_name` VARCHAR(255) CHARSET utf8, IN `p_set_status` INT(2))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_set_product(set_id,set_name,createdate,set_status)
		VALUES(p_set_product_id,p_set_product_name,Now(),p_set_status);
	ELSE
		UPDATE tbl_set_product
		SET
			tbl_set_product.set_id = p_set_product_id
		,	tbl_set_product.set_name = p_set_product_name
		,	tbl_set_product.set_status = p_set_status
		WHERE
			tbl_set_product.set_id = p_set_product_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveShape2JamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveShape2JamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveShape2JamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	IF(p_mode = 'C') THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_shape2`(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `ShapeCode2`,
		  `ShapeName2`,
		  `TimeStamp`
		) VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveShopJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveShopJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveShopJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	IF (p_mode = 'C') THEN
		SET @insertStmt = CONCAT('
		INSERT INTO tbl_shop(SeqNo,RSeqNo,create_date,modified_date,shop_code,shop_name,shop_namekana,postcode,state,city,address,address2,tel,fax,shop_site,note,TimeStamp)
		VALUES ', atData);
		PREPARE stmt FROM @insertStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSizeGuideManifestJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSizeGuideManifestJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSizeGuideManifestJamSync`(IN `p_goodcode` VARCHAR(20), IN `p_category_guide_id` BIGINT(11), IN `p_category_guide_name` VARCHAR(250), IN `p_size_list` VARCHAR(250), IN `p_index_list` VARCHAR(250), IN `p_size_list_full` TEXT)
BEGIN
	
	DELETE FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = p_goodcode and tbl_products_size_guide.category_guide_name = p_category_guide_name;
	
	INSERT INTO tbl_products_size_guide(goodscode,category_guide_id,category_guide_name,size_list,index_list,rseqno,size_list_full)
	VALUES(p_goodcode,p_category_guide_id,p_category_guide_name,p_size_list,p_index_list,p_goodcode,p_size_list_full);
	SELECT 'ok' AS msg;
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSizeGuideUploadJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSizeGuideUploadJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSizeGuideUploadJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_products_size_guide(
		goodscode,category_guide_id,category_guide_name,size_list,index_list,rseqno,size_list_full)
		VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveStaff` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveStaff` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveStaff`(`p_mode` VARCHAR(20), `p_section_code` VARCHAR(13), `p_order` INT(10), `p_display_name` VARCHAR(100), `p_status` INT(1), `p_gender` VARCHAR(50), `p_show_menu` INT(1), `p_staff_height` VARCHAR(20), `p_shop_code` VARCHAR(10))
BEGIN
		UPDATE  tbl_staff
		SET
			tbl_staff.order 	= p_order,
			tbl_staff.display_name 	= p_display_name,
			tbl_staff.status 	= p_status,
			tbl_staff.gender	= p_gender,
			tbl_staff.`show_menu`	= p_show_menu,
			tbl_staff.`staff_height` = p_staff_height,
			tbl_staff.`shopcode` = p_shop_code
		WHERE
			StaffCode = p_section_code;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_section_code AS section_code;
	ELSE
		SELECT MAX(section_code) AS p_section_code FROM tbl_staff;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveStaffJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveStaffJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveStaffJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	IF(p_mode = 'C') THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_staff`(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `StaffCode`,
		  `StaffName`,
		  `TimeStamp`,
		  `shopcode`,
		  `shopname`
		) VALUES ',atData);
	  -- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveStaffJamSync_Cord3` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveStaffJamSync_Cord3` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveStaffJamSync_Cord3`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	IF(p_mode = 'C') THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_staff`(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `StaffCode`,
		  `StaffName`,
		  `TimeStamp`,
		  `chkSection`
		) VALUES ',atData);
	  -- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveTaxRatesJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveTaxRatesJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveTaxRatesJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	IF(p_mode = 'C') THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_taxrates`(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `TaxPercent`,
		  `AppliedDate`,
		  `TaxPercent2`
		) VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveWebsiteJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveWebsiteJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveWebsiteJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_website(seqno,create_date,website_code,website_name,
		staff_code,staff_name,EC_UseInvoiceSetting,EC_InvoicePrefix,
		EC_UseRCustomerSetting,EC_RCustomerPrefix,EC_UseSubCustomerIDPW)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_save_change_imagecomment` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_save_change_imagecomment` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_save_change_imagecomment`(IN `p_product_id` BIGINT(11), IN `p_imgcomment_name` TEXT, IN `p_img_comment` TEXT)
BEGIN
	IF(EXISTS(SELECT * FROM tbl_imagecomment WHERE tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name)) THEN
		UPDATE tbl_imagecomment
		SET
			tbl_imagecomment.img_comment = p_img_comment
		WHERE
			tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name;
	ELSE
		IF(p_img_comment<>'') THEN 
			INSERT INTO tbl_imagecomment(
					product_id,
					imgcomment_name,
					img_comment
			) 
			VALUES(p_product_id, 
				p_imgcomment_name, 
				p_img_comment
			);
		END IF;
	END IF;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_save_change_image_server` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_save_change_image_server` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_save_change_image_server`(IN `p_good_code` VARCHAR(20), IN `p_image_change` TEXT, IN `p_img_server` TEXT)
BEGIN
	IF(p_img_server<>'') THEN
		UPDATE tbl_products
		SET
			tbl_products.`product_image_server` = CASE WHEN p_image_change = '' THEN tbl_products.`product_image_server` ELSE p_image_change END
		WHERE tbl_products.`goods_code` = p_good_code;
	ELSE
		UPDATE tbl_products
		SET
		tbl_products.`product_image_details` = CASE WHEN p_image_change = '' THEN tbl_products.`product_image_details` ELSE p_image_change END
		WHERE tbl_products.`goods_code` = p_good_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_save_image_server` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_save_image_server` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_save_image_server`(IN `p_seqno` VARCHAR(20), IN `p_image_server` TEXT)
BEGIN
	UPDATE tbl_products
	SET
		tbl_products.`product_image_server` = CASE WHEN p_image_server = '' THEN tbl_products.`product_image_server` ELSE p_image_server END
	WHERE tbl_products.`SeqNo` = p_seqno;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchBrandPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchBrandPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchBrandPaging`(`p_skip` INT, `p_limit` INT, `p_brand_name` VARCHAR(255), `p_brand_code` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_brands
	WHERE 
		tbl_brands.brand_name like CONCAT('%',p_brand_name,'%')
	AND	tbl_brands.brand_code like CONCAT('%',p_brand_code,'%')
	LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_brands 
	WHERE 
		tbl_brands.brand_name like CONCAT('%',p_brand_name,'%')
	AND	tbl_brands.brand_code like CONCAT('%',p_brand_code,'%');
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchColorPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchColorPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchColorPaging`(`p_skip` INT, `p_limit` INT, `p_color_name` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_colors
	WHERE 
		tbl_colors.color_name like CONCAT('%',p_color_name,'%')
	LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_colors 
	WHERE 
		tbl_colors.color_name like CONCAT('%',p_color_name,'%');
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchKeywordPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchKeywordPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchKeywordPaging`(`p_skip` INT, `p_limit` INT, `p_keyword_name` VARCHAR(255), `p_keyword_code` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_keyword
	WHERE 
		tbl_keyword.`keyword_name` like CONCAT('%',p_keyword_name,'%')
	AND	tbl_keyword.`keyword_code` like CONCAT('%',p_keyword_code,'%')
	LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_keyword 
	WHERE 
		tbl_keyword.`keyword_name` like CONCAT('%',p_keyword_name,'%')
	AND	tbl_keyword.`keyword_code` like CONCAT('%',p_keyword_code,'%');
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProduct_byGoodscode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProduct_byGoodscode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProduct_byGoodscode`(IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmtStr = CONCAT("SELECT goods_code,product_name 
							FROM `tbl_products` 
							WHERE `goods_code` LIKE '",p_search_key_word,"%'
							ORDER BY `new_product` DESC
							LIMIT ",indexFrom,",",indexLimit
						);
 
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchSetProducPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchSetProducPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchSetProducPaging`(`p_skip` INT, `p_limit` INT, `p_set_product_name` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_set_product
	WHERE 
		tbl_set_product.set_name like CONCAT('%',p_set_product_name,'%')
	LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_set_product 
	WHERE 
		tbl_set_product.set_name like CONCAT('%',p_set_product_name,'%');
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchSizePaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchSizePaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchSizePaging`(`p_skip` INT, `p_limit` INT, `p_size_name` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_size
	WHERE 
		tbl_size.size_name like CONCAT('%',p_size_name,'%')
	LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_size 
	WHERE 
		tbl_size.size_name like CONCAT('%',p_size_name,'%');
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_keyDeleteById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_keyDeleteById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_keyDeleteById`(IN `p_search_key_id` INT(11))
BEGIN
    DELETE
    FROM   tbl_search_key
    WHERE 
        1 = 1
        AND search_key_id = p_search_key_id
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_keyGetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_keyGetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_keyGetAll`()
BEGIN
    SELECT * 
    FROM   tbl_search_key
    
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_keyGetById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_keyGetById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_keyGetById`(IN `p_search_key_id` INT(11))
BEGIN
	SELECT 	* 
	FROM   	tbl_search_key
	WHERE 
		1 = 1
		AND search_key_id = p_search_key_id
	;
	select 	* 
	from 	tbl_search_key_detail
	where 	search_key_id = p_search_key_id;
	END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_key_detailDeleteById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_key_detailDeleteById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_key_detailDeleteById`()
BEGIN
    DELETE
    FROM   tbl_search_key_detail
    WHERE 
        1 = 1
        
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_key_detailGetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_key_detailGetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_key_detailGetAll`()
BEGIN
    SELECT * 
    FROM   tbl_search_key_detail
    
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Search_key_detailGetById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Search_key_detailGetById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Search_key_detailGetById`()
BEGIN
    SELECT * 
    FROM   tbl_search_key_detail
    WHERE 
        1 = 1
        
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_secretSaleCheckPassword` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_secretSaleCheckPassword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_secretSaleCheckPassword`(IN `p_secret_sale_id` INT(11), IN `p_secret_sale_password` VARCHAR(255))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_secret_sale WHERE secret_sale_id = p_secret_sale_id AND secret_sale_password = p_secret_sale_password)) THEN
		select 'success' as msg;
	else
		select 'fail' AS msg;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_secret_sale_del` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_secret_sale_del` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_secret_sale_del`(IN `p_secret_sale_id` INT(11))
BEGIN
	DELETE FROM tbl_secret_sale WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_brand WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_brand_product WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_item WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_item_product WHERE secret_sale_id = p_secret_sale_id;
	DELETE FROM tbl_secret_sale_product WHERE secret_sale_id = p_secret_sale_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_secret_sale_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_secret_sale_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_secret_sale_getall`()
BEGIN
	SELECT * FROM tbl_secret_sale
	ORDER BY secret_sale_id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_ad_getbyemailobj` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_ad_getbyemailobj` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_ad_getbyemailobj`(IN `p_email_obj` VARCHAR(100))
BEGIN
	if (p_email_obj='すべて顧客') then
		select email from tbl_customers WHERE customer_status =1;
	else if (p_email_obj='受け取りたい顧客') then
		select email from tbl_customers where customer_status = 1 AND emailmagazine = 1 ;
		end if;
	end if;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_ad_getbyemailobj_customer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_ad_getbyemailobj_customer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_ad_getbyemailobj_customer`(IN `p_list_items` TEXT)
BEGIN	
	SET p_list_items = REPLACE(p_list_items,",","','");	
	SET @selectStmt = CONCAT("SELECT tbl_customers.email FROM `tbl_customers` WHERE tbl_customers.`customer_code` IN ('",p_list_items,"') GROUP BY tbl_customers.email" );
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_putqueue_up_mail_bcc_status` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_putqueue_up_mail_bcc_status` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_putqueue_up_mail_bcc_status`(IN `send_email_id` VARCHAR(40))
BEGIN
	UPDATE 	tbl_sendemail_queue 
	SET 	is_mail_bcc_sent = 1
	WHERE 	send_email_id = send_email_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_setstatus_false` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_setstatus_false` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_setstatus_false`(`p_list_sended_id` TEXT)
BEGIN
	
	 SET @selectStmt = CONCAT(' update tbl_sendemail_queue  set queue_status=-1 where queue_id in (',p_list_sended_id,')');
	 PREPARE stmt FROM @selectStmt;
	 EXECUTE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setofproducts_save_multi` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setofproducts_save_multi` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setofproducts_save_multi`(`p_sql` TEXT)
BEGIN
	SET @selectStmt2 = 'Update tbl_set_of_products Set ';
	SET @selectStmt2 = CONCAT(@selectStmt2,p_sql);
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_settings_getsettings` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_settings_getsettings` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_settings_getsettings`()
BEGIN
select * from tbl_settings limit 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_settings_mail_getinfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_settings_mail_getinfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_settings_mail_getinfo`()
BEGIN
	select * fROM `tbl_settings_mail` where 1=1 LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Setting_getShopList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Setting_getShopList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Setting_getShopList`()
BEGIN
SELECT CONCAT("'",(SELECT REPLACE((SELECT shop_list FROM tbl_settings),",","','")), "'") AS shop_list;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setting_get_banktransfer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setting_get_banktransfer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setting_get_banktransfer`()
BEGIN
SELECT banktransfer_homepage,banktransfer_sentmail FROM `tbl_settings` WHERE 1=1 LIMIT 1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setting_save_banktransfer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setting_save_banktransfer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setting_save_banktransfer`(IN `dhomepage` TEXT, IN `dsentmail` TEXT)
BEGIN
update tbl_settings set banktransfer_homepage=dhomepage,banktransfer_sentmail=dsentmail;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setting_save_product_free_ship` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setting_save_product_free_ship` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setting_save_product_free_ship`(IN `dproduct_free_ship` TEXT, IN `dis_time_delivery` INT, IN `dtime_delivery` TIME, IN `dis_deliverySS` INT)
BEGIN
DECLARE total_records BIGINT(20) DEFAULT 0;
SELECT COUNT(*) INTO total_records FROM tbl_settings ;
if total_records>0 THEN
UPDATE tbl_settings SET `product_free_ship`=dproduct_free_ship,
			`is_time_delivery`=dis_time_delivery,
			`time_delivery`=dtime_delivery,
			`is_deliverySS`=dis_deliverySS
WHERE 1=1;
ELSE
INSERT INTO tbl_settings(product_free_ship,is_time_delivery,time_delivery,is_deliverySS)Values(dproduct_free_ship,dis_time_delivery,dtime_delivery,dis_deliverySS);
END IF;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setting_save_wrapping` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setting_save_wrapping` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setting_save_wrapping`(IN `dwrapping_dispay` INT, IN `dwrapping_desc` TEXT)
BEGIN
UPDATE tbl_settings SET `wrapping_display`=dwrapping_dispay,
`wrapping_desc`=dwrapping_desc WHERE 1=1;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_byLookBookGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_byLookBookGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_byLookBookGroup`(`p_set_code` TEXT)
BEGIN
	SET @selectStmtStr = CONCAT(
		"SELECT * FROM  tbl_set_of_products WHERE `set_status` = 1 AND `set_code` IN (",
		p_set_code,
		")"
	);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_delete`(`p_set_id` BIGINT)
BEGIN
	DELETE FROM tbl_set_of_products WHERE set_id = p_set_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAll`()
BEGIN
	SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getById`(`p_set_id` BIGINT)
BEGIN
	SELECT * FROM  tbl_set_of_products WHERE set_id = p_set_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByProductCodeAndColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByProductCodeAndColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByProductCodeAndColor`(IN `p_goods_code` VARCHAR(255), IN `p_color_code` VARCHAR(255), IN `p_set_type` TINYINT)
BEGIN
	SELECT 	set_content 
	FROM 	tbl_set_of_products
	WHERE 	set_status = 1
		AND set_content_for_search LIKE CONCAT("%",p_goods_code,"_", p_color_code,"%")
		AND set_type = p_set_type
	ORDER BY create_date DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByProductCodeAndColor2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByProductCodeAndColor2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByProductCodeAndColor2`(IN `p_goods_code` VARCHAR(255))
BEGIN
	SELECT 	set_content 
	FROM 	tbl_set_of_products
	WHERE 	
		 set_content_for_search LIKE CONCAT("%",p_goods_code,"%")
	ORDER BY create_date DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_delete`(`p_set_id` BIGINT)
BEGIN
	DELETE FROM tbl_set_of_products_other WHERE set_id = p_set_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_updateSetImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_updateSetImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_updateSetImage`(`p_set_id` BIGINT, `p_set_image` VARCHAR(255), `p_set_image_2` VARCHAR(255))
BEGIN
	UPDATE 	tbl_set_of_products_other
	SET 	set_image 	= p_set_image,
		set_image_2 	= p_set_image_2
	WHERE 	set_id 		= p_set_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_updateSetImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_updateSetImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_updateSetImage`(`p_set_id` BIGINT, `p_set_image` VARCHAR(255), `p_set_image_2` VARCHAR(255))
BEGIN
	UPDATE 	tbl_set_of_products
	SET 	set_image 	= p_set_image,
		set_image_2 	= p_set_image_2
	WHERE 	set_id 		= p_set_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_delete`(`p_set_season_id` BIGINT)
BEGIN
	DELETE FROM tbl_set_seasons WHERE set_season_id = p_set_season_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getByAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getByAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getByAll`()
BEGIN
	SELECT * FROM tbl_set_seasons ORDER BY set_season_order DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getByAll_ForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getByAll_ForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getByAll_ForMenu`()
BEGIN
	SELECT * FROM tbl_set_seasons WHERE set_season_is_menu = 1 ORDER BY set_season_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getById`(`p_set_season_id` BIGINT)
BEGIN
	SELECT * FROM tbl_set_seasons WHERE set_season_id = p_set_season_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getByInLookbook` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getByInLookbook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getByInLookbook`()
BEGIN
	SET @selectStmt = '
		SELECT * FROM tbl_set_seasons 
			WHERE tbl_set_seasons.set_season_id IN ( SELECT `set_season_id` FROM `tbl_set_of_products` WHERE set_status = 1 )
				AND set_season_is_menu = 1
			ORDER BY tbl_set_seasons.set_season_order ASC ';
			
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmt);
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_update_show_menu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_update_show_menu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_update_show_menu`(`p_set_season_id` BIGINT, `p_set_season_is_menu` TINYINT)
BEGIN
	
	UPDATE 	tbl_set_seasons 
	SET 
		set_season_is_menu	= p_set_season_is_menu
	WHERE 	
		set_season_id		= p_set_season_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_total_quantity` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_total_quantity` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_total_quantity`(IN `dordercode` VARCHAR(50))
BEGIN
declare dqty int default 0;
DECLARE n INT DEFAULT 0;
DECLARE i INT DEFAULT 0;
if dordercode<>'' then
select sum(quantity) into dqty from tbl_order_detail where order_code=dordercode;
update tbl_orders set total_quantity=dqty where order_code=dordercode;
else
select max(order_id) from tbl_orders into n;
set i=0;
while i<=n do
select sum(quantity) into dqty from tbl_order_detail where order_id=i;
update tbl_orders set total_quantity=dqty where order_id=i;
SET i = i + 1;
end while;
end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_years_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_years_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_years_delete`(`p_set_year_id` BIGINT)
BEGIN
	DELETE FROM tbl_set_years WHERE set_year_id = p_set_year_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_years_getYearForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_years_getYearForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_years_getYearForMenu`(IN `p_set_type` TINYINT)
BEGIN
	SELECT 	tbl_set_years.*
	FROM 	tbl_set_of_products 
			JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
	WHERE 	tbl_set_years.set_year_status 		= 1
		AND tbl_set_years.set_year_is_menu 	= 1
		AND tbl_set_of_products.set_type 	= p_set_type
	GROUP BY set_year_id, set_year_code, set_year_name
	ORDER BY set_year_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_years_update_show_menu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_years_update_show_menu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_years_update_show_menu`(`p_set_year_id` BIGINT, `p_set_year_is_menu` TINYINT)
BEGIN
	UPDATE 	tbl_set_years 
	SET 
		set_year_is_menu= p_set_year_is_menu
	WHERE 	set_year_id	= p_set_year_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_year_getByAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_year_getByAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_year_getByAll`()
BEGIN
	SELECT * FROM tbl_set_years ORDER BY set_year_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_year_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_year_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_year_getById`(`p_set_year_id` BIGINT)
BEGIN
	SELECT * FROM tbl_set_years WHERE set_year_id = p_set_year_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_shape2_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_shape2_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_shape2_getall`()
BEGIN
	SELECT * FROM `tbl_shape2` ORDER BY tbl_shape2.`order_` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_shape2_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_shape2_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_shape2_getbycode`(`p_shape2_code` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_shape2` WHERE tbl_shape2.`ShapeCode2` = p_shape2_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_shape2_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_shape2_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_shape2_save`(IN `p_mode` VARCHAR(20), IN `p_shape_code` VARCHAR(20), IN `p_shape_name` TEXT, IN `p_display_name` VARCHAR(50), IN `p_status` INT, IN `p_order` DOUBLE)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_shape2`(`ShapeCode2`, `ShapeName2`, display_name, `status_`, `order_`, `CreatedDate`)
		VALUES(p_shape_code, p_shape_name, p_display_name, p_status, p_order, p_foot_size, NOW());
	ELSE
		UPDATE `tbl_shape2`
		SET
			`ShapeName2` 	= p_shape_name,
			`display_name`	= p_display_name,
			`status_` 	= p_status,
			`order_` 	= p_order
		WHERE
			`ShapeCode2` = p_shape_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_shop_getListFrontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_shop_getListFrontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_shop_getListFrontEnd`()
BEGIN
	SELECT * FROM tbl_shop WHERE shop_status = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_chart_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_chart_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_chart_getall`()
BEGIN
	SELECT * FROM `tbl_size_chart` ORDER BY `tbl_size_chart`.`chart_id` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_chart_getbychart` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_chart_getbychart` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_chart_getbychart`(IN `p_footsize_from` VARCHAR(20), IN `p_footsize_to` VARCHAR(20))
BEGIN
	SELECT * FROM `tbl_size_chart` 
	where `tbl_size_chart`.`chart_size` between p_footsize_from AND p_footsize_to
	ORDER BY `tbl_size_chart`.`chart_id` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_chart_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_chart_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_chart_save`(`p_mode` VARCHAR(1), `p_size_chart` VARCHAR(20), `p_size_code` TEXT, `p_size_name` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_size_chart`(
			`chart_size`,
			`size_code`,
			`size_name`
		) VALUES (
			p_size_chart,
			p_size_code,
			p_size_name
		);
	ELSE
		UPDATE  `tbl_size_chart`
		SET
			`size_code` 	= p_size_code,			
			`size_name` 	= p_size_name
		WHERE
			`chart_size` = p_size_chart;				
	END IF;	
	SELECT 'ok' AS msg;		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_getall`()
BEGIN
	SELECT * FROM tbl_size ORDER BY tbl_size.display_order ASC, tbl_size.size_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_getbycode`(`p_size_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_size WHERE tbl_size.size_code = p_size_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_jamsync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_jamsync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_jamsync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_size(
		SeqNo,
		RSeqNo,
		create_date,
		size_code,
		size_name,
		display_order,
		TimeStamp,
		size_abbre)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_staff_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_staff_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_staff_getall`()
BEGIN
	SELECT * FROM tbl_staff where tbl_staff.`status` = 1 order by tbl_staff.order, tbl_staff.StaffCode;
	SELECT * FROM tbl_staff ORDER BY tbl_staff.order, tbl_staff.StaffCode;
	SELECT * FROM tbl_staff WHERE `status` = 1 and show_menu = 1 ORDER BY tbl_staff.order, tbl_staff.StaffCode;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_staff_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_staff_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_staff_getbycode`(`p_staff_code` VARCHAR(13))
BEGIN
	SELECT * FROM tbl_staff WHERE tbl_staff.StaffCode = p_staff_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_staff_getbygender` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_staff_getbygender` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_staff_getbygender`(`p_staff_gender` VARCHAR(50))
BEGIN
	SELECT * FROM tbl_staff WHERE tbl_staff.gender = p_staff_gender and tbl_staff.`status` = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_StaticPage_getActiveStaticPageByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_StaticPage_getActiveStaticPageByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_StaticPage_getActiveStaticPageByCode`(IN `p_static_page_code` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_static_pages WHERE upper(static_page_code) = UPPER(p_static_page_code) AND static_page_status = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_StaticPage_getStaticPageByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_StaticPage_getStaticPageByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_StaticPage_getStaticPageByCode`(IN `p_static_page_code` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_static_pages WHERE upper(static_page_code) = UPPER(p_static_page_code);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_StaticPage_getStaticPageDraftByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_StaticPage_getStaticPageDraftByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_StaticPage_getStaticPageDraftByCode`(IN `p_static_page_code` VARCHAR(255))
BEGIN
	SELECT * FROM tbl_static_page_drafts WHERE upper(static_page_code) = UPPER(p_static_page_code);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stone_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stone_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stone_getall`()
BEGIN
	SELECT * FROM tbl_stone ORDER BY display_order,stone_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stone_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stone_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stone_getbycode`(`p_stone_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_stone WHERE tbl_stone.stone_code = p_stone_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stone_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stone_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stone_save`(IN `p_mode` VARCHAR(20), IN `p_stone_code` VARCHAR(20), IN `p_stone_name` VARCHAR(255), IN `p_display_name` TEXT, IN `p_display_order` DOUBLE, IN `p_stone_description` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_stone(stone_code, stone_name, display_name, display_order, stone_description)
		VALUES(p_stone_code, p_stone_name, p_display_name, p_display_order, p_stone_description);
	ELSE
		UPDATE tbl_stone
		SET
			display_name = p_display_name,
			stone_name = p_stone_name,
			display_order = p_display_order,
			stone_description = p_stone_description
		WHERE
			stone_code = p_stone_code;
	END IF;	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stopCampaign` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stopCampaign` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stopCampaign`(IN `p_campaign_id` BIGINT(10))
BEGIN
	
	UPDATE `tbl_campaign` SET STATUS = 0				
	WHERE tbl_campaign.`campaign_id` = p_campaign_id;			
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Storeprice_GetBySeqNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Storeprice_GetBySeqNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Storeprice_GetBySeqNo`(IN `p_good_code` VARCHAR(20), IN `p_date` DATE)
BEGIN
DECLARE dshop_stock TEXT DEFAULT '';
SELECT IFNULL(shop_default,'') INTO dshop_stock FROM `tbl_settings` WHERE 1=1 LIMIT 1;
IF dshop_stock <> '' THEN
	SELECT * FROM storeprice 
	where ShopCode = dshop_stock
	and RSeqNo = (select SeqNo From tbl_products where goods_code = p_good_code) 
	and storeprice.Date <= p_date order by storeprice.Date desc LIMIT 1;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_delete`(`p_styl_id` BIGINT)
BEGIN
	DELETE FROM tbl_styling WHERE styl_id = p_styl_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_delete_IdNotIn` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_delete_IdNotIn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_delete_IdNotIn`(`p_id_list` VARCHAR(255), `p_styl_season_id` BIGINT, `p_styl_year_id` BIGINT)
BEGIN
	SET @selectStmtStr = CONCAT("
			DELETE FROM tbl_styling 
			WHERE 	styl_id NOT IN (", p_id_list ,") 
				AND styl_season_id = ", p_styl_season_id, " 
				AND styl_year_id = ", p_styl_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_getById`(`p_styl_id` BIGINT)
BEGIN
	SELECT * FROM  tbl_styling WHERE styl_id = p_styl_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_season_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_season_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_season_getById`(`p_styl_season_id` BIGINT)
BEGIN
	SELECT * FROM tbl_styling_season WHERE styl_season_id = p_styl_season_id;
	SELECT * FROM tbl_styling WHERE styl_season_id = p_styl_season_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_updateLookBookImg` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_updateLookBookImg` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_updateLookBookImg`(`p_styling_id` BIGINT, `p_styling_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_styling
	SET 	styling_image 	= p_styling_image
	WHERE 	styling_id 	= p_styling_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_updatestylingImg` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_updatestylingImg` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_updatestylingImg`(`p_styl_id` BIGINT, `p_styl_image` VARCHAR(255))
BEGIN
	UPDATE 	tbl_styling
	SET 	styl_image = p_styl_image
	WHERE 	styl_id = p_styl_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_year_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_year_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_year_delete`(`p_styl_year_id` BIGINT)
BEGIN
	DELETE FROM tbl_styling_year WHERE styl_year_id = p_styl_year_id;
	DELETE FROM tbl_styling_season WHERE styl_year_id = p_styl_year_id;
	DELETE FROM tbl_styling WHERE styl_year_id = p_styl_year_id;
	SELECT 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_year_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_year_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_year_getAll`()
BEGIN
	SELECT * FROM tbl_styling_year ORDER BY styl_year_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_year_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_year_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_year_getById`(`p_styl_year_id` BIGINT)
BEGIN
	SELECT * FROM tbl_styling_year WHERE styl_year_id = p_styl_year_id;
	SELECT * FROM tbl_styling_season WHERE styl_year_id = p_styl_year_id ORDER BY styl_season_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sync_customers_shipaddress` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sync_customers_shipaddress` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sync_customers_shipaddress`(IN `p_shipaddress_id` VARCHAR(20))
BEGIN
	SELECT * 
	FROM 	tbl_customers_shipaddress 
	WHERE 	shipaddress_id = p_shipaddress_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_system_getbasictable` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_system_getbasictable` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_system_getbasictable`()
BEGIN
	-- get 0 --
	SELECT 
		brand_code,
		CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END AS brand_name_display
	FROM tbl_brands ORDER BY show_order DESC;
	
	-- get 1 --
	SELECT 
		ItemCode,
		CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END AS item_name_display 
	FROM tbl_products_category ORDER BY show_order DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_system_getCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_system_getCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_system_getCategory`()
BEGIN
	
	SELECT * FROM tbl_products_category ORDER BY tbl_products_category.Name ASC;
	SELECT * FROM tbl_set_product ORDER BY tbl_set_product.createdate ASC;
	SELECT * FROM tbl_brands ORDER BY tbl_brands.brand_name ASC;
	SELECT * FROM tbl_size ORDER BY tbl_size.size_name ASC;
	SELECT * FROM tbl_colors ORDER BY tbl_colors.color_name ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_TagGetById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_TagGetById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_TagGetById`(IN `p_tag_id` BIGINT(20) UNSIGNED ZEROFILL)
BEGIN
    SELECT * 
    FROM   tbl_tag
    WHERE 
        1 = 1
        AND tag_id = p_tag_id
    ;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_affiliate_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_affiliate_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_affiliate_getAll`()
BEGIN
	SELECT 
		`tbl_affiliate`.*,`tbl_orders`.*,SUM(tbl_orders.`total_amount`+tbl_orders.`shipping_cost`+tbl_orders.`shipping_fee`-tbl_orders.couponmoney-tbl_orders.thistimeusemoney) AS total
	FROM 
		`tbl_affiliate`
		
	LEFT JOIN tbl_orders
	
	ON tbl_affiliate.`affiliate_name` = tbl_orders.`order_affiliate_name`
	
	WHERE tbl_orders.`preorder` = 0
	
	GROUP BY tbl_orders.order_affiliate_name
	
	ORDER BY tbl_affiliate.affiliate_id DESC;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_brands_group_Del_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_brands_group_Del_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_brands_group_Del_byid`(IN `p_brand_group_id` INT(11))
BEGIN
	DELETE FROM tbl_brands_group WHERE id = p_brand_group_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_brands_group_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_brands_group_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_brands_group_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_brands_group
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_brands_group_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_brands_group_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_brands_group_getbyid`(IN `p_brand_group_id` INT(11))
BEGIN
	SELECT * FROM tbl_brands_group WHERE id = p_brand_group_id;
	
	-- hoa xuan them de lay danh sach cac brand da dang ki vao chung brandgroup
	SELECT * FROM tbl_brands WHERE group_id = p_brand_group_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_customers_UpdateEmailmagazine` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_customers_UpdateEmailmagazine` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_customers_UpdateEmailmagazine`(IN `p_mail_name` VARCHAR(255))
BEGIN
	UPDATE tbl_customers SET emailmagazine = 1 WHERE UPPER(email) = UPPER(p_mail_name);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_account_available` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_account_available` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_account_available`()
BEGIN
	SELECT 	*
	FROM  	tbl_instagram_account
	where	insta_status = 1
	ORDER BY insta_acc_id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_account_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_account_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_account_getAll`()
BEGIN
	SELECT * FROM tbl_instagram_account ORDER BY insta_acc_id DESC;
	/*
	SELECT * FROM `tbl_instagram_account` WHERE TIMESTAMPDIFF(MINUTE,`last_run`,CURRENT_TIMESTAMP)>=3
		ORDER BY insta_acc_id DESC;		
	UPDATE `tbl_instagram_account` SET `last_run`=CURRENT_TIMESTAMP 
		WHERE TIMESTAMPDIFF(MINUTE,`last_run`,CURRENT_TIMESTAMP)>=3;
		*/
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_account_getAll_updating` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_account_getAll_updating` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_account_getAll_updating`()
BEGIN
	-- SELECT * FROM tbl_instagram_account ORDER BY insta_acc_id DESC;
	SELECT * FROM `tbl_instagram_account` WHERE TIMESTAMPDIFF(MINUTE,`last_run`,CURRENT_TIMESTAMP)>=10
		ORDER BY insta_acc_id DESC;		
	UPDATE `tbl_instagram_account` SET `last_run`=CURRENT_TIMESTAMP 
		WHERE TIMESTAMPDIFF(MINUTE,`last_run`,CURRENT_TIMESTAMP)>=10;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_appapi_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_appapi_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_appapi_delete`(`p_id` BIGINT)
BEGIN
	DELETE FROM `tbl_instagram_appid` WHERE `id` = p_id;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_appapi_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_appapi_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_appapi_getAll`()
BEGIN
	SELECT 	*
	FROM  	`tbl_instagram_appid`
	ORDER BY `id` ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_appapi_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_appapi_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_appapi_getById`(`p_id` INT(11))
BEGIN
	select 	* 
	from  	`tbl_instagram_appid`
	WHERE
		`id` = p_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_appapi_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_appapi_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_appapi_save`(`p_mode` NVARCHAR(20), `p_id` INT(11), `p_app_id` NVARCHAR(255), `p_redirect_uri` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_instagram_appid` (
			`app_id`,
			`redirect_uri`
		) VALUES (
			p_app_id,
			p_redirect_uri	
		);
	ELSE
		UPDATE `tbl_instagram_appid`
		SET
			`app_id` = p_app_id,
			`redirect_uri` = p_redirect_uri
		WHERE
			`id` = p_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_data_getByInstaId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_data_getByInstaId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_data_getByInstaId`(IN `p_instagram_id` VARCHAR(50))
BEGIN
	SELECT 	*
	FROM  	tbl_instagram_data
	where 	instagram_id = p_instagram_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_getById`(`p_insta_acc_id` INT(11))
BEGIN
	select 	* 
	from  	tbl_instagram_account
	WHERE
		insta_acc_id = p_insta_acc_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_media_category_Del_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_media_category_Del_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_media_category_Del_byid`(IN `p_category_id` INT(11))
BEGIN
	DELETE FROM tbl_media_category WHERE id = p_category_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_media_category_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_media_category_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_media_category_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_media_category
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_media_category_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_media_category_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_media_category_getbyid`(IN `p_category_id` INT(11))
BEGIN
	SELECT * FROM tbl_media_category WHERE id = p_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_modalwindow_Del_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_modalwindow_Del_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_modalwindow_Del_byid`(IN `p_modalwindow_id` INT(11))
BEGIN
	DELETE FROM tbl_modalwindow WHERE id = p_modalwindow_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_news_category_Del_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_news_category_Del_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_news_category_Del_byid`(IN `p_category_id` INT(11))
BEGIN
	DELETE FROM tbl_news_category WHERE id = p_category_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_news_category_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_news_category_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_news_category_getAll`()
BEGIN
	SELECT 
		* 
	FROM 
		tbl_news_category
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_news_category_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_news_category_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_news_category_getbyid`(IN `p_category_id` INT(11))
BEGIN
	SELECT * FROM tbl_news_category WHERE id = p_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_news_category_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_news_category_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_news_category_save`(`p_mode` VARCHAR(20), `p_category_id` INT(11), `p_category_code` VARCHAR(200), `p_category_name` VARCHAR(255), `p_status` TINYINT(2), `p_show_order` TINYINT(2))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_news_category(
			category_code,
			category_name,
			`status`,
			show_order
		) VALUES (
			p_category_code,
			p_category_name,
			p_status,
			p_show_order
		);
	ELSE
		UPDATE tbl_news_category
		SET
			category_code 		= p_category_code,
			category_name 		= p_category_name,
			`status` 		= p_status,
			show_order 		= p_show_order
		WHERE
			tbl_news_category.id 	= p_category_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_paytypeuse_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_paytypeuse_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_paytypeuse_insert`(`p_pay_type` VARCHAR(255), `p_pay_use` TINYINT(1), `p_pay_order` INT(11), `p_pay_content` TEXT, `p_created` DATETIME, `p_updated` TIMESTAMP)
BEGIN
	DECLARE total_records BIGINT (20) DEFAULT 0;
	SELECT 
		COUNT(*) INTO total_records 
	FROM
		tbl_paytypeuse 
	WHERE pay_type = p_pay_type;
	 
	IF (total_records = 0) THEN -- create one record
			
		INSERT INTO tbl_paytypeuse(
			pay_type,
			pay_use,
			pay_order,
			pay_content,
			created,
			updated
		) 
		VALUES (
			p_pay_type,
			p_pay_use,
			p_pay_order,
		        p_pay_content,
			CURTIME(),
			CURTIME()
		);
		SELECT 'ok' AS msg ;
	END IF;
	SELECT 'notok' AS msg ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_products_getSeasonByCtatgoryForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_products_getSeasonByCtatgoryForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_products_getSeasonByCtatgoryForMenu`(IN `p_product_itemcode` VARCHAR(255))
BEGIN
	SELECT DISTINCT 
		season_code, 
		season_name 
	FROM 
		
		tbl_products, 
		tbl_products_details
	WHERE 
		product_itemcode = p_product_itemcode
		AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
		
		AND tbl_products.season_code IS NOT NULL
		AND tbl_products.season_name IS NOT NULL;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_products_options_fixOptionName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_products_options_fixOptionName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_products_options_fixOptionName`(IN `p_option_name` VARCHAR(255), IN `p_option_index` TINYINT(3))
BEGIN
	UPDATE 	tbl_products_options 
	SET 	option_name 	= p_option_name
	WHERE  	option_index 	= p_option_index;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_products_options_getFixedOptionName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_products_options_getFixedOptionName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_products_options_getFixedOptionName`()
BEGIN
	SELECT 	* 
	FROM 	tbl_products_options
	WHERE 	RSeqNo = (SELECT SeqNo FROM tbl_products WHERE is_fixed_all_option_name = 1)
	ORDER BY option_index ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_products_updateIsFixOptionName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_products_updateIsFixOptionName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_products_updateIsFixOptionName`(IN `p_product_id` BIGINT)
BEGIN
	UPDATE tbl_products SET is_fixed_all_option_name = 0;
	UPDATE tbl_products SET is_fixed_all_option_name = 1 WHERE product_id = p_product_id;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_product_category_group_Del_byid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_product_category_group_Del_byid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_product_category_group_Del_byid`(IN `p_product_category_group_id` INT(11))
BEGIN
	DELETE FROM tbl_products_category_group WHERE id = p_product_category_group_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_product_category_group_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_product_category_group_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_product_category_group_getbyid`(IN `p_product_category_group_id` INT(11))
BEGIN
	SELECT * FROM tbl_products_category_group WHERE id = p_product_category_group_id;
	
	
	SELECT GROUP_CONCAT(ItemCode SEPARATOR ",") as item_code_list FROM tbl_products_category WHERE category_group_id = p_product_category_group_id;
	
	select * from tbl_products_category WHERE category_group_id = p_product_category_group_id;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_product_getSeqNoAndGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_product_getSeqNoAndGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_product_getSeqNoAndGoodsCode`(IN `p_type` NVARCHAR(250))
BEGIN
IF p_type = 'material' THEN
	SELECT tbl_products.goods_code,tbl_products.SeqNo from tbl_products LEFT JOIN tbl_products_material
	ON tbl_products_material.RSeqNo = tbl_products.SeqNo;
	ELSEIF p_type = 'option' THEN
	SELECT tbl_products.goods_code,tbl_products.SeqNo from tbl_products LEFT JOIN tbl_products_options
	ON tbl_products_options.RSeqNo = tbl_products.SeqNo;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_sys_log_deleteall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_sys_log_deleteall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_sys_log_deleteall`()
BEGIN
	
	DELETE FROM tbl_sys_log;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_sys_log_delete_auto` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_sys_log_delete_auto` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_sys_log_delete_auto`()
BEGIN
	
	DELETE FROM 
		tbl_sys_log 
	WHERE 
		DATE(create_date) < DATE(NOW())
		OR create_date IS NULL
		OR log_id IS NULL
		OR log_id <= 0;
		
	ALTER TABLE tbl_sys_log AUTO_INCREMENT = 1;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_sys_log_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_sys_log_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_sys_log_save`(IN `p_sys_log` TEXT)
BEGIN
	
	insert into tbl_sys_log (sys_log, create_date) values (p_sys_log, now());
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tracking_url_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tracking_url_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tracking_url_getall`()
BEGIN
    -- DANNGUYEN--
SELECT * from `tbl_tracking_url` where 1=1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_truncateProductGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_truncateProductGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_truncateProductGroup`()
BEGIN
	truncate table tbl_products_group;
	TRUNCATE TABLE tbl_products_group_item;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_truncateProductGroupRealted` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_truncateProductGroupRealted` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_truncateProductGroupRealted`()
BEGIN
	TRUNCATE TABLE tbl_products_group_related;
	TRUNCATE TABLE tbl_products_group_item_related;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBannerImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBannerImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBannerImage`(IN `p_banner_id` BIGINT, IN `p_banner_image` TEXT, IN `p_banner_image_mobile` TEXT)
BEGIN
	UPDATE tbl_banner
	SET
		tbl_banner.banner_image = CASE WHEN p_banner_image = '' THEN tbl_banner.banner_image ELSE p_banner_image END,
		tbl_banner.banner_image_mobile = CASE WHEN p_banner_image_mobile = '' THEN tbl_banner.banner_image_mobile ELSE p_banner_image_mobile END
	WHERE tbl_banner.banner_id = p_banner_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBannerImage_test` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBannerImage_test` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBannerImage_test`(IN `p_banner_id` BIGINT, IN `p_banner_image` TEXT, IN `p_banner_image_mobile` TEXT, IN `p_banner_video` TEXT)
BEGIN
	UPDATE tbl_banner
	SET
		banner_image = CASE WHEN p_banner_image = '' THEN banner_image ELSE p_banner_image END,
		banner_image_mobile = CASE WHEN p_banner_image_mobile = '' THEN banner_image_mobile ELSE p_banner_image_mobile END,
		banner_video = CASE WHEN p_banner_video = '' THEN banner_video ELSE p_banner_video END
	WHERE banner_id = p_banner_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBannerVideo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBannerVideo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBannerVideo`(IN `p_banner_id` BIGINT, IN `p_banner_video_upload` TEXT)
BEGIN
	UPDATE tbl_banner
	SET
		tbl_banner.banner_video_upload = CASE WHEN p_banner_video_upload = '' THEN tbl_banner.banner_video_upload ELSE p_banner_video_upload END
	WHERE tbl_banner.banner_id = p_banner_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBrandBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBrandBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBrandBanner`(IN `p_brand_id` BIGINT, IN `p_brand_image` VARCHAR(255) CHARSET utf8, IN `p_brand_image2` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE tbl_brands
	SET
		tbl_brands.brand_banner = CASE WHEN p_brand_image = '' THEN tbl_brands.brand_banner ELSE p_brand_image END,
		tbl_brands.brand_banner2 = CASE WHEN p_brand_image2 = '' THEN tbl_brands.brand_banner2 ELSE p_brand_image2 END
	WHERE tbl_brands.brand_id = p_brand_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBrandGroupBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBrandGroupBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBrandGroupBanner`(IN `p_brand_group_code` VARCHAR(200), IN `p_brand_group_banner` VARCHAR(500))
BEGIN
	UPDATE tbl_brands_group
	SET
		brand_group_banner = CASE WHEN p_brand_group_banner = '' THEN brand_group_banner ELSE p_brand_group_banner END
	WHERE 	group_code = p_brand_group_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBrandGroupBannerDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBrandGroupBannerDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBrandGroupBannerDetail`(IN `p_brand_group_code` VARCHAR(20), IN `p_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE 	tbl_brands_group
	SET 	tbl_brands_group.brand_group_banner_details = CONCAT(CASE WHEN tbl_brands_group.brand_group_banner_details IS NULL THEN '' ELSE tbl_brands_group.brand_group_banner_details END,',',p_image_detail)
	WHERE 	tbl_brands_group.`group_code` = p_brand_group_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBrandGroupBannerDetailQuick` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBrandGroupBannerDetailQuick` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBrandGroupBannerDetailQuick`(IN `p_brand_group_code` VARCHAR(20), IN `p_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE 	tbl_brands_group
	SET 	tbl_brands_group.brand_group_banner_details = p_image_detail
	WHERE 	tbl_brands_group.`group_code` = p_brand_group_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateBrandGroupBanner_2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateBrandGroupBanner_2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateBrandGroupBanner_2`(IN `p_brand_group_code` VARCHAR(200), IN `p_brand_group_banner` VARCHAR(500))
BEGIN
	UPDATE tbl_brands_group
	SET
		brand_group_banner_2 = CASE WHEN p_brand_group_banner = '' THEN brand_group_banner_2 ELSE p_brand_group_banner END
	WHERE 	group_code = p_brand_group_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCalendar` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCalendar` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCalendar`(IN `p_jyear` INT(4), IN `p_jmonth` INT(2), IN `p_jday` INT(2), IN `p_jwday` INT(2), IN `p_jholiday` VARCHAR(255) CHARSET utf8)
BEGIN
	DECLARE mycount INT;
    SET mycount = (SELECT COUNT(*) FROM tbl_calendar WHERE jyear = p_jyear AND jmonth = p_jmonth AND jday = p_jday AND jwday = p_jwday);
    IF mycount > 0 THEN
      UPDATE tbl_calendar SET jholiday=p_jholiday WHERE jyear=p_jyear AND jmonth=p_jmonth AND jday=p_jday;
      SELECT 'updated' AS msg;
    ELSE
      INSERT INTO tbl_calendar(jyear, jmonth, jday, jwday,jholiday) VALUES(p_jyear,p_jmonth,p_jday,p_jwday,p_jholiday);
      SELECT 'inserted' AS msg;
    END IF;
    
        
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCampaignDetailImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCampaignDetailImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCampaignDetailImage`(IN `p_campaign_detail_id` BIGINT(10), IN `p_campaign_image` TEXT)
BEGIN
	UPDATE `tbl_campaign_detail`
	SET
		`campaign_image` = CASE WHEN p_campaign_image = '' THEN `campaign_image` ELSE p_campaign_image END
	WHERE `campaign_detail_id` = p_campaign_detail_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCategoryBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCategoryBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCategoryBanner`(IN `p_category_id` BIGINT, IN `p_category_image` VARCHAR(255) CHARSET utf8, IN `p_category_logo` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE 	tbl_products_category
	SET
		tbl_products_category.category_banner = 
			CASE WHEN p_category_image = '' THEN 
				tbl_products_category.category_banner 
			ELSE 
				p_category_image 
			END,
		tbl_products_category.category_logo = 
			CASE WHEN p_category_logo = '' THEN 
				tbl_products_category.category_logo 
			ELSE 
				p_category_logo 
			END
	WHERE 	tbl_products_category.product_category_id = p_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCategoryGroupBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCategoryGroupBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCategoryGroupBanner`(IN `p_category_group_code` VARCHAR(200), IN `p_category_group_banner` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE tbl_products_category_group
	SET
		category_group_banner = CASE WHEN p_category_group_banner = '' THEN category_group_banner ELSE p_category_group_banner END
	WHERE category_group_code = p_category_group_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_UpdateCategorySlugUrl` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_UpdateCategorySlugUrl` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_UpdateCategorySlugUrl`()
BEGIN
update tbl_products_category set slug_url = ItemCode 
where slug_url is null or slug_url = '';
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCategorySmallBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCategorySmallBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCategorySmallBanner`(IN `p_category_small_code` VARCHAR(200), IN `p_category_small_banner` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE tbl_products_category_small
	SET
		category_small_banner = CASE WHEN p_category_small_banner = '' THEN category_small_banner ELSE p_category_small_banner END
	WHERE category_small_code = p_category_small_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateCustomer_emailmagazine` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateCustomer_emailmagazine` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateCustomer_emailmagazine`(IN `p_emailmagazine` INT(5), IN `p_email` VARCHAR(255))
BEGIN
	UPDATE 	tbl_customers
	SET
		emailmagazine = p_emailmagazine
	WHERE 
		email = p_email;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateGift` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateGift` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateGift`(IN `p_gift_id` INT, IN `p_gift_image` VARCHAR(255))
BEGIN
	UPDATE  tbl_gift
	SET
		tbl_gift.gift_image = CASE WHEN p_gift_image = '' THEN tbl_gift.gift_image ELSE p_gift_image END
	WHERE 
		tbl_gift.gift_id = p_gift_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateGiftImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateGiftImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateGiftImage`(IN `p_gift_id` INT(11), IN `p_gift_image` TEXT, IN `p_is_change_order` TINYINT(1))
BEGIN
	if p_is_change_order is not null and p_is_change_order <> 1
	then
		UPDATE 	tbl_gift
		SET 	gift_image = CONCAT(CASE WHEN gift_image IS NULL THEN '' ELSE gift_image END,',',p_gift_image)
		WHERE 	gift_id = p_gift_id;
	else
		UPDATE 	tbl_gift
		SET 	gift_image = p_gift_image
		WHERE 	gift_id = p_gift_id;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_UpdateGoodsPrice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_UpdateGoodsPrice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_UpdateGoodsPrice`()
BEGIN
	update `tbl_products_details` set 
		product_detail_price=(@temp:=product_detail_price), 
		product_detail_price = product_detail_price2, 
		product_detail_price2 = @temp,		
		product_detail_saleoff_price=(@temp2:=product_detail_saleoff_price), 
		product_detail_saleoff_price = product_detail_saleoff_price2, 
		product_detail_saleoff_price2 = @temp2;
	select 'OK' as msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateKeywordImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateKeywordImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateKeywordImage`(IN `p_keyword_id` BIGINT, IN `p_keyword_image` TEXT, IN `p_keyword_image_mobile` TEXT)
BEGIN
	UPDATE tbl_keyword
	SET
		tbl_keyword.keyword_image = CASE WHEN p_keyword_image = '' THEN tbl_keyword.keyword_image ELSE p_keyword_image END,
		tbl_keyword.keyword_image_mobile = CASE WHEN p_keyword_image_mobile = '' THEN tbl_keyword.keyword_image_mobile ELSE p_keyword_image_mobile END
	WHERE tbl_keyword.keyword_id = p_keyword_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateLookBookImageMultiple` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateLookBookImageMultiple` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateLookBookImageMultiple`(IN `p_set_id` INT(11), IN `p_set_multiple_image` TEXT, IN `p_is_change_order` TINYINT(1))
BEGIN
	IF p_is_change_order IS NOT NULL AND p_is_change_order <> 1
	THEN
		UPDATE 	tbl_set_of_products
		SET 	set_multiple_image = CONCAT(CASE WHEN set_multiple_image IS NULL THEN '' ELSE set_multiple_image END,',',p_set_multiple_image)
		WHERE 	set_id = p_set_id;
	ELSE
		UPDATE 	tbl_set_of_products
		SET 	set_multiple_image = p_set_multiple_image
		WHERE 	set_id = p_set_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateMailRemindOrderStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateMailRemindOrderStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateMailRemindOrderStatus`(IN `p_mailRemindIdUpdated` VARCHAR(200))
BEGIN
	SET @selectStmt2 = CONCAT('
		UPDATE 	tbl_mail_remind_order 
		SET 	is_sent_email_remind = 1,
			mailing_date = NOW() 
		WHERE 	ID IN (',p_mailRemindIdUpdated,')');
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateProductDraftImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateProductDraftImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateProductDraftImage`(IN `p_product_draft_id` BIGINT(20), IN `p_product_image` VARCHAR(255) CHARSET utf8, IN `p_product_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE 	tbl_products_draft
	SET
		product_image = 
			CASE WHEN p_product_image = '' THEN 
					product_image 
			ELSE 		
					p_product_image 
			END,
		product_image_details = 
			CASE WHEN p_product_image_detail = '' THEN 
					product_image_details 
			ELSE 
					p_product_image_detail 
			END
	WHERE 
		product_draft_id = p_product_draft_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateProductImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateProductImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateProductImage`(IN `p_product_id` BIGINT, IN `p_product_image` VARCHAR(255) CHARSET utf8, IN `p_product_image_detail` TEXT CHARSET utf8)
BEGIN
	UPDATE tbl_products
	SET
		tbl_products.product_image = CASE WHEN p_product_image = '' THEN tbl_products.product_image ELSE p_product_image END,
		tbl_products.product_image_details = CASE WHEN p_product_image_detail = '' THEN tbl_products.product_image_details ELSE p_product_image_detail END
	WHERE tbl_products.product_id = p_product_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateProductImageServer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateProductImageServer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateProductImageServer`(IN `p_product_id` BIGINT, IN `p_product_image_server` TEXT CHARSET utf8)
BEGIN
	UPDATE tbl_products
	SET
		tbl_products.product_image_server = p_product_image_server
	WHERE tbl_products.product_id = p_product_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateProductImageServer360` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateProductImageServer360` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateProductImageServer360`(IN `p_product_id` BIGINT, IN `p_product_image_server` TEXT CHARSET utf8)
BEGIN
	UPDATE tbl_products
	SET
		tbl_products.product_image_360 = p_product_image_server
	WHERE tbl_products.product_id = p_product_id;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateProductsetsImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateProductsetsImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateProductsetsImage`(IN `p_sets_code` VARCHAR(255) CHARSET utf8, IN `p_sets_image_details` TEXT CHARSET utf8)
BEGIN
	UPDATE tbl_product_sets
	SET
		tbl_product_sets.sets_image_details = CASE WHEN p_sets_image_details = '' THEN tbl_product_sets.sets_image_details ELSE p_sets_image_details END
	WHERE tbl_product_sets.sets_code = p_sets_code;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateSecretSaleBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateSecretSaleBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateSecretSaleBanner`(IN `p_secret_sale_code` VARCHAR(200), IN `p_secret_sale_banner` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE 	tbl_secret_sale
	set 	secret_sale_banner = CASE WHEN p_secret_sale_banner = '' THEN secret_sale_banner ELSE p_secret_sale_banner END
	WHERE 	secret_sale_code = p_secret_sale_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateSeqNoByTableName` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateSeqNoByTableName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateSeqNoByTableName`(IN `p_table_name` VARCHAR(100))
BEGIN
	IF(EXISTS(Select * from tbl_createseqno where tablename = p_table_name)) THEN 
		update tbl_createseqno set seqnumber = seqnumber+1 where tablename = p_table_name;
	ELSE
		INSERT INTO tbl_createseqno(seqnumber,tablename)
		VALUES(1,p_table_name);
	END IF;
	Select seqnumber from tbl_createseqno where tablename = p_table_name;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateSetImage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateSetImage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateSetImage`(IN `p_set_id` BIGINT, IN `p_set_image` VARCHAR(255) CHARSET utf8)
BEGIN
	UPDATE tbl_set_product
	SET
		tbl_set_product.set_image = CASE WHEN p_set_image = '' THEN tbl_set_product.set_image ELSE p_set_image END
	WHERE tbl_set_product.set_id = p_set_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_update_mail_notsend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_update_mail_notsend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_mail_notsend`(IN `d_id` BIGINT(11), IN `d_send_status` INT(2), IN `d_mail_exception` TEXT, IN `d_send_count` INT(2))
BEGIN
	UPDATE `tbl_mail_notsend`
	SET `send_status`=d_send_status,
	`mail_exception`=d_mail_exception,
	`send_count`=d_send_count,
	`time_stamp`=NOW()
	WHERE `id`=d_id;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_voteCampaignDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_voteCampaignDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_voteCampaignDetail`(`p_campaign_id` BIGINT(10), `p_campaign_detail_id` BIGINT(10), `p_add` INT(4), `p_customer_code` VARCHAR(100), `p_customer_name` VARCHAR(200))
BEGIN
	update `tbl_campaign_detail` set `voter`=`voter`+p_add where `campaign_detail_id`=p_campaign_detail_id
		and `campaign_id`=p_campaign_id;
	if p_customer_code<>'' then
		insert into `tbl_campaign_vote`(`campaign_id`,`voter_code`,`voter_name`,`voted_date`)
			values(p_campaign_id,p_customer_code,p_customer_name,NOW())
			on duplicate key update 
			`voter_name`=p_customer_name,
			`voted_date`=NOW();
	end if;
	SELECT `voter` from `tbl_campaign_detail` where  `campaign_detail_id`=p_campaign_detail_id
		AND `campaign_id`=p_campaign_id;
	
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_website_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_website_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_website_getall`()
BEGIN
	
	SELECT * From tbl_website order by tbl_website.create_date desc;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_website_getbycode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_website_getbycode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_website_getbycode`(IN `p_website_code` TEXT)
BEGIN
	
	SELECT * From tbl_website where tbl_website.website_code = p_website_code;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_website_getprefix` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_website_getprefix` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_website_getprefix`()
BEGIN
	
	SELECT w.* FROM tbl_website as w,tbl_settings as st WHERE w.website_code = st.site_default limit 1;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_wrapping_setting_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_wrapping_setting_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_wrapping_setting_add`(`dinsertsql` TEXT)
BEGIN
  SET @insertStmt = CONCAT('INSERT INTO tbl_wrapping_setting(id,goods_code,color_code,size_code,amount,note)
		VALUES ',dinsertsql);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_wrapping_setting_delete` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_wrapping_setting_delete` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_wrapping_setting_delete`()
BEGIN
 DELETE from `tbl_wrapping_setting` where 1=1;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_wrapping_setting_getall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_wrapping_setting_getall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_wrapping_setting_getall`()
BEGIN
  select * from `tbl_wrapping_setting` where 1=1 order by id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_yahoo_log_del` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_yahoo_log_del` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_yahoo_log_del`()
BEGIN
DECLARE aiMonth   INT;
 SET aiMonth=3;  
   DELETE FROM tbl_yahoo_pay_logs WHERE TIMESTAMPDIFF(MONTH,TIMESTAMP (tbl_yahoo_pay_logs.`timestamp`,'YYYY-MM-DD HH:MM:SS'),TIMESTAMP(NOW(),'YYYY-MM-DD HH:MM:SS' ))>=aiMonth;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STJUNION_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `STJUNION_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STJUNION_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STRAWEC_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `STRAWEC_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STRAWEC_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListStrawberryjamec(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISU_sp_getAllBanner_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISU_sp_getAllBanner_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISU_sp_getAllBanner_frontend`(IN `p_item_code` VARCHAR(20))
BEGIN
	SELECT * FROM tbl_banner 
	WHERE 
		tbl_banner.banner_status = 1
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
		AND item_code = p_item_code
	ORDER BY tbl_banner.order_num ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISU_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(20), IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	
	IF 
		p_SlugUrl 	IS NOT NULL 
		AND p_SlugUrl 	<> '' 
		AND p_SlugUrl 	<> 'all' 
		AND p_SlugUrl 	<> 'other' 
		AND p_SlugUrl 	<> 'sale' 
		AND p_SlugUrl 	<> 'new' 
		AND p_SlugUrl 	<> 'new-arrival'
		AND p_SlugUrl 	<> 'recommended'
		AND p_SlugUrl 	<> 'restock-items'
	THEN
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
			 
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' AND p_group_category_id <> '0' THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
END */$$
DELIMITER ;

/* Procedure structure for procedure `tbl_gift_product_detail_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `tbl_gift_product_detail_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `tbl_gift_product_detail_save`(IN `p_gift_detail_id` BIGINT(20), IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_size_code` VARCHAR(50))
BEGIN
	INSERT INTO tbl_gift_product_detail(gift_detail_id, goods_code, color_code, size_code)
	VALUES (p_gift_detail_id, p_goods_code, p_color_code, p_size_code);
END */$$
DELIMITER ;

/* Procedure structure for procedure `THETENT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `THETENT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `THETENT_sp_Product_GetProductByCategorySlugUrlAndCateGroupCode`(IN `p_SlugUrl` VARCHAR(100), IN `p_small_SlugUrl` VARCHAR(100), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	DECLARE item_code 		VARCHAR(50) DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display,
		ItemCode
	FROM 
		tbl_products_category 
	WHERE slug_url = p_SlugUrl
	INTO item_name_tmp, item_code;
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	SELECT COUNT(ItemCode)
	FROM 
		tbl_products_category 
	WHERE 	tbl_products_category.Name = item_name_tmp
		OR tbl_products_category.name_display = item_name_tmp
	INTO item_count_tmp;
	
	SELECT 	goodcode_list_manual INTO @goodcode_list_manual
	FROM 	tbl_products_category_small
	WHERE 	category_small_status = 1 
		and slug_url = p_small_SlugUrl
	LIMIT 1;	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
			
		
		
	IF 
		p_SlugUrl 	IS NULL 
		OR p_SlugUrl 	<> '' 
		OR p_SlugUrl 	<> 'all' 
		OR p_SlugUrl 	<> 'other' 
		OR p_SlugUrl 	<> 'sale' 
		OR p_SlugUrl 	<> 'new' 
		OR p_SlugUrl 	<> 'new-arrival'
		OR p_SlugUrl 	<> 'recommended'
		OR p_SlugUrl 	<> 'restock-items'
	THEN
		SET @selectFromStmt = 
			CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details,
				tbl_products_category
				
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.product_itemcode = tbl_products_category.itemcode
				");
	END IF;
	
	IF 
		p_small_SlugUrl 	IS NOT NULL 
		AND p_small_SlugUrl 	<> ''
	THEN
		IF p_sort = '' or p_sort = 'recommend_order' THEN
			SET @orderStmt = CONCAT("
				ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@goodcode_list_manual, '\r\n', ','), "') ");
		end if;
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, " 
		AND tbl_products.goods_code in ('",REPLACE(@goodcode_list_manual, '\r\n', ''','''),"')");
	else
		IF 
			p_SlugUrl 	IS NOT NULL 
			AND p_SlugUrl 	<> '' 
			AND p_SlugUrl 	<> 'all' 
			AND p_SlugUrl 	<> 'other' 
			AND p_SlugUrl 	<> 'sale' 
			AND p_SlugUrl 	<> 'new' 
			AND p_SlugUrl 	<> 'new-arrival'
			AND p_SlugUrl 	<> 'recommended'
			AND p_SlugUrl 	<> 'restock-items'
		THEN
			IF item_count_tmp > 0 THEN
				SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND (
					(
						tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
					)
					OR
					(
						tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
					)
					OR
					(
						tbl_products.multiple_item_code LIKE '%",item_code,"%'
					)
				)
				
				 ");
			ELSE 
				SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
			END IF;
				 
		ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'other' THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
		ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'sale' THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products.sale_off_product = 1 ");
		ELSEIF p_SlugUrl 	IS NOT NULL AND (p_SlugUrl = 'new' OR p_SlugUrl = 'new-arrival') THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products.new_product = 1 ");
		ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'recommended' THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products.is_recommended_item = 1  ");
		ELSEIF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
				AND tbl_products.is_sold_out = 1  ");
		END IF;
	end if;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)';
	IF p_SlugUrl 	IS NOT NULL AND p_SlugUrl = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",
		@conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
		
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_SlugUrl;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header,
		tbl_products_category.category_logo
	FROM tbl_products_category
	WHERE slug_url = p_SlugUrl;
	
	IF 
		p_small_SlugUrl 	IS NOT NULL 
		AND p_small_SlugUrl 	<> ''
	THEN
		SELECT * FROM tbl_products_category_small WHERE slug_url = p_small_SlugUrl;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `virgo_sp_getAllBannerBog` */

/*!50003 DROP PROCEDURE IF EXISTS  `virgo_sp_getAllBannerBog` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `virgo_sp_getAllBannerBog`(IN `p_item_code` TEXT)
BEGIN
	SELECT * FROM tbl_banner 
	WHERE 
		(
			UPPER(tbl_banner.item_code) = UPPER(p_item_code)
			OR p_item_code = ''
		);
END */$$
DELIMITER ;

/* Procedure structure for procedure `virgo_sp_getAllBannerBog_frontend_by_item_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `virgo_sp_getAllBannerBog_frontend_by_item_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `virgo_sp_getAllBannerBog_frontend_by_item_code`(IN `p_item_code` TEXT, IN `p_limit_start` BIGINT, IN `p_limit_end` BIGINT)
BEGIN
/**
 * User:hoaxuan
 * Date:19/09/2018
 * Note: them store nay cho kh kentucky, lay banner theo item code
 */
	SELECT * FROM tbl_banner 
	WHERE 
		(
			UPPER(tbl_banner.item_code) = UPPER(p_item_code)
			OR p_item_code = ''
		)
		AND tbl_banner.banner_status = 1 
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
	ORDER BY tbl_banner.banner_id DESC
	LIMIT p_limit_start,p_limit_end;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `YELLOW_sp_Product_GetProductByCateAndBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `YELLOW_sp_Product_GetProductByCateAndBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `YELLOW_sp_Product_GetProductByCateAndBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_group_category_id` INT, IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListDateTime(p_category_code, p_sort, 'Yellowdivision');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	-- -===============================================================================
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	-- -===============================================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
	
	-- Get item info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `ABSOLUT_sp_getAllLookBookFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `ABSOLUT_sp_getAllLookBookFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `ABSOLUT_sp_getAllLookBookFontEnd`(IN `p_brand_code` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:08/08/2018
 * Note: them store nay cho kh manifest
 */
	if p_brand_code is not null and p_brand_code != ''
	then
		set @brand_condition = Concat(" AND brand_code = ",p_brand_code);
	else
		SET @brand_condition = '';
	end if;
	
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 and set_status = 1",@brand_condition,"
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `ABSOLUT_sp_set_of_products_getBySeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `ABSOLUT_sp_set_of_products_getBySeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `ABSOLUT_sp_set_of_products_getBySeason`(IN `p_set_season_id` BIGINT, IN `p_brand_code` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
		-- SELECT * FROM  tbl_set_of_products WHERE set_season_id = p_set_season_id and set_status=1 and set_type = 1
		-- ORDER BY set_order asc;
		
		IF p_brand_code IS NOT NULL AND p_brand_code != ''
		THEN
			SET @brand_condition = CONCAT(" AND brand_code = ",p_brand_code);
		ELSE
			SET @brand_condition = '';
		END IF;
	
		SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE set_season_id = ",p_set_season_id," AND set_type = 1 and set_status = 1",@brand_condition,"
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `Aziazi2_sp_media_hotlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `Aziazi2_sp_media_hotlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Aziazi2_sp_media_hotlist`(IN `p_news_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	IF (p_news_id = 0 OR p_news_id = '') THEN
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1		
		ORDER BY tbl_news.public_date DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1
		;
	ELSE
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1
		ORDER BY tbl_news.public_date DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1
		;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Aziazi2_sp_media_hotlist_index` */

/*!50003 DROP PROCEDURE IF EXISTS  `Aziazi2_sp_media_hotlist_index` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Aziazi2_sp_media_hotlist_index`(IN `p_news_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	IF (p_news_id = 0 OR p_news_id = '') THEN
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1			
		ORDER BY tbl_news.news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1	
		;
	ELSE
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1	
		ORDER BY tbl_news.news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND tbl_news.`top` = 1	
		;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `ABSOLUT_sp_getProductByName` */

/*!50003 DROP PROCEDURE IF EXISTS  `ABSOLUT_sp_getProductByName` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `ABSOLUT_sp_getProductByName`(IN `p_product_name` VARCHAR(20), IN `p_brand_code` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	SET @condition_name = CONCAT("");
	IF  p_product_name IS NOT NULL AND p_product_name = 'kids' THEN
		SET @condition_name = CONCAT(" AND (tbl_products.product_name_display LIKE '%kids%' OR tbl_products.product_name LIKE '%kids%')");
	ELSEIF  p_product_name IS NOT NULL AND p_product_name = 'ladies' THEN
		SET @condition_name = CONCAT(" AND tbl_products.product_name_display NOT LIKE '%kids%' AND tbl_products.product_name NOT LIKE '%kids%'");
	ELSEIF  p_product_name IS NOT NULL AND p_product_name = 'allgender' THEN
		SET @condition_name = CONCAT("");	
	END IF;
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
				tbl_products, 
				tbl_products_details
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1",@condition_name,"
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			
			");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( ", 
			@selectStmt, @selectFromStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `AZIAZI2_sp_news_hotlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `AZIAZI2_sp_news_hotlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `AZIAZI2_sp_news_hotlist`(IN `p_news_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	IF (p_news_id = 0 OR p_news_id = '') THEN
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)		
		ORDER BY tbl_news.news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		;
	ELSE
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		ORDER BY tbl_news.news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `ABSOLUT_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `ABSOLUT_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `ABSOLUT_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_brand_code` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	SET @brand_condition = '';
	IF (p_brand_code != '') THEN
		SET @brand_condition =  CONCAT("AND tbl_products.brand_code = '" ,p_brand_code,"'");
	END IF;
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			",@brand_condition,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	goodcode_list_manual
		FROM 	tbl_products_category_group 
		WHERE 	id = p_group_category_id
		INTO 	@goods_code_from_group_category;
		
		SET @condition_goods_code = '';
		IF 	@goods_code_from_group_category != '' 
			AND @goods_code_from_group_category IS NOT NULL
		THEN
			SET @condition_goods_code = CONCAT("
			OR tbl_products.goods_code IN ('",REPLACE(@goods_code_from_group_category, '\r\n', "','"),"')
			");
		END IF;
		
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @condition_item_code = '';
		IF 	@itemcode_from_group_category != '' 
			AND @itemcode_from_group_category IS NOT NULL
		THEN
			SET @condition_item_code = CONCAT("
			OR tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
			",@check_multiple_item,"
			");
		END IF;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			1=2
			",@condition_item_code,"
			",@condition_goods_code,"
			)
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Canada_sp_Product_GetBestSellerByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `Canada_sp_Product_GetBestSellerByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Canada_sp_Product_GetBestSellerByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE count_number INT;
	DECLARE str  VARCHAR(255);
	DECLARE interval_number INT;
	-- =============================================
	
	SET count_number = 0;
	SET interval_number = 10;
	
	
	-- Tinh toan ngay de select san pham best seller sao cho it nhat dc 10 san pham
	WHILE count_number  <= 10 AND interval_number <= 20 DO
		IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
		-- 
			SELECT COUNT(goods_code) FROM (
				SELECT 	tbl_order_detail.goods_code, COUNT(tbl_order_detail.goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM 	tbl_order_detail
						LEFT JOIN tbl_orders   ON tbl_order_detail.order_code = tbl_orders.order_code
						LEFT JOIN tbl_products ON tbl_order_detail.goods_code = tbl_products.goods_code
				WHERE 	
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category AS cat_tmp WHERE cat_tmp.category_group_id = p_group_category_id)
					AND (
						DATE(tbl_orders.created_on) 
							BETWEEN DATE(NOW()) - INTERVAL interval_number DAY  AND  DATE(NOW())
					)
				GROUP BY goods_code
				ORDER BY total_bought DESC
			) AS tbl_tmp1 INTO count_number ;
		ELSE 
			SELECT COUNT(goods_code) FROM (
				SELECT 	goods_code, COUNT(goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM 	tbl_order_detail 
						LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
				WHERE 	
					DATE(tbl_orders.created_on) 
						BETWEEN DATE(NOW()) - INTERVAL interval_number DAY  AND  DATE(NOW())
				GROUP BY goods_code
				ORDER BY total_bought DESC
			) AS tbl_tmp1 INTO count_number;
		END IF;	
	SET interval_number = interval_number + 10;
	END WHILE;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.product_itemcode 		<> 'I-02' ");
	
	
	
	
	
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.goods_code IN (
		
		
			SELECT goods_code FROM (
				SELECT tbl_order_detail.goods_code, COUNT(tbl_order_detail.goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
				FROM tbl_order_detail 
					LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
					LEFT JOIN tbl_products pro_tml_2 ON tbl_order_detail.goods_code = pro_tml_2.goods_code
				WHERE 
					pro_tml_2.product_itemcode IN (SELECT ItemCode FROM tbl_products_category AS cat_tmp WHERE cat_tmp.category_group_id = ",p_group_category_id,")
					AND ( DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) )
				GROUP BY goods_code
				ORDER BY total_bought DESC
				LIMIT 0, 11
			) AS tbl_tmp2
			
			
		)  ");
			
			
			
	ELSE 
	SET @selectFromStmt = CONCAT(@selectFromStmt, " 
		AND tbl_products.goods_code IN (
	
	
		SELECT goods_code FROM (
			SELECT goods_code, COUNT(goods_code) AS total_bought , DATE(tbl_orders.created_on), DATE(NOW())
			FROM tbl_order_detail 
				LEFT JOIN tbl_orders ON tbl_order_detail.order_code = tbl_orders.order_code
			WHERE 
				 DATE(tbl_orders.created_on) BETWEEN DATE(NOW()) - INTERVAL ",interval_number," DAY AND  DATE(NOW()) 
			GROUP BY goods_code
			ORDER BY total_bought DESC
			LIMIT 0, 11
		) AS tbl_tmp2
		
		
		
		
	)  ");
				
	END IF;	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = " 
		WHERE stock_num > 0 
	";
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_getAllStylingFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_getAllStylingFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_getAllStylingFontEnd`(IN `p_slug_color` VARCHAR(20), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:27/04/2020
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT tbl_set_of_products.set_id,
			       tbl_set_of_products.set_code,
			       tbl_set_of_products.set_name,
				tbl_set_of_products.set_image,
				tbl_set_of_products.set_content,
				tbl_set_of_products.set_content_for_search,
				tbl_set_of_products.set_status,
				tbl_set_of_products.set_year_id,
				tbl_set_of_products.set_season_id,
				tbl_set_of_products.set_url,
				tbl_set_of_products.set_type,
				tbl_set_of_products.create_date,
				tbl_set_of_products.set_description,
				tbl_set_of_products.set_content_for_front,
				tbl_set_of_products.set_image_2,
				tbl_set_of_products.set_order,
				tbl_set_of_products.age,
				tbl_set_of_products.keyword,
				tbl_set_of_products.barcode_related,
				tbl_set_of_products.set_short_description,
				tbl_set_of_products.set_multiple_image,
				tbl_set_of_products.brand_related,
				tbl_set_of_products.item_related,
				tbl_set_of_products.show_in_top,
				tbl_set_of_products.show_in_brand_page,
				tbl_set_of_products.brand_code,
				tbl_set_of_products.set_staff_code,
			        tbl_staff.SeqNo,
			        tbl_staff.RSeqNo,
			        tbl_staff.CreatedDate,
				tbl_staff.ModifiedDate,
				tbl_staff.StaffCode,
				tbl_staff.StaffName,
				tbl_staff.TimeStamp,
				tbl_staff.chkSection,
				tbl_staff.order,
				tbl_staff.display_name,
				tbl_staff.status,
				tbl_staff.show_menu,
				tbl_staff.staff_image,
				tbl_staff.staff_height,
				tbl_shop.shop_name
			FROM tbl_set_of_products
			LEFT JOIN tbl_staff ON tbl_set_of_products.set_staff_code = tbl_staff.StaffCode
			LEFT JOIN tbl_shop ON  tbl_staff.shopcode = tbl_shop.shop_code
			WHERE 	set_type = 2 and set_status = 1 and tbl_set_of_products.set_content LIKE '%",p_slug_color,"%'
			ORDER BY create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetProductBySetProductId` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetProductBySetProductId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetProductBySetProductId`(IN `p_set_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = CONCAT(" ORDER BY  FIELD(CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code),",(SELECT 
				CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN 
					"'-9999'" 
				ELSE 
					set_content_for_search 
				END 
			FROM
				tbl_set_of_products 
				WHERE set_id = p_set_id
			),"),product_goods_code 	ASC  
					 ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",(SELECT CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN "'-9999'" ELSE set_content_for_search END FROM tbl_set_of_products WHERE set_id = p_set_id),") ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	SET @selectLimitStmt = CONCAT("
         LIMIT ",indexFrom,",",indexLimit," ");
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		0,
		p_shop_list
	);
		
	
	-- SET @selectLimitStmt = CONCAT(" ");
	SET @selectStmtStr = CONCAT("
	SELECT product_info.*, 
	",@getStockNumberStmt2,"
	 FROM ( 
		", @selectStmt, "
		", @selectFromStmt,"
		", @selectGroupStmt,"
		", @orderStmt,"
		", @selectLimitStmt, "
	) AS product_info 
	");
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt);
 	INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetAllItemsskuno_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetAllItemsskuno_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetAllItemsskuno_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetAllItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetAllItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetAllItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetHotFeaturedItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetHotFeaturedItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetHotFeaturedItem`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_recommended_item	        = 1");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_set_of_products_getStyling` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_set_of_products_getStyling` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_set_of_products_getStyling`(IN `p_staff_code` VARCHAR(20), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
		-- SELECT * FROM  tbl_set_of_products WHERE set_season_id = p_set_season_id and set_status=1 and set_type = 1
		-- ORDER BY set_order asc;
		
		SET @strSelect = 
		CONCAT("
			SELECT 
				tbl_set_of_products.set_id,
			       tbl_set_of_products.set_code,
			       tbl_set_of_products.set_name,
				tbl_set_of_products.set_image,
				tbl_set_of_products.set_content,
				tbl_set_of_products.set_content_for_search,
				tbl_set_of_products.set_status,
				tbl_set_of_products.set_year_id,
				tbl_set_of_products.set_season_id,
				tbl_set_of_products.set_url,
				tbl_set_of_products.set_type,
				tbl_set_of_products.create_date,
				tbl_set_of_products.set_description,
				tbl_set_of_products.set_content_for_front,
				tbl_set_of_products.set_image_2,
				tbl_set_of_products.set_order,
				tbl_set_of_products.age,
				tbl_set_of_products.keyword,
				tbl_set_of_products.barcode_related,
				tbl_set_of_products.set_short_description,
				tbl_set_of_products.set_multiple_image,
				tbl_set_of_products.brand_related,
				tbl_set_of_products.item_related,
				tbl_set_of_products.show_in_top,
				tbl_set_of_products.show_in_brand_page,
				tbl_set_of_products.brand_code,
				tbl_set_of_products.set_staff_code,
			        tbl_staff.SeqNo,
			        tbl_staff.RSeqNo,
			        tbl_staff.CreatedDate,
				tbl_staff.ModifiedDate,
				tbl_staff.StaffCode,
				tbl_staff.StaffName,
				tbl_staff.TimeStamp,
				tbl_staff.chkSection,
				tbl_staff.order,
				tbl_staff.display_name,
				tbl_staff.status,
				tbl_staff.show_menu,
				tbl_staff.staff_image,
				tbl_staff.staff_height
			
			FROM tbl_set_of_products
			LEFT JOIN tbl_staff
			ON tbl_set_of_products.set_staff_code = tbl_staff.StaffCode	
			WHERE set_staff_code = '",p_staff_code,"' AND set_type = 2 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	 -- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetNewItemsForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetNewItemsForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetNewItemsForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_addwishlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_addwishlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_addwishlist`(`p_product_id` BIGINT(20), `p_customer_id` BIGINT(20), `p_color_code` VARCHAR(20), `p_size_code` VARCHAR(20))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code)) THEN
		DELETE FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code ;
		SELECT 0 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id AND tbl_wish_list.customer_id =p_customer_id;
	ELSE
		INSERT INTO tbl_wish_list(customer_id, product_id, added_on, color_code, size_code)
		VALUES (p_customer_id, p_product_id, NOW(),p_color_code, p_size_code);
		SELECT 1 AS list_exists;
               SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id AND tbl_wish_list.customer_id =p_customer_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_getAllProductPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_getAllProductPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_getAllProductPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `p_mode` VARCHAR(20))
BEGIN
	IF(p_mode = 'hidden') THEN
	/*
		SELECT 	tbl_products.*,
			tbl_products_details.product_detail_price AS product_detail_price,
			tbl_products_details.barcode AS barcode
		FROM tbl_products LEFT JOIN tbl_products_details ON tbl_products_details.`RSeqNo`=tbl_products.`SeqNo` 
		WHERE tbl_products.product_status = 2 
		GROUP BY SeqNo
		ORDER BY tbl_products.create_date,tbl_products.goods_code DESC 
		LIMIT p_skip,p_limit;
		*/
		SELECT tbl_products.*,
			(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `product_detail_price` ,
			(SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `barcode` 
		FROM tbl_products 
		WHERE tbl_products.product_status = 2  
		ORDER BY tbl_products.create_date DESC,tbl_products.goods_code DESC 
		LIMIT p_skip,p_limit;
		SELECT COUNT(*) AS total_items FROM tbl_products WHERE tbl_products.product_status = 2;
	ELSE
	/*
		SELECT 	tbl_products.*,
			tbl_products_details.product_detail_price AS product_detail_price,
			tbl_products_details.barcode AS barcode
		FROM tbl_products LEFT JOIN tbl_products_details ON tbl_products_details.`RSeqNo`=tbl_products.`SeqNo` 
		WHERE tbl_products.product_status <> 2 OR tbl_products.product_status IS NULL 
		GROUP BY SeqNo
		ORDER BY tbl_products.create_date,tbl_products.goods_code DESC 
		LIMIT p_skip,p_limit;
		*/
		SELECT tbl_products.*,
			(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `product_detail_price` ,
			(SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
			 AS `barcode` 
		FROM tbl_products 
		WHERE tbl_products.product_status <> 2 OR tbl_products.product_status IS NULL 
		ORDER BY tbl_products.create_date DESC,tbl_products.goods_code DESC 
		LIMIT p_skip,p_limit;
		SELECT COUNT(*) AS total_items FROM tbl_products WHERE tbl_products.product_status <> 2 OR tbl_products.product_status IS NULL;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetNewItemsskuno_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetNewItemsskuno_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetNewItemsskuno_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetNewItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetNewItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetNewItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetPreOrderItemsskuno_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetPreOrderItemsskuno_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetPreOrderItemsskuno_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.is_pre_order			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetPreOrderItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetPreOrderItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetPreOrderItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.is_pre_order			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetSaleItemsskuno_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetSaleItemsskuno_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetSaleItemsskuno_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.sale_off_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_catherine(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CATHERINE_sp_Product_GetSaleItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `CATHERINE_sp_Product_GetSaleItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CATHERINE_sp_Product_GetSaleItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.sale_off_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_getall_for_filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_getall_for_filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_getall_for_filter`()
BEGIN
	SELECT id, category_group_parent_name, category_group_name FROM tbl_products_category_group ORDER BY category_group_show_order ASC;
	
	SELECT ItemCode, name_display, `Name` FROM tbl_products_category ORDER BY show_order ASC;
	
	SELECT brand_code, brand_name_display, brand_name FROM tbl_brands ORDER BY show_order ASC;
	
	SELECT size_code, size_display, size_name FROM tbl_size ORDER BY tbl_size.display_order ASC, tbl_size.size_name ASC;
	
	SELECT color_code, color_display, color_name FROM tbl_colors ORDER BY tbl_colors.color_displayorder ASC, tbl_colors.color_name ASC;
	
	SELECT search_key FROM tbl_search_key ORDER BY tbl_search_key.`search_key_id` DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_Product_GetProductByProductCodes_lookbook` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_Product_GetProductByProductCodes_lookbook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_Product_GetProductByProductCodes_lookbook`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT, IN `p_gender` VARCHAR(50))
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND (
				tbl_products.goods_code 			IN (",p_product_codes,")
				OR tbl_products_details.barcode IN (", p_product_codes ,")
			)
			AND tbl_products.goods_code 			<> ''");
			
	IF (p_gender IS NOT NULL AND p_gender <> 'all' AND p_gender <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt," AND (tbl_products.SectionCode IN (",p_gender,") ) ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	
	
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
		-- insert into tbl_sys_log (sys_log) values (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `CORD3_sp_SearchProductByName_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `CORD3_sp_SearchProductByName_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CORD3_sp_SearchProductByName_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
      SET @selectStmt2 = 'SELECT SQL_CALC_FOUND_ROWS * FROM (
				SELECT tbl_products.*,
					(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
					 AS `product_detail_price`,
					(SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo)
					 AS `barcode`
				FROM tbl_products
			) as product_info
			WHERE ';      
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	SET @selectStmt = CONCAT(" product_info.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," 
					or product_info.goods_code like '%", p_keyword,"%' ");
	SET @selectStmt = CONCAT(@selectStmt," 
					or product_info.SectionName like '%", p_keyword,"%' ");
	SET @selectStmt = CONCAT(@selectStmt," 
					or product_info.barcode like '%", p_keyword,"%' ");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,'GROUP BY product_info.SeqNo LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	
      -- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt2);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SELECT FOUND_ROWS() AS total_items;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `DMC_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `DMC_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `DMC_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @selectStmt = CONCAT(
	"
	SELECT * 
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
				
			END AS color_display,			
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.product_status = 1 and
			tbl_products_details.product_detail_status = 0 
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
		LEFT JOIN
		(
			SELECT 
				s.GoodCode,
				s.ColorCode,
				s.SizeCode,
				CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE '0' END AS stock_num				
			FROM 
				tbl_stock_num AS s 
	");
	IF p_shoplist <> "'-1999'" THEN
		SET @selectStmt = CONCAT(@selectStmt, "
			WHERE 	s.ShopCode IN (",   p_shoplist ,") ");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt, "
			GROUP BY s.GoodCode, s.ColorCode, s.SizeCode
		) AS soton 
			ON 	tmp_p.goods_code = soton.GoodCode 
				AND tmp_p.color_code = soton.ColorCode 
				AND tmp_p.size_code = soton.SizeCode
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	-- insert into tbl_sys_log (sys_log) values (concat("selectStmt: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `DMC_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `DMC_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `DMC_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, 'DMC');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SELECT 
		id,
		category_group_code,
		category_group_name,
		category_group_status,
		category_group_show_order,
		category_group_parent_name,
		category_group_banner,
		is_show_sub_menu
	FROM 	
		tbl_products_category_group
	WHERE 	
		id = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HAPUNA_sp_ad_saveSettings_dateexpired` */

/*!50003 DROP PROCEDURE IF EXISTS  `HAPUNA_sp_ad_saveSettings_dateexpired` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HAPUNA_sp_ad_saveSettings_dateexpired`()
BEGIN
	set @date_expired = (SELECT date_expired FROM tbl_settings);
	if @date_expired is null OR @date_expired = '' then
		set @date_expired = 0;
	end if;
	
	--  update 
		UPDATE 	tbl_products 
		SET 	new_product = 0,
			date_new_start = '',
			date_expired = ''
		WHERE 	date_expired < CURDATE() AND new_product = 1 and date_expired != '';
		
		UPDATE 	tbl_products 
		SET 	new_product = 0
		WHERE 	CURDATE() < date_new_start AND new_product = 1 AND date_new_start != '';
		
		UPDATE 	tbl_products 
		SET 	date_new_start = DATE_FORMAT(CURDATE(), "%Y/%m/%d"),
			date_expired = DATE_FORMAT(ADDDATE(CURDATE(), @date_expired), "%Y/%m/%d")
		WHERE 	new_product = 1 AND date_new_start = '' AND date_expired = '';
		
		UPDATE 	tbl_products 
		SET 	new_product = 1
		WHERE 	date_new_start <= CURDATE() AND CURDATE() <= date_expired AND new_product = 0;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_products_hashtag_getByCategoryGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_products_hashtag_getByCategoryGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_products_hashtag_getByCategoryGroupId`(IN `p_category_group_id` VARCHAR(200), IN `p_is_show_menu` TINYINT(1), IN `p_select_index_from` INT, IN `p_select_index_to` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT
		ht.*
	FROM 	tbl_products_hashtag ht
		");
		
		
	SET @conditionStmt = CONCAT("
	WHERE 
		status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	");
	IF p_category_group_id 	IS NOT NULL AND p_category_group_id 	<> '' AND p_category_group_id 	<> '0' THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.category_group_id_str like '%;", p_category_group_id, ";%'
	");
	END IF;
	IF p_is_show_menu = 1 THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.is_show_menu = 1
	");
	END IF;
	
	SET @orderStmt = CONCAT("
	ORDER BY show_order ASC, hashtag_id ASC
	");
	
	
	SET @selectLimitStmt = '';
	-- if p_select_index_to <> 0 THEN
	-- 	SET @selectLimitStmt = 
	-- 		CONCAT("
	-- 		LIMIT ",p_select_index_from,",",p_select_index_to, " ");
	-- end if;
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@conditionStmt,
		@orderStmt,
		@selectLimitStmt
	);
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `KENTUCKY_sp_products_category_getItemForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `KENTUCKY_sp_products_category_getItemForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KENTUCKY_sp_products_category_getItemForMenu`(IN `p_menu_type` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:12/12/2018
 * Note: kentucky lay menu kieu rieng = D18120609
 */
SET @strSelect = 
CONCAT("
SELECT 
	DISTINCT(name_display),OrderNumber,ItemCode
FROM 	(
	SELECT tbl_category_tmp.*
	FROM  	(
		SELECT
			OrderNumber,Name,ItemCode,	
			(CASE WHEN name_display IS NULL OR name_display = '' THEN
				Name
			ELSE 
				name_display
			END) AS name_display
		FROM tbl_products_category
		WHERE 
			ecsite 		 = 1 
			AND IsDisplay 	 = 1 
			AND IsShowAsMenu = 1
		ORDER BY OrderNumber ASC
		) AS tbl_category_tmp
			RIGHT JOIN  (
				SELECT  
					tbl_products.goods_code,tbl_products_details.color_code,tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 0 ");
					
				if (p_menu_type <> 1) THEN -- lay loai menu cua nhung san pham khong co check outlet
					SET @strSelect = CONCAT(@strSelect," AND (tbl_products.is_coupon_unavailable = 0 or tbl_products.is_coupon_unavailable is null) ");
				ELSE -- lay loai menu cua nhung san pham co check outlet
					SET @strSelect = CONCAT(@strSelect," AND tbl_products.is_coupon_unavailable = 1 ");
				END IF;
				SET @strSelect = CONCAT(@strSelect,"
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
				UNION
				SELECT  
					tbl_products.goods_code,tbl_products_details.color_code,tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 1
					AND tbl_products_details.is_main_color		= 1 ");
					IF (p_menu_type <> 1) THEN -- lay loai menu cua nhung san pham khong co check outlet
						SET @strSelect = CONCAT(@strSelect," AND (tbl_products.is_coupon_unavailable = 0 or tbl_products.is_coupon_unavailable is null) ");
					ELSE -- lay loai menu cua nhung san pham co check outlet
						SET @strSelect = CONCAT(@strSelect," AND tbl_products.is_coupon_unavailable = 1 ");
					END IF;
				SET @strSelect = CONCAT(@strSelect,"
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
				) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
			GROUP BY tbl_category_tmp.ItemCode
	) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC;");
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `GROUPOTANAKA_sp_Product_GetProductByCategoryGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `GROUPOTANAKA_sp_Product_GetProductByCategoryGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GROUPOTANAKA_sp_Product_GetProductByCategoryGroupCode`(IN `p_category_code` VARCHAR(2000), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode in (p_category_code)
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN (",p_category_code,")");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @select_size = CONCAT("
		,(
			SELECT 	tbl_brands_group.`select_size` 
			FROM 	tbl_brands, tbl_brands_group
			WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
				AND tbl_brands_group.id = tbl_brands.group_id
			GROUP BY tbl_brands.brand_id
		) AS select_size
	");
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @select_size, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @select_size, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode in (p_category_code);
END */$$
DELIMITER ;

/* Procedure structure for procedure `GROUPOTANAKA_sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `GROUPOTANAKA_sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GROUPOTANAKA_sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand_group_id` INT, IN `p_search_status` VARCHAR(50), IN `p_search_stock` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET p_add_and_condition_str = GROUPOTANAKA_getSearchQuery(p_category_code,p_price_start,p_price_end,p_search_keyword,p_search_brand_group_id,p_search_status);
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, "
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_search_stock IS NOT NULL AND p_search_stock = '0' THEN
		SET @conditionRestockItemsStmt = ' WHERE ((product_is_hide_while_out_of_stock = 1 AND stock_num > 0) OR stock_num >0)';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `GRUPPOTANAKA_sp_Product_GetProductByBrandGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `GRUPPOTANAKA_sp_Product_GetProductByBrandGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GRUPPOTANAKA_sp_Product_GetProductByBrandGroupCode`(IN `p_brand_group_code` VARCHAR(200), IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 	VARCHAR(200) DEFAULT NULL;	
	DECLARE brand_name_tmp 	VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 			
			");
	
	-- =======================================================
	IF 
		p_brand_group_code 	IS NOT NULL 
		AND p_brand_group_code 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (
			SELECT brand_code 
			FROM tbl_brands as brand_tmp 
			left join tbl_brands_group as brand_group on brand_tmp.group_id = brand_group.id
			where brand_group.group_code = '",p_brand_group_code,"'
			)
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)");
	END IF;
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	set @select_size = concat("
		,(
			SELECT 	tbl_brands_group.`select_size` 
			FROM 	tbl_brands, tbl_brands_group
			WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
				AND tbl_brands_group.id = tbl_brands.group_id
			GROUP BY tbl_brands.brand_id
		) AS select_size
	");
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @select_size, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @select_size, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- ======================1=====================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- ======================2=====================
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ======================3=====================
	SELECT * FROM tbl_brands_group WHERE group_code = p_brand_group_code;
	
	-- ======================4=====================
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `GRUPPOTANAKA_sp_Product_GetProductByHastag_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `GRUPPOTANAKA_sp_Product_GetProductByHastag_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GRUPPOTANAKA_sp_Product_GetProductByHastag_fontend`(IN `p_keyword` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only
		INTO @dprihtml,@dhashtagid,@dhashtagtitle,@banner,@is_members_only 
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
		
		
	
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@dhashtagid, '\r\n', ','), "') ");
			
	END IF; 
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dprihtml as prihtml,
			@dhashtagtitle as hashtagtitle,
			@dhashtagid,
			@banner as banner, 
			@is_members_only as is_members_only
			
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @select_size = CONCAT("
		,(
			SELECT 	tbl_brands_group.`select_size` 
			FROM 	tbl_brands, tbl_brands_group
			WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
				AND tbl_brands_group.id = tbl_brands.group_id
			GROUP BY tbl_brands.brand_id
		) AS select_size
	");
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @select_size, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @select_size, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only ,
		create_date,
		is_show_link_destination,
		link_destination
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `GRUPPOTANAKA_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `GRUPPOTANAKA_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `GRUPPOTANAKA_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				OR tbl_products.search_keywords 		like '%",p_search_key_word,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @select_size = CONCAT("
		,(
			SELECT 	tbl_brands_group.`select_size` 
			FROM 	tbl_brands, tbl_brands_group
			WHERE 	tbl_brands.brand_code = tbl_products.`brand_code`
				AND tbl_brands_group.id = tbl_brands.group_id
			GROUP BY tbl_brands.brand_id
		) AS select_size
	");
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @select_size, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @select_size, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HAPUNA_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `HAPUNA_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HAPUNA_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'tmp_p',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		1,
		0,
		p_shoplist
	);
	SET @selectStmt = CONCAT(
	"
	SELECT 
		tmp_p.* ,
		",@getStockNumberStmt ,"
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.goods_code AS GoodCode,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_name ,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_code AS ColorCode,
			CASE WHEN tbl_products_details.color_display IS NULL OR tbl_products_details.color_display = '' THEN tbl_products_details.color_name ELSE  tbl_products_details.color_display END AS color_name,
			tbl_products_details.size_display,
			tbl_products_details.color_display,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_code AS SizeCode,
			CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN tbl_products_details.size_name ELSE  tbl_products_details.size_display END AS size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS product_itemname,
			tbl_products.product_itemcode,
			tbl_products.product_status
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.product_status = 1 
			AND tbl_products_details.product_detail_status = 0
			AND tbl_products_details.is_main_color = 1
			AND (
				tbl_products.goods_code IN (",p_color_id,")
				OR CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
			)
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
	
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `LUIRE2_sp_mail_magazine_register_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `LUIRE2_sp_mail_magazine_register_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LUIRE2_sp_mail_magazine_register_save`(IN `p_mail_name` VARCHAR(255), IN `p_chronology` VARCHAR(255), IN `p_gender` VARCHAR(255), IN `p_first_name` VARCHAR(50), IN `p_last_name` VARCHAR(50), IN `p_birthday` VARCHAR(50))
BEGIN
	IF (
		(SELECT COUNT(*) FROM tbl_mail_magazine_register WHERE UPPER(email_name) = UPPER(p_mail_name)) = 0
	) THEN
		INSERT INTO tbl_mail_magazine_register (
			email_name, 
			register_date, 
			email_status,
			chronology,
			gender,
			first_name,
			last_name,
			birthday
		) VALUES (
			p_mail_name, 
			NOW(), 
			1,
			p_chronology,
			p_gender,
			p_first_name,
			p_last_name,
			p_birthday
		);
	ELSE
		IF (
			(SELECT COUNT(*) FROM tbl_mail_magazine_register WHERE UPPER(email_name) = UPPER(p_mail_name) AND email_status = 0) > 0
		) THEN
			UPDATE 	tbl_mail_magazine_register 
			SET 	email_name 	= p_mail_name,
				email_status	= 1,
				chronology	= p_chronology,
				gender		= p_gender,
				first_name 	= p_first_name,
				last_name 	= p_last_name,
				birthday 	= p_birthday
			WHERE 	UPPER(email_name) = UPPER(p_mail_name)
				AND email_status = 0;
		END IF;
	
	END IF;
	
	select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductByBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, @conditionRestockItemsStmt," 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `HAPUNA_sp_Product_GetProductByBrandCodeAndCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `HAPUNA_sp_Product_GetProductByBrandCodeAndCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HAPUNA_sp_Product_GetProductByBrandCodeAndCategoryCode`(IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_category_slug_url` VARCHAR(200))
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	IF 
		p_category_slug_url IS NOT NULL 
		AND p_category_slug_url 	<> '' 
		AND p_category_slug_url 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.slug_url = '",p_category_slug_url,"')
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_slug_url,",%'
				)
			)
			
			 ");
	ELSE
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_category_code
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = ",p_category_code,")
				",@check_multiple_item,"
			)
			");
	END IF;
	
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@conditionRestockItemsStmt ,
		@orderStmt, "
		",@selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, @conditionRestockItemsStmt,") AS total_items");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_new` VARCHAR(20))
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	
	if (p_sort = '' AND p_new = 'hapuna-new')
	then
		SET @orderStmt = concat("ORDER BY  	product_new_product DESC, 
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC,
					pro_detail_product_detail_order 	ASC");
	end if;
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductByGroupCategoryId_Sale` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductByGroupCategoryId_Sale` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductByGroupCategoryId_Sale`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_new` VARCHAR(20))
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product = 1
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `HAPUNA_sp_Product_GetProductByShopCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `HAPUNA_sp_Product_GetProductByShopCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HAPUNA_sp_Product_GetProductByShopCode`(IN `p_shop_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_filter` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_group_category_id` VARCHAR(20), IN `p_SlugUrl` VARCHAR(20))
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_count_tmp 		INT DEFAULT NULL;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.shop_list LIKE '% ",p_shop_code," %'");
			
	IF (p_group_category_id 	IS NOT NULL AND p_group_category_id 	<> '' ) THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
				AND (
		tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"') )
			");
	
	ELSEIF  ( p_SlugUrl 	IS NOT NULL AND p_SlugUrl <> '' ) THEN
		
		SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
		FROM 
			tbl_products_category 
		WHERE slug_url = p_SlugUrl
		INTO item_name_tmp;	
		
		SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
		SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
		SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
		
		SELECT COUNT(ItemCode)
		FROM 
			tbl_products_category 
		WHERE 	tbl_products_category.Name = item_name_tmp
			OR tbl_products_category.name_display = item_name_tmp
		INTO item_count_tmp;
		
		IF item_count_tmp > 0 THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_SlugUrl,",%'
				)
			)
			
			 ");
		ELSE 
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_category.slug_url 		= '",p_SlugUrl,"' ");
		END IF;
	
	END IF;
	
	
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	
	SELECT 
		tbl_shop.shop_id,
		tbl_shop.shop_code,
		tbl_shop.shop_name,
		tbl_shop.shop_namekana,
		tbl_shop.create_date,
		tbl_shop.modified_date,
		tbl_shop.shop_status,
		tbl_shop.shop_able,
		tbl_shop.display_name,
		tbl_shop.postcode,
		tbl_shop.state,
		tbl_shop.city,
		tbl_shop.address,
		tbl_shop.address2,
		tbl_shop.shop_site,
		tbl_shop.tel,
		tbl_shop.fax,
		tbl_shop.note,
		tbl_shop.SeqNo,
		tbl_shop.RSeqNo,
		tbl_shop.TIMESTAMP,
		tbl_shop.shop_logo,
		tbl_shop.shop_header,
		(CASE WHEN display_name IS NULL OR display_name = '' THEN
			shop_name
		ELSE 
			display_name
		END) AS shop_display_name
	FROM
		tbl_shop 
	WHERE
		shop_code = p_shop_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_Product_GetProductRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_Product_GetProductRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_Product_GetProductRanking`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_category_code` VARCHAR(200), IN `p_category_slug_url` VARCHAR(200))
BEGIN
/**
 * User:hoaxuan
 * Date:02/01/2019
 * Note: lay san pham ranking hien thi ngoai font end
 */
	-- ---------------------------------
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_ranking ASC, product_goods_code ASC ';
	END IF;
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- ---------------------------------
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products_details.product_ranking > 0
			AND tbl_products_details.product_ranking is not null  ");
	
IF 
    p_category_slug_url IS NOT NULL 
    AND p_category_slug_url   <> '' 
    AND p_category_slug_url   <> 'all' 
  THEN
    SET @selectFromStmt = 
        CONCAT(@selectFromStmt, " 
      AND (
        tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.slug_url = '",p_category_slug_url,"')
        OR
        (
          tbl_products.multiple_item_code LIKE '%,",p_category_slug_url,",%'
        )
      )
      
       ");
  ELSE
  
  IF 
    p_category_code   IS NOT NULL 
    AND p_category_code   <> '' 
    AND p_category_code   <> 'all' 
  THEN
    SELECT  GROUP_CONCAT(ItemCode SEPARATOR ",")
    FROM  tbl_products_category 
    WHERE   category_group_id = p_category_code
    INTO  @itemcode_from_group_category;
    
    SET @check_multiple_item = '';
    SET @code = @itemcode_from_group_category;
    WHILE @code != '' DO
      SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
      SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
      SET @check_multiple_item = 
        CONCAT(@check_multiple_item, "
        OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
        ");
    END WHILE;
    
    SET @selectFromStmt = 
        CONCAT(@selectFromStmt, " 
      AND (
        tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = ",p_category_code,")
        ",@check_multiple_item,"
      )
      ");
  END IF;
  
  END IF;	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code ");
	
	
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `Hapuna_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `Hapuna_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Hapuna_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @check_multiple_keyword = '';
	IF p_search_key_word <> '' AND p_search_key_word IS NOT NULL
	THEN
		SET @code = p_search_key_word;
		WHILE @code != '' DO
			SET @tmp = SUBSTRING_INDEX(@code,' ',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp) + 1 + CHAR_LENGTH(' '));
			IF @tmp != '' 
			THEN
				SET @check_multiple_keyword = 
					CONCAT(@check_multiple_keyword, "
						OR tbl_products.search_keywords LIKE '%" ,@tmp, "%' 
					");
			END IF;
		END WHILE;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
				",@check_multiple_keyword,"
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = ' WHERE (stock_num >0 AND product_is_sold_out = 1)';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt 
		,@conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "			
			",@conditionRestockItemsStmt," 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HARMONYEIR_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `HARMONYEIR_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HARMONYEIR_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), `p_check_stock` VARCHAR(1), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;		
		-- ======================1=====================	
	IF (p_check_stock='1') THEN
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
				AND (stock_num > 0)
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	ELSE
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	END IF;		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	IF (p_check_stock='1') THEN
		SET @selectStmtStr2 = CONCAT("
			SELECT 	COUNT(*) AS total_items FROM ( 
					", @selectStmtStr, "
					WHERE 
						(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
						OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
						AND (stock_num > 0) 
				) AS TBL_TMP ");
	ELSE
		SET @selectStmtStr2 = CONCAT("
			SELECT 	COUNT(*) AS total_items FROM ( 
					", @selectStmtStr, "
					WHERE 
						(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
						OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
				) AS TBL_TMP ");
	END IF;
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HARMONY_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `HARMONY_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HARMONY_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @selectStmt = CONCAT(
	"
	SELECT * 
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
				
			END AS color_display,			
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			 CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
		LEFT JOIN
		(
			SELECT 
				s.GoodCode,
				s.ColorCode,
				s.SizeCode,
				CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE '0' END AS stock_num				
			FROM 
				tbl_stock_num AS s 
	");
	IF p_shoplist <> "'-1999'" THEN
		SET @selectStmt = CONCAT(@selectStmt, "
			WHERE 	s.ShopCode IN (",   p_shoplist ,") ");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt, "
			GROUP BY s.GoodCode, s.ColorCode, s.SizeCode
		) AS soton 
			ON 	tmp_p.goods_code = soton.GoodCode 
				AND tmp_p.color_code = soton.ColorCode 
				AND tmp_p.size_code = soton.SizeCode
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	 -- insert into tbl_sys_log (sys_log) values (concat("selectStmt: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Luireec_sp_Brand_getBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `Luireec_sp_Brand_getBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Luireec_sp_Brand_getBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_customer_id` BIGINT(20))
BEGIN
	SET @selectStmt = CONCAT("
	SELECT
		tbl_brands.SeqNo,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display");
		
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	IF (p_customer_id <> '') THEN
		SET @selectStmt = 
			CONCAT(@selectStmt,", is_wished ");
			
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					brand_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list_brand 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY brand_code
			
			) AS wish_list_info
				ON wish_list_info.brand_code 	= tbl_brands.brand_code");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(
		@selectStmt,"
		FROM 	tbl_brands", @selectJoinWishListStmt, "
		WHERE	tbl_brands.brand_code = '",p_brand_code,"'");
			
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HARMONY_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `HARMONY_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HARMONY_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = '';
SET @orderStmt = getOrderStmtForProductList(p_sort, 'HARMONY');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
		
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
		");		
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- sua cach lay so ton		
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT SQL_CALC_FOUND_ROWS product_info_ok.* FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = "SELECT FOUND_ROWS() AS total_items";
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HARMONY_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `HARMONY_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HARMONY_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HARMONY');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Outlet` */

/*!50003 DROP PROCEDURE IF EXISTS  `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Outlet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Outlet`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, 'DMC');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_coupon_unavailable		= 1
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SELECT 
		id,
		category_group_code,
		category_group_name,
		category_group_status,
		category_group_show_order,
		category_group_parent_name,
		category_group_banner,
		is_show_sub_menu
	FROM 	
		tbl_products_category_group
	WHERE 	
		id = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Regular` */

/*!50003 DROP PROCEDURE IF EXISTS  `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Regular` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Regular`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, 'HARMONY');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product		= 0
            AND tbl_products.is_coupon_unavailable  = 0
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SELECT 
		id,
		category_group_code,
		category_group_name,
		category_group_status,
		category_group_show_order,
		category_group_parent_name,
		category_group_banner,
		is_show_sub_menu
	FROM 	
		tbl_products_category_group
	WHERE 	
		id = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Sale` */

/*!50003 DROP PROCEDURE IF EXISTS  `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Sale` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HIGHBRIDGEEC_sp_Product_GetProductByGroupCategoryId_Sale`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, 'DMC');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product		= 1
			AND tbl_products.is_coupon_unavailable		!= 1
			");
	-- S21033098 sua nghiep vu neu check vao ca outlet va sale thi ko hien thi sale
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SELECT 
		id,
		category_group_code,
		category_group_name,
		category_group_status,
		category_group_show_order,
		category_group_parent_name,
		category_group_banner,
		is_show_sub_menu
	FROM 	
		tbl_products_category_group
	WHERE 	
		id = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `HIGHBRIDGE_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `HIGHBRIDGE_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `HIGHBRIDGE_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, 'DMC');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_coupon_unavailable 		= 0
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all' 
		AND p_group_category_id 	<> 'other' 
		AND p_group_category_id 	<> 'sale' 
		AND p_group_category_id 	<> 'new' 
		AND p_group_category_id 	<> 'new-arrival'
		AND p_group_category_id 	<> 'recommended'
		AND p_group_category_id 	<> 'restock-items'
		AND p_group_category_id 	<> 'pre-order'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND (p_group_category_id = 'new' OR p_group_category_id = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
        ELSEIF p_group_category_id IS NOT NULL AND p_group_category_id = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");				
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SELECT 
		id,
		category_group_code,
		category_group_name,
		category_group_status,
		category_group_show_order,
		category_group_parent_name,
		category_group_banner,
		is_show_sub_menu
	FROM 	
		tbl_products_category_group
	WHERE 	
		id = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `KANKOU_sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `KANKOU_sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KANKOU_sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_getAllNewsFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_getAllNewsFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_getAllNewsFontEnd`(IN `day_set` TEXT, IN `day_set_m` TEXT, IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:09/08/2018
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE status = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			");
	IF(day_set <> '') THEN
		IF(day_set = '00') THEN
			SET @strSelect =  CONCAT(@strSelect," AND news_date like '",day_set_m,"%' ");
		ELSE
			SET @strSelect =  CONCAT(@strSelect," AND news_date = '",day_set,"' ");
		END IF;	
	END IF;
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `KANKOU_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `KANKOU_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KANKOU_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `KANKOU_sp_Product_GetProductPreOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `KANKOU_sp_Product_GetProductPreOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KANKOU_sp_Product_GetProductPreOrder`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_pre_order 			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr_run = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr_run);
	
	PREPARE stmt FROM @selectStmtStr_run;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_getAllStylingFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_getAllStylingFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_getAllStylingFontEnd`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:27/04/2020
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products_other			
			WHERE 	set_type = 1
			ORDER BY create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_products_category_getItemForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_products_category_getItemForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_products_category_getItemForTop`()
BEGIN
SELECT 
	DISTINCT(name_display),
	name_display_en,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id,
	DisplayBannerOnTop,
	modified_date
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			tbl_products_category.DisplayBannerOnTop,
			tbl_products_category.modified_date,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display, 
			tbl_products_category.name_display_en
		FROM tbl_products_category
		WHERE 
			-- Modified: 2020/04/11
			-- ecsite 		= 1
			IsDisplay 	= 1
			AND IsShowAsMenu = 1
		ORDER BY DisplayBannerOnTop desc, modified_date desc, OrderNumber ASC
	) AS tbl_category_tmp
		LEFT JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.DisplayBannerOnTop desc, tbl_tmp.modified_date desc, tbl_tmp.OrderNumber ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `KANKOU_sp_Product_GetRelatedProductForMediaByGoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `KANKOU_sp_Product_GetRelatedProductForMediaByGoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KANKOU_sp_Product_GetRelatedProductForMediaByGoodColor`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1			
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),") ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	-- -===============================================================================`stj_ecphp`
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Mida_sp_getAllStylingFontEnd_by_keyword` */

/*!50003 DROP PROCEDURE IF EXISTS  `Mida_sp_getAllStylingFontEnd_by_keyword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Mida_sp_getAllStylingFontEnd_by_keyword`(IN `p_slug` VARCHAR(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
        SET @strSelect = 
		CONCAT("
	SELECT 
		* 
	FROM 
		tbl_products_hashtag AS ht 
	WHERE 
		ht.status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
		AND ht.keyword LIKE '%",p_slug,"%'
		ORDER BY show_order ASC, create_date DESC 
			");
	SET @strLimit = 
		CONCAT("
			LIMIT ",p_skip,",",p_limit, " ");
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `KENTUCKY_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `KENTUCKY_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `KENTUCKY_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_outlet` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:14/12/2018
 * Note: sua lai store nay, them p_outlet de check them san pham outlet = D18120609
 */
 
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');	
	
SET @orderStmt = getOrderStmtForProductList(p_sort, 'KENTUCKY');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
			
		-- check san pham outlet
		if(p_outlet <> 1) THEN
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt ," AND (tbl_products.is_coupon_unavailable = 0 or tbl_products.is_coupon_unavailable is null) ");
		ELSE
			SET @selectFromStmt = 
				CONCAT(@selectFromStmt ," AND tbl_products.is_coupon_unavailable = 1");
		END IF;
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	else 
		SET @conditionStmt = " 
			WHERE 
				 (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				 OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		",@conditionStmt, "
		", @orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionStmt, "
		) AS TBL_TMP	
	
	 ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `LEVI_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `LEVI_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LEVI_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_price_from` VARCHAR(20), IN `p_price_to` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList('', 'LEVI');
				
				
				
SET @search_by_price = '';
IF p_price_from <> '' AND p_price_to <> '' THEN
	SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price between ",p_price_from," AND ",p_price_to," ");
ELSEIF p_price_from <> '' THEN
	SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price > ",p_price_from," ");
ELSEIF p_price_to <> '' THEN
	SET @search_by_price =  CONCAT(" AND tbl_products_details.product_detail_price < ",p_price_to," ");
END IF;
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
				ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status = 0
		WHERE 
			tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
			)
			", @search_by_price
		);
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 	
	 ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `Mida_sp_products_hashtag_getByCategoryGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `Mida_sp_products_hashtag_getByCategoryGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Mida_sp_products_hashtag_getByCategoryGroupId`(IN `p_category_group_id` VARCHAR(200), IN `p_is_show_menu` TINYINT(1), IN `p_select_index_from` INT, IN `p_select_index_to` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT
		ht.*
	FROM 	tbl_products_hashtag ht
		");
		
		
	SET @conditionStmt = CONCAT("
	WHERE 
		status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	");
	IF p_category_group_id 	IS NOT NULL AND p_category_group_id 	<> '' AND p_category_group_id 	<> '0' THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.category_group_id_str like '%;", p_category_group_id, ";%'
	");
	END IF;
	IF p_is_show_menu = 1 THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.is_show_menu = 1
	");
	END IF;
	
	SET @orderStmt = CONCAT("
	ORDER BY show_order ASC, start_date DESC
	");
	
	
	SET @selectLimitStmt = '';
	IF p_select_index_to <> 0 THEN
 	SET @selectLimitStmt = 
			CONCAT("
			LIMIT ",p_select_index_from,",",p_select_index_to, " ");
	 END IF;
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@conditionStmt,
		@orderStmt,
		@selectLimitStmt
	);
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `Luireec_sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `Luireec_sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Luireec_sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_search_stock` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search_hashtag` VARCHAR(10000), IN `p_search_stone` VARCHAR(50), IN `p_search_limited` VARCHAR(50), IN `p_search_materials` VARCHAR(50))
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';
	
	SET @p_filter_condition = '';
	-- ----------------------------------------------------
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	ASC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort	= 'recommended' THEN
		SET @orderStmt = ' 
			ORDER BY  	is_recommended_item 	DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	ELSEIF p_sort 	= 'instock' THEN
		SET @orderStmt = ' 
			 ORDER BY  	stock_num 	DESC,
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';			
	ELSE
		SET @orderStmt = ' 
			 ORDER BY  	pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC ';
	END IF;
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	SET @selectStmt = 
		CONCAT(@selectStmt,",
			tbl_products.stone,
			tbl_products.materials,
			tbl_products.one_of_kind,
			tbl_products.exclusive,
			tbl_products.order_made,
			tbl_products.is_recommended_item
			");	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET p_add_and_condition_str = getSearchQuery(p_category_code,p_price_start,p_price_end,p_search_keyword,p_search_brand,p_search_status);
	SET @p_filter_condition = getFilterQuery(p_search_hashtag,p_search_stone,p_search_limited,p_search_materials,p_search_brand);
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, @p_filter_condition ,"
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_search_stock IS NOT NULL AND p_search_stock = '0' THEN
		SET @conditionRestockItemsStmt = ' WHERE ((product_is_hide_while_out_of_stock = 1 AND stock_num > 0) OR stock_num >0)';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtStrRunNoLimit = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		");
	
	PREPARE stmt3 FROM @selectStmtStrRunNoLimit;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @selectStmt = CONCAT(
	"
	SELECT * 
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			tbl_products_details.color_display,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.product_status = 1 and
			tbl_products_details.product_detail_status = 0 
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
		LEFT JOIN 
		( 
			SELECT pc.OrderNumber as OrderNumber,pc.ItemCode as ItemCode 
			FROM tbl_products_category AS pc
		) AS ordernumber
			ON tmp_p.product_itemcode=ordernumber.ItemCode 			
		LEFT JOIN
		(
			SELECT 
				s.GoodCode,
				s.ColorCode,
				s.SizeCode,
				SUM(s.StockNum) as stock_num 
			FROM 
				tbl_stock_num AS s 
	");
	IF p_shoplist <> "'-1999'" THEN
		SET @selectStmt = CONCAT(@selectStmt, "
			WHERE 	s.ShopCode IN (",   p_shoplist ,") ");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt, "
			GROUP BY s.GoodCode, s.ColorCode, s.SizeCode
		) AS soton 
			ON 	tmp_p.goods_code = soton.GoodCode 
				AND tmp_p.color_code = soton.ColorCode 
				AND tmp_p.size_code = soton.SizeCode
		ORDER BY ordernumber.OrderNumber,tmp_p.goods_code
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	-- insert into tbl_sys_log (sys_log) values (concat("selectStmt: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `mida_sp_set_of_products_getBranhCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `mida_sp_set_of_products_getBranhCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `mida_sp_set_of_products_getBranhCode`(IN `p_set_brand_id` VARCHAR(20), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
		-- SELECT * FROM  tbl_set_of_products WHERE set_season_id = p_set_season_id and set_status=1 and set_type = 1
		-- ORDER BY set_order asc;
		
		SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE brand_code = '",p_set_brand_id,"' AND set_type = 1 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `mida_sp_set_of_products_getStyling` */

/*!50003 DROP PROCEDURE IF EXISTS  `mida_sp_set_of_products_getStyling` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `mida_sp_set_of_products_getStyling`(IN `p_set_brand_id` VARCHAR(20), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
		-- SELECT * FROM  tbl_set_of_products WHERE set_season_id = p_set_season_id and set_status=1 and set_type = 1
		-- ORDER BY set_order asc;
		
		SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE brand_code = '",p_set_brand_id,"' AND set_type = 2 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	 -- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `MANIFEST_sp_Product_GetHotProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `MANIFEST_sp_Product_GetHotProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MANIFEST_sp_Product_GetHotProduct`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'manifest');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_top 	= 1 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
			
		IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- Modified: 20190403
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RIPPLY_sp_get_hashtag_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `RIPPLY_sp_get_hashtag_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RIPPLY_sp_get_hashtag_frontend`(IN `p_select_index_from` INT, IN `p_select_index_to` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT	*
	FROM 	tbl_products_hashtag
	WHERE 
		status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	");
	
	SET @orderStmt = CONCAT("
	ORDER BY show_order DESC, hashtag_id DESC
	");
	
	
	SET @selectLimitStmt = '';
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",p_select_index_from,",",p_select_index_to, " ");
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@orderStmt,
		@selectLimitStmt
	);
	-- insert into tbl_sys_log(sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @selectStmt, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_accountvip_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_accountvip_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_accountvip_save`(`p_mode` VARCHAR(20), `p_id` INT(11), `p_name` VARCHAR(255), `p_password` VARCHAR(255), `p_activation_date` VARCHAR(50), `p_deactivation_date` VARCHAR(50), `p_discount_rate` VARCHAR(5), `p_status` VARCHAR(1), `p_created_at` VARCHAR(50))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_account_vip`(`acc_name`, `acc_password`, `acc_activation_date`, `acc_deactivation_date`, `acc_discount_rate`, `acc_status`, `created_at`)
		VALUES(p_name, p_password, p_activation_date, p_deactivation_date, p_discount_rate, p_status, p_created_at);
		SELECT MAX(acc_id) AS 'acc_id' FROM tbl_account_vip;
	ELSE
		UPDATE 	`tbl_account_vip`
		SET
			`acc_name` 	= p_name,
			`acc_password` 	= p_password,
			`acc_activation_date` = p_activation_date,
			`acc_deactivation_date` = p_deactivation_date,
			`acc_discount_rate` = p_discount_rate,
			`acc_status` = p_status,
			`updated_at`	= p_created_at
		WHERE
			`acc_id` 	= p_id;
		SELECT p_id AS 'acc_id';
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MASSIMO2_sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `MASSIMO2_sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MASSIMO2_sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_search_sql` TEXT, IN `p_search_instock` INT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_is_last_one` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
	THEN
		SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_stock_num, 
			tbl_products_details",@tbl_category,"
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			");
	
	IF  	p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND p_group_category_id 	<> 'new'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code2 = @itemcode_from_group_category;
		WHILE @code2 != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code2,',',1);
			SET @code2 = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	-- IF 	p_search_item IS NOT NULL AND p_search_item <> ''
	-- THEN
		-- SET @filter_by_display_name = '';
		-- SET @code_search_item = p_search_item;
		-- WHILE @code_search_item != '' DO
			-- set @list_item_code = '';
			-- SET @tmp2 = SUBSTRING_INDEX(@code_search_item,',',1);
			-- SET @code_search_item = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			
			-- SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
			-- FROM 	tbl_products_category 
			-- WHERE 	name_display = (
				-- SELECT name_display FROM tbl_products_category WHERE ItemCode = @tmp2
			-- ) and name_display is not null and name_display != ''
			-- INTO 	@list_item_code;
			
			-- IF 	@list_item_code <> ''
			-- then
				-- SET @filter_by_display_name = 
					-- CONCAT(@filter_by_display_name, "
					-- OR tbl_products.product_itemcode IN ('",@list_item_code,"')
					-- ");
			-- end if;
		-- END WHILE;
		
		-- IF 	@filter_by_display_name <> ''
		-- then
			-- SET @selectFromStmt = 
			-- CONCAT(@selectFromStmt, "
				-- AND (
					-- 1 = 2
					-- ",@filter_by_display_name,"
				-- )
			-- ");
		-- end if;
	-- END IF;
	
	IF 	p_search_sql IS NOT NULL AND p_search_sql <> ''
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			",p_search_sql);
	END IF;
	
	IF 	p_search_instock IS NOT NULL AND p_search_instock = '1'
	THEN
		SET @stock_condition = "
		WHERE product_info_final.stock_num > 0";
	ELSE
		SET @stock_condition = "";
	END IF;
	IF 	p_is_last_one IS NOT NULL AND p_is_last_one = '1'
	THEN
		IF 	@stock_condition <> ''
		THEN
			SET @stock_condition = CONCAT(@stock_condition ,"
		AND ((product_info_final.pro_detail_is_main_color = 1 AND product_info_final.stock_num > 0) OR product_info_final.stock_num = 1)");
		ELSE
			SET @stock_condition = CONCAT("
		WHERE ((product_info_final.pro_detail_is_main_color = 1 AND product_info_final.stock_num > 0) OR product_info_final.stock_num = 1)");
		END IF;
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code, tbl_products_details.color_code");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- SET @getStockNumberStmt = ' 1 as stock_num ';
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT product_info_limit.*,
			", @selectJoinWishListStmt, @getStockNumberStmt, " 
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info_limit  
	) AS product_info_final 
	",@stock_condition);
	-- -===============================================================================
	SET @selectStmtStrRun = CONCAT(@selectStmtStr,"
", @orderStmt, "
", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr1 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
		) AS TBL_TMP ");
	
	PREPARE stmt1 FROM @selectStmtStr1;
	EXECUTE stmt1;
	DEALLOCATE PREPARE stmt1;
	
	IF (EXISTS(SELECT * FROM tbl_products_category_group WHERE id = p_group_category_id)) THEN
		SELECT
			category_group_name AS category_name_display,
			category_group_header AS category_description
		FROM tbl_products_category_group 
		WHERE id = p_group_category_id;
	ELSE
		SELECT "ITEMS" AS category_name_display, "" AS category_description;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MIDA_sp_Product_GetNewItemsForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `MIDA_sp_Product_GetNewItemsForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MIDA_sp_Product_GetNewItemsForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_check_reset_email` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_check_reset_email` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_check_reset_email`(`p_email` VARCHAR(200), `p_birthday` VARCHAR(50))
BEGIN
	DECLARE v_customer_status int;
	
	if(p_birthday='0000-00-00' OR p_birthday='--') then
		SET v_customer_status = (SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email AND birthday=p_birthday );
	else
		SET v_customer_status = (SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email AND DATE(tbl_customers.birthday)=DATE(p_birthday) );
	end if ;
	IF((v_customer_status=1 )or (v_customer_status=2)) THEN
		update tbl_customers set email_encode=SHA1(p_email) WHERE tbl_customers.email=p_email;
		SELECT 1 AS success;
	
	elseif(v_customer_status=0) then
		SELECT -1 AS success;
	else
		SELECT 0 AS success;
	END IF;
	SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_account_check_reset_email_hapuna` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_account_check_reset_email_hapuna` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_account_check_reset_email_hapuna`(`p_email` VARCHAR(200), `p_firstname` VARCHAR(50))
BEGIN
	DECLARE v_customer_status INT;
	SET v_customer_status = 
		(
		SELECT customer_status 
		FROM tbl_customers 
		WHERE tbl_customers.email=p_email 
		AND REPLACE((REPLACE(REPLACE(tbl_customers.first_name, ' ', ''), '	', '')), '　', '') =p_firstname 
		);
	IF ((v_customer_status=1 )OR (v_customer_status=2)) THEN
		UPDATE tbl_customers SET email_encode=SHA1(p_email) WHERE tbl_customers.email=p_email;
		SELECT 1 AS success;
	ELSEIF(v_customer_status=0) THEN
		SELECT -1 AS success;
	ELSE
		SELECT 0 AS success;
	END IF;
	SELECT customer_status FROM tbl_customers WHERE tbl_customers.email=p_email LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `Mida_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `Mida_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `Mida_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_new` VARCHAR(20))
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
	
	IF (p_sort = '' AND p_new = 'mida-new')
	THEN
		SET @orderStmt = CONCAT("ORDER BY  	product_new_product DESC, 
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC,
					pro_detail_product_detail_order 	ASC");
	END IF;
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MIDA_sp_Product_GetRecommendItems` */

/*!50003 DROP PROCEDURE IF EXISTS  `MIDA_sp_Product_GetRecommendItems` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MIDA_sp_Product_GetRecommendItems`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:06/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, get RecommendItems
 */
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_recommended_item 		= 1 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_acount_active` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_acount_active` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_acount_active`(`p_act` VARCHAR(50), `p_email_encoded` TEXT)
BEGIN
DECLARE d_is_register_addpoint TINYINT(4) DEFAULT 0;
DECLARE d_initial_point Float ;
DECLARE d_addpoint_succes TINYINT(4) DEFAULT 0;
SET d_addpoint_succes = 0;
	IF EXISTS(select * from tbl_customers  WHERE email_encode=p_email_encoded and `clickactived`=1 ) Then
		SELECT 2 AS success;
	else
		IF(p_act="1") THEN
			if exists(select * from tbl_customers where email_encode=p_email_encoded and (customer_status=0 or customer_status=1 or customer_status=2) ) then
				
				-- Cuc add 2019/01/18 Tang diem khi kich hoat dang ky D18121205			 
				
				IF EXISTS(SELECT InitialPoint FROM `tbl_settings` where  IsRegisterAddPoint=1) THEN			
							
					IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email_encode=p_email_encoded AND (customer_status=0 OR  customer_status=2))) THEN
						
						
						UPDATE tbl_customers SET points=(SELECT InitialPoint FROM `tbl_settings` limit 1) WHERE email_encode=p_email_encoded AND (customer_status=0 OR  customer_status=2);
						
						SET d_addpoint_succes = 1;
					END IF;
				END IF;	
				
			
				update tbl_customers set customer_status=1 , 	`clickactived`=1				
				where email_encode=p_email_encoded;
				
				
				SELECT 1 AS success , d_addpoint_succes AS addpointsuccess ;		
				
				select * from tbl_customers where email_encode=p_email_encoded and customer_status=1;
				SELECT count(*) as total_wish_list FROM tbl_wish_list,tbl_products WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id in (SELECT tbl_customers.customer_id FROM tbl_customers where email_encode=p_email_encoded and customer_status=1) ;
			else
				SELECT 0 AS success;
			end if;
			
		ELSE
			SELECT 0 AS success;
		END IF;
	end if;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MORE_sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `MORE_sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MORE_sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListMore(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlist`(`p_product_id` BIGINT(20), `p_customer_id` BIGINT(20), `p_color_code` VARCHAR(20))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code)) THEN
		DELETE FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code ;
		SELECT 0 AS list_exists;
		SELECT count(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id =p_customer_id;
	ELSE
		INSERT INTO tbl_wish_list(customer_id, product_id, added_on,color_code)
		VALUES (p_customer_id, p_product_id, NOW(),p_color_code);
		SELECT 1 AS list_exists;
               SELECT count(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id =p_customer_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MORE_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `MORE_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MORE_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListMore(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `MORE_sp_Product_GetProductPreOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `MORE_sp_Product_GetProductPreOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MORE_sp_Product_GetProductPreOrder`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListMore(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_pre_order 			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr_run = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr_run);
	
	PREPARE stmt FROM @selectStmtStr_run;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlistaragin` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlistaragin` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlistaragin`(`p_product_id` BIGINT(20), `p_customer_id` BIGINT(20), `p_color_code` VARCHAR(20), `p_size_code` VARCHAR(20))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code AND tbl_wish_list.size_code = p_size_code)) THEN
		DELETE FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code AND tbl_wish_list.size_code = p_size_code;
		SELECT 0 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id AND tbl_wish_list.customer_id =p_customer_id;
	ELSE
		INSERT INTO tbl_wish_list(customer_id, product_id, added_on,color_code,size_code)
		VALUES (p_customer_id, p_product_id, NOW(),p_color_code,p_size_code);
		SELECT 1 AS list_exists;
               SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id AND tbl_wish_list.customer_id =p_customer_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `MORE_sp_Product_GetRelatedProductForMediaByGoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `MORE_sp_Product_GetRelatedProductForMediaByGoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `MORE_sp_Product_GetRelatedProductForMediaByGoodColor`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1			
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),") ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	-- -===============================================================================`stj_ecphp`
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlistbrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlistbrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlistbrand`(`p_brand_code` VARCHAR(50), `p_customer_id` BIGINT(20))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_wish_list_brand WHERE tbl_wish_list_brand.customer_id = p_customer_id AND tbl_wish_list_brand.brand_code = p_brand_code)) THEN
		DELETE FROM tbl_wish_list_brand WHERE tbl_wish_list_brand.customer_id = p_customer_id AND tbl_wish_list_brand.brand_code = p_brand_code;
		SELECT 0 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_brands, tbl_wish_list_brand WHERE tbl_wish_list_brand.customer_id = p_customer_id AND tbl_brands.brand_code = p_brand_code;
	ELSE
		INSERT INTO tbl_wish_list_brand(customer_id, brand_code, added_on)
		VALUES (p_customer_id, p_brand_code, NOW());
		SELECT 1 AS list_exists;
               SELECT COUNT(*) AS total_list FROM tbl_brands, tbl_wish_list_brand WHERE tbl_wish_list_brand.customer_id = p_customer_id AND tbl_brands.brand_code = p_brand_code;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `NORTHBRAIN_sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `NORTHBRAIN_sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `NORTHBRAIN_sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_companykey` VARCHAR(50))
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, p_companykey);
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	SET @whereRecommended = '';
	/* Toan - 20/05/30 - bo nvu nay
	IF (p_sort = "recommended") THEN
		SET @whereRecommended = ' AND `product_is_recommended_item` = 1 ';
	END IF;
	*/
	-- --------------------------------------------------
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @whereRecommended, "
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
				", @whereRecommended, "
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlistlookbook` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlistlookbook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlistlookbook`(`p_look_book_id` BIGINT(20), `p_customer_id` BIGINT(20))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_wish_list_look_book WHERE tbl_wish_list_look_book.customer_id = p_customer_id AND tbl_wish_list_look_book.set_id = p_look_book_id)) THEN
		DELETE FROM tbl_wish_list_look_book WHERE tbl_wish_list_look_book.customer_id = p_customer_id AND tbl_wish_list_look_book.set_id = p_look_book_id;
		SELECT 0 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_set_of_products, tbl_wish_list_look_book WHERE tbl_wish_list_look_book.customer_id = p_customer_id AND tbl_set_of_products.set_id = p_look_book_id;
	ELSE
		INSERT INTO tbl_wish_list_look_book(customer_id, set_id, added_on)
		VALUES (p_customer_id, p_look_book_id, NOW());
		SELECT 1 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_set_of_products, tbl_wish_list_look_book WHERE tbl_wish_list_look_book.customer_id = p_customer_id AND tbl_set_of_products.set_id = p_look_book_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `OFFICE3_sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `OFFICE3_sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `OFFICE3_sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_search_sql` TEXT, IN `p_search_instock` INT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	IF 	(p_group_category_id IS NOT NULL AND p_group_category_id 	<> '')
	THEN
		SET @tbl_category = ',
			tbl_products_category';
		SET @tbl_category_condition_join = 'AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode';
	ELSE
		SET @tbl_category = '';
		SET @tbl_category_condition_join = '';
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details",@tbl_category,"
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			",@tbl_category_condition_join,"
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			");
	
	IF  	p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
		AND p_group_category_id 	<> 'new'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code2 = @itemcode_from_group_category;
		WHILE @code2 != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code2,',',1);
			SET @code2 = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)
		");
	END IF;
	
	-- IF 	p_search_item IS NOT NULL AND p_search_item <> ''
	-- THEN
		-- SET @filter_by_display_name = '';
		-- SET @code_search_item = p_search_item;
		-- WHILE @code_search_item != '' DO
			-- set @list_item_code = '';
			-- SET @tmp2 = SUBSTRING_INDEX(@code_search_item,',',1);
			-- SET @code_search_item = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			
			-- SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
			-- FROM 	tbl_products_category 
			-- WHERE 	name_display = (
				-- SELECT name_display FROM tbl_products_category WHERE ItemCode = @tmp2
			-- ) and name_display is not null and name_display != ''
			-- INTO 	@list_item_code;
			
			-- IF 	@list_item_code <> ''
			-- then
				-- SET @filter_by_display_name = 
					-- CONCAT(@filter_by_display_name, "
					-- OR tbl_products.product_itemcode IN ('",@list_item_code,"')
					-- ");
			-- end if;
		-- END WHILE;
		
		-- IF 	@filter_by_display_name <> ''
		-- then
			-- SET @selectFromStmt = 
			-- CONCAT(@selectFromStmt, "
				-- AND (
					-- 1 = 2
					-- ",@filter_by_display_name,"
				-- )
			-- ");
		-- end if;
	-- END IF;
	
	IF 	p_search_sql IS NOT NULL AND p_search_sql <> ''
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			",p_search_sql);
	END IF;
	
	IF 	p_search_instock IS NOT NULL AND p_search_instock = '1'
	THEN
		SET @stock_condition = "
		WHERE product_info_final.stock_num > 0";
	ELSE
		SET @stock_condition = "";
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT(" GROUP BY tbl_products.goods_code, tbl_products_details.color_code");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_3(
		'product_info_limit',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- SET @getStockNumberStmt = ' 1 as stock_num ';
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		(SELECT COUNT(*) FROM tbl_wish_list 
			WHERE customer_id	= ",p_customer_id," 
				AND tbl_wish_list.product_id = product_info_limit.product_product_id
				AND tbl_wish_list.color_code = product_info_limit.pro_detail_color_code
			LIMIT 1
		) AS is_wished, ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT product_info_limit.*,
			", @selectJoinWishListStmt, @getStockNumberStmt, " 
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info_limit  
	) AS product_info_final 
	",@stock_condition);
	-- -===============================================================================
	SET @selectStmtStrRun = CONCAT(@selectStmtStr,"
", @orderStmt, "
", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr1 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
		) AS TBL_TMP ");
	
	PREPARE stmt1 FROM @selectStmtStr1;
	EXECUTE stmt1;
	DEALLOCATE PREPARE stmt1;
	
	IF (EXISTS(SELECT * FROM tbl_products_category_group WHERE id = p_group_category_id)) THEN
		SELECT
			category_group_name AS category_name_display,
			category_group_header AS category_description
		FROM tbl_products_category_group 
		WHERE id = p_group_category_id;
	ELSE
		SELECT "ITEMS" AS category_name_display, "" AS category_description;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_Product_GetNewItems` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_Product_GetNewItems` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_Product_GetNewItems`(IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
		
	IF (p_search_key_word <> '') THEN
		SET @selectKeyword =  CONCAT("
		AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
			) 
		
		");
	ELSE
		SET @selectKeyword = '';
	END IF;
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	ELSE
		SET @selectAnd = '';
	END IF;
	
	IF (section <> '') THEN
		SET @selectSeccsion =  CONCAT("AND tbl_products.SectionCode = ",section,"");
	ELSE
		SET @selectSeccsion = '';
	END IF;
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			",@selectKeyword ,@selectAnd ,@selectSeccsion ,"");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REALMCCOYS_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `REALMCCOYS_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REALMCCOYS_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `goods_code` TEXT, IN `section` TEXT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	
	IF (goods_code <> '') THEN
		SET @selectAnd =  CONCAT("AND tbl_products.goods_code IN (",goods_code,")");
	else
		SET @selectAnd = '';
	END IF;
	
	if (section <> '') Then
		SET @selectSeccsion =  CONCAT("AND tbl_products.season_name like '%",section,"%'");
	ELSE
		SET @selectSeccsion = '';
	END IF;
	
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) ",@selectAnd ,@selectSeccsion,"
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `REYES_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `REYES_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `REYES_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	 -- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `RIPPLY_sp_Product_GetProductByBrandCodeAndCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `RIPPLY_sp_Product_GetProductByBrandCodeAndCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RIPPLY_sp_Product_GetProductByBrandCodeAndCategoryCode`(IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_category_slug_url` VARCHAR(200))
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	IF 
		p_category_slug_url IS NOT NULL 
		AND p_category_slug_url 	<> '' 
		AND p_category_slug_url 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.slug_url = '",p_category_slug_url,"')
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_slug_url,",%'
				)
			)
			
			 ");
	ELSE
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
	THEN
		SELECT 	goodcode_list_manual
		FROM 	tbl_products_category_group 
		WHERE 	id = p_category_code
		INTO 	@goods_code_from_group_category;
		
		SET @condition_goods_code = '';
		IF 	@goods_code_from_group_category != '' 
			AND @goods_code_from_group_category IS NOT NULL
		THEN
			SET @condition_goods_code = CONCAT("
			OR tbl_products.goods_code IN ('",REPLACE(@goods_code_from_group_category, '\r\n', "','"),"')
			");
		END IF;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_category_code
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = ",p_category_code,")
				",@check_multiple_item,"
				",@condition_goods_code,"
			)
			");
	END IF;
	
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@conditionRestockItemsStmt ,
		@orderStmt, "
		",@selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, @conditionRestockItemsStmt,") AS total_items");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RIPPLY_sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `RIPPLY_sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RIPPLY_sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50), IN `p_new` VARCHAR(20))
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	goodcode_list_manual
		FROM 	tbl_products_category_group 
		WHERE 	id = p_group_category_id
		INTO 	@goods_code_from_group_category;
		
		SET @condition_goods_code = '';
		IF 	@goods_code_from_group_category != '' 
			AND @goods_code_from_group_category IS NOT NULL
		THEN
			SET @condition_goods_code = CONCAT("
			OR tbl_products.goods_code IN ('",REPLACE(@goods_code_from_group_category, '\r\n', "','"),"')
			");
		END IF;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			",@condition_goods_code,"
			)
		");
	END IF;
	
	
	
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	 -- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `SEIWA_sp_Product_GetProductByBrandCodeAndCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `SEIWA_sp_Product_GetProductByBrandCodeAndCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SEIWA_sp_Product_GetProductByBrandCodeAndCategoryCode`(IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'HAPUNA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = ",p_category_code,")
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	END IF;
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,@conditionRestockItemsStmt ,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, @conditionRestockItemsStmt,") AS total_items");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `SEIWA_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `SEIWA_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SEIWA_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_date_current` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
		SET @selectFromStmt = CONCAT(@selectFromStmt, "
					AND ( ",
						" tbl_products.date_expired > ", p_date_current,
						" OR tbl_products.date_expired = '0000/00/00' ",
						" OR tbl_products.date_expired = '0' ",
						" OR tbl_products.date_expired IS NULL ",
					" ) "
				);
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `SHIBATA_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `SHIBATA_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SHIBATA_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @selectStmt = CONCAT(
	"
	SELECT * 
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			tbl_products_details.color_display,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.product_status = 1 and
			 tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category ) and
			tbl_products.product_itemcode <>'' and
			tbl_products_details.product_detail_status = 0 
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
		LEFT JOIN
		(
			SELECT 
				s.GoodCode,
				s.ColorCode,
				s.SizeCode,
				CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE '0' END AS stock_num				
			FROM 
				tbl_stock_num AS s 
	");
	IF p_shoplist <> "'-1999'" THEN
		SET @selectStmt = CONCAT(@selectStmt, "
			WHERE 	s.ShopCode IN (",   p_shoplist ,") ");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt, "
			GROUP BY s.GoodCode, s.ColorCode, s.SizeCode
		) AS soton 
			ON 	tmp_p.goods_code = soton.GoodCode 
				AND tmp_p.color_code = soton.ColorCode 
				AND tmp_p.size_code = soton.SizeCode
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	-- insert into tbl_sys_log (sys_log) values (concat("selectStmt: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlistwithqrcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlistwithqrcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlistwithqrcode`(`p_goods_code` VARCHAR(50), `p_customer_id` BIGINT(20), `p_color_code` VARCHAR(20))
BEGIN
	DECLARE p_product_id BIGINT(20) DEFAULT 0;
	SELECT `product_id` INTO p_product_id FROM `tbl_products` WHERE `goods_code`=p_goods_code LIMIT 1;
	IF p_product_id <> 0 THEN
		IF(EXISTS(SELECT * FROM tbl_wish_list WHERE tbl_wish_list.customer_id=p_customer_id AND tbl_wish_list.product_id=p_product_id AND tbl_wish_list.color_code = p_color_code)) THEN			
			SELECT 0 AS list_exists;
		ELSE
			IF(EXISTS(SELECT * FROM `tbl_products` as p,`tbl_products_details` as pd WHERE p.`SeqNo`=pd.`RSeqNo` AND p.product_id=p_product_id AND pd.color_code = p_color_code and p.`product_status`=1)) THEN		
				INSERT INTO tbl_wish_list(customer_id, product_id, added_on,color_code)
				VALUES (p_customer_id, p_product_id, NOW(),p_color_code);
				SELECT 1 AS list_exists;
			else
				SELECT 0 AS list_exists;
			end if;		       
		END IF;
	END IF;
	SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id AND tbl_wish_list.customer_id =p_customer_id;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_addwishlist_gcs` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_addwishlist_gcs` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_addwishlist_gcs`(`p_product_id` BIGINT(20), `p_customer_id` BIGINT(20), `p_color_code` VARCHAR(20), `p_size_code` VARCHAR(20))
BEGIN
/**
 * User:hoaxuan
 * Date:25/12/2018
 * Note: rieng cho khach hang nao yeu thich vao size
 */
	IF(EXISTS(SELECT * FROM tbl_wish_list 
			WHERE tbl_wish_list.customer_id=p_customer_id 
				AND tbl_wish_list.product_id=p_product_id 
				AND tbl_wish_list.color_code = p_color_code
				AND tbl_wish_list.size_code = p_size_code)) THEN
		DELETE FROM tbl_wish_list 
			WHERE tbl_wish_list.customer_id=p_customer_id 
				AND tbl_wish_list.product_id=p_product_id 
				AND tbl_wish_list.color_code = p_color_code
				AND tbl_wish_list.size_code = p_size_code;
		SELECT 0 AS list_exists;
		SELECT COUNT(*) AS total_list 
		FROM tbl_products, tbl_wish_list 
			WHERE tbl_products.product_id = tbl_wish_list.product_id 
				AND tbl_wish_list.customer_id =p_customer_id;
	ELSE
		INSERT INTO tbl_wish_list(customer_id, product_id, added_on,color_code,size_code)
		VALUES (p_customer_id, p_product_id, NOW(),p_color_code,p_size_code);
		SELECT 1 AS list_exists;
		SELECT COUNT(*) AS total_list FROM tbl_products, tbl_wish_list 
			WHERE tbl_products.product_id = tbl_wish_list.product_id 
				AND tbl_wish_list.customer_id =p_customer_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `SHIBATA_sp_Product_GetHotProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `SHIBATA_sp_Product_GetHotProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SHIBATA_sp_Product_GetHotProduct`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = '';
IF p_sort	= 'priceAscend' THEN
	SET @orderStmt = ' ORDER BY  	price_for_sort 	ASC ';
ELSEIF p_sort	= 'priceDescend' THEN
	SET @orderStmt = ' ORDER BY  	price_for_sort 	DESC ';
ELSEIF p_sort	= 'popular' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
ELSEIF p_sort 	= 'new' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ';
ELSEIF p_sort	= '' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_product_detail_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ';
END IF;
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_top 	= 1 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category ) 
			AND tbl_products.product_itemcode <>''
			AND tbl_products.product_status 		= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
		
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
			", @orderStmt, "
			", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_Authority_Save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_Authority_Save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_Authority_Save`(IN `p_viewing_authority_id` INT(11), IN `p_master_authority_id` INT(11), IN `p_viewing_authority_username` VARCHAR(50), IN `p_master_authority_username` VARCHAR(50), IN `p_viewing_authority_pass` VARCHAR(255), IN `p_master_authority_pass` VARCHAR(255))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM `tbl_users` where `user_id`=p_viewing_authority_id;	
	IF(total_records = 0) THEN		
		INSERT INTO `tbl_users`(
			`user_name`,`password`,`role`,`role_text`
		)
		VALUES(
			p_viewing_authority_username, 
			p_viewing_authority_pass,
			1,
			'閲覧用権限'
		);
	ELSE
		UPDATE `tbl_users` 
		SET 
			`user_name` 	= p_viewing_authority_username,
			`password` 	= p_viewing_authority_pass,
			`role_text`	= '閲覧用権限'		
		where `user_id`=p_viewing_authority_id;
	END IF;
	SELECT COUNT(*) INTO total_records FROM `tbl_users` WHERE `user_id`=p_master_authority_id;	
	IF(total_records = 0) THEN		
		INSERT INTO `tbl_users`(
			`user_name`,`password`,`role`,`role_text`
		)
		VALUES(
			p_master_authority_username, 
			p_master_authority_pass,
			1,
			'マスター権限'
		);
	ELSE
		UPDATE `tbl_users` 
		SET 
			`user_name` 	= p_master_authority_username,
			`password` 	= p_master_authority_pass,
			`role_text`	= 'マスター権限'
		where `user_id`=p_master_authority_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `SHIBATA_sp_Product_GetNewItemsForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `SHIBATA_sp_Product_GetNewItemsForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SHIBATA_sp_Product_GetNewItemsForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, 'SHIBATA');
SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category )
			AND tbl_products.product_itemcode <>''
			AND tbl_products.new_product			= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllCustomer`(IN `p_skip` INT, IN `p_limit` INT, IN `p_client` VARCHAR(5), IN `p_search_key_word` VARCHAR(200))
BEGIN
	DECLARE search_status VARCHAR(200) DEFAULT "";
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	
	IF p_search_key_word = "メール承認待ち" THEN
		SET search_status = '0';
	ELSEIF p_search_key_word ="会員" THEN
		SET search_status = '1';
	ELSEIF p_search_key_word ="ゲスト" THEN
		SET search_status = '2';
	ELSEIF p_search_key_word ="退会" THEN
		SET search_status = '-1';
	END IF;
	
	
	SET @selectStmt = CONCAT(" SELECT customer_id, customer_code,first_name,last_name,phone, email,postcode,state,city,address,address2, customer_status  
FROM tbl_customers  
where ( customer_code like \'",p_client,"%\' or passwords !=\'\' )
AND (
customer_code like '%",p_search_key_word,"%'
OR first_name like '%",p_search_key_word,"%'
OR last_name like '%",p_search_key_word,"%'
OR phone like '%",p_search_key_word,"%'
OR email like '%",p_search_key_word,"%'
OR postcode like '%",p_search_key_word,"%'
OR state like '%",p_search_key_word,"%'
OR city	like '%",p_search_key_word,"%'
OR address like '%",p_search_key_word,"%'
OR address2 like '%",p_search_key_word,"%'
 ");
IF search_status != "" THEN 
	SET @selectStmt = CONCAT(@selectStmt, " OR customer_status like '%",search_status,"%' ");
END IF;
SET @selectStmtStr = CONCAT(@selectStmt, "
) ORDER BY tbl_customers.TimeStamp DESC,tbl_customers.customer_code DESC 
LIMIT ",p_skip,",",p_limit,"");
	-- INSERT INTO `tbl_sys_log` (`sys_log`) VALUES(@selectStmtStr);
		
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmt, ")
			) AS TBL_TMP ");
 
	-- INSERT INTO `tbl_sys_log` (`sys_log`) VALUES(@selectStmtStr2);
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `SHIBATA_sp_Product_getRelatedProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `SHIBATA_sp_Product_getRelatedProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SHIBATA_sp_Product_getRelatedProduct`(IN `p_category_id` BIGINT, IN `p_customer_id` BIGINT(20), IN `p_current_product_SeqNo` VARCHAR(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList('', 'SHIBATA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
	FROM 
		tbl_products 
			JOIN tbl_products_details
				ON  tbl_products_details.RSeqNo 		= tbl_products.SeqNo
				AND tbl_products_details.product_detail_status 	= 0
	WHERE 	
		tbl_products.product_category_id = '",p_category_id,"'
		AND tbl_products.product_status  = '1'
		AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category )
		AND tbl_products.product_itemcode <>''
		AND tbl_products.SeqNo 		 <> '",p_current_product_SeqNo,"' ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 0 ");
	
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 1
		AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
	GROUP BY product_SeqNo ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code  ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAllSendMail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAllSendMail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAllSendMail`(IN `p_skip` INT, IN `p_limit` INT, IN `p_type` TINYINT)
BEGIN
	-- SELECT * FROM tbl_sendemail ORDER BY tbl_sendemail.email_id DESC LIMIT p_skip,p_limit;
	if(p_type<>'')THEN
		SELECT tbl_sendemail.*, tbl_tmp.SendedNumber, tbl_tmp2.SendedErrorNumber
		FROM tbl_sendemail 
		LEFT JOIN (SELECT send_email_id, COUNT(queue_status) AS SendedNumber  FROM `tbl_sendemail_queue` WHERE queue_status= 1 GROUP BY send_email_id) AS tbl_tmp
		ON  tbl_sendemail.`email_id`=tbl_tmp.`send_email_id` 
		LEFT JOIN (SELECT send_email_id, COUNT(queue_status) AS SendedErrorNumber  FROM `tbl_sendemail_queue` WHERE queue_status= -1 GROUP BY send_email_id) AS tbl_tmp2
		ON  tbl_sendemail.`email_id`=tbl_tmp2.`send_email_id` 	
		
		WHERE email_status=p_type
		ORDER BY tbl_sendemail.email_id 
		
		DESC ;-- LIMIT p_skip,p_limit;
	
	ELSE
	
		SELECT tbl_sendemail.*, tbl_tmp.SendedNumber, tbl_tmp2.SendedErrorNumber
		FROM tbl_sendemail 
		LEFT JOIN (SELECT send_email_id, COUNT(queue_status) AS SendedNumber  FROM `tbl_sendemail_queue` WHERE queue_status= 1 GROUP BY send_email_id) AS tbl_tmp
		ON  tbl_sendemail.`email_id`=tbl_tmp.`send_email_id` 
		LEFT JOIN (SELECT send_email_id, COUNT(queue_status) AS SendedErrorNumber  FROM `tbl_sendemail_queue` WHERE queue_status= -1 GROUP BY send_email_id) AS tbl_tmp2
		ON  tbl_sendemail.`email_id`=tbl_tmp2.`send_email_id` 		
		
		 ORDER BY tbl_sendemail.email_id DESC ;-- LIMIT p_skip,p_limit;
	 
	 END IF;
	SELECT COUNT(*) AS total_items FROM tbl_sendemail;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `SHIBATA_sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `SHIBATA_sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `SHIBATA_sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = '';
IF p_sort	= 'priceAscend' THEN
	SET @orderStmt = ' ORDER BY  	price_for_sort 	ASC ,
					pro_detail_color_code ASC ';
ELSEIF p_sort	= 'priceDescend' THEN
	SET @orderStmt = ' ORDER BY  	price_for_sort 	DESC ,
					pro_detail_color_code ASC ';
ELSEIF p_sort	= 'popular' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
ELSEIF p_sort 	= 'new' THEN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC ,
					product_goods_code 	ASC ';
ELSEIF p_sort 	= 'ranking' THEN
	SET @orderStmt = ' ORDER BY  	pro_detail_num_order DESC,CAST(product_active_date AS DATE) 	DESC ,
					product_goods_code 	ASC ';
ELSEIF p_sort	= '' THEN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
END IF;
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
		WHERE 
			tbl_products.product_status 		= 1 
			AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category )
			AND tbl_products.product_itemcode <>''
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 	like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
			) "
		);
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
				
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionStmt = " 
			WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		";
	IF p_sort = 'ranking' THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt, "
		", @orderStmt, "
		",@selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionStmt, "
		) AS TBL_TMP
		");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomer`(IN `p_customer_id` BIGINT)
BEGIN
	SELECT * FROM tbl_customers WHERE customer_id = p_customer_id;
	SELECT tbl_orders.* FROM tbl_orders,tbl_customers WHERE  tbl_orders.customer_code = tbl_customers.customer_code AND tbl_customers.customer_id = p_customer_id;
	SELECT shipping_postcode,shipping_state,shipping_city, shipping_address, shipping_address2 
	FROM tbl_orders ,tbl_customers
	WHERE tbl_orders.customer_code = tbl_customers.customer_code
	AND tbl_customers.customer_id = p_customer_id
	GROUP BY shipping_postcode,shipping_state, shipping_address, shipping_address2;
	SELECT * FROM tbl_customer_rank ;
	
	SELECT *
	FROM 	tbl_customers_shipaddress 
	WHERE 	tbl_customers_shipaddress.customer_code = (SELECT customer_code FROM tbl_customers WHERE customer_id = p_customer_id)
	ORDER BY shipaddress_id DESC;
	select * from `tbl_sys_log_changeemail` where `click_actived` =1 and `Customer_Code`= (SELECT customer_code FROM tbl_customers WHERE customer_id = p_customer_id);
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getAll_magazine_register` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getAll_magazine_register` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getAll_magazine_register`(IN `p_skip` INT, IN `p_limit` INT, IN `p_mail_list` TEXT, IN `p_mail_delete` TEXT, IN `p_mail_stop` TEXT, IN `p_gender` VARCHAR(20), IN `p_chronology` VARCHAR(20), IN `p_mail_stop_release` TEXT)
BEGIN
DECLARE str_where TEXT;
IF(p_mail_delete<>'') THEN
	SET p_mail_delete = REPLACE(p_mail_delete,",","','");	
	SET @selectStmt3 = CONCAT(" DELETE FROM tbl_mail_magazine_register  WHERE tbl_mail_magazine_register.email_name IN ('",p_mail_delete,"')" );
      PREPARE stmt3 FROM @selectStmt3;
      EXECUTE stmt3;
      DEALLOCATE PREPARE stmt3; 	
      
      
end if;
IF(p_mail_stop<>'') THEN
	SET p_mail_stop = REPLACE(p_mail_stop,",","','");	
	SET @selectStmt4 = CONCAT(" update tbl_mail_magazine_register  set email_status=0  WHERE tbl_mail_magazine_register.email_name IN ('",p_mail_stop,"')" );
      PREPARE stmt4 FROM @selectStmt4;
      EXECUTE stmt4;
      DEALLOCATE PREPARE stmt4; 	
      
      
END IF;
IF(p_mail_stop_release<>'') THEN
	SET p_mail_stop_release = REPLACE(p_mail_stop_release,",","','");	
	SET @selectStmt4 = CONCAT(" update tbl_mail_magazine_register  set email_status=1  WHERE tbl_mail_magazine_register.email_name IN ('",p_mail_stop_release,"')" );
      PREPARE stmt4 FROM @selectStmt4;
      EXECUTE stmt4;
      DEALLOCATE PREPARE stmt4; 	
      
      
END IF;
if(p_mail_list !='') THEN
	SET p_mail_list = REPLACE(p_mail_list,",","','");
	SET @selectStmt = CONCAT("SELECT G.id, G.email_name, G.register_date, G.email_status, COUNT(queue_status) AS NumberTransmissions FROM (
		SELECT tbl_mail_magazine_register.*,tbl_sendemail_queue.`queue_status` FROM tbl_mail_magazine_register 
		LEFT JOIN `tbl_sendemail_queue` ON  tbl_mail_magazine_register.`email_name`=`tbl_sendemail_queue`.`email` WHERE tbl_mail_magazine_register.email_name IN ('",p_mail_list,"') ORDER BY tbl_mail_magazine_register.id DESC ) AS G GROUP BY email_name
	ORDER BY G.id DESC ");
	-- LIMIT ", p_skip ,",",p_limit);
      
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
      
      SET @selectStmt2 = CONCAT("SELECT COUNT(*) AS total_items FROM tbl_mail_magazine_register  WHERE tbl_mail_magazine_register.email_name IN ('",p_mail_list,"')" );
      PREPARE stmt2 FROM @selectStmt2;
      EXECUTE stmt2;
      DEALLOCATE PREPARE stmt2; 	
      
	-- insert into tbl_sys_log (sys_log) values (concat("cuc1: ",@selectStmt));
	
ELSEif (p_chronology!='' || p_gender!='') then
	SET str_where = " 1=1 ";
	if (p_chronology!='') then
		SET str_where = CONCAT(str_where," and tbl_mail_magazine_register.chronology='",p_chronology,"'");
	end if;
	IF (p_gender!='') THEN
		SET str_where = CONCAT(str_where," and tbl_mail_magazine_register.gender='",p_gender,"'");
	END IF;
	
	SET @selectStmt = CONCAT("SELECT G.id, G.email_name, G.register_date, G.email_status, COUNT(queue_status) AS NumberTransmissions FROM (
		SELECT tbl_mail_magazine_register.*,tbl_sendemail_queue.`queue_status` FROM tbl_mail_magazine_register 
		LEFT JOIN `tbl_sendemail_queue` ON  tbl_mail_magazine_register.`email_name`=`tbl_sendemail_queue`.`email` 
		WHERE  ",str_where,"
		ORDER BY tbl_mail_magazine_register.id DESC ) AS G GROUP BY email_name
	ORDER BY G.id DESC ");
	-- LIMIT ", p_skip ,",",p_limit);
      
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
      
      SET @selectStmt2 = CONCAT("SELECT COUNT(*) AS total_items FROM tbl_mail_magazine_register  WHERE ",str_where);
      PREPARE stmt2 FROM @selectStmt2;
      EXECUTE stmt2;
      DEALLOCATE PREPARE stmt2; 	
      
      -- INSERT INTO tbl_sys_log (sys_log) VALUES (CONCAT("cuc2: ",@selectStmt));
else
	
      	SELECT G.id, G.email_name, G.register_date, G.email_status, COUNT(queue_status) AS NumberTransmissions FROM (
		SELECT tbl_mail_magazine_register.*,tbl_sendemail_queue.`queue_status` FROM tbl_mail_magazine_register 
		LEFT JOIN `tbl_sendemail_queue` ON  tbl_mail_magazine_register.`email_name`=`tbl_sendemail_queue`.`email` 
		ORDER BY tbl_mail_magazine_register.id DESC
	) AS G GROUP BY email_name
	ORDER BY G.id DESC ;
	-- LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_mail_magazine_register;
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (CONCAT("cuc3: "));
	
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerByCode`(IN `p_customer_code` VARCHAR(40))
BEGIN
	-- 2019/05/07 doi p_customer_id tu BIGINT sang VARCHAR
	SELECT * FROM tbl_customers WHERE customer_code = p_customer_code;
/*	2019-05-14  DANDEV dong 
SELECT tbl_orders.* FROM tbl_orders,tbl_customers WHERE  tbl_orders.customer_code = tbl_customers.customer_code AND tbl_customers.customer_code = p_customer_id;
	SELECT shipping_postcode,shipping_state,shipping_city, shipping_address, shipping_address2 
	FROM tbl_orders ,tbl_customers
	WHERE tbl_orders.customer_code = tbl_customers.customer_code
	AND tbl_customers.customer_code = p_customer_id
	GROUP BY shipping_postcode,shipping_state, shipping_address, shipping_address2;
	SELECT * FROM tbl_customer_rank ;
	
	SELECT *
	FROM 	tbl_customers_shipaddress 
	WHERE 	tbl_customers_shipaddress.customer_code = (SELECT customer_code FROM tbl_customers WHERE customer_code = p_customer_id)
	ORDER BY shipaddress_id DESC; */
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_getCustomerById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_getCustomerById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_getCustomerById`(IN `p_customer_id` BIGINT)
BEGIN
	SELECT * FROM tbl_customers WHERE customer_id = p_customer_id;
	/*	2019-10-31  Cuc close
	SELECT tbl_orders.* FROM tbl_orders,tbl_customers WHERE  tbl_orders.customer_code = tbl_customers.customer_code AND tbl_customers.customer_id = p_customer_id;
	SELECT shipping_postcode,shipping_state,shipping_city, shipping_address, shipping_address2 
	FROM tbl_orders ,tbl_customers
	WHERE tbl_orders.customer_code = tbl_customers.customer_code
	AND tbl_customers.customer_id = p_customer_id
	GROUP BY shipping_postcode,shipping_state, shipping_address, shipping_address2;
	SELECT * FROM tbl_customer_rank ;
	
	SELECT *
	FROM 	tbl_customers_shipaddress 
	WHERE 	tbl_customers_shipaddress.customer_code = (SELECT customer_code FROM tbl_customers WHERE customer_id = p_customer_id)
	ORDER BY shipaddress_id DESC;
	select * from `tbl_sys_log_changeemail` where `click_actived` =1 and `Customer_Code`= (SELECT customer_code FROM tbl_customers WHERE customer_id = p_customer_id);
	*/
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_magazine_addlstemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_magazine_addlstemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_magazine_addlstemail`(IN `p_mail_list` TEXT)
BEGIN
declare v_total_email int default 0;
DECLARE v_daucach varchar(10) default ',';
DECLARE v_index INT DEFAULT 0;
DECLARE v_email_name VARCHAR(255);
	
WHILE INSTR(p_mail_list,v_daucach)>0 DO
		SET v_index = INSTR(p_mail_list,v_daucach);
		SET v_email_name = SUBSTR(p_mail_list,1,v_index-1);
		SET p_mail_list = SUBSTR(p_mail_list,v_index+1,CHAR_LENGTH(p_mail_list)-v_index+1);
				
		if(v_email_name<>'')Then
		
			IF(EXISTS(SELECT * FROM tbl_mail_magazine_register WHERE email_name=v_email_name )) THEN 
				-- co roi thi set bang 1
			    UPDATE tbl_mail_magazine_register  SET email_status=1 , `reregister_date`=concat(`reregister_date`,Now(),",")  WHERE email_name =v_email_name;
			    
			  ELSE 
			    
			    INSERT INTO tbl_mail_magazine_register(email_name,`register_date`,email_status)
				VALUES(v_email_name,NOW(),'1');
				
			END IF;
			
		end if ;
		
		SET v_total_email = v_total_email+1;
END WHILE;
select v_total_email as "msg";
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveCampaign` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveCampaign` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveCampaign`(IN `p_mode` VARCHAR(20), IN `p_campaign_id` BIGINT(10), IN `p_campaign_title` VARCHAR(200), IN `p_create_date` VARCHAR(40), IN `p_modified_date` VARCHAR(40), IN `p_status` INT(4), IN `p_startdate` VARCHAR(40), IN `p_enddate` VARCHAR(40), IN `p_starttime` VARCHAR(40), IN `p_endtime` VARCHAR(40))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_campaign(
				campaign_title,
				create_date,
				modified_date,
				status,
				startdate,
				enddate,
				starttime,
				endtime
		) VALUES(
			p_campaign_title,
			p_create_date,
			p_modified_date,
			p_status,
			p_startdate,
			p_enddate,
			p_starttime,
			p_endtime
		);		
		SELECT MAX(campaign_id) AS 'campaign_id' FROM tbl_campaign;
	ELSE
		UPDATE `tbl_campaign`
		SET
			campaign_title 		= p_campaign_title,		
			modified_date 		= p_modified_date,			
			STATUS 			= p_status,		
			startdate 		= p_startdate,
			enddate 		= p_enddate,
			starttime		= p_starttime,
			endtime			= p_endtime
		WHERE
			tbl_campaign.`campaign_id` = p_campaign_id;			
		SELECT p_campaign_id AS 'campaign_id';
	END IF;
	SELECT 'ok' AS msg;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveMaintenance` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveMaintenance` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveMaintenance`(IN `p_maintenance_image` TEXT, IN `p_maintenance_description` TEXT, IN `p_maintenance_type` TINYINT(4), IN `p_startdate` VARCHAR(40), IN `p_enddate` VARCHAR(40), IN `p_starttime` VARCHAR(40), IN `p_endtime` VARCHAR(40))
BEGIN	
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM `tbl_maintenance`;	
	IF(total_records = 0) THEN
		-- create one record
		INSERT INTO `tbl_maintenance`(
				  `maintenance_image`,
				  `maintenance_description`,
				  `maintenance_type`,
				  `startdate`,
				  `enddate`,
				  `starttime`,
				  `endtime`)
		VALUES(
			p_maintenance_image, 
			p_maintenance_description,
			p_maintenance_type,
			p_startdate,
			p_enddate,
			p_starttime,
			p_endtime
		);
	ELSE
		--  update
		UPDATE 
			`tbl_maintenance` 
		SET 
			`maintenance_image` 		= p_maintenance_image,
			`maintenance_description` 	= p_maintenance_description,
			`maintenance_type`		= p_maintenance_type,
			`startdate`			= p_startdate,
			`enddate` 			= p_enddate,
			`starttime` 			= p_starttime,
			`endtime`   			= p_endtime
		;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveMedia`(`p_mode` VARCHAR(20), `p_media_id` BIGINT(20), `p_media_title` VARCHAR(200), `p_media_short_description` TEXT, `p_media_contents` TEXT, `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_created_by` VARCHAR(200), `p_edited_by` VARCHAR(200), `p_media_status` INT(4), `p_media_date` VARCHAR(40), `p_related_goods_code` TEXT, `p_related_goods_code_for_search` TEXT, `p_media_number` TEXT, `p_media_page` TEXT, `p_shop_code` VARCHAR(10), `p_keyword_id` INT(11), `p_keyword_list` TEXT, `p_start_date` DATETIME, `p_end_date` DATETIME, `p_unlimited` INT(1), `p_media_url` TEXT, `p_url_check` INT(1), `p_category_code` VARCHAR(50), `p_gift_goods_code` TEXT, `p_gift_goods_code_for_search` TEXT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_media(
				media_title,
				media_short_description,
				media_contents,
				create_date,
				modified_date,
				created_by,
				edited_by,
				media_status,
				media_date,
				related_goods_code,
				related_goods_code_for_search,
				media_number,
				media_page,
				shop_code,
				keyword_id,
				keyword_list,
				published_date,
				start_date,
				end_date,
				unlimited,
				media_url,
				url_check,
				category_code,
				gift_goods_code,
				gift_goods_code_for_search
		) VALUES(
			p_media_title,
			p_media_short_description,
			p_media_contents, 
			p_create_date,
			p_modified_date,
			p_created_by,
			p_edited_by,
			p_media_status,
			p_media_date,
			p_related_goods_code,
			p_related_goods_code_for_search,
			p_media_number,
			p_media_page,
			p_shop_code,
			p_keyword_id,
			p_keyword_list,
			NOW(),
			p_start_date,
			p_end_date,
			p_unlimited,
			p_media_url,
			p_url_check,
			p_category_code,
			p_gift_goods_code,
			p_gift_goods_code_for_search
		);
		SELECT MAX(media_id) AS 'media_id' FROM tbl_media;
	ELSE
		UPDATE tbl_media
		SET
			published_date = IF(media_status=0 AND p_media_status=1,NOW(),published_date),
			media_title 		= p_media_title,
			media_short_description = p_media_short_description,
			media_contents 		= p_media_contents,
			media_status 		= p_media_status,
			media_date 		= p_media_date,
			edited_by 		= p_edited_by,
			modified_date 		= p_modified_date,
			related_goods_code	= p_related_goods_code,
			related_goods_code_for_search = p_related_goods_code_for_search,
			media_number 		= p_media_number,
			media_page 		= p_media_page,
			shop_code 		= p_shop_code,
			keyword_id 		= p_keyword_id,
			keyword_list 		= p_keyword_list,
			start_date 		= p_start_date,
			end_date 		= p_end_date,
			unlimited 		= p_unlimited,
			media_url		= p_media_url,
			url_check		= p_url_check,
			category_code		= p_category_code,
			gift_goods_code         = p_gift_goods_code,
			gift_goods_code_for_search = p_gift_goods_code_for_search
		WHERE
			media_id = p_media_id;
			
		SELECT p_media_id AS 'media_id' ;
	END IF;
	SELECT 'ok' AS msg;
	SELECT * FROM tbl_keyword ORDER BY show_order;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_product_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_product_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_product_export`(`file_name` VARCHAR(255), `item_code` VARCHAR(255), `brand_code` VARCHAR(255), `indexFrom` BIGINT, `indexLimit` BIGINT)
BEGIN
	DECLARE strSql,strWhere TEXT DEFAULT '';		
	IF (brand_code <> '') THEN
		SET strWhere = CONCAT(strWhere," AND p.brand_code='",brand_code,"' ");
	END IF;
	IF (item_code <> '') THEN
		SET strWhere = CONCAT(strWhere," AND p.product_itemcode='",item_code,"' ");
	END IF;
	
	SET @selectLimitStmt = "";
	IF (indexFrom <> '-1' AND indexLimit <> '-1') THEN
		SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	END IF;
	
	IF (file_name = '商品の基本情報変更') THEN
		SET strSql = CONCAT("SELECT * FROM tbl_products as p WHERE p.goods_code <> '' ",strWhere);
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code');		
	ELSEIF (file_name = '価格変更') THEN
		SET strSql = 'SELECT p.goods_code,p.product_status,p.sale_off_product,pd.color_code,pd.color_display,pd.color_name,pd.size_code,pd.size_display,pd.size_name,';			
		SET strSql = CONCAT(strSql,'pd.product_detail_price_no_tax,pd.product_detail_price,pd.product_detail_saleoff_price_no_tax,pd.product_detail_saleoff_price,pd.product_detail_status ');
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_details as pd WHERE p.SeqNo=pd.RSeqNo ');
		SET strSql = CONCAT(strSql,strWhere);
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code,pd.color_code,pd.size_code');
	ELSEIF (file_name = 'トップに表示変更') THEN
		SET strSql = 'SELECT p.goods_code,pd.color_code,pd.color_display,pd.color_name,pd.product_detail_top,pd.product_detail_order,pd.is_main_color ';				
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_details as pd WHERE p.SeqNo=pd.RSeqNo ');
		SET strSql = CONCAT(strSql,strWhere);
		SET strSql = CONCAT(strSql,' GROUP BY p.goods_code,pd.color_code');
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code,pd.color_code');		
	ELSEIF (file_name = 'サイズ表更新') THEN
		-- SET strWhere = CONCAT(strWhere,' AND p.goods_code in (''MN172P02'',''MN172N45'') ');
		SET strSql = 'SELECT p.goods_code,pd.size_id,pd.size_code,pd.size_display,pd.size_name ';	
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_details as pd ');
		SET strSql = CONCAT(strSql,'LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s ');
		SET strSql = CONCAT(strSql,'ON pd.size_code = s.s_size_code ');
		SET strSql = CONCAT(strSql,'WHERE p.SeqNo=pd.RSeqNo ',strWhere);
		-- Order tuong tu nhu ben sp_getProductById
		SET strSql = CONCAT(strSql,' GROUP BY p.goods_code,pd.size_code');
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code ASC, s.display_order ASC, pd.size_code ASC');
		-- Modified: 20190514, bo order theo pd.color_code
		-- SET strSql = CONCAT(strSql,' ORDER BY p.goods_code ASC,pd.color_code ASC, s.display_order ASC, pd.size_code ASC');
		SET @strSql = strSql;
		PREPARE stmt FROM @strSql;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
			
		SET strSql = 'SELECT ps.SeqNo,ps.goodscode,ps.category_guide_id,ps.category_guide_name,ps.size_list,ps.index_list ';	
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_size_guide as ps WHERE p.goods_code=ps.goodscode ');
		SET strSql = CONCAT(strSql,strWhere);	
		-- Modified: 2019/06/20, 246130096 #Aspiration｜アスピレーション(Massimo)
		-- SET strSql = CONCAT(strSql,' ORDER BY ps.goodscode,ps.category_guide_name');	
		SET strSql = CONCAT(strSql,' ORDER BY ps.goodscode,ps.SeqNo');
		
	ELSEIF (file_name = '取引店舗変更') THEN
		SELECT * FROM tbl_products 
		WHERE 
			tbl_products.product_status <> 2 
			OR tbl_products.product_status IS NULL 
		ORDER BY tbl_products.create_date,tbl_products.goods_code DESC;
	ELSEIF (file_name='追加項目書き出し') THEN
		SET strSql = 'select p.goods_code,po.option_name,po.option_value,po.option_index ';				
		SET strSql = CONCAT(strSql,'from tbl_products as p LEFT JOIN tbl_products_options as po on  po.RSeqNo = p.SeqNo WHERE p.goods_code is not null');
		SET strSql = CONCAT(strSql,strWhere);
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code,po.option_index');	
		
	ELSEIF (file_name='素材書き出し') THEN
		SET strSql = 'SELECT p.goods_code,p.SeqNo,pd.color_code,s.MaterialName,s.Area,s.MixedRate ';				
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_details as pd ');
		SET strSql = CONCAT(strSql,'LEFT JOIN (SELECT tbl_products_material.MaterialName,tbl_products_material.Area,tbl_products_material.MixedRate,tbl_products_material.color_code as 		s_color_code, tbl_products_material.RSeqNo as s_rSeqno FROM tbl_products_material) AS s ON pd.color_code = s.s_color_code 
		AND pd.RSeqNo = s.s_rSeqno WHERE pd.RSeqNo = p.SeqNo ');
		SET strSql = CONCAT(strSql,strWhere);
	ELSEIF (file_name='キーワード') THEN
		SET strSql = CONCAT("SELECT p.goods_code,REPLACE(IFNULL(p.search_keywords,''),',','|') as search_keywords FROM tbl_products as p WHERE p.goods_code <> '' ",strWhere);
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code');	
	ELSEIF (file_name='GoogleShopping連携情報') THEN -- Huy 2021/11/12 add 1812168333 GoogleShoppingAPI
		SET strSql = 'SELECT p.goods_code, pd.color_code, pd.color_name, p.googles_description, p.googles_product_category_code, p.googles_product_type, p.googles_condition, p.googles_age_group, p.googles_color, p.googles_pattern ';
		SET strSql = CONCAT(strSql,'FROM tbl_products as p,tbl_products_details as pd WHERE p.SeqNo=pd.RSeqNo ');
		SET strSql = CONCAT(strSql,strWhere);
		SET strSql = CONCAT(strSql,' GROUP BY p.goods_code, pd.color_code');
		SET strSql = CONCAT(strSql,' ORDER BY p.goods_code, pd.color_code');
	END IF;	
	
	IF (file_name <> '取引店舗変更') THEN
		SET @strSql = CONCAT(strSql,@selectLimitStmt);
		PREPARE stmt FROM @strSql;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	END IF;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveCustomer`(`p_mode` VARCHAR(20), `p_customer_id` BIGINT(20), `p_email` VARCHAR(200), `p_email_encode` VARCHAR(50), `p_passwords` VARCHAR(50), `p_customer_name` VARCHAR(200), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_customer_status` INT(4), `p_first_name` VARCHAR(200), `p_last_name` VARCHAR(200), `p_birthday` VARCHAR(50), `p_postcode` VARCHAR(50), `p_state` VARCHAR(50), `p_address` VARCHAR(500), `p_address2` VARCHAR(500), `p_emailmagazine` INT(4), `p_phone` VARCHAR(50), `p_city` VARCHAR(50), `p_province` VARCHAR(50), `p_town` VARCHAR(50), `p_note` TEXT, `p_points` VARCHAR(20), `p_rank` VARCHAR(20), `p_customer_code` VARCHAR(13), `p_timestamp` VARCHAR(255), `p_hospital` VARCHAR(255), `p_question` VARCHAR(10), `p_cellphone` VARCHAR(50), `p_customerjob` VARCHAR(200), `p_customerjobother` VARCHAR(200), `p_customer_shopcode` VARCHAR(10), `p_customer_shopname` VARCHAR(40))
BEGIN
	
	 select `customer_status` ,IFNULL(`customer_identification`,'') as customer_identification from tbl_customers where tbl_customers.customer_id = p_customer_id;
	
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_customers(customer_name,create_date,modified_date,customer_status,first_name,last_name,email,birthday,passwords,address,phone,city,province,town,email_encode,
		postcode, state, address2, emailmagazine, note, points,rank, customer_code, TimeStamp, customer_hospital, question, `cellphone`
		)
		VALUES(p_customer_name,p_create_date,p_modified_date,p_customer_status,p_first_name,p_last_name,p_email,p_birthday,p_passwords,p_address,p_phone,p_city,p_province,p_town,p_email_encode,
		p_postcode, p_state,p_address2,p_emailmagazine, p_note, p_points, p_rank, p_customer_code,p_timestamp, p_hospital, p_question, p_cellphone
		);
	ELSE
	   IF((p_customer_status = '0') OR (p_customer_status = '1')) THEN
			
		-- 20190604 Cuc moi edit monday220784699  set 	clickactived la click roai
		IF ((EXISTS(SELECT * FROM tbl_customers WHERE customer_id=p_customer_id AND customer_status = 0 ))  AND (p_customer_status = '1'))THEN
				
				
			
			-- 20200317 cong point cho kh neu co thiet lap 426786003 #DMC 
			IF (EXISTS(SELECT InitialPoint FROM `tbl_settings` WHERE  IsRegisterAddPoint=1)) THEN
				
				
				
				SELECT InitialPoint into p_points FROM `tbl_settings` LIMIT 1;
								
				UPDATE tbl_customers SET tbl_customers.`clickactived` = 1,
				 tbl_customers.points=p_points
				 WHERE tbl_customers.customer_id=p_customer_id ;
				
			else
				UPDATE tbl_customers
				SET tbl_customers.`clickactived` = 1
				WHERE tbl_customers.customer_id = p_customer_id;
				
				
			END IF;	
			
			
		end if;
		
		UPDATE tbl_customers
		SET
			tbl_customers.customer_name = p_customer_name,			
			tbl_customers.modified_date = p_modified_date,
			tbl_customers.first_name = p_first_name,
			tbl_customers.last_name = p_last_name,
			tbl_customers.birthday = p_birthday,
			tbl_customers.address = p_address,
			tbl_customers.phone = p_phone,
			tbl_customers.city = p_city,
			tbl_customers.province = p_province,	
			tbl_customers.customer_status = p_customer_status,	
			tbl_customers.postcode = p_postcode,
			tbl_customers.state = p_state,
			tbl_customers.address2 = p_address2,
			tbl_customers.emailmagazine = p_emailmagazine,			
			tbl_customers.town = p_town,
			tbl_customers.note = p_note,
			tbl_customers.points = p_points,
			tbl_customers.rank = p_rank,
			tbl_customers.TimeStamp = p_timestamp,
			tbl_customers.customer_hospital = p_hospital,
			`tbl_customers`.`cellphone` = p_cellphone,
			`tbl_customers`.`customer_job` = p_customerjob,
			`tbl_customers`.`customer_jobother` = p_customerjobother,
			`tbl_customers`.`shopcode` = p_customer_shopcode,
			`tbl_customers`.`shopname` = p_customer_shopname
			
			
		WHERE
			tbl_customers.customer_id = p_customer_id;
		
	   ELSE
		UPDATE tbl_customers
		SET
			tbl_customers.customer_name = p_customer_name,			
			tbl_customers.modified_date = p_modified_date,
			tbl_customers.first_name = p_first_name,
			tbl_customers.last_name = p_last_name,
			tbl_customers.birthday = p_birthday,
			tbl_customers.address = p_address,
			tbl_customers.phone = p_phone,
			tbl_customers.city = p_city,
			tbl_customers.province = p_province,	
			
			tbl_customers.postcode = p_postcode,
			tbl_customers.state = p_state,
			tbl_customers.address2 = p_address2,
			tbl_customers.emailmagazine = p_emailmagazine,			
			tbl_customers.town = p_town,
			tbl_customers.note = p_note,
			tbl_customers.points = p_points,
			tbl_customers.rank = p_rank,
			tbl_customers.TimeStamp = p_timestamp,
			tbl_customers.customer_hospital = p_hospital,
			`tbl_customers`.`cellphone` = p_cellphone,
			`tbl_customers`.`customer_job` = p_customerjob,
			`tbl_customers`.`customer_jobother` = p_customerjobother,
			`tbl_customers`.`shopcode` = p_customer_shopcode,
			`tbl_customers`.`shopname` = p_customer_shopname
			
	
		WHERE
			tbl_customers.customer_id = p_customer_id;
		end if;
			
	END IF;
	
	SELECT 'ok' AS msg;
	SELECT * FROM tbl_customers WHERE tbl_customers.customer_id = p_customer_id AND customer_status=1;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveNews` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveNews` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveNews`(`p_mode` VARCHAR(20), `p_news_id` BIGINT(20), `p_news_title` VARCHAR(200), `p_news_short` TEXT, `p_news_contents` TEXT, `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_created_by` VARCHAR(200), `p_edited_by` VARCHAR(200), `p_news_date` VARCHAR(40), `p_status` INT(4), `p_top` INT(1), `p_category_id` INT(11), `p_public_date` VARCHAR(40), `p_keyword` TEXT, `p_news_type` VARCHAR(15))
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_news(
			news_title,
			news_short_description,
			news_contents,
			create_date,
			modified_date,
			created_by,
			edited_by,
			STATUS,
			top,
			news_date,
			category_id,
			public_date,
			keyword,
			news_type
		) VALUES (
			p_news_title,
			p_news_short,
			p_news_contents,
			p_create_date,
			p_modified_date,
			p_created_by,
			p_edited_by,
			p_status,
			p_top,
			p_news_date,
			p_category_id,
			p_public_date,
			p_keyword,
			p_news_type
		);
		SELECT MAX(news_id) AS 'news_id' FROM tbl_news;
		
	ELSE
		UPDATE  tbl_news
		SET
			edited_by 	= p_edited_by,			
			modified_date 	= p_modified_date,
			news_title 	= p_news_title,
			news_short_description = p_news_short,
			news_contents 	= p_news_contents,
			STATUS 		= p_status,
			top             = p_top,
			news_date 	= p_news_date,
			category_id 	= p_category_id,
			public_date 	= p_public_date,
			keyword		= p_keyword,
			news_type	= p_news_type
		WHERE
			news_id = p_news_id;
			
		SELECT p_news_id AS 'news_id' ;
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveHashtag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveHashtag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveHashtag`(IN `p_mode` VARCHAR(20), IN `p_hashtag_id` BIGINT(20), IN `p_hashtag_title` VARCHAR(500), IN `p_hashtag_title_en` VARCHAR(500), IN `p_create_date` VARCHAR(40), IN `p_modified_date` VARCHAR(40), IN `p_hashtag_code` VARCHAR(200), IN `p_status` INT(4), IN `p_start_date` DATETIME, IN `p_end_date` DATETIME, IN `p_unlimited` INT(4), IN `p_banner` VARCHAR(200), IN `p_keyword` TEXT, IN `p_note` VARCHAR(500), IN `p_list_goods_code` TEXT, IN `p_list_color_code` TEXT, IN `p_prihtml` TEXT, IN `p_slug` VARCHAR(500), IN `p_url` VARCHAR(500), IN `p_is_show_menu` TINYINT(1), IN `p_category_group_id_str` VARCHAR(500), IN `p_show_order` INT, IN `p_is_members_only` TINYINT(1), IN `p_is_show_link_destination` TINYINT(1), IN `p_link_destination` VARCHAR(255))
BEGIN
	DECLARE v_dcach 	varchar(10) DEFAULT '';
	DECLARE v_goods_code 	varchar(50);
	DECLARE v_color_code 	varchar(10);
	DECLARE v_size_code 	varchar(10);
	DECLARE v_index 	int default 0;
	DECLARE v_max_seqno 	int;
	SET v_dcach=',';
	if (p_mode='C') then
		-- Modified: 2019/07/23. Fix bug hashtag_code is null when create new hashtag
		SELECT AUTO_INCREMENT INTO v_max_seqno FROM information_schema.TABLES AS T WHERE 
			T.TABLE_SCHEMA = (SELECT DATABASE()) AND T.TABLE_NAME = 'tbl_products_hashtag';				
		-- SET v_max_seqno = (SELECT MAX(hashtag_id) FROM tbl_products_hashtag);
		
		if(p_banner = 'Yes') then
			SET p_banner = CONCAT('banner_hashtag_',v_max_seqno,'.jpg');
			-- Set p_banner = concat('banner_hashtag_', v_max_seqno + 1, '.jpg');
		end if;
		INSERT INTO tbl_products_hashtag (
				hashtag_title,
				hashtag_title_en,
				create_date,
				modified_date,
				STATUS,
				start_date,
				end_date,
				banner,
				keyword,
				note,
				prihtml,
				slug,
				url ,
				is_show_menu ,
				unlimited,
				category_group_id_str,
				show_order,
				is_members_only,
				is_show_link_destination,
				link_destination
		) VALUES (
			p_hashtag_title,
			p_hashtag_title_en,
			p_create_date,
			p_modified_date,
			p_status,
			p_start_date,
			p_end_date,
			p_banner,
			p_keyword,
			p_note,
			p_prihtml,
			p_slug,
			p_url ,
			p_is_show_menu,
			p_unlimited,
			p_category_group_id_str,
			p_show_order,
			p_is_members_only,
			p_is_show_link_destination,
			p_link_destination
		);
		-- insert detail goods
		-- Modified: 2019/07/23. Fix bug hashtag_code is null when create new hashtag
		-- SET v_max_seqno = v_max_seqno+1;		
		UPDATE tbl_products_hashtag SET hashtag_code = v_max_seqno WHERE hashtag_id = v_max_seqno;		
		
		WHILE INSTR(p_list_goods_code, v_dcach) > 0 DO
			SET v_goods_code 	= SUBSTR(p_list_goods_code, 1, INSTR(p_list_goods_code,v_dcach) - 1);
			SET v_color_code 	= SUBSTR(p_list_color_code, 1, INSTR(p_list_color_code,v_dcach) - 1);
			
			SET p_list_goods_code 	= SUBSTR(p_list_goods_code, INSTR(p_list_goods_code,v_dcach) + 1, CHAR_LENGTH(p_list_goods_code));
			SET p_list_color_code 	= SUBSTR(p_list_color_code, INSTR(p_list_color_code,v_dcach) + 1, CHAR_LENGTH(p_list_color_code));
			-- SET v_size_code = SUBSTR(p_list_size_code,1,INSTR(p_list_size_code,v_dcach)-1);
			-- SET p_list_size_code = SUBSTR(p_list_size_code,INSTR(p_list_size_code,v_dcach)+1,CHAR_LENGTH(p_list_size_code));
			INSERT INTO tbl_products_hashtag_detail(
				hashtag_id,
				goods_code,
				color_code
			) VALUES (
				v_max_seqno,				
				v_goods_code,
				v_color_code
			);			
			
		END WHILE;
		select  v_max_seqno as 'hashtag_id';
	else
		if(p_banner = 'Yes') then			
			set p_banner = concat('banner_hashtag_', p_hashtag_id);
		end if;
		UPDATE tbl_products_hashtag
		SET
			modified_date 	= p_modified_date,
			hashtag_title 	= p_hashtag_title,
			hashtag_title_en= p_hashtag_title_en,
			hashtag_code 	= p_hashtag_code,
			status 		= p_status,
			start_date 	= p_start_date,
			end_date 	= p_end_date,
			unlimited 	= p_unlimited,
			banner 		= p_banner,
			keyword 	= p_keyword,
			note 		= p_note,
			prihtml 	= p_prihtml,
			slug 		= p_slug,
			url 		= p_url,
			is_show_menu 	= p_is_show_menu,
			category_group_id_str = p_category_group_id_str,
			show_order 	= p_show_order,
			is_members_only = p_is_members_only,
			is_show_link_destination = p_is_show_link_destination,
			link_destination = p_link_destination
		WHERE		
			tbl_products_hashtag.hashtag_id = p_hashtag_id;
		
		-- xoa het bang con di roi insert lai ahihi, lam the cho nhanh
		delete from tbl_products_hashtag_detail where hashtag_id = p_hashtag_id;
		
		WHILE INSTR(p_list_goods_code, v_dcach) > 0 DO			
			SET v_goods_code 	= SUBSTR(p_list_goods_code, 1, INSTR(p_list_goods_code,v_dcach) - 1);
			SET v_color_code 	= SUBSTR(p_list_color_code, 1, INSTR(p_list_color_code,v_dcach)-1);
			SET p_list_goods_code 	= SUBSTR(p_list_goods_code, INSTR(p_list_goods_code,v_dcach)+1, CHAR_LENGTH(p_list_goods_code));
			SET p_list_color_code 	= SUBSTR(p_list_color_code, INSTR(p_list_color_code,v_dcach)+1, CHAR_LENGTH(p_list_color_code));
			-- SET v_size_code = SUBSTR(p_list_size_code,1,INSTR(p_list_size_code,v_dcach)-1);
			-- SET p_list_size_code = SUBSTR(p_list_size_code,INSTR(p_list_size_code,v_dcach)+1,CHAR_LENGTH(p_list_size_code));
			INSERT INTO tbl_products_hashtag_detail (
				hashtag_id,
				goods_code,
				color_code
			) VALUES (
				p_hashtag_id,				
				v_goods_code,
				v_color_code
			);			
			
		END WHILE;
		select p_hashtag_id as 'hashtag_id' ;
	end if;
	select 'ok' as msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveNews_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveNews_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveNews_realmccoys`(`p_mode` VARCHAR(20), `p_news_id` BIGINT(20), `p_news_title` VARCHAR(200), `p_news_short` TEXT, `p_news_contents` TEXT, `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_created_by` VARCHAR(200), `p_edited_by` VARCHAR(200), `p_news_date` VARCHAR(40), `p_status` INT(4), `p_category_id` INT(11), `p_public_date` VARCHAR(40), `p_keyword` TEXT, `p_news_type` VARCHAR(15), `p_keyword_id` INT(11), `p_keyword_list` TEXT)
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_news(
			news_title,
			news_short_description,
			news_contents,
			create_date,
			modified_date,
			created_by,
			edited_by,
			STATUS,
			news_date,
			category_id,
			public_date,
			keyword,
			news_type,
			keyword_id,
			keyword_list
		) VALUES (
			p_news_title,
			p_news_short,
			p_news_contents,
			p_create_date,
			p_modified_date,
			p_created_by,
			p_edited_by,
			p_status,
			p_news_date,
			p_category_id,
			p_public_date,
			p_keyword,
			p_news_type,
			p_keyword_id,
			p_keyword_list
		);
		SELECT MAX(news_id) AS 'news_id' FROM tbl_news;
		
	ELSE
		UPDATE  tbl_news
		SET
			edited_by 	= p_edited_by,			
			modified_date 	= p_modified_date,
			news_title 	= p_news_title,
			news_short_description = p_news_short,
			news_contents 	= p_news_contents,
			STATUS 		= p_status,
			news_date 	= p_news_date,
			category_id 	= p_category_id,
			public_date 	= p_public_date,
			keyword		= p_keyword,
			news_type	= p_news_type,
			keyword_id      = p_keyword_id,
			keyword_list    = p_keyword_list
		WHERE
			news_id = p_news_id;
			
		SELECT p_news_id AS 'news_id' ;
	END IF;
	
	SELECT 'ok' AS msg;
	SELECT * FROM tbl_keyword ORDER BY show_order;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveRankUp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveRankUp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveRankUp`(`p_rank_id_1` VARCHAR(20), `p_rank_code_1` VARCHAR(255), `p_rank_name_1` VARCHAR(500), `p_rank_display_1` VARCHAR(50), `p_rank_default_type_1` VARCHAR(4), `p_rank_id_2` VARCHAR(20), `p_rank_code_2` VARCHAR(255), `p_rank_name_2` VARCHAR(500), `p_rank_display_2` VARCHAR(50), `p_rank_default_type_2` VARCHAR(4), `p_rank_id_3` VARCHAR(20), `p_rank_code_3` VARCHAR(255), `p_rank_name_3` VARCHAR(500), `p_rank_display_3` VARCHAR(50), `p_rank_default_type_3` VARCHAR(4), `p_rank_id_4` VARCHAR(20), `p_rank_code_4` VARCHAR(255), `p_rank_name_4` VARCHAR(500), `p_rank_display_4` VARCHAR(50), `p_rank_default_type_4` VARCHAR(4), `p_rank_id_5` VARCHAR(20), `p_rank_code_5` VARCHAR(255), `p_rank_name_5` VARCHAR(500), `p_rank_display_5` VARCHAR(50), `p_rank_default_type_5` VARCHAR(4), `p_rank_type_id_1` VARCHAR(20), `p_rank_from_1` VARCHAR(20), `p_rank_to_1` VARCHAR(20), `p_rank_number_1` INT(4), `p_rank_type_1` VARCHAR(20), `p_rank_money_1` FLOAT, `p_rank_type_id_2` VARCHAR(20), `p_rank_from_2` VARCHAR(20), `p_rank_to_2` VARCHAR(20), `p_rank_number_2` INT(4), `p_rank_type_2` VARCHAR(20), `p_rank_money_2` FLOAT, `p_rank_type_id_3` VARCHAR(20), `p_rank_from_3` VARCHAR(20), `p_rank_to_3` VARCHAR(20), `p_rank_number_3` INT(4), `p_rank_type_3` VARCHAR(20), `p_rank_money_3` FLOAT, `p_rank_type_id_4` VARCHAR(20), `p_rank_from_4` VARCHAR(20), `p_rank_to_4` VARCHAR(20), `p_rank_number_4` INT(4), `p_rank_type_4` VARCHAR(20), `p_rank_money_4` FLOAT, `p_RankTypeMoney` VARCHAR(10))
BEGIN
	-- Cuc created 2018/12/27 
DECLARE d_strcustomer_rankup TEXT DEFAULT '';
DECLARE d_strcustomer_rankup_type TEXT DEFAULT '';
	
SELECT GROUP_CONCAT(customer_rankup SEPARATOR 'д') into d_strcustomer_rankup
FROM (
	SELECT CONCAT(`SeqNo`,",",`Rank_Code`,",",`Rank_Name`,",",`Rank_Display`,",",`Default_Type`,",",`TimeStamp`) AS customer_rankup
	FROM `tbl_customer_rankup`
) AS G1;
SELECT GROUP_CONCAT(customer_rankup_type SEPARATOR 'д') INTO d_strcustomer_rankup_type
FROM(
SELECT CONCAT(`SeqNo`,",",`RankFrom`,",",`RankTo`,",",`RankNumber`,",",`RankType`,",",`RankMoney`,",",`TimeStamp`) AS customer_rankup_type
FROM `tbl_customer_rankup_type`
) AS G2 ;
insert into `tbl_customer_rankup_log`(`log_customer_rankup`,`log_customer_rank_type`,`create_date`)
values(d_strcustomer_rankup,d_strcustomer_rankup_type,now());
	-- Xoa di roi insert lai cho ngot =))
        DELETE FROM `tbl_customer_rankup` ;
	
	INSERT INTO tbl_customer_rankup(`SeqNo`,`CreatedDate`,`ModifiedDate`,`Rank_Code`,`Rank_Name`,`Rank_Display`,`Default_Type`,`TimeStamp`)
		VALUES(p_rank_id_1,now(),NOW(),p_rank_code_1,p_rank_name_1,p_rank_display_1,p_rank_default_type_1,NOW());
		
	INSERT INTO tbl_customer_rankup(`SeqNo`,`CreatedDate`,`ModifiedDate`,`Rank_Code`,`Rank_Name`,`Rank_Display`,`Default_Type`,`TimeStamp`)
		VALUES(p_rank_id_2,NOW(),NOW(),p_rank_code_2,p_rank_name_2,p_rank_display_2,p_rank_default_type_2,NOW());
		
	INSERT INTO tbl_customer_rankup(`SeqNo`,`CreatedDate`,`ModifiedDate`,`Rank_Code`,`Rank_Name`,`Rank_Display`,`Default_Type`,`TimeStamp`)
		VALUES(p_rank_id_3,NOW(),NOW(),p_rank_code_3,p_rank_name_3,p_rank_display_3,p_rank_default_type_3,NOW());
		
	INSERT INTO tbl_customer_rankup(`SeqNo`,`CreatedDate`,`ModifiedDate`,`Rank_Code`,`Rank_Name`,`Rank_Display`,`Default_Type`,`TimeStamp`)
		VALUES(p_rank_id_4,NOW(),NOW(),p_rank_code_4,p_rank_name_4,p_rank_display_4,p_rank_default_type_4,NOW());
		
	INSERT INTO tbl_customer_rankup(`SeqNo`,`CreatedDate`,`ModifiedDate`,`Rank_Code`,`Rank_Name`,`Rank_Display`,`Default_Type`,`TimeStamp`)
		VALUES(p_rank_id_5,NOW(),NOW(),p_rank_code_5,p_rank_name_5,p_rank_display_5,p_rank_default_type_5,NOW());
	
	DELETE FROM `tbl_customer_rankup_type` ;
	INSERT INTO `tbl_customer_rankup_type`(`SeqNo`,`CreatedDate`,`ModifiedDate`,`RankFrom`,`RankTo`,`RankNumber`,`RankType`,`RankMoney`,`TimeStamp`)
		VALUES(p_rank_type_id_1,NOW(),NOW(),p_rank_from_1,p_rank_to_1,p_rank_number_1,p_rank_type_1,p_rank_money_1,NOW());
	
	INSERT INTO `tbl_customer_rankup_type`(`SeqNo`,`CreatedDate`,`ModifiedDate`,`RankFrom`,`RankTo`,`RankNumber`,`RankType`,`RankMoney`,`TimeStamp`)
		VALUES(p_rank_type_id_2,NOW(),NOW(),p_rank_from_2,p_rank_to_2,p_rank_number_2,p_rank_type_2,p_rank_money_2,NOW());
		
	INSERT INTO `tbl_customer_rankup_type`(`SeqNo`,`CreatedDate`,`ModifiedDate`,`RankFrom`,`RankTo`,`RankNumber`,`RankType`,`RankMoney`,`TimeStamp`)
		VALUES(p_rank_type_id_3,NOW(),NOW(),p_rank_from_3,p_rank_to_3,p_rank_number_3,p_rank_type_3,p_rank_money_3,NOW());
		
	INSERT INTO `tbl_customer_rankup_type`(`SeqNo`,`CreatedDate`,`ModifiedDate`,`RankFrom`,`RankTo`,`RankNumber`,`RankType`,`RankMoney`,`TimeStamp`)
		VALUES(p_rank_type_id_4,NOW(),NOW(),p_rank_from_4,p_rank_to_4,p_rank_number_4,p_rank_type_4,p_rank_money_4,NOW());
	
        DELETE FROM `tbl_preferencesfromec` ;
	
	INSERT INTO tbl_preferencesfromec(`SeqNo`,`CreatedDate`,`ModifiedDate`,`RankTypeMoney`,`TimeStamp`)
		VALUES('0000000000000000001',NOW(),NOW(),p_RankTypeMoney,NOW());
	
	SELECT 1 AS success;
    -- `tbl_customer_rankup_type`
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSendMail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSendMail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSendMail`(`p_mode` VARCHAR(20), `p_email_id` INT(11), `p_email_title` VARCHAR(200), `p_email_senddate` DATE, `p_email_sendtime` TIME, `p_email_objects` VARCHAR(200), `p_email_contents` TEXT, `p_email_status` TINYINT(4), `p_email_send_immediately` TINYINT(4), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_list_email` LONGTEXT, `p_number_emailunformat` BIGINT(20), `p_list_item` TEXT, `p_list_gender` TEXT, `p_list_chronology` TEXT, `p_list_customer` TEXT)
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_sendemail(email_title,email_senddate,email_sendtime,email_objects,email_contents,
				email_status,email_send_immediately,create_date,modified_date,list_email, number_emailunformat, 
				list_items,list_gender,list_chronology,list_customer
		)
		VALUES(p_email_title, p_email_senddate, p_email_sendtime, p_email_objects,p_email_contents,
			p_email_status,p_email_send_immediately,NOW(),NOW(),p_list_email, p_number_emailunformat,
			p_list_item,p_list_gender,p_list_chronology,p_list_customer
		);
	ELSE
		UPDATE tbl_sendemail
		SET
			tbl_sendemail.email_title = p_email_title,			
			tbl_sendemail.email_senddate = p_email_senddate,
			tbl_sendemail.email_sendtime = p_email_sendtime,
			tbl_sendemail.email_objects = p_email_objects,
			tbl_sendemail.email_contents = p_email_contents,
			tbl_sendemail.email_status = p_email_status,
			tbl_sendemail.email_send_immediately = p_email_send_immediately,
			tbl_sendemail.modified_date = NOW(),
			tbl_sendemail.list_email = p_list_email,
			tbl_sendemail.number_emailunformat = p_number_emailunformat,
			
			tbl_sendemail.list_items = p_list_item,
			tbl_sendemail.list_gender = p_list_gender,
			tbl_sendemail.list_chronology = p_list_chronology,
			tbl_sendemail.list_customer = p_list_customer
		WHERE
			tbl_sendemail.email_id = p_email_id;
			
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_savesetpointbyrank` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_savesetpointbyrank` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_savesetpointbyrank`(`p_rank_id_1` INT(4), `p_rank_code_1` VARCHAR(20), `p_point_rate_1` VARCHAR(20), `p_rank_id_2` INT(4), `p_rank_code_2` VARCHAR(20), `p_point_rate_2` VARCHAR(20), `p_rank_id_3` INT(4), `p_rank_code_3` VARCHAR(20), `p_point_rate_3` VARCHAR(20), `p_rank_id_4` INT(4), `p_rank_code_4` VARCHAR(20), `p_point_rate_4` VARCHAR(20), `p_rank_id_5` INT(4), `p_rank_code_5` VARCHAR(20), `p_point_rate_5` VARCHAR(20))
BEGIN
	-- Cuc created 2019/01/04
	-- Xoa di roi insert lai cho ngot =))
        DELETE FROM `tbl_customer_setpointbyrank` ;
	
	INSERT INTO `tbl_customer_setpointbyrank`(`setpointbyrank`,create_date,`rank_code`,`point_rate`)
		VALUES(p_rank_id_1,now(),p_rank_code_1,p_point_rate_1);
		
	INSERT INTO `tbl_customer_setpointbyrank`(`setpointbyrank`,create_date,`rank_code`,`point_rate`)
		VALUES(p_rank_id_2,NOW(),p_rank_code_2,p_point_rate_2);
		
	INSERT INTO `tbl_customer_setpointbyrank`(`setpointbyrank`,create_date,`rank_code`,`point_rate`)
		VALUES(p_rank_id_3,NOW(),p_rank_code_3,p_point_rate_3);
		
	INSERT INTO `tbl_customer_setpointbyrank`(`setpointbyrank`,create_date,`rank_code`,`point_rate`)
		VALUES(p_rank_id_4,NOW(),p_rank_code_4,p_point_rate_4);
		
	INSERT INTO `tbl_customer_setpointbyrank`(`setpointbyrank`,create_date,`rank_code`,`point_rate`)
		VALUES(p_rank_id_5,NOW(),p_rank_code_5,p_point_rate_5);
	
	
	SELECT 1 AS success;
    -- `tbl_customer_rankup_type`
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings`(`p_columnname` VARCHAR(50), `p_contents` TEXT, `p_modified_date` VARCHAR(40))
BEGIN
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record		
		SET @insertStmt = CONCAT('INSERT INTO tbl_settings(',p_columnname,',create_date,modified_date
		) VALUES(\'',p_contents,'\', \'',Now(),'\',\'', now(),'\');');
		PREPARE stmt FROM @insertStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
	ELSE
		--  update 
		SET @updateStmt = CONCAT('UPDATE tbl_settings SET modified_date = \'',p_modified_date,'\',',p_columnname,'= \'',p_contents,'\';');
		PREPARE stmt FROM @updateStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_dateexpired` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_dateexpired` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_dateexpired`()
BEGIN
	--  update 
		UPDATE 	tbl_products 
		SET date_expired = ''
		WHERE date_expired != '' AND (date_expired = '0000/00/00' OR date_expired = '0');
		
		UPDATE 	tbl_products 
		SET date_new_start = ''
		WHERE date_new_start != '' AND (date_new_start = '0000/00/00' OR date_new_start = '0');
		
		UPDATE 	tbl_products 
		SET 	new_product = 0,
			date_new_start = '',
			date_expired = ''
		WHERE 	date_expired < CURDATE() AND new_product = 1 AND date_expired != '';
		
		UPDATE 	tbl_products 
		SET 	new_product = 0
		WHERE 	CURDATE() < date_new_start AND new_product = 1 AND date_new_start != '';
		
		
		UPDATE 	tbl_products 
		SET 	new_product = 1
		WHERE 	date_new_start <= CURDATE() AND CURDATE() <= date_expired AND new_product = 0;
		
		UPDATE 	tbl_products 
		SET 	date_new_start = DATE_FORMAT(( DATE_ADD(CURDATE(), INTERVAL 0 DAY) ), '%Y/%m/%d')
		WHERE 	CURDATE() <= date_expired AND new_product = 1 AND date_new_start = '';
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_googles` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_googles` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_googles`(`p_googles_time` TEXT, `p_googles_all_product` TINYINT(1), `p_googles_chk_barcode` TINYINT(1))
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings_googleshopping ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings_googleshopping(googles_time,googles_all_product,googles_chk_barcode,date_run) 
		VALUES(p_googles_time, p_googles_all_product,p_googles_chk_barcode,CURDATE());
		
	ELSE
		--  update 
		UPDATE tbl_settings_googleshopping 
		SET 
			googles_time = p_googles_time,
			googles_all_product = p_googles_all_product,
			googles_chk_barcode = p_googles_chk_barcode
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_is_show_shop_from_4d` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_is_show_shop_from_4d` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_is_show_shop_from_4d`(IN `p_is_show_shop_from_4d` TINYINT(1), IN `dtrackingURL` VARCHAR(500), IN `p_image_url` TEXT, IN `p_is_image_server` TINYINT(1), IN `p_is_show_product_material` TINYINT(1), IN `p_is_image_load_all` TINYINT(1), IN `p_date_expired` VARCHAR(40), IN `p_is_date_expired` TINYINT(1), IN `p_rank_initial` VARCHAR(20), IN `p_is_retailcustomer_rewrite_4d` TINYINT(1), IN `p_product_code` TEXT, IN `p_product_name` TEXT, IN `p_product_code_search` TEXT, IN `p_styling_color` VARCHAR(50), IN `p_is_stock` TINYINT(1), IN `p_rad_email` TINYINT(1), IN `p_email_customer` VARCHAR(40))
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	-- if total record = 0 create a new record
	IF (total_records = 0) THEN
		-- create one record
		INSERT INTO tbl_settings(
				is_show_shop_from_4d,
				trackingURL,
				image_url,
				is_image_server,
				is_show_product_material,
				
				is_image_load_all,
				date_expired,
				is_date_expired,
				`rank_initial`,
				`is_retailcustomer_rewrite_4d`,
				`product_code`,
				`product_name`,
				`product_code_search`,
				styling_color,
				is_stock,
				rad_email,
				email_customer
		) VALUES (
			p_is_show_shop_from_4d, 
			dtrackingURL, 
			p_image_url, 
			p_is_image_server,
			p_is_show_product_material,
			p_is_image_load_all,
			p_date_expired,
			p_is_date_expired,
			p_rank_initial,
			p_is_retailcustomer_rewrite_4d,
			p_product_code,
			p_product_name,
			p_product_code_search,
			p_styling_color,
			p_is_stock,
			p_rad_email,
			p_email_customer
		);
	ELSE
		--  update
		UPDATE
			tbl_settings
		SET
			is_show_shop_from_4d 	= p_is_show_shop_from_4d,
			trackingURL 		= dtrackingURL,
			image_url 		= p_image_url,
			is_image_server 	= p_is_image_server,
			is_show_product_material= p_is_show_product_material,
			
			is_image_load_all= p_is_image_load_all,
			date_expired = p_date_expired,
			is_date_expired = p_is_date_expired,
			
			`rank_initial` = p_rank_initial,
			
			`is_retailcustomer_rewrite_4d` = p_is_retailcustomer_rewrite_4d,
			
			`product_code` = p_product_code,			
			`product_name` =	p_product_name,
			`product_code_search` = p_product_code_search,
			`styling_color` = p_styling_color,
			is_stock = p_is_stock,
			rad_email = p_rad_email,
			email_customer = p_email_customer
			;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_mailsetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_mailsetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_mailsetting`(IN `p_mail_auto_confirm_address` VARCHAR(255), IN `p_mail_auto_confirm_pass` VARCHAR(255), IN `p_smtp_send_mail` VARCHAR(255), IN `p_port_send_mail` VARCHAR(255), IN `p_mail_test_address` VARCHAR(255), IN `p_mail_back_up_confirmation` VARCHAR(255), IN `p_smtp_secure` VARCHAR(100), IN `p_chk_send_display_name` INT(4), IN `p_send_display_name` VARCHAR(255))
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings_mail ;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings_mail(
				mail_auto_confirm_address,
				mail_auto_confirm_pass,
				smtp_send_mail,
				port_send_mail,
				mail_test_address,
				mail_back_up_confirmation,
				smtp_secure,
				`chk_send_display_name`,
				`send_display_name`
				) 
		VALUES(
			p_mail_auto_confirm_address,
			p_mail_auto_confirm_pass,
			p_smtp_send_mail,
			p_port_send_mail,
			p_mail_test_address,
			p_mail_back_up_confirmation,
			p_smtp_secure,
			p_chk_send_display_name,
			p_send_display_name
		);
	ELSE
		--  update 
		UPDATE 
			tbl_settings_mail 
		SET 
			mail_auto_confirm_address 	= p_mail_auto_confirm_address,
			mail_auto_confirm_pass		= p_mail_auto_confirm_pass,
			smtp_send_mail			= p_smtp_send_mail,
			port_send_mail			= p_port_send_mail,
			mail_test_address		= p_mail_test_address,
			mail_back_up_confirmation	= p_mail_back_up_confirmation,
			smtp_secure			= p_smtp_secure,
			chk_send_display_name		=  p_chk_send_display_name,
			send_display_name		=  p_send_display_name
		;		
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_resizeimage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_resizeimage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_resizeimage`(IN `p_resizeimage_product` FLOAT, IN `p_resizeimage_medium` FLOAT, IN `p_resizeimage_medium2` FLOAT, IN `p_resizeimage_thumbnail` FLOAT)
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) into total_records FROM tbl_settings ;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		-- create one record
		INSERT INTO tbl_settings(
				resizeimage_product,
				resizeimage_medium,
				resizeimage_medium2,
				resizeimage_thumbnail)
		VALUES(
			p_resizeimage_product, 
			p_resizeimage_medium,
			p_resizeimage_medium2,
			p_resizeimage_thumbnail
		);
	ELSE
		--  update
		UPDATE 
			tbl_settings 
		SET 
			resizeimage_product 	= p_resizeimage_product,
			resizeimage_medium 	= p_resizeimage_medium,
			resizeimage_medium2	= p_resizeimage_medium2,
			resizeimage_thumbnail	= p_resizeimage_thumbnail
		;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_shopcontactinfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_shopcontactinfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_shopcontactinfo`(IN `p_shop_contact_id` BIGINT(11), IN `p_contact_shopname` TEXT, IN `p_contact_postcode` TEXT, IN `p_contact_address` TEXT, IN `p_contact_google_map` TEXT, IN `p_contact_email` VARCHAR(255), IN `p_contact_tel` VARCHAR(50), IN `p_contact_fax` VARCHAR(50), IN `p_contact_facebook` TEXT, IN `p_contact_instagram` TEXT, IN `p_contact_twitter` TEXT, IN `p_contact_pinterest` TEXT, IN `p_contact_line` TEXT, IN `p_action` VARCHAR(30))
BEGIN
	IF(p_shop_contact_id = '0') THEN
		-- create one record	
		INSERT INTO tbl_shop_contact_info(
				contact_address,
				contact_google_map,
				contact_email,
				contact_tel,
				contact_fax,
				contact_facebook,
				contact_instagram,
				contact_twitter,
				contact_pinterest,
				contact_line,
				contact_postcode,
				contact_shopname
		) VALUES (
			p_contact_address,
			p_contact_google_map,
			p_contact_email,
			p_contact_tel,
			p_contact_fax,
			p_contact_facebook,
			p_contact_instagram,
			p_contact_twitter,
			p_contact_pinterest,
			p_contact_line,
			p_contact_postcode,
			p_contact_shopname
		);
	ELSE
		--  update 
		 UPDATE 
			tbl_shop_contact_info 
		SET 
			contact_address		= p_contact_address,
			contact_google_map	= p_contact_google_map,
			contact_email		= p_contact_email,
			contact_tel		= p_contact_tel,
			contact_fax		= p_contact_fax,
			contact_facebook	= p_contact_facebook,
			contact_instagram	= p_contact_instagram,
			contact_twitter		= p_contact_twitter,
			contact_pinterest	= p_contact_pinterest,
			contact_line		= p_contact_line,
			contact_postcode	= p_contact_postcode,
			contact_shopname	= p_contact_shopname
		WHERE
			id = p_shop_contact_id
		;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_shopinfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_shopinfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_shopinfo`(IN `p_shop_info_shop_name` VARCHAR(255), IN `p_shop_info_key_word` TEXT, IN `p_shop_info_description` TEXT, IN `p_shop_info_logo` TEXT, IN `p_website_image` TEXT, IN `p_header_search_conversion_tag` TEXT, IN `p_body_search_conversion_tag` TEXT, IN `p_home_info_logo` TEXT)
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings ;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		-- create one record
		INSERT INTO tbl_settings(
				shop_info_shop_name,
				shop_info_key_word,
				shop_info_description,
				shop_info_logo,
				website_image,
				header_search_conversion_tag,
				body_search_conversion_tag,
				home_info_logo)
		VALUES(
			p_shop_info_shop_name, 
			p_shop_info_key_word,
			p_shop_info_description,
			p_shop_info_logo,
			p_website_image,
			p_header_search_conversion_tag,
			p_body_search_conversion_tag,
			p_home_info_logo
		);
	ELSE
		--  update
		UPDATE 
			tbl_settings 
		SET 
			shop_info_shop_name 	= p_shop_info_shop_name,
			shop_info_key_word 	= p_shop_info_key_word,
			shop_info_description	= p_shop_info_description,
			shop_info_logo		= p_shop_info_logo,
			website_image 		= p_website_image,
			header_search_conversion_tag = p_header_search_conversion_tag,
			body_search_conversion_tag   = p_body_search_conversion_tag,
			home_info_logo = p_home_info_logo
		;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_shopstock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_shopstock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_shopstock`(`p_is_shop_stock` TINYINT(1), `p_shop_list` TEXT, `p_shop_default` TEXT, `p_site_default` TEXT, `p_is_actual_num` TINYINT(1), `p_actual_num` INT(11), `p_is_actual_zero` TINYINT(1), `p_max_stock` INT(11), `p_stock_string` TEXT, `p_contract_code` TEXT)
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record	
		INSERT INTO tbl_settings(is_shop_stock,shop_list,shop_default,site_default,is_actual_num,actual_num,is_actual_zero,max_stock,stock_string,ContracConditionCode) VALUES(
		p_is_shop_stock, p_shop_list,p_shop_default,p_site_default, p_is_actual_num,p_actual_num,p_is_actual_zero, p_max_stock, p_stock_string, p_contract_code
		);
		
	ELSE
		--  update 
		UPDATE tbl_settings 
		SET 
			is_shop_stock = p_is_shop_stock,
			shop_list = p_shop_list,
			shop_default = p_shop_default,
			site_default = p_site_default,
			is_actual_num = p_is_actual_num,
			actual_num = p_actual_num,
			is_actual_zero = p_is_actual_zero,
			max_stock = p_max_stock,
			stock_string = p_stock_string,
			ContracConditionCode = p_contract_code
		;
		
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveSettings_staticpagedraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveSettings_staticpagedraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveSettings_staticpagedraft`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_static_page_id` BIGINT(11), IN `p_static_page_title` TEXT, IN `p_static_page_content` TEXT, IN `p_static_page_status` TINYINT(2), IN `p_apply_date` TIMESTAMP, IN `p_static_page_draft_id` BIGINT(11))
BEGIN
	IF (p_mode='C') THEN
		INSERT INTO tbl_static_pages_draft (
			static_page_id,
			static_page_title,
			static_page_content,
			static_page_status,
			apply_date,
			static_page_title_old,
			static_page_content_old,
			static_page_status_old,
			create_date
		) VALUES (
			p_static_page_id,
			p_static_page_title,
			p_static_page_content,
			p_static_page_status,
			p_apply_date,
			(SELECT static_page_title	FROM tbl_static_pages WHERE static_page_id = p_static_page_id),
			(SELECT static_page_content	FROM tbl_static_pages WHERE static_page_id = p_static_page_id),
			(SELECT static_page_status	FROM tbl_static_pages WHERE static_page_id = p_static_page_id),
			CURRENT_TIMESTAMP()
		);
	ELSE
		UPDATE 	tbl_static_pages_draft
		SET
			static_page_title	= p_static_page_title,
			static_page_content	= p_static_page_content,
			static_page_status	= p_static_page_status,
 			apply_date		= p_apply_date,
			static_page_title_old	= (SELECT static_page_title	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id),
			static_page_content_old	= (SELECT static_page_content	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id),
			static_page_status_old	= (SELECT static_page_status	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id)			
		WHERE
			tbl_static_pages_draft.static_page_draft_id = p_static_page_draft_id;
	END IF;
	SELECT 'ok' AS 'msg';
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveShop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveShop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveShop`(`p_mode` VARCHAR(8), `p_shop_id` BIGINT(20), `p_shop_code` VARCHAR(20), `p_shop_name` VARCHAR(200), `p_shop_namekana` VARCHAR(200), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_postcode` VARCHAR(50), `p_state` VARCHAR(50), `p_city` VARCHAR(50), `p_address` VARCHAR(500), `p_address2` VARCHAR(500), `p_shop_site` VARCHAR(500), `p_shop_status` INT(4), `p_display_name` VARCHAR(200), `p_shop_able` INT(4), `p_tel` VARCHAR(50), `p_fax` VARCHAR(50), `p_note` TEXT, `p_map` TEXT, `p_shop_header` TEXT, `p_shop_show_order` INT(2), `p_facebook` VARCHAR(500), `p_instagram` VARCHAR(500), `p_twitter` VARCHAR(500), `p_start_time` VARCHAR(100), `p_end_time` VARCHAR(100))
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_shop(
			shop_code,
			shop_name,
			shop_namekana,
			create_date,
			modified_date,
			shop_status,
			shop_able,
			display_name,
			postcode,
			state,
			city,
			address,
			address2,
			shop_site,
			tel,
			fax,
			note,
			map,
			shop_header,
			shop_show_order,
			facebook,
			instagram,
			twitter,
			start_time,
			end_time
		) VALUES(
			p_shop_code,
			p_shop_name,
			p_shop_namekana,
			p_create_date,
			p_modified_date,
			p_shop_status,
			p_shop_able,
			p_display_name,
			p_postcode,
			p_state,
			p_city,
			p_address,
			p_address2,
			p_shop_site,
			p_tel,
			p_fax,
			p_note,
			p_map,
			p_shop_header,
			p_shop_show_order,
			p_facebook,
			p_instagram,
			p_twitter,
			p_start_time,
			p_end_time
		);
		SELECT MAX(shop_id) AS 'shop_id' FROM tbl_shop;
	ELSE
		UPDATE 	tbl_shop
		SET
			shop_code 	= p_shop_code,
			shop_name 	= p_shop_name,
			shop_namekana 	= p_shop_namekana,
			
			modified_date 	= p_modified_date,
			shop_status 	= p_shop_status,
			shop_able 	= p_shop_able,
			display_name 	= p_display_name,
			postcode 	= p_postcode,
			state 		= p_state,
			city 		= p_city,
			address 	= p_address,
			address2 	= p_address2,
			shop_site 	= p_shop_site,
			tel 		= p_tel,
			fax 		= p_fax,
			note 		= p_note,
			map             = p_map,
			shop_header 	= p_shop_header,
			shop_show_order = p_shop_show_order,
			facebook        = p_facebook,
			instagram       = p_instagram,
			twitter          =p_twitter,
			start_time      = p_start_time,
			end_time         = p_end_time
	
		WHERE
			shop_id 	= p_shop_id;
		SELECT p_shop_id AS 'shop_id' ;	
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_saveVoice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_saveVoice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_saveVoice`(`p_mode` VARCHAR(20), `p_voice_id` BIGINT(20), `p_voice_title` VARCHAR(200), `p_voice_short` TEXT, `p_voice_contents` TEXT, `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_created_by` VARCHAR(200), `p_edited_by` VARCHAR(200), `p_voice_date` VARCHAR(40), `p_status` INT(4))
BEGIN
	
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_voice(voice_title,voice_short_description,voice_contents,create_date,modified_date,
				created_by,edited_by, STATUS,voice_date
		)
		VALUES(p_voice_title, p_voice_short, p_voice_contents, p_create_date,p_modified_date,p_created_by,p_edited_by,
				p_status, p_voice_date
		);
		SELECT MAX(voice_id) AS 'voice_id' FROM tbl_voice;
		
	ELSE
		UPDATE tbl_voice
		SET
			tbl_voice.edited_by = p_edited_by,			
			tbl_voice.modified_date = p_modified_date,
			tbl_voice.voice_title = p_voice_title,
			tbl_voice.voice_short_description = p_voice_short,
			tbl_voice.voice_contents = p_voice_contents,
			tbl_voice.status = p_status,
			tbl_voice.voice_date = p_voice_date		
		WHERE
			tbl_voice.voice_id = p_voice_id;
			
		SELECT p_voice_id AS 'voice_id' ;
	END IF;
	
	SELECT 'ok' AS msg;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_mailsample` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_mailsample` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_mailsample`(`p_mode` VARCHAR(20), `p_email_id` INT(11), `p_email_title` VARCHAR(200), `p_email_objects` VARCHAR(200), `p_email_contents` TEXT, `p_email_status` TINYINT(4), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40))
BEGIN
	
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_mail_sample(email_title,email_objects,email_contents,
				email_status,create_date,modified_date
		)
		VALUES(p_email_title, p_email_objects,p_email_contents,
			p_email_status,p_create_date,p_modified_date
		);	
	ELSE
		UPDATE tbl_mail_sample
		SET
			tbl_mail_sample.email_title = p_email_title,
			-- tbl_mail_sample.email_objects = p_email_objects,
			tbl_mail_sample.email_contents = p_email_contents,
			tbl_mail_sample.email_status = p_email_status,
			tbl_mail_sample.modified_date = p_modified_date	
			
		WHERE
			tbl_mail_sample.email_id = p_email_id;
			
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_mypagemaker` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_mypagemaker` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_mypagemaker`(`p_chk_settop` TINYINT(4), `p_chk_rankup` TINYINT(4), `p_chk_rankupmeter` TINYINT(4), `p_chk_accessbonus` TINYINT(4), `p_chk_issuecoupon` TINYINT(4), `p_chk_register_gift` TINYINT(4), `p_chk_roulette_draw` TINYINT(4), `p_chk_referfriend` TINYINT(4), `p_chk_point_setting` TINYINT(4), `p_chk_purchase_history` TINYINT(4), `p_rd_purchase_history_date` VARCHAR(40), `p_rd_purchase_history_display` TINYINT(4))
BEGIN
	-- Cuc created 2018/12/27 
	-- Xoa di roi insert lai cho ngot =))
        DELETE FROM `tbl_mypagemaker` ;
	
	INSERT INTO tbl_mypagemaker(`mypagemaker_id`,create_date,`modified_date`
	,`settop`
	,`rankup`
	,`rankupmeter`
	,`issue_coupon`
	,`access_bonus`
	,`refer_friend`
	,`roulette_draw`
	,`register_gift`
	,`point_setting`
	,`purchase_history`
	, `purchase_history_date`
	, `purchase_history_display`
	)
	VALUES('1',now(),NOW()
	,p_chk_settop
	,p_chk_rankup
	,p_chk_rankupmeter
	,p_chk_accessbonus
	,p_chk_issuecoupon
	,p_chk_register_gift
	,p_chk_roulette_draw
	,p_chk_referfriend
	,p_chk_point_setting
	,p_chk_purchase_history
	,p_rd_purchase_history_date
	,p_rd_purchase_history_display
	);
		
	
	SELECT "ok" AS "msg";
    
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_mypagemaker_purhis` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_mypagemaker_purhis` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_mypagemaker_purhis`(`p_chk_purchase_history` TINYINT(4), `p_rd_purchase_history_date` VARCHAR(40), `p_rd_purchase_history_display` TINYINT(4))
BEGIN
	-- Cuc created 2018/12/27         
	IF(EXISTS(SELECT * FROM tbl_mypagemaker )) THEN
	
		UPDATE tbl_mypagemaker
		SET 
		`purchase_history` 		=	p_chk_purchase_history
		, `purchase_history_date` 	=	p_rd_purchase_history_date
		, `purchase_history_display`	=	p_rd_purchase_history_display ;
	else
		INSERT INTO tbl_mypagemaker(`mypagemaker_id`,create_date,`modified_date`			
			,`purchase_history`
			, `purchase_history_date`
			, `purchase_history_display`
			)
			VALUES('1',NOW(),NOW()			
			,p_chk_purchase_history
			,p_rd_purchase_history_date
			,p_rd_purchase_history_display
			);
			
	end if;
		
	
	SELECT "ok" AS "msg";
    
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_registeraddpoint` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_registeraddpoint` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_registeraddpoint`(`p_isregisteraddpoint` TINYINT(1), `p_initialpoint` FLOAT, `p_IsUsePointSettings` TINYINT(1), `p_IsUsePointRate` TINYINT(1), `p_is_reward_point` TINYINT(1), `p_point_plus_type` TINYINT(1), `p_fixed_point_plus` INT(1), `p_point_percent_plus` INT(1))
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings ;
	IF(total_records = 0) THEN
		-- create one record		
		SET @insertStmt = CONCAT("INSERT INTO tbl_settings(IsRegisterAddPoint,InitialPoint,create_date,modified_date,IsUsePointSettings,IsUsePointRate,is_reward_point,point_plus_type,fixed_point_plus,point_percent_plus
		) VALUES(",
			p_isregisteraddpoint,", ",
			p_initialpoint," ,'",
			NOW(),"','", 
			NOW(),"', ",
			p_IsUsePointSettings,", ",
			p_IsUsePointRate,", ",
			p_is_reward_point,", ",
			p_point_plus_type,", ",
			p_fixed_point_plus,", ",
			p_point_percent_plus, 
		");");
		PREPARE stmt FROM @insertStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
	ELSE
		--  update 
		SET @updateStmt = CONCAT("UPDATE tbl_settings SET 
			modified_date = '",NOW(),"',
			IsRegisterAddPoint=",p_isregisteraddpoint,", 
			InitialPoint=",p_initialpoint,", 
			IsUsePointSettings=",p_IsUsePointSettings,", 
			IsUsePointRate=",p_IsUsePointRate,",
			is_reward_point=",p_is_reward_point,", 
			point_plus_type=",p_point_plus_type,",
			fixed_point_plus=",p_fixed_point_plus,", 
			point_percent_plus=",p_point_percent_plus
		);
		PREPARE stmt FROM @updateStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
	END IF;
	
	SELECT '1' AS success;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_toppage_image` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_toppage_image` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_toppage_image`(IN `p_top_page_g_id` BIGINT, `p_top_page_id_1` BIGINT(20), `p_top_page_id_2` BIGINT(20), `p_top_page_id_3` BIGINT(20), `p_top_page_id_4` BIGINT(20), `p_top_page_id_5` BIGINT(20), `p_top_page_id_6` BIGINT(20), `p_top_page_id_7` BIGINT(20), `p_top_page_id_8` BIGINT(20), `p_top_page_id_9` BIGINT(20), `p_top_page_image_1` TEXT, `p_top_page_image_2` TEXT, `p_top_page_image_3` TEXT, `p_top_page_image_4` TEXT, `p_top_page_image_5` TEXT, `p_top_page_image_6` TEXT, `p_top_page_image_7` TEXT, `p_top_page_image_8` TEXT, `p_top_page_image_9` TEXT)
BEGIN
	if p_top_page_image_1 <> '' then
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_1
		WHERE `top_page_g_id` = p_top_page_g_id and `top_page_id`=p_top_page_id_1;
	END IF;
	IF p_top_page_image_2 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_2
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_2;
	END IF;
	IF p_top_page_image_3 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_3
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_3;
	END IF;
	IF p_top_page_image_4 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_4
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_4;
	END IF;
	IF p_top_page_image_5 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_5
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_5;
	END IF;
	IF p_top_page_image_6 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_6
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_6;
	END IF;
	IF p_top_page_image_7 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_7
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_7;
	END IF;
	IF p_top_page_image_8 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_8
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_8;
	END IF;
	IF p_top_page_image_9 <> '' THEN
		UPDATE `tbl_top_page` SET `top_page_image`=p_top_page_image_9
		WHERE `top_page_g_id` = p_top_page_g_id AND `top_page_id`=p_top_page_id_9;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_ad_save_toppage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_ad_save_toppage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_ad_save_toppage`(`p_mode` VARCHAR(20), `p_top_page_g_id` BIGINT(20), `p_top_page_g_status` TINYINT(4), `p_top_page_g_type` TINYINT(4), `p_top_page_id_1` BIGINT(20), `p_top_page_id_2` BIGINT(20), `p_top_page_id_3` BIGINT(20), `p_top_page_id_4` BIGINT(20), `p_top_page_id_5` BIGINT(20), `p_top_page_id_6` BIGINT(20), `p_top_page_id_7` BIGINT(20), `p_top_page_id_8` BIGINT(20), `p_top_page_id_9` BIGINT(20), `p_top_page_link_1` TEXT, `p_top_page_link_2` TEXT, `p_top_page_link_3` TEXT, `p_top_page_link_4` TEXT, `p_top_page_link_5` TEXT, `p_top_page_link_6` TEXT, `p_top_page_link_7` TEXT, `p_top_page_link_8` TEXT, `p_top_page_link_9` TEXT, `p_top_page_order_num_1` INT(11), `p_top_page_order_num_2` INT(11), `p_top_page_order_num_3` INT(11), `p_top_page_order_num_4` INT(11), `p_top_page_order_num_5` INT(11), `p_top_page_order_num_6` INT(11), `p_top_page_order_num_7` INT(11), `p_top_page_order_num_8` INT(11), `p_top_page_order_num_9` INT(11), `p_top_page_name_1` TEXT, `p_top_page_name_2` TEXT, `p_top_page_name_3` TEXT, `p_top_page_name_4` TEXT, `p_top_page_name_5` TEXT, `p_top_page_name_6` TEXT, `p_top_page_name_7` TEXT, `p_top_page_name_8` TEXT, `p_top_page_name_9` TEXT, `p_top_page_type_1` TINYINT(4), `p_top_page_type_2` TINYINT(4), `p_top_page_type_3` TINYINT(4), `p_top_page_type_4` TINYINT(4), `p_top_page_type_5` TINYINT(4), `p_top_page_type_6` TINYINT(4), `p_top_page_type_7` TINYINT(4), `p_top_page_type_8` TINYINT(4), `p_top_page_type_9` TINYINT(4), `p_top_page_iframe_1` TEXT, `p_top_page_iframe_2` TEXT, `p_top_page_iframe_3` TEXT, `p_top_page_iframe_4` TEXT, `p_top_page_iframe_5` TEXT, `p_top_page_iframe_6` TEXT, `p_top_page_iframe_7` TEXT, `p_top_page_iframe_8` TEXT, `p_top_page_iframe_9` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_top_page_group`(`top_page_g_order_num`,`top_page_g_type`,`top_page_g_status`)
		VALUES(1,p_top_page_g_type,p_top_page_g_status);
		SELECT MAX(`top_page_g_id`) INTO @top_page_g_id FROM `tbl_top_page_group`;
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_1,p_top_page_order_num_1,@top_page_g_id,p_top_page_name_1,p_top_page_type_1,p_top_page_iframe_1);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_2,p_top_page_order_num_2,@top_page_g_id,p_top_page_name_2,p_top_page_type_2,p_top_page_iframe_2);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_3,p_top_page_order_num_3,@top_page_g_id,p_top_page_name_3,p_top_page_type_3,p_top_page_iframe_3);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_4,p_top_page_order_num_4,@top_page_g_id,p_top_page_name_4,p_top_page_type_4,p_top_page_iframe_4);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_5,p_top_page_order_num_5,@top_page_g_id,p_top_page_name_5,p_top_page_type_5,p_top_page_iframe_5);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_6,p_top_page_order_num_6,@top_page_g_id,p_top_page_name_6,p_top_page_type_6,p_top_page_iframe_6);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_7,p_top_page_order_num_7,@top_page_g_id,p_top_page_name_7,p_top_page_type_7,p_top_page_iframe_7);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_8,p_top_page_order_num_8,@top_page_g_id,p_top_page_name_8,p_top_page_type_8,p_top_page_iframe_8);
		INSERT INTO `tbl_top_page` (`top_page_link`,`top_page_order_num`,`top_page_g_id`,`top_page_name`,`top_page_type`,`top_page_iframe`)
		VALUES (p_top_page_link_9,p_top_page_order_num_9,@top_page_g_id,p_top_page_name_9,p_top_page_type_9,p_top_page_iframe_9);
		SELECT `top_page_id` FROM `tbl_top_page` WHERE `top_page_g_id`=@top_page_g_id
		ORDER BY `top_page_id`;
	ELSE
		UPDATE  `tbl_top_page_group`
		SET			
			`top_page_g_type` 		= p_top_page_g_type,
			`top_page_g_status` 		= p_top_page_g_status
		WHERE
			`top_page_g_id` = p_top_page_g_id;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_1,`top_page_order_num`=p_top_page_order_num_1,
			`top_page_name`=p_top_page_name_1,`top_page_type`=p_top_page_type_1,`top_page_iframe`=p_top_page_iframe_1
			WHERE	`top_page_id`=p_top_page_id_1;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_2,`top_page_order_num`=p_top_page_order_num_2,
			`top_page_name`=p_top_page_name_2,`top_page_type`=p_top_page_type_2,`top_page_iframe`=p_top_page_iframe_2
			WHERE	`top_page_id`=p_top_page_id_2;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_3,`top_page_order_num`=p_top_page_order_num_3,
			`top_page_name`=p_top_page_name_3,`top_page_type`=p_top_page_type_3,`top_page_iframe`=p_top_page_iframe_3
			WHERE	`top_page_id`=p_top_page_id_3;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_4,`top_page_order_num`=p_top_page_order_num_4,
			`top_page_name`=p_top_page_name_4,`top_page_type`=p_top_page_type_4,`top_page_iframe`=p_top_page_iframe_4
			WHERE	`top_page_id`=p_top_page_id_4;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_5,`top_page_order_num`=p_top_page_order_num_5,
			`top_page_name`=p_top_page_name_5,`top_page_type`=p_top_page_type_5,`top_page_iframe`=p_top_page_iframe_5
			WHERE	`top_page_id`=p_top_page_id_5;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_6,`top_page_order_num`=p_top_page_order_num_6,
			`top_page_name`=p_top_page_name_6,`top_page_type`=p_top_page_type_6,`top_page_iframe`=p_top_page_iframe_6
			WHERE	`top_page_id`=p_top_page_id_6;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_7,`top_page_order_num`=p_top_page_order_num_7,
			`top_page_name`=p_top_page_name_7,`top_page_type`=p_top_page_type_7,`top_page_iframe`=p_top_page_iframe_7
			WHERE	`top_page_id`=p_top_page_id_7;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_8,`top_page_order_num`=p_top_page_order_num_8,
			`top_page_name`=p_top_page_name_8,`top_page_type`=p_top_page_type_8,`top_page_iframe`=p_top_page_iframe_8
			WHERE	`top_page_id`=p_top_page_id_8;
		UPDATE `tbl_top_page` SET `top_page_link`=p_top_page_link_9,`top_page_order_num`=p_top_page_order_num_9,
			`top_page_name`=p_top_page_name_9,`top_page_type`=p_top_page_type_9,`top_page_iframe`=p_top_page_iframe_9
			WHERE	`top_page_id`=p_top_page_id_9;
		SELECT p_top_page_id_1 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_2 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_3 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_4 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_5 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_6 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_7 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_8 AS `top_page_id`
		UNION ALL
		SELECT p_top_page_id_9 AS `top_page_id`;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_top_page_g_id AS `top_page_g_id`;
	ELSE
		SELECT MAX(`top_page_g_id`) AS `top_page_g_id` FROM `tbl_top_page_group`;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_affiliate_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_affiliate_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_affiliate_save`(IN `p_mode` VARCHAR(20), IN `p_affiliate_id` BIGINT(20), IN `p_affiliate_name` VARCHAR(50), IN `p_affiliate_link` VARCHAR(500), IN `p_affiliate_campaign_name` VARCHAR(50), IN `p_affiliate_source` VARCHAR(50), IN `p_affiliate_media` VARCHAR(50))
BEGIN
	IF (p_mode = 'C') THEN
	
		INSERT INTO tbl_affiliate(
			affiliate_name,
			affiliate_link,
			affiliate_campaign_name,
			affiliate_source,
			affiliate_media
		)VALUES(
			p_affiliate_name,
			p_affiliate_link,
			p_affiliate_campaign_name,
			p_affiliate_source,
			p_affiliate_media
		);
		SELECT 'ok' AS msg;
	ELSE
		UPDATE `tbl_affiliate`
		
		SET
			 affiliate_name           = p_affiliate_name,
			 affiliate_link           = p_affiliate_link,
			 affiliate_campaign_name  = p_affiliate_campaign_name,
			 affiliate_source         = p_affiliate_source,
			 affiliate_media          = p_affiliate_media
	     WHERE
	     
		affiliate_id = p_affiliate_id;
		
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_author_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_author_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_author_save`(`p_mode` VARCHAR(20), `p_id` INT(5), `p_au` VARCHAR(255), `p_fb` VARCHAR(200), `p_tw` VARCHAR(200), `p_in` VARCHAR(200), `p_yo` VARCHAR(200), `p_li` VARCHAR(200), `p_created_` VARCHAR(50), `p_order` INT(11), `p_author_position` VARCHAR(200), `p_author_comment` VARCHAR(200))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO `tbl_author`(`author_`, `facebook_`, `twitter_`, `instagram_`, `youtube_`, `line_`, `createdate_`, `author_order`, `author_position`, `author_comment`)
		VALUES(p_au, p_fb, p_tw, p_in, p_yo, p_li, p_created_, p_order,p_author_position,p_author_comment);
		SELECT MAX(id_) AS 'id_' FROM tbl_author;
	ELSE
		UPDATE 	`tbl_author`
		SET
			`author_` 	= p_au,
			`facebook_` 	= p_fb,
			`twitter_` 	= p_tw,
			`instagram_` 	= p_in,
			`youtube_` 	= p_yo,
			`line_` 	= p_li,
			`updatedate_`	= p_created_,
			`author_order` 	= p_order,
			`author_position` = p_author_position,
			`author_comment` = p_author_comment
		WHERE
			`id_` 	= p_id;
		SELECT p_id AS 'id_';
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_autoUpdateGoodsCodeInProductDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_autoUpdateGoodsCodeInProductDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_autoUpdateGoodsCodeInProductDetail`()
BEGIN
/*
	DECLARE total_records BIGINT(20) DEFAULT 0;
	DECLARE goods_code_str TEXT;
*/	
	
	UPDATE 	tbl_products_details
		INNER JOIN  tbl_products 
			ON tbl_products_details.RSeqNo = tbl_products.SeqNo 
	SET 	tbl_products_details.product_goods_code = tbl_products.goods_code
	WHERE
		tbl_products_details.product_goods_code = ''
		OR tbl_products_details.product_goods_code IS NULL;
		
	update tbl_products set product_status = 0 where product_status is null;
		
	-- SELECT COUNT(*) INTO total_records FROM tbl_stock_num WHERE r_product_detail_status IS NULL ;
	/*
	SELECT COUNT(product_goods_code) INTO total_records 
	FROM tbl_products_details 
		INNER JOIN tbl_stock_num
			ON tbl_stock_num.GoodCode 		= tbl_products_details.product_goods_code
				AND tbl_stock_num.ColorCode 	= tbl_products_details.color_code
				AND tbl_stock_num.SizeCode 	= tbl_products_details.size_code
				and (tbl_stock_num.r_product_detail_status IS NULL
					or tbl_stock_num.r_product_detail_status = -1
				)
	;
	SELECT  
		CONCAT ("'",REPLACE (GROUP_CONCAT(DISTINCT tbl_stock_num.GoodCode), ",", "','"), "'") AS GoodCodes 
		INTO goods_code_str
	FROM 	tbl_stock_num 
		INNER JOIN tbl_products_details
			ON tbl_stock_num.GoodCode 		= tbl_products_details.product_goods_code
				AND tbl_stock_num.ColorCode 	= tbl_products_details.color_code
				AND tbl_stock_num.SizeCode 	= tbl_products_details.size_code
	WHERE 	tbl_stock_num.r_product_detail_status IS NULL
		OR tbl_stock_num.r_product_detail_status = -1;
	
	IF (total_records > 0) AND goods_code_str IS NOT NULL THEN
		
		SET @updateStmtStr = CONCAT("
			UPDATE tbl_stock_num 
				INNER JOIN tbl_products_details
					ON tbl_stock_num.GoodCode 		= tbl_products_details.product_goods_code
						AND tbl_stock_num.ColorCode 	= tbl_products_details.color_code
						AND tbl_stock_num.SizeCode 	= tbl_products_details.size_code
						AND tbl_products_details.product_goods_code in (",goods_code_str,") 
			SET 	tbl_stock_num.r_product_detail_status = tbl_products_details.product_detail_status
			WHERE tbl_stock_num.r_product_detail_status IS NULL
				OR tbl_stock_num.r_product_detail_status = - 1
		");
		-- INSERT INTO tbl_sys_log (sys_log) VALUES (@updateStmtStr);
		PREPARE stmt2 FROM @updateStmtStr;
		EXECUTE stmt2;
		DEALLOCATE PREPARE stmt2;
	END IF;
	UPDATE tbl_stock_num SET r_product_detail_status = -1
	WHERE GoodCode NOT IN (SELECT goods_code FROM tbl_products );
	*/
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForMenuByCategoryGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForMenuByCategoryGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForMenuByCategoryGroup`(IN `p_category_group_id` VARCHAR(255), IN `p_is_new_product` TINYINT)
BEGIN
	
	SET @selectStmt = 
		CONCAT("
	SELECT 
		tbl_brands.SeqNo ,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display,
		tbl_brands.search_keyword,
		tbl_brands.brand_title_sale_off
	");
	
	SET @fromStmt = 
		CONCAT("
	FROM 
		tbl_brands, 
		tbl_products, 
		tbl_products_details
	");
	SET @whereStmt = 
		CONCAT("
	WHERE 
		
		 
		brand_status 		= 1
		AND is_show_as_menu 		= 1
		AND tbl_products.brand_code 	= tbl_brands.brand_code
		AND tbl_products.SeqNo 		= tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.new_product		= 1 ");
	END IF;
	
	
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
		AND p_category_group_id 	<> '0' 
	THEN
		SET @whereStmt = 
			CONCAT(@whereStmt, " 
				AND tbl_products.product_itemcode
					IN ( SELECT ItemCode FROM tbl_products_category WHERE category_group_id = ",p_category_group_id,") 
			");
	END IF;
		
	
	
	SET @groupStmt = 
		CONCAT("
	GROUP BY brand_name_display ");
	
	SET @orderStmt = 
		CONCAT("
	ORDER BY show_order ASC ");
	
	SET @selectStmtStrRun = CONCAT(@selectStmt, @fromStmt, @whereStmt, @groupStmt, @orderStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForMenuByCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForMenuByCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForMenuByCategory`(IN `p_category_code` VARCHAR(255), IN `p_is_new_product` TINYINT)
BEGIN
	
	SET @selectStmt = 
		CONCAT("
	SELECT 
		tbl_brands.SeqNo ,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display,
		tbl_brands.search_keyword,
		tbl_brands.brand_title_sale_off
	");
	
	SET @fromStmt = 
		CONCAT("
	FROM 
		tbl_brands, 
		tbl_products, 
		tbl_products_details
	");
	SET @whereStmt = 
		CONCAT("
	WHERE 
		
		brand_status 		= 1
		AND is_show_as_menu 		= 1
		AND tbl_products.brand_code 	= tbl_brands.brand_code
		AND tbl_products.SeqNo 		= tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.new_product		= 1 ");
	END IF;
	
	/*
	IF (p_category_code IS NOT NULL AND p_category_code <> '') THEN
		IF (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
			SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.new_product		= 1 ");
		ELSE 
			SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.product_itemcode	= '", p_category_code, "' ");
		END IF;
	END IF;
	*/
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (p_category_code);
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
		
	
	
	SET @groupStmt = 
		CONCAT("
	GROUP BY brand_name_display ");
	
	SET @orderStmt = 
		CONCAT("
	ORDER BY show_order ASC ");
	
	SET @selectStmtStrRun = CONCAT(@selectStmt, @fromStmt, @whereStmt, @groupStmt, @orderStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForMenu_byGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForMenu_byGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForMenu_byGroup`(IN `p_group_id` INT)
BEGIN
	SELECT 
		SeqNo ,
		RSeqNo,
		brand_id,
		brand_name,
		brand_menu_type,
		hot_brand,
		brand_code,
		brand_banner,
		TIMESTAMP,
		create_date,
		brand_memo,
		brand_status,
		group_id,
		brand_logo,
		slug_url,
		ecsite,
		show_order,
		brand_header,
		is_show_as_menu,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display,
		search_keyword,
		brand_title_sale_off
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_as_menu 	= 1
		and group_id = p_group_id
	GROUP BY brand_name_display
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandForTopPage` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandForTopPage` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandForTopPage`()
BEGIN
   SELECT 
		SeqNo ,
		RSeqNo,
		brand_id,
		brand_name,
		brand_menu_type,
		hot_brand,
		brand_code,
		brand_banner,
		TIMESTAMP,
		create_date,
		brand_memo,
		brand_status,
		group_id,
		brand_logo,
		slug_url,
		ecsite,
		show_order,
		brand_header,
		is_show_as_menu,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display,
		search_keyword,
		brand_title_sale_off
	FROM 
		tbl_brands 
	WHERE 
		ecsite 			= 1 
		AND brand_status 	= 1
		AND is_show_top_page 	= 1
	GROUP BY brand_name_display
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getBrandPickup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getBrandPickup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getBrandPickup`()
BEGIN
	SELECT 
		SeqNo ,
		RSeqNo,
		brand_id,
		brand_name,
		brand_menu_type,
		hot_brand,
		brand_code,
		brand_banner,
		TimeStamp,
		create_date,
		brand_memo,
		brand_status,
		group_id,
		brand_logo,
		slug_url,
		ecsite,
		show_order,
		brand_header,
		is_show_as_menu,
		is_show_pickup,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display,
		search_keyword,
		brand_title_sale_off
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_pickup 	= 1
	GROUP BY brand_name_display
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_brands_getByGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_brands_getByGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_brands_getByGroupId`(IN `p_brand_group_id` INT(11))
BEGIN
	SELECT 
		SeqNo ,
		RSeqNo,
		brand_id,
		brand_name,
		brand_menu_type,
		hot_brand,
		brand_code,
		brand_banner,
		TIMESTAMP,
		create_date,
		brand_memo,
		brand_status,
		group_id,
		brand_logo,
		slug_url,
		ecsite,
		show_order,
		brand_header,
		is_show_as_menu,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_as_menu 	= 1
		AND group_id 		= p_brand_group_id
	GROUP BY brand_name_display
	ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Brand_getBrandAndOrderList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Brand_getBrandAndOrderList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Brand_getBrandAndOrderList`()
BEGIN
SELECT 
		SeqNo ,
		RSeqNo,
		brand_id,
		brand_name,
		brand_menu_type,
		hot_brand,
		brand_code,
		brand_banner,
		TimeStamp,
		create_date,
		brand_memo,
		brand_status,
		group_id,
		brand_logo,
		slug_url,
		ecsite,
		show_order,
		brand_header,
		is_show_as_menu,
		(CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS brand_name_display,
		search_keyword,
		brand_title_sale_off,
		UPPER(substring(brand_name_display,1,1)) as brand_tag
	FROM 
		tbl_brands 
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 			= 1 
		brand_status 	= 1
		AND is_show_as_menu 	= 1
	ORDER BY brand_tag ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Brand_getBrandByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Brand_getBrandByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Brand_getBrandByBrandCode`(IN `p_brand_code` VARCHAR(20))
BEGIN
SET @selectStmtStrRun = CONCAT("
	SELECT 
		tbl_brands.SeqNo,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display
	FROM 	tbl_brands
	WHERE 
		tbl_brands.brand_code = '",p_brand_code,"'");
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Brand_getBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Brand_getBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Brand_getBrandCode`(IN `p_brand_code` VARCHAR(20))
BEGIN
SET @selectStmtStrRun = CONCAT("
	SELECT 
		tbl_brands.SeqNo,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display
	FROM 	tbl_brands
	WHERE 
		tbl_brands.brand_code = '",p_brand_code,"'");
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cart_check_stock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cart_check_stock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cart_check_stock`(IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_size_code` VARCHAR(50), IN `p_is_secret_sale` INT(3))
BEGIN
DECLARE dshop_lits TEXT DEFAULT '';
DECLARE vi_actual_num BIGINT(20) DEFAULT 0;
DECLARE vb_is_actual_num TINYINT(1) DEFAULT 0;
DECLARE vb_is_actual_zero TINYINT(1) DEFAULT 0;
DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
DECLARE vseqno VARCHAR(20);
SELECT actual_num, is_actual_num, is_actual_zero, is_shop_stock,shop_list INTO vi_actual_num, vb_is_actual_num, vb_is_actual_zero, vb_is_shop_stock,dshop_lits
FROM tbl_settings WHERE 1=1 LIMIT 1;
SET dshop_lits=CONCAT("'",REPLACE(dshop_lits,",","','"),"'");
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.StockNum) - ',vi_actual_num,') ELSE SUM(s.StockNum) END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(s.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.StockNum) - ',vi_actual_num,') ELSE SUM(s.StockNum) END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum)  ELSE 0 END AS StockNum');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum)  ELSE 0 END AS StockNum');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET @stock_stmt = 'CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE 0 END AS stock_num';
			SET @stock_tbl_stmt = CONCAT('CASE WHEN (SUM(TBL_stock_tmp.StockNum) > 0) THEN SUM(TBL_stock_tmp.StockNum) ELSE 0 END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum)  ELSE 0 END AS StockNum');
		END IF;
	ELSEIF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum) - ',vi_actual_num,') ELSE SUM(s.KanoNum) END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE SUM(TBL_stock_tmp.StockNum) END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum) ELSE 0 END AS StockNum');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum) ELSE 0 END AS StockNum');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET @stock_stmt = 'CASE WHEN (SUM(s.KanoNum) > 0) THEN SUM(s.KanoNum) ELSE 0 END AS stock_num';
			SET @stock_tbl_stmt = CONCAT('CASE WHEN (SUM(TBL_stock_tmp.StockNum) > 0) THEN SUM(TBL_stock_tmp.StockNum) ELSE 0 END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN SUM(tbl_stock_num.KanoNum)  ELSE 0 END AS StockNum');
		END IF;
	ELSEIF vb_is_shop_stock = 2 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum3) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum3) - ',vi_actual_num,') ELSE SUM(s.KanoNum3) END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE SUM(TBL_stock_tmp.StockNum) END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN SUM(tbl_stock_num.KanoNum3) ELSE 0 END AS StockNum');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum3) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum3) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_tbl_stmt = CONCAT('CASE WHEN ((SUM(TBL_stock_tmp.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(TBL_stock_tmp.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
				SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN SUM(tbl_stock_num.KanoNum3) ELSE 0 END AS StockNum');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET @stock_stmt = 'CASE WHEN (SUM(s.KanoNum3) > 0) THEN SUM(s.KanoNum3) ELSE 0 END AS stock_num';
			SET @stock_tbl_stmt = CONCAT('CASE WHEN (SUM(TBL_stock_tmp.StockNum) > 0) THEN SUM(TBL_stock_tmp.StockNum) ELSE 0 END AS stock_num');
			SET @stock_not_sum_stmt = CONCAT('CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN SUM(tbl_stock_num.KanoNum3)  ELSE 0 END AS StockNum');
		END IF;
	END IF;
	
	IF(p_goods_code <> '') THEN
		IF(p_is_secret_sale <> '1') THEN
			SELECT 
				tbl_products.Seqno 
			FROM 
				tbl_products 
			WHERE 
				tbl_products.product_status = 1 
				AND goods_code = p_goods_code 
			INTO vseqno;
		ELSE
			SELECT 
				tbl_products.Seqno 
			FROM 
				tbl_products 
			WHERE 
				goods_code = p_goods_code 
			INTO vseqno;
		END IF;
		
		-- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*,
			soton.*, 
			tbl_size.display_order, 
			
			
			
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display
			
			
			
			
		FROM 
			tbl_products_details AS pd
			LEFT JOIN (
				SELECT 
					s.ColorCode,
					s.SizeCode,
					",@stock_stmt,"
				FROM 
					tbl_stock_num AS s 
				WHERE
					s.GoodCode = '",p_goods_code,"' ");
		IF dshop_lits <> "''" THEN
			IF vb_is_shop_stock = 0 THEN
			SET @selectStmt = CONCAT(@selectStmt, "
					AND s.ShopCode IN (",dshop_lits,") ");
			END IF;
		END IF;
		SET @selectStmt = CONCAT(@selectStmt, "
				GROUP BY s.colorcode,s.sizecode
			) AS soton 
				ON pd.color_code=soton.ColorCode 
				AND pd.size_code=soton.SizeCode 
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
		WHERE
			pd.RSeqNo = '",vseqno,"' and pd.product_detail_status= 0 and soton.ColorCode='",p_color_code,"' 
			and soton.SizeCode='",p_size_code,"' 
		ORDER BY pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");	
	
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_cashpaysetting_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_cashpaysetting_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_cashpaysetting_add`(IN `p_isusepay` INT, IN `p_isafford` INT, IN `p_moneymax` FLOAT, IN `p_moneymaxset` FLOAT, IN `p_moneyarise` FLOAT, IN `p_moneyship` FLOAT, IN `listcashpayrange` TEXT, IN `p_isincludeship` INT, IN `p_isyestax` INT)
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_CreatedDate DATETIME;
DECLARE d_MoneyBegin FLOAT;
DECLARE d_MoneyEnd FLOAT;
DECLARE d_MoneyShip FLOAT;
DECLARE total_records BIGINT(11) DEFAULT 0;
SELECT COUNT(*) INTO total_records FROM tbl_cashpaysetting ;
IF(total_records = 0) THEN
	-- create one record		
	INSERT INTO tbl_cashpaysetting(`isUsePay`,`MoneyMax`,`MoneyMaxSet`,`MoneyArise`,`MoneyShip`,`isafford`,`isIncludeShip`,`isYesTax`)
	VALUES(p_isusepay,p_moneymax,p_moneymaxset,p_moneyarise,p_moneyship,p_isafford,p_isincludeship,p_isyestax);
ELSE
	--  update 
	UPDATE 	tbl_cashpaysetting
	SET 
		isUsePay 	= p_isusepay,
		MoneyMax 	= p_moneymax,
		MoneyMaxSet 	= p_moneymaxset,
		MoneyArise 	= p_moneyarise,
		MoneyShip 	= p_moneyship,
		isafford 	= p_isafford,
		isIncludeShip 	= p_isincludeship,
		isYesTax 	= p_isyestax,
		`timestamp` 	= CURRENT_TIMESTAMP;
END IF;
UPDATE tbl_paytypeuse SET `pay_use`=p_isusepay WHERE `pay_type`='cash';
DELETE FROM tbl_cashpayrange WHERE 1=1;
SET d_index = 0;
WHILE INSTR(listcashpayrange,d_A)>0 DO
		SET d_index = INSTR(listcashpayrange,d_A);
		SET d_MoneyBegin = SUBSTR(listcashpayrange,1,d_index-1);
		SET listcashpayrange = SUBSTR(listcashpayrange,d_index+1,CHAR_LENGTH(listcashpayrange)-d_index+1);
		SET d_index = INSTR(listcashpayrange,d_A);
		SET d_MoneyEnd = SUBSTR(listcashpayrange,1,d_index-1);
		SET listcashpayrange = SUBSTR(listcashpayrange,d_index+1,CHAR_LENGTH(listcashpayrange)-d_index+1);
		SET d_index = INSTR(listcashpayrange,d_A);
		SET d_MoneyShip = SUBSTR(listcashpayrange,1,d_index-1);
		SET listcashpayrange = SUBSTR(listcashpayrange,d_index+1,CHAR_LENGTH(listcashpayrange)-d_index+1);
		SET d_index = INSTR(listcashpayrange,d_A);
		SET d_CreatedDate = SUBSTR(listcashpayrange,1,d_index-1);
		SET listcashpayrange = SUBSTR(listcashpayrange,d_index+1,CHAR_LENGTH(listcashpayrange)-d_index+1);
		INSERT INTO tbl_cashpayrange(MoneyBegin,MoneyEnd,MoneyShip,CreatedDate)
		VALUES(d_MoneyBegin,d_MoneyEnd,d_MoneyShip,d_CreatedDate);
END WHILE;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorygroup_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorygroup_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorygroup_save`(`p_mode` VARCHAR(20), `p_category_group_id` INT(11), `p_category_group_code` VARCHAR(200), `p_category_group_name` VARCHAR(255), `p_category_group_status` TINYINT(2), `p_category_group_show_order` TINYINT(2), `p_category_group_parent_name` VARCHAR(255), `p_is_show_sub_menu` TINYINT(2), `p_category_group_header` TEXT, `p_slug_url` VARCHAR(500), `p_instagram_link` VARCHAR(1000), `p_instagram_access_token` VARCHAR(1000), `p_is_get_list_manual` TINYINT(1), `p_goodcode_list_manual` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_products_category_group(
			category_group_code,
			category_group_name,
			category_group_status,
			category_group_show_order,
			category_group_parent_name,
			is_show_sub_menu,
			category_group_header,
			slug_url,
			instagram_link,
			instagram_access_token,
			is_get_list_manual,
			goodcode_list_manual
		) VALUES (
			p_category_group_code,
			p_category_group_name,
			p_category_group_status,
			p_category_group_show_order,
			p_category_group_parent_name,
			p_is_show_sub_menu,
			p_category_group_header,
			p_slug_url,
			p_instagram_link,
			p_instagram_access_token,
			p_is_get_list_manual,
			p_goodcode_list_manual
		);
	ELSE
		UPDATE tbl_products_category_group
		SET
			
			category_group_code 		= p_category_group_code,
			category_group_name 		= p_category_group_name,
			category_group_status 		= p_category_group_status,
			category_group_show_order 	= p_category_group_show_order,
			category_group_parent_name 	= p_category_group_parent_name,
			is_show_sub_menu		= p_is_show_sub_menu,
			category_group_header		= p_category_group_header,
			slug_url 			= p_slug_url,
			instagram_link 			= p_instagram_link ,
			instagram_access_token		= p_instagram_access_token,
			is_get_list_manual 			= p_is_get_list_manual ,
			goodcode_list_manual		= p_goodcode_list_manual
		WHERE
			tbl_products_category_group.id 	= p_category_group_id;
	END IF;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_categorysmall_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_categorysmall_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_categorysmall_save`(`p_mode` VARCHAR(20), `p_category_small_id` INT(11), `p_category_small_code` VARCHAR(200), `p_category_small_name` VARCHAR(255), `p_category_small_status` TINYINT(2), `p_category_small_show_order` TINYINT(2), `p_category_small_parent_name` VARCHAR(255), `p_category_small_header` TEXT, `p_slug_url` VARCHAR(500), `p_goodcode_list_manual` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_products_category_small(
			category_small_code,
			category_small_name,
			category_small_status,
			category_small_show_order,
			category_small_parent_name,
			category_small_header,
			slug_url,
			goodcode_list_manual
		) VALUES (
			p_category_small_code,
			p_category_small_name,
			p_category_small_status,
			p_category_small_show_order,
			p_category_small_parent_name,
			p_category_small_header,
			p_slug_url,
			p_goodcode_list_manual
		);
	ELSE
		UPDATE tbl_products_category_small
		SET
			category_small_code 		= p_category_small_code,
			category_small_name 		= p_category_small_name,
			category_small_status 		= p_category_small_status,
			category_small_show_order 	= p_category_small_show_order,
			category_small_parent_name 	= p_category_small_parent_name,
			category_small_header		= p_category_small_header,
			slug_url 			= p_slug_url,
			goodcode_list_manual		= p_goodcode_list_manual
		WHERE
			tbl_products_category_small.id 	= p_category_small_id;
	END IF;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_checkTimeSendMailRemindOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_checkTimeSendMailRemindOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_checkTimeSendMailRemindOrder`()
BEGIN
	DECLARE not_send_from TIME(0) DEFAULT 0;
	DECLARE not_send_to TIME(0) DEFAULT 0;
	
	SELECT time_dont_send_mail_from, time_dont_send_mail_to
	FROM tbl_mail_remind_order_tmp
	INTO not_send_from, not_send_to;
	
	IF (not_send_from > not_send_to) THEN
		SELECT 	1 AS 'is_stoped_sending_mail' 
		FROM 	tbl_mail_remind_order_tmp 
		WHERE 	TIME(NOW()) >= time_dont_send_mail_from OR TIME(NOW()) <= time_dont_send_mail_to;
	ELSE
		SELECT 	1 AS 'is_stoped_sending_mail' 
		FROM 	tbl_mail_remind_order_tmp 
		WHERE 	TIME(NOW()) >= time_dont_send_mail_from AND TIME(NOW()) <= time_dont_send_mail_to;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_jamsync2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_jamsync2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_jamsync2`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8, IN `p_color_code` VARCHAR(20) CHARSET utf8, IN `p_color_name` TEXT CHARSET utf8, IN `p_color_display` TEXT CHARSET utf8)
BEGIN		
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_colors(
		SeqNo,
		RSeqNo,
		create_date,
		color_code,
		color_name,
		color_abbre,
		TimeStamp,		
		color_displayorder,
		color_display
		)
		VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
          
          -- Modified: 2020/01/12. S21011233　有限会社ミヤコ
          -- IF (p_color_display IS NOT NULL OR p_color_display <> '') THEN
          IF (p_color_display IS NOT NULL AND p_color_display <> '') THEN
		UPDATE 
			tbl_products_details 
		SET 
			color_name      = p_color_name,
			color_display 	= p_color_display
		WHERE 
			color_code = p_color_code;
	  ELSE 
		UPDATE 
			tbl_products_details 
		SET 
			color_name      = p_color_name,
			color_display   = p_color_name
		WHERE 
			color_code = p_color_code;
	  END IF;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_color_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_color_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_color_save`(`p_mode` VARCHAR(20), `p_color_code` VARCHAR(20), `p_color_name` TEXT, `p_color_display` TEXT, `p_color_html_code` TEXT, `p_color_displayorder` INT(11), `p_color_keyword` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_colors(color_code, color_name, color_display, color_html_code, color_displayorder, color_keyword)
		VALUES(p_color_code, p_color_name, p_color_display, p_color_html_code, p_color_displayorder, p_color_keyword);
	ELSE
		UPDATE 	tbl_colors
		SET
			
			color_name 	= p_color_name,
			color_display 	= p_color_display,
			color_html_code = p_color_html_code,
			color_displayorder = p_color_displayorder,
			color_keyword = p_color_keyword
		WHERE
			color_code 	= p_color_code;
	END IF;
	IF (p_color_display IS NOT NULL OR p_color_display <> '') THEN
		UPDATE 
			tbl_products_details 
		SET 
			color_name      = p_color_name,
			color_display 	= p_color_display,
			color_html_code = p_color_html_code
		WHERE 
			color_code = p_color_code;
	ELSE 
		UPDATE 
			tbl_products_details 
		SET 
			color_name      = p_color_name,
			tbl_products_details.color_display = p_color_name,
			color_html_code = p_color_html_code
		WHERE 
			tbl_products_details.color_code = p_color_code;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coordinate_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coordinate_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coordinate_save`(`p_mode` VARCHAR(20), `p_id` BIGINT(10), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_name` VARCHAR(255), `p_status` INT(1), `p_descrip` TEXT, `p_url` VARCHAR(255), `p_product` TEXT, `p_product_relate` TEXT, `p_product_search` TEXT, `p_product_relate_search` TEXT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO `tbl_coordinate_book`(
			`create_date`,
			`coordinate_name`,
			`coordinate_status`,
			`coordinate_descrip`,
			`coordinate_url`,
			`product`,
			`product_relate`,
			`product_search`,
			`product_relate_search`
		) VALUES(
			p_create_date,
			p_name,
			p_status,
			p_descrip,
			p_url,
			p_product,
			p_product_relate,
			p_product_search,
			p_product_relate_search
		);
		SELECT MAX(coordinate_id) AS 'coordinate_id' FROM tbl_coordinate_book;
	ELSE
		UPDATE tbl_coordinate_book
		SET			
			`modified_date` 	= p_modified_date,
			`coordinate_name` 	= p_name,
			`coordinate_status`	= p_status,
			`coordinate_descrip`	= p_descrip,
			`coordinate_url`	= p_url,
			`product` 		= p_product,
			`product_relate`	= p_product_relate,
			`product_search`	= p_product_search,
			`product_relate_search`	= p_product_relate_search
		WHERE
			coordinate_id = p_id;			
		SELECT p_id AS 'coordinate_id' ;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_coupon_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_coupon_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_coupon_save`(`p_mode` VARCHAR(20), `p_SeqNo` VARCHAR(20), `p_CreateDate` DATE, `p_ModifiedDate` DATE, `p_coupon_code` VARCHAR(32), `p_coupon_name` TEXT, `p_startdate` DATETIME, `p_enddate` DATETIME, `p_benifit_type` TINYINT, `p_isafford` TINYINT, `p_islimit` TINYINT, `p_isafford_item` TINYINT, `p_benifit_money` FLOAT, `p_benifit_rate` INT, `p_oder_money_min_afford` FLOAT, `p_num_use_limit` INT, `p_item_list` TEXT, `p_is_member` TINYINT, `p_list_rank` VARCHAR(200), `p_list_month` VARCHAR(200), `p_customercode_from` VARCHAR(20), `p_customername_from` VARCHAR(200), `p_customercode_to` VARCHAR(20), `p_customername_to` VARCHAR(200), `p_list_customercode` LONGTEXT, `p_coupon_thumbnail` VARCHAR(200), `p_coupon_products` TEXT, `p_oder_quan_min_afford` FLOAT, `p_is_productsale` TINYINT)
BEGIN
	IF(p_mode = 'C') THEN
		IF(EXISTS(SELECT * FROM tbl_coupon WHERE tbl_coupon.`coupon_code` = p_coupon_code)) THEN
			SELECT 'exists' AS msg;
		ELSE
			INSERT INTO tbl_coupon(SeqNo,CreateDate,ModifiedDate,coupon_code,coupon_name,
		startdate,enddate,benifit_type,isafford,islimit,isafford_item,benifit_money,benifit_rate,
		oder_money_min_afford,num_use_limit,item_list,is_member
		,`list_rank`,`list_month`,`customercode_from`,`customername_from`,`customercode_to`,`customername_to`
		,`list_customercode`
		,`coupon_image`,`product_list`,oder_quan_min_afford,is_productsale
		)
		VALUES(p_SeqNo,p_CreateDate,p_ModifiedDate,p_coupon_code,p_coupon_name,
		p_startdate,p_enddate,p_benifit_type,p_isafford,p_islimit,p_isafford_item,p_benifit_money,
		p_benifit_rate,
		p_oder_money_min_afford,p_num_use_limit,p_item_list,p_is_member
		,p_list_rank,p_list_month,p_customercode_to,p_customername_from,p_customercode_to,p_customername_to
		,p_list_customercode
		, p_coupon_thumbnail,p_coupon_products,p_oder_quan_min_afford,p_is_productsale
		);
			SELECT 'ok' AS msg;
		END IF;
	
	ELSE
		UPDATE tbl_coupon
		SET
			tbl_coupon.CreateDate = p_CreateDate
		,	tbl_coupon.ModifiedDate = p_ModifiedDate
		,	tbl_coupon.coupon_code = p_coupon_code
		,	tbl_coupon.coupon_name = p_coupon_name
		,	tbl_coupon.startdate = p_startdate
		,	tbl_coupon.enddate = p_enddate
		,	tbl_coupon.benifit_type = p_benifit_type
		,	tbl_coupon.isafford = p_isafford
		,	tbl_coupon.islimit = p_islimit
		,	tbl_coupon.isafford_item = p_isafford_item
		,	tbl_coupon.benifit_money = p_benifit_money
		,	tbl_coupon.benifit_rate = p_benifit_rate
		,	tbl_coupon.oder_money_min_afford = p_oder_money_min_afford
		,	tbl_coupon.num_use_limit = p_num_use_limit
		,	tbl_coupon.item_list = p_item_list
		,	tbl_coupon.is_member = p_is_member
		
		,	tbl_coupon.list_rank = p_list_rank
		,	tbl_coupon.list_month = p_list_month
		,	tbl_coupon.customercode_from = p_customercode_from
		,	tbl_coupon.customername_from = p_customername_from
		,	tbl_coupon.customercode_to = p_customercode_to
		,	tbl_coupon.customername_to = p_customername_to		
		,	tbl_coupon.list_customercode = p_list_customercode
		,	tbl_coupon.`coupon_image` = p_coupon_thumbnail
		,	tbl_coupon.`product_list` = p_coupon_products
		,	tbl_coupon.oder_quan_min_afford = p_oder_quan_min_afford
		,	tbl_coupon.is_productsale = p_is_productsale
						
		
		WHERE
			tbl_coupon.SeqNo = p_SeqNo;
	SELECT 'ok' AS msg;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customers_shipaddress_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customers_shipaddress_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customers_shipaddress_update`(IN `p_mode` VARCHAR(20), IN `p_shipaddress_id` BIGINT(20), IN `p_customer_id` BIGINT(20), IN `p_customer_code` VARCHAR(20), IN `p_shipping_customer_name` VARCHAR(200), IN `p_shipping_customer_namekana` VARCHAR(200), IN `p_shipping_postcode` VARCHAR(50), IN `p_shipping_state` VARCHAR(50), IN `p_shipping_city` VARCHAR(50), IN `p_shipping_address` VARCHAR(500), IN `p_shipping_address2` VARCHAR(500), IN `p_shipping_phone` VARCHAR(50))
BEGIN
if(p_mode="C") THEN
	INSERT INTO tbl_customers_shipaddress (customer_id,customer_code,shipping_customer_name,shipping_customer_namekana,shipping_postcode, shipping_state,shipping_city,shipping_address, shipping_address2,shipping_phone
	,`shipaddress_id`,`create_date`,`modified_date`
	)
	VALUES (p_customer_id, p_customer_code,p_shipping_customer_name,p_shipping_customer_namekana,p_shipping_postcode,p_shipping_state,p_shipping_city,p_shipping_address,p_shipping_address2,p_shipping_phone
	,p_shipaddress_id,now(),NOW());
	
	
ELSE
	UPDATE 	tbl_customers_shipaddress 
	SET
		shipping_customer_name 		= p_shipping_customer_name,
		shipping_customer_namekana 	= p_shipping_customer_namekana,
		shipping_postcode 		= p_shipping_postcode,
		shipping_state 			= p_shipping_state,
		shipping_city 			= p_shipping_city,
		shipping_address 		= p_shipping_address,
		shipping_address2 		= p_shipping_address2,
		shipping_phone 			= p_shipping_phone
	WHERE 	
		shipaddress_id = p_shipaddress_id;	
		
END IF;
	
	
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_activechangemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_activechangemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_activechangemail`(IN `p_oldmailencode` VARCHAR(200), IN `p_newmailencode` VARCHAR(200))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.`email_encode`=p_oldmailencode and tbl_customers.`email2_encode` = p_newmailencode )) THEN	
			
		
		-- Thoa man dieu kien email moi nhap */
		-- Cap nhat mail moi luon	
		
		UPDATE `tbl_customers`
		 SET
			`tbl_customers`.`email` 	= `tbl_customers`.`email2`,
			`tbl_customers`.`email_encode`	=  p_newmailencode ,
			`tbl_customers`.`email2` 	= '',
			`tbl_customers`.`email2_encode`	= ''
		WHERE
			`tbl_customers`.`email_encode` = p_oldmailencode;
		
		/* Ghi log lai con dieu tra */
		update `tbl_sys_log_changeemail`
		set 
			`click_actived` = "1",
			`actived_date` = NOW()
		where `OldEmailEndCode` = p_oldmailencode and `NewEmailEnCode`=p_newmailencode ;
	
		SELECT 1 AS msg;
		select `customer_code` from `tbl_customers` where `email_encode` = p_newmailencode;
		
	ELSE	
		--  da kich ho
		SELECT 0 AS msg;	
		
	end if;
	
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_changeemail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_changeemail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_changeemail`(IN `p_customer_code` VARCHAR(13), IN `p_email` VARCHAR(200), IN `p_reemail` VARCHAR(200), IN `p_password` VARCHAR(50))
BEGIN
IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email AND tbl_customers.`passwords` = p_password )) THEN
	
	IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_reemail )) THEN	
		-- email moi nhap da ton tai 
		SELECT 0 AS msg;		
		
	ELSE	
		-- Thoa man dieu kien email moi nhap chua tung co va nhap dung pass hien tai */
		-- Cap nhat mail moi luon		
		
		UPDATE `tbl_customers`
		 SET
			`tbl_customers`.`email2` 	= p_reemail,	
			`tbl_customers`.`email2_encode` = SHA1(p_reemail)     			
		WHERE
			`tbl_customers`.`customer_code` = p_customer_code;
		
		/* Ghi log lai con dieu tra */
		INSERT INTO `tbl_sys_log_changeemail`(
		 `Customer_Code`,`OldEmail`,`OldEmailEndCode`,`NewEmail`,`NewEmailEnCode`,`created_date`)
		 VALUES (p_customer_code,p_email,SHA1(p_email),p_reemail,SHA1(p_reemail),NOW());
	
	
		SELECT 1 AS msg;
	END IF;
	
ELSE
	-- Nhap pass ko dung 
	SELECT 2 AS msg;
	
END IF;
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_changeemail_annebra` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_changeemail_annebra` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_changeemail_annebra`(IN `p_customer_code` VARCHAR(13), IN `p_email` VARCHAR(200), IN `p_reemail` VARCHAR(200), IN `p_password` VARCHAR(50))
BEGIN
IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email AND tbl_customers.`passwords` = p_password )) THEN
	
	IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_reemail )) THEN	
		-- email moi nhap da ton tai 
		SELECT 0 AS msg;		
		
	ELSE	
		-- Thoa man dieu kien email moi nhap chua tung co va nhap dung pass hien tai */
		-- Cap nhat mail moi luon		
		
		UPDATE `tbl_customers`
		 SET
			`tbl_customers`.`email` 	= p_reemail		     			
		WHERE
			`tbl_customers`.`customer_code` = p_customer_code;
		
		/* Ghi log lai con dieu tra */
		insert into `tbl_sys_log_changeemail`(
		 `Customer_Code`,`OldEmail`,`OldEmailEndCode`,`NewEmail`,`NewEmailEnCode`,`created_date`)
		 values (p_customer_code,p_email,SHA1(p_email),p_reemail,SHA1(p_reemail),NOW());
	
	
		SELECT 1 AS msg;
	end if;
	
ELSE
	-- Nhap pass ko dung 
	SELECT 2 AS msg;
	
end if;
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getcoupon_unused` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getcoupon_unused` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getcoupon_unused`(IN `p_customer_code` VARCHAR(13), IN `p_customer_month` VARCHAR(20))
BEGIN
DECLARE p_customer_rank VARCHAR(20) DEFAULT '';
select IFNULL(rank,'') into p_customer_rank from `tbl_customers` where `tbl_customers`.`customer_code`=p_customer_code;
	SET @selectStmt = CONCAT("SELECT * FROM `tbl_coupon`  WHERE 
			(
			`is_member` =0 
			OR 	(
					`is_member` =1 
					AND
					(tbl_coupon.`list_rank` LIKE '%д",p_customer_rank,"д%' 
					 OR tbl_coupon.`list_rank` LIKE '%дAllд%' 
					 OR tbl_coupon.`list_rank` LIKE '%дNotCheckд%' 
					 )
					AND
					 (tbl_coupon.`list_month` LIKE '%д",p_customer_month,"д%' 
					 OR tbl_coupon.`list_month` LIKE '%дAllд%' 
					 OR tbl_coupon.`list_month` LIKE '%дNotCheckд%' 
					 )
					AND			
					(
					( `customercode_from` <= '",p_customer_code,"' AND `customercode_to` >= '",p_customer_code,"')
					OR ( `customercode_from` ='' AND `customercode_to` = '')
					OR ( `customercode_from` <= '",p_customer_code,"' AND `customercode_to` = '')
					OR ( `customercode_from` = '' AND `customercode_to` >= '",p_customer_code,"')
					)
					AND
					(
					( `list_customercode` = '' )
					OR ( `list_customercode` LIKE '%г",p_customer_code,"г%' )
					)
				)
			)
			AND  CONVERT(NOW(), DATETIME)>=`startdate`
			AND  CONVERT(NOW(), DATETIME)<=`enddate`
			
			");
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;   
		
		
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup`(`p_customer_code` VARCHAR(13), `p_rank_code` VARCHAR(10))
BEGIN
	DECLARE iDefault_Type Varchar (4) default '';
	DECLARE _sys_rank_Type VARCHAR (4) DEFAULT '';
	if(p_rank_code='') then
		-- Neu rank cua customer rong thi dung ra la tinh toan lai rank, nhung  ma it khi co truong hop do
		-- Voi lai lam ton time ma chua co time lam
		-- Tam thoi gan lai cai rank thap nhat duoc thiet lap o bang rank cho no
		
		
		select  IFNULL(`rank`,'') into p_rank_code from `tbl_customers` WHERE `customer_code`=p_customer_code ;
		if(p_rank_code='') THEN
			SELECT `Rank_Code` INTO p_rank_code FROM `tbl_customer_rankup` WHERE `Rank_Display`=1 AND `Default_Type`=1 LIMIT 1;
			update  `tbl_customers`	set rank= p_rank_code WHERE `customer_code`=p_customer_code ;
		END IF;
	
		SELECT T.*, TBL_RANKUP2.Rank_Name AS rank_to_name
		FROM
		(
			SELECT A.*,
			tbl_customer_rankup_type.`RankTo`,
			tbl_customer_rankup_type.`CreatedDate`,
			tbl_customer_rankup_type.`RankMoney`,
			tbl_customer_rankup_type.`RankNumber`,
			tbl_customer_rankup_type.`RankType`
			FROM
			(	
				SELECT TBL_CUSTOMER.*,
				TBL_RANKUP.`Rank_Code`,
				TBL_RANKUP.`Rank_Name`,
				TBL_RANKUP.`Rank_Display` 
				 FROM
				(
					SELECT 
					tbl_customers.`customer_code`,
					tbl_customers.`rank`
					FROM `tbl_customers` WHERE `customer_code`=p_customer_code 
				) AS TBL_CUSTOMER
				LEFT JOIN (SELECT * FROM tbl_customer_rankup WHERE  tbl_customer_rankup.`Rank_Display`=1) AS TBL_RANKUP
				ON TBL_CUSTOMER.`rank` = `TBL_RANKUP`.`Rank_Code`			 
			) AS A
			LEFT JOIN `tbl_customer_rankup_type`
			ON A.`Rank_Code` = tbl_customer_rankup_type.`RankFrom`
		) AS T
		LEFT JOIN (SELECT * FROM tbl_customer_rankup WHERE  tbl_customer_rankup.`Rank_Display`=1) AS TBL_RANKUP2
		ON T.`RankTo` = `TBL_RANKUP2`.`Rank_Code`
		LIMIT 1;
	
	else
		SELECT T.*, TBL_RANKUP2.Rank_Name AS rank_to_name
		FROM
		(
			SELECT A.*,
			tbl_customer_rankup_type.`RankTo`,
			tbl_customer_rankup_type.`CreatedDate`,
			tbl_customer_rankup_type.`RankMoney`,
			tbl_customer_rankup_type.`RankNumber`,
			tbl_customer_rankup_type.`RankType`
			FROM
			(	
				SELECT 
				`Rank_Code`,
				`Rank_Name`,
				`Rank_Display` 
				FROM `tbl_customer_rankup`
				WHERE `Rank_Code` = p_rank_code
			) AS A
			LEFT JOIN `tbl_customer_rankup_type`
			ON A.`Rank_Code` = tbl_customer_rankup_type.`RankFrom`
		) AS T
		LEFT JOIN (SELECT * FROM tbl_customer_rankup WHERE  tbl_customer_rankup.`Rank_Display`=1) AS TBL_RANKUP2
		ON T.`RankTo` = `TBL_RANKUP2`.`Rank_Code`
		LIMIT 1;
	end if;
	
	SELECT `Default_Type` INTO _sys_rank_Type FROM `tbl_customer_rankup` WHERE Rank_Display=1 ORDER BY SeqNo ASC LIMIT 1;
	
	IF(_sys_rank_Type="1")THEN
		-- Chieu A-> E
		SELECT SUM(RankMoney) AS TTRankMoney FROM `tbl_customer_rankup_type` WHERE `RankFrom` <= p_rank_code;
	ELSE
		-- Chieu E-> A
		SELECT SUM(RankMoney) AS TTRankMoney FROM `tbl_customer_rankup_type` WHERE `RankFrom` >= p_rank_code;
	END IF;
	
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getrankup_byrankcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getrankup_byrankcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getrankup_byrankcode`(`p_rank_code` VARCHAR(10), `p_customer_code` VARCHAR(13))
BEGIN
	
	if(p_rank_code ='') then
			SELECT TBL_CUSTOMER.*,
			TBL_RANKUP.`Rank_Code`,
			TBL_RANKUP.`Rank_Name`,
			TBL_RANKUP.`Rank_Display` 
			 FROM
			(
				SELECT 
				tbl_customers.`customer_code`,
				tbl_customers.`rank`
				FROM `tbl_customers` WHERE `customer_code`=p_customer_code 
			) AS TBL_CUSTOMER
			LEFT JOIN (SELECT * FROM tbl_customer_rankup WHERE  tbl_customer_rankup.`Rank_Display`=1) AS TBL_RANKUP
			ON TBL_CUSTOMER.`rank` = `TBL_RANKUP`.`Rank_Code` ;
			 
		
	else
	-- update lai rank cho customer de 1 so cho can dung nhu backend...
		update `tbl_customers` set `rank`=p_rank_code where `customer_code`=p_customer_code;
	
		SELECT * 
		FROM  `tbl_customer_rankup` 
		WHERE `Rank_Code`=p_rank_code
		LIMIT 1;
		
	end if;
		
			
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_getSizePriceStockNum` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_getSizePriceStockNum` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_getSizePriceStockNum`(IN `p_list_goods_code` TEXT)
BEGIN
      SET @selectStmt2 = 'select * from (select p.goods_code,pd.RSeqNo, pd.color_code, pd.size_id, pd.size_code, pd.size_name,pd.product_detail_status
			  from tbl_products_details as pd ,tbl_products as p where p.product_code = pd.product_code ) as tmp
			LEFT JOIN
		( SELECT s.GoodCode,s.ColorCode,s.SizeCode,SUM(s.StockNum) as stock_num 
		  FROM tbl_stock_num as s group by s.GoodCode, s.colorcode,s.sizecode
		) as soton on tmp.goods_code=soton.GoodCode and tmp.color_code=soton.ColorCode and tmp.size_code=soton.SizeCode
WHERE tmp.goods_code IN ( ';
      SET @selectStmt2 = CONCAT(@selectStmt2,p_list_goods_code,') and tmp.product_detail_status = 0 
group by RSeqNo, color_code,size_code
order by tmp.goods_code, tmp.color_code asc');
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_login` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_login` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_login`(`p_user_name` VARCHAR(50), `p_password` VARCHAR(255))
BEGIN
 IF(EXISTS(SELECT * FROM tbl_customers WHERE email=p_user_name AND passwords = p_password and (customer_status=1 or customer_status=2) AND `isblack`!='1' )) THEN
  SELECT 1 AS success;
  SELECT * FROM tbl_customers WHERE tbl_customers.email=p_user_name AND tbl_customers.passwords = p_password and (tbl_customers.customer_status=1 OR tbl_customers.customer_status=2);
  SELECT count(*) as total_wish_list FROM tbl_wish_list,tbl_products WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id=(SELECT tbl_customers.customer_id FROM tbl_customers WHERE tbl_customers.email=p_user_name AND tbl_customers.passwords = p_password) ;
 ELSE
 
 IF(EXISTS(SELECT * FROM tbl_customers WHERE email=p_user_name AND passwords = p_password and (customer_status=1 or customer_status=2) AND `isblack`='1' )) THEN
	-- bi block
	SELECT -1 AS success; 
 ELSE
	SELECT 0 AS success;
 END IF;
  
 END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_shipaddress_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_shipaddress_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_shipaddress_add`(IN `dshipaddress_id` BIGINT(20), IN `dcustomer_id` VARCHAR(20), IN `dcustomer_code` VARCHAR(20), IN `dcustomer_name` VARCHAR(200), IN `dcustomer_namekana` VARCHAR(200), IN `dpost_code` VARCHAR(50), IN `dstate` VARCHAR(50), IN `dcity` VARCHAR(50), IN `daddress` VARCHAR(500), IN `daddress2` VARCHAR(500), IN `dphone` VARCHAR(50))
BEGIN
	-- DANNGUYEN add 2018-08-07 - D18073001 マリング商事 No0001-No0002--------------*/
	DECLARE d_isexist INT DEFAULT 0;
	SELECT COUNT(*) INTO d_isexist FROM tbl_customers_shipaddress WHERE customer_code=dcustomer_code AND shipping_customer_name=dcustomer_name
	AND shipping_customer_namekana=dcustomer_namekana AND shipping_postcode=dpost_code AND shipping_state=dstate
	AND shipping_city=dcity AND shipping_address=daddress AND shipping_address2=daddress2 AND shipping_phone=dphone;
	IF d_isexist < 1 THEN
		INSERT INTO tbl_customers_shipaddress(`shipaddress_id`,`customer_id`,`customer_code`,`shipping_customer_name`,`shipping_customer_namekana`,
		`shipping_postcode`,`shipping_state`,`shipping_city`,`shipping_address`,`shipping_address2`,`shipping_phone`)
		VALUES(dshipaddress_id,dcustomer_id,dcustomer_code,dcustomer_name,dcustomer_namekana,dpost_code,dstate,dcity,daddress,daddress2,dphone);
	END IF;
	SELECT LAST_INSERT_ID() AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_customer_withdraw` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_customer_withdraw` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_customer_withdraw`(`p_customer_code` VARCHAR(20), `p_modified_date` VARCHAR(40))
BEGIN
	-- Modified: 2019/09/30, chuyen p_customer_code tu kieu int sang kieu varchar
	-- de kieu int se co nhieu khach hang bi gan customer_status = -1
	UPDATE 	tbl_customers
	SET
		tbl_customers.email = '',
		tbl_customers.email_encode = '',
		tbl_customers.customer_status = -1,
		tbl_customers.modified_date = p_modified_date,
		tbl_customers.withdraw_date = now()
	WHERE
		tbl_customers.customer_code = p_customer_code;
	update tbl_orders
	SET
		tbl_orders.is_customer_withdraw = 1,
		tbl_orders.customer_withdraw_date = NOW()
	WHERE 	
		tbl_orders.customer_code = p_customer_code
		AND (
			is_customer_withdraw IS NULL
			OR is_customer_withdraw <> 1
		);
	DELETE FROM tbl_wish_list 
	WHERE tbl_wish_list.customer_id = (SELECT customer_id FROM tbl_customers WHERE customer_code = p_customer_code);
	SELECT 1 AS success;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deleteJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deleteJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deleteJamSync`(IN `p_table` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_table = '12') THEN
		DELETE FROM tbl_shop WHERE SeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
	IF(p_table = '65') THEN
		DELETE FROM tbl_customers WHERE SeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
	
	IF(p_table = '13') THEN
		DELETE FROM tbl_brands WHERE SeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
	IF(p_table = '14') THEN
		DELETE FROM tbl_products_category WHERE SeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
	IF(p_table = '37') THEN
		DELETE FROM tbl_products WHERE SeqNo = atData;
		DELETE FROM tbl_products_details WHERE RSeqNo = atData;
		DELETE FROM tbl_products_material WHERE RSeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
	IF(p_table = '348') THEN
		DELETE FROM `tbl_search_key` WHERE `search_key` = atData;
		SELECT 'ok' AS msg;
	END IF;
	IF(p_table = '183') THEN
		DELETE FROM `tbl_shape2` WHERE SeqNo = atData;
		SELECT 'ok' AS msg;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_export_extend_1` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_export_extend_1` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_export_extend_1`(IN `p_mode` INT)
BEGIN
DECLARE in_goods_code VARCHAR(30); 
DECLARE in_product_id INT(11); 
DECLARE in_color_code VARCHAR(20);
DROP TABLE IF EXISTS tblresult;
 CREATE TEMPORARY TABLE tblresult(
`id` bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `goods_color_code` varchar(255) DEFAULT NULL COMMENT 'id',
  `goods_name` varchar(255) DEFAULT NULL COMMENT 'title',
  `description` longtext COMMENT 'description',
  `availability` text,
  `econdition` text,
  `price` float DEFAULT NULL,
  `link` text,
  `images_link` text,
  `brand` varchar(255) DEFAULT NULL,
  `additional_images_link` longtext,
  `age_group` varchar(255) DEFAULT NULL,
  `color` varchar(255) DEFAULT NULL,
  `gender` varchar(50) DEFAULT NULL,
  `item_group_id` varchar(255) DEFAULT NULL,
  `google_product_categroy` text,
  `material` text,
  `pattern` varchar(255) DEFAULT NULL,
  `product_Type` varchar(255) DEFAULT NULL,
  `sale_price` float DEFAULT NULL,
  `sale_price_effective_date` text,
  `shipping` varchar(255) DEFAULT NULL,
  `shipping_weight` varchar(255) DEFAULT NULL,
  `size` text,
  `custom_Label_0` varchar(255) DEFAULT NULL,
  `custom_Label_1` varchar(255) DEFAULT NULL,
  `custom_Label_2` varchar(255) DEFAULT NULL,
  `custom_Label_3` varchar(255) DEFAULT NULL,
  `custom_Label_4` varchar(255) DEFAULT NULL
);
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
SET @selectStmtStrRun = CONCAT(@selectStmtStr, " ",@selectFromStmt, @selectGroupStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliverydatetime_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliverydatetime_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliverydatetime_add`(IN `listdeliverydate` TEXT, IN `listdeliverytime` TEXT, IN `listdeliveryrange` TEXT)
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_timename VARCHAR(255); 
DECLARE d_area_code INT;
DECLARE d_area_name VARCHAR(50);
DECLARE d_area_code_eng INT;
DECLARE d_area_name_eng text;
DECLARE d_days INT;
DECLARE d_shipping_range1 DECIMAL(10,2);
DECLARE d_shipping_range2 DECIMAL(10,2);
DECLARE d_shipping_range3 DECIMAL(10,2);
DECLARE d_shipping_range4 DECIMAL(10,2);
DECLARE d_created DATETIME;
DECLARE d_range1 float;
DECLARE d_range2 FLOAT;
DECLARE d_range3 FLOAT;
DECLARE d_range4 FLOaT;
DELETE FROM tbl_deliverydate WHERE 1=1;
WHILE INSTR(listdeliverydate,d_A)>0 DO
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_area_code = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_area_name = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_days = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_shipping_range1 = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_shipping_range2 = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_shipping_range3 = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_shipping_range4 = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_area_code_eng = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		SET d_index = INSTR(listdeliverydate,d_A);
		SET d_area_name_eng = SUBSTR(listdeliverydate,1,d_index-1);
		SET listdeliverydate = SUBSTR(listdeliverydate,d_index+1,CHAR_LENGTH(listdeliverydate)-d_index+1);
		
		INSERT INTO tbl_deliverydate(area_code,area_name,days,shipping_range1,shipping_range2,shipping_range3,shipping_range4,area_code_eng,area_name_eng)
		VALUES(d_area_code,d_area_name,d_days,d_shipping_range1,d_shipping_range2,d_shipping_range3,d_shipping_range4,d_area_code_eng,d_area_name_eng);
END WHILE;
DELETE FROM tbl_deliverytime WHERE 1=1;
SET d_index = 0;
WHILE INSTR(listdeliverytime,d_A)>0 DO
		SET d_index = INSTR(listdeliverytime,d_A);
		SET d_timename = SUBSTR(listdeliverytime,1,d_index-1);
		SET listdeliverytime = SUBSTR(listdeliverytime,d_index+1,CHAR_LENGTH(listdeliverytime)-d_index+1);
		SET d_index = INSTR(listdeliverytime,d_A);
		SET d_created = SUBSTR(listdeliverytime,1,d_index-1);
		SET listdeliverytime = SUBSTR(listdeliverytime,d_index+1,CHAR_LENGTH(listdeliverytime)-d_index+1);
		INSERT INTO tbl_deliverytime(NAME,created)
		VALUES(d_timename,d_created);
END WHILE;
DELETE FROM tbl_deliveryrange WHERE 1=1;
SET d_index = 0;
WHILE INSTR(listdeliveryrange,d_A)>0 DO
		SET d_index = INSTR(listdeliveryrange,d_A);
		SET d_range1 = SUBSTR(listdeliveryrange,1,d_index-1);
		SET listdeliveryrange = SUBSTR(listdeliveryrange,d_index+1,CHAR_LENGTH(listdeliveryrange)-d_index+1);
		SET d_index = INSTR(listdeliveryrange,d_A);
		SET d_range2 = SUBSTR(listdeliveryrange,1,d_index-1);
		SET listdeliveryrange = SUBSTR(listdeliveryrange,d_index+1,CHAR_LENGTH(listdeliveryrange)-d_index+1);
		SET d_index = INSTR(listdeliveryrange,d_A);
		SET d_range3 = SUBSTR(listdeliveryrange,1,d_index-1);
		SET listdeliveryrange = SUBSTR(listdeliveryrange,d_index+1,CHAR_LENGTH(listdeliveryrange)-d_index+1);
		INSERT INTO tbl_deliveryrange(range1,range2,range3)
		VALUES(d_range1,d_range2,d_range3);
END WHILE;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_export_setting_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_export_setting_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_export_setting_save`(`p_mode` VARCHAR(20), `p_id` BIGINT(11), `p_is_periodic` TINYINT(4), `p_host` VARCHAR(50), `p_folder` VARCHAR(100), `p_username` VARCHAR(50), `p_password` VARCHAR(50), `p_periodic` TINYINT(4), `p_filename` VARCHAR(50), `p_export_object` TINYINT(4), `p_day_export` VARCHAR(50), `p_time_export` VARCHAR(50))
BEGIN
  IF(p_mode = 'C') THEN
    INSERT INTO tbl_export_setting(is_periodic,host,folder,username,password,periodic,filename,export_object,day_export,time_export)
    VALUES(p_is_periodic,p_host,p_folder,p_username,p_password,p_periodic,p_filename,p_export_object,p_day_export,p_time_export);
  ELSE
    UPDATE tbl_export_setting
    SET
      tbl_export_setting.is_periodic = p_is_periodic,
      tbl_export_setting.host = p_host,
      tbl_export_setting.folder = p_folder,
      tbl_export_setting.username = p_username,
      tbl_export_setting.password = p_password,
      tbl_export_setting.periodic = p_periodic,
      tbl_export_setting.filename = p_filename,
      tbl_export_setting.export_object = p_export_object,
      tbl_export_setting.day_export = p_day_export,
      tbl_export_setting.time_export = p_time_export
    WHERE
      tbl_export_setting.id = p_id;
  END IF;
  SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_deliverydatetime_cord3_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_deliverydatetime_cord3_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_deliverydatetime_cord3_add`(IN `listdeliverytime` TEXT, IN `listdeliverydate1` TEXT, IN `listdeliverydate2` TEXT, IN `listdeliverydate3` TEXT, IN `listdeliverydate4` TEXT)
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_timename VARCHAR(255); 
DECLARE d_created DATETIME;
DECLARE d_area_code INT;
DECLARE d_area_name VARCHAR(50);
DECLARE d_days INT;
DECLARE d_shipping_range DECIMAL(10,2);
DELETE FROM tbl_deliverytime WHERE 1=1;
SET d_index = 0;
WHILE INSTR(listdeliverytime,d_A)>0 DO
		SET d_index = INSTR(listdeliverytime,d_A);
		SET d_timename = SUBSTR(listdeliverytime,1,d_index-1);
		SET listdeliverytime = SUBSTR(listdeliverytime,d_index+1,CHAR_LENGTH(listdeliverytime)-d_index+1);
		SET d_index = INSTR(listdeliverytime,d_A);
		SET d_created = SUBSTR(listdeliverytime,1,d_index-1);
		SET listdeliverytime = SUBSTR(listdeliverytime,d_index+1,CHAR_LENGTH(listdeliverytime)-d_index+1);
		INSERT INTO tbl_deliverytime(NAME,created)
		VALUES(d_timename,d_created);
END WHILE;
DELETE FROM tbl_deliverydate_cord3 WHERE 1=1;
SET d_index = 0;
WHILE INSTR(listdeliverydate1,d_A)>0 DO
		SET d_index = INSTR(listdeliverydate1,d_A);
		SET d_area_code = SUBSTR(listdeliverydate1,1,d_index-1);
		SET listdeliverydate1 = SUBSTR(listdeliverydate1,d_index+1,CHAR_LENGTH(listdeliverydate1)-d_index+1);
		SET d_index = INSTR(listdeliverydate1,d_A);
		SET d_area_name = SUBSTR(listdeliverydate1,1,d_index-1);
		SET listdeliverydate1 = SUBSTR(listdeliverydate1,d_index+1,CHAR_LENGTH(listdeliverydate1)-d_index+1);
		SET d_index = INSTR(listdeliverydate1,d_A);
		SET d_days = SUBSTR(listdeliverydate1,1,d_index-1);
		SET listdeliverydate1 = SUBSTR(listdeliverydate1,d_index+1,CHAR_LENGTH(listdeliverydate1)-d_index+1);
		SET d_index = INSTR(listdeliverydate1,d_A);
		SET d_shipping_range = SUBSTR(listdeliverydate1,1,d_index-1);
		SET listdeliverydate1 = SUBSTR(listdeliverydate1,d_index+1,CHAR_LENGTH(listdeliverydate1)-d_index+1);
		
		INSERT INTO tbl_deliverydate_cord3(method_code,method_name,area_code,area_name,days,shipping_range)
		VALUES(1,'佐川急便（普通便）',d_area_code,d_area_name,d_days,d_shipping_range);
END WHILE;
SET d_index = 0;
WHILE INSTR(listdeliverydate2,d_A)>0 DO
		SET d_index = INSTR(listdeliverydate2,d_A);
		SET d_area_code = SUBSTR(listdeliverydate2,1,d_index-1);
		SET listdeliverydate2 = SUBSTR(listdeliverydate2,d_index+1,CHAR_LENGTH(listdeliverydate2)-d_index+1);
		SET d_index = INSTR(listdeliverydate2,d_A);
		SET d_area_name = SUBSTR(listdeliverydate2,1,d_index-1);
		SET listdeliverydate2 = SUBSTR(listdeliverydate2,d_index+1,CHAR_LENGTH(listdeliverydate2)-d_index+1);
		SET d_index = INSTR(listdeliverydate2,d_A);
		SET d_days = SUBSTR(listdeliverydate2,1,d_index-1);
		SET listdeliverydate2 = SUBSTR(listdeliverydate2,d_index+1,CHAR_LENGTH(listdeliverydate2)-d_index+1);
		SET d_index = INSTR(listdeliverydate2,d_A);
		SET d_shipping_range = SUBSTR(listdeliverydate2,1,d_index-1);
		SET listdeliverydate2 = SUBSTR(listdeliverydate2,d_index+1,CHAR_LENGTH(listdeliverydate2)-d_index+1);
		
		INSERT INTO tbl_deliverydate_cord3(method_code,method_name,area_code,area_name,days,shipping_range)
		VALUES(2,'佐川急便（航空便）',d_area_code,d_area_name,d_days,d_shipping_range);
END WHILE;
SET d_index = 0;
WHILE INSTR(listdeliverydate3,d_A)>0 DO
		SET d_index = INSTR(listdeliverydate3,d_A);
		SET d_area_code = SUBSTR(listdeliverydate3,1,d_index-1);
		SET listdeliverydate3 = SUBSTR(listdeliverydate3,d_index+1,CHAR_LENGTH(listdeliverydate3)-d_index+1);
		SET d_index = INSTR(listdeliverydate3,d_A);
		SET d_area_name = SUBSTR(listdeliverydate3,1,d_index-1);
		SET listdeliverydate3 = SUBSTR(listdeliverydate3,d_index+1,CHAR_LENGTH(listdeliverydate3)-d_index+1);
		SET d_index = INSTR(listdeliverydate3,d_A);
		SET d_days = SUBSTR(listdeliverydate3,1,d_index-1);
		SET listdeliverydate3 = SUBSTR(listdeliverydate3,d_index+1,CHAR_LENGTH(listdeliverydate3)-d_index+1);
		SET d_index = INSTR(listdeliverydate3,d_A);
		SET d_shipping_range = SUBSTR(listdeliverydate3,1,d_index-1);
		SET listdeliverydate3 = SUBSTR(listdeliverydate3,d_index+1,CHAR_LENGTH(listdeliverydate3)-d_index+1);
		
		INSERT INTO tbl_deliverydate_cord3(method_code,method_name,area_code,area_name,days,shipping_range)
		VALUES(3,'ヤマト運輸（普通便）',d_area_code,d_area_name,d_days,d_shipping_range);
END WHILE;
SET d_index = 0;
WHILE INSTR(listdeliverydate4,d_A)>0 DO
		SET d_index = INSTR(listdeliverydate4,d_A);
		SET d_area_code = SUBSTR(listdeliverydate4,1,d_index-1);
		SET listdeliverydate4 = SUBSTR(listdeliverydate4,d_index+1,CHAR_LENGTH(listdeliverydate4)-d_index+1);
		SET d_index = INSTR(listdeliverydate4,d_A);
		SET d_area_name = SUBSTR(listdeliverydate4,1,d_index-1);
		SET listdeliverydate4 = SUBSTR(listdeliverydate4,d_index+1,CHAR_LENGTH(listdeliverydate4)-d_index+1);
		SET d_index = INSTR(listdeliverydate4,d_A);
		SET d_days = SUBSTR(listdeliverydate4,1,d_index-1);
		SET listdeliverydate4 = SUBSTR(listdeliverydate4,d_index+1,CHAR_LENGTH(listdeliverydate4)-d_index+1);
		SET d_index = INSTR(listdeliverydate4,d_A);
		SET d_shipping_range = SUBSTR(listdeliverydate4,1,d_index-1);
		SET listdeliverydate4 = SUBSTR(listdeliverydate4,d_index+1,CHAR_LENGTH(listdeliverydate4)-d_index+1);
		
		INSERT INTO tbl_deliverydate_cord3(method_code,method_name,area_code,area_name,days,shipping_range)
		VALUES(4,'ヤマト運輸（航空便）',d_area_code,d_area_name,d_days,d_shipping_range);
END WHILE;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Export_getProductListByWishListCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Export_getProductListByWishListCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Export_getProductListByWishListCustomer`(IN `p_search_key` TEXT, IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_attrName` VARCHAR(255), IN `p_sort` VARCHAR(255))
BEGIN
	
		
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_2(
		'tbl_products',
		'tbl_products_details',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
		
		
	-- get select fields from function
	SET @selectCountStmt = CONCAT("
	SELECT 
		tbl_products.product_id");
		
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_customers.first_name as first_name,
		tbl_customers.last_name as last_name,
		tbl_customers.email as email,
		tbl_products_details.color_code as color_code,
		tbl_products_details.color_code as color_name,
		tbl_products_details.color_code as size_code,
		tbl_products_details.color_code as size_name,
		tbl_products_details.color_code as color_slug_url,
		tbl_wish_list.mailing_date as mailing_date,
		DATE (tbl_wish_list.mailing_date) AS 'mailing_sent_date',
		TIME (tbl_wish_list.mailing_date) AS 'mailing_sent_time',
		tbl_products.product_id as product_id,
		tbl_products.goods_code as goods_code,
		tbl_products.product_name as product_name,
		tbl_products.product_image as product_image,
		tbl_products.product_id as slug_url,
		COUNT(*) AS WISH_TOTAL,
		", @getStockNumberStmt, "
	");
	
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_wish_list
			JOIN tbl_products
				ON tbl_wish_list.product_id 	= tbl_products.product_id 
			LEFT JOIN tbl_products_details
				ON tbl_products.SeqNo 		=  tbl_products_details.RSeqNo
			left JOIN tbl_customers
				ON tbl_wish_list.customer_id 	= tbl_customers.customer_id 
	
	");
	
	SET @whereStmt = "  
		WHERE 
		tbl_wish_list.color_code 	= tbl_products_details.color_code 
		AND (
			tbl_wish_list.size_code IS NULL 
			OR tbl_wish_list.size_code = tbl_products_details.size_code
		)
		AND  tbl_customers.customer_id!='' AND tbl_customers.email!=''
		";
	IF p_search_key 	IS NOT NULL AND p_search_key 	<> ''  THEN 
		SET @whereStmt = CONCAT(@whereStmt, "
		AND (
			tbl_products.goods_code LIKE '%",p_search_key,"%'
			OR tbl_products.product_name LIKE '%",p_search_key,"%'
			OR CONCAT(tbl_customers.first_name,tbl_customers.last_name) LIKE '%",p_search_key,"%'
			OR tbl_customers.email LIKE '%",p_search_key,"%'
		)
		");
	END IF;
	
	SET @groupByStmt = " 
	GROUP BY tbl_customers.customer_id, tbl_wish_list.product_id, tbl_wish_list.color_code, tbl_wish_list.size_code
	";
	
	SET @orderStmt = CONCAT(" 
	ORDER BY ", p_attrName ," ", p_sort ,"
	");
	
	SET @selectLimitStmt = CONCAT(" ");
	IF indexFrom <> -1 AND indexLimit <> -1 THEN
		SET @selectLimitStmt = CONCAT(" 
		LIMIT ",indexFrom,",",indexLimit, " ");
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmt, @selectFromStmt, @whereStmt, @groupByStmt, @orderStmt, @selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectCountStmt, @selectFromStmt, @whereStmt, @groupByStmt, "
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_extendecomerce_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_extendecomerce_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_extendecomerce_export`(IN `p_mode` INT)
BEGIN
	IF p_mode = 0 THEN
		SELECT			
			p.SeqNo,
			p.product_id,
			p.product_image,
			p.goods_code,
			p.slug_url,
			p.product_name,
			dt.color_code,
			dt.color_name,
			dt.color_slug_url,
			p.product_detail,
			p.product_status,
			p.is_comming_soon,
			p.is_pre_order,
			p.is_sold_out,
			e.econdition,
			p.price,
			p.brand_name 
		FROM 
			tbl_products p 
				INNER JOIN tbl_products_details dt
					ON p.SeqNo = dt.RSeqNo
				LEFT JOIN tbl_extend_ecomerce e 
					ON CONCAT(p.goods_code,'_',dt.color_code) = e.Goods_Color_Code 
		WHERE 
			p.product_status = 1 
		GROUP BY 
			p.SeqNo,
			p.product_id,
			p.product_image,
			p.goods_code,
			p.slug_url,
			p.product_name,
			dt.color_code,
			dt.color_name,
			dt.color_slug_url,
			p.product_detail,
			p.product_status,
			p.is_comming_soon,
			p.is_pre_order,
			p.is_sold_out,
			e.econdition,
			p.price,p.brand_name ;	
	ELSE
		SELECT		
			p.SeqNo,
			p.product_id,
			dt.color_code,
			p.product_image,
			p.goods_code,
			p.slug_url,
			p.product_name,
			dt.color_code,
			dt.color_name,
			dt.color_slug_url,
			p.product_detail,
			p.product_status,
			p.is_comming_soon,
			p.is_pre_order,
			p.is_sold_out,
			e.econdition,
			p.price,
			p.brand_name 
		FROM 
			tbl_products p 
				INNER JOIN tbl_products_details dt
					ON p.SeqNo = dt.RSeqNo
				LEFT JOIN tbl_extend_ecomerce e ON CONCAT(p.goods_code,'_',dt.color_code) = e.Goods_Color_Code 
		GROUP BY 
			p.SeqNo,
			p.product_id,
			p.product_image,
			p.goods_code,
			p.slug_url,
			p.product_name,
			dt.color_code,
			dt.color_name,
			dt.color_slug_url,
			p.product_detail,
			p.product_status,
			p.is_comming_soon,
			p.is_pre_order,
			p.is_sold_out,
			e.econdition,
			p.price,
			p.brand_name ;
END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getProductByListSeqNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getProductByListSeqNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getProductByListSeqNo`(IN `p_SeqNoList` LONGTEXT, IN `p_GoodsCodeList` TEXT, IN `p_shop_list` TEXT, IN `p_GoodsColorCode_list` TEXT, IN `p_mode` VARCHAR(20))
BEGIN
  DECLARE vseqno VARCHAR(20);
  DECLARE vgoodcode VARCHAR(20);
  DECLARE vi_actual_num BIGINT(20) DEFAULT 0;
  DECLARE vb_is_actual_num TINYINT(1) DEFAULT 0;
  DECLARE vb_is_actual_zero TINYINT(1) DEFAULT 0;
  DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
  SELECT actual_num, is_actual_num, is_actual_zero, is_shop_stock INTO vi_actual_num, vb_is_actual_num, vb_is_actual_zero, vb_is_shop_stock
  FROM tbl_settings;
  
  -- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
  IF vb_is_shop_stock = 0 THEN
    IF vb_is_actual_num = 1 THEN
      IF vb_is_actual_zero = 1 THEN
        SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.StockNum) - ',vi_actual_num,') ELSE SUM(s.StockNum) END AS stock_num');
      ELSEIF vb_is_actual_zero = 0 THEN
        SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.StockNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.StockNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
      END IF;
    ELSEIF vb_is_actual_num = 0 THEN
      SET @stock_stmt = 'CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE 0 END AS stock_num';
    END IF;
  ELSEIF vb_is_shop_stock = 1 THEN
    IF vb_is_actual_num = 1 THEN
     IF vb_is_actual_zero = 1 THEN
       SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum) - ',vi_actual_num,') ELSE SUM(s.KanoNum) END AS stock_num');
     ELSEIF vb_is_actual_zero = 0 THEN
       SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum) - ',vi_actual_num,') ELSE 0 END AS stock_num');
     END IF;
    ELSEIF vb_is_actual_num = 0 THEN
     SET @stock_stmt = 'CASE WHEN (SUM(s.KanoNum) > 0) THEN SUM(s.KanoNum) ELSE 0 END AS stock_num';
    END IF;
  ELSEIF vb_is_shop_stock = 2 THEN
    IF vb_is_actual_num = 1 THEN
     IF vb_is_actual_zero = 1 THEN
       SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum3) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum3) - ',vi_actual_num,') ELSE SUM(s.KanoNum3) END AS stock_num');
     ELSEIF vb_is_actual_zero = 0 THEN
       SET @stock_stmt = CONCAT('CASE WHEN ((SUM(s.KanoNum3) - ' ,vi_actual_num,') > 0) THEN (SUM(s.KanoNum3) - ',vi_actual_num,') ELSE 0 END AS stock_num');
     END IF;
    ELSEIF vb_is_actual_num = 0 THEN
     SET @stock_stmt = 'CASE WHEN (SUM(s.KanoNum3) > 0) THEN SUM(s.KanoNum3) ELSE 0 END AS stock_num';
    END IF;
  END IF;
  
  
  
  -- 1. GET PRODUCT INFO ---------------------------------------------------
  SET @selectStmt1 = CONCAT("SELECT 
    tbl_products.*, 
    (SELECT slug_url FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) AS brand_slug_url, 
    (SELECT 
      (CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
        tbl_brands.brand_name
      ELSE 
        tbl_brands.brand_name_display
      END) AS brand_name_display
    FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
    AS brand_brand_name , 
    (SELECT 
      (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
        tbl_products_category.Name
      ELSE 
        tbl_products_category.name_display
      END) AS name_display
    FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
    AS item_item_name 
  FROM 
    tbl_products 
  WHERE 
	 SeqNo IN (",p_SeqNoList,")");
  
  PREPARE stmt1 FROM @selectStmt1;
  EXECUTE stmt1;
  DEALLOCATE PREPARE stmt1;
  -- 2. GET PRODUCT DETAIL INFO ---------------------------------------------------
  
  
  SET @selectStmt = 
  CONCAT(
  "SELECT 
    pd.*,
    soton.*, 
    tbl_size.display_order, 
    CASE 
      WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
        pd.Individual_Color_Name
      WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
        pd.color_display
    ELSE  
      pd.color_name
      
    END AS color_display
    
  FROM 
    tbl_products_details AS pd
    LEFT JOIN (
      SELECT 
        s.ColorCode,
        s.GoodCode,
        ",@stock_stmt,"
      FROM 
        tbl_stock_num AS s 
      WHERE
        s.GoodCode in (",p_GoodsCodeList,") ");
  IF p_shop_list <> "'-1999'" THEN
    SET @selectStmt = CONCAT(@selectStmt, "
        AND s.ShopCode IN (",p_shop_list,") ");
  END IF;
  SET @selectStmt = CONCAT(@selectStmt, "
      GROUP BY s.colorcode,s.GoodCode
    ) AS soton 
      ON pd.color_code=soton.ColorCode 
      AND pd.product_goods_code=soton.GoodCode 
    left join tbl_size
      ON pd.size_code = tbl_size.size_code
  WHERE
    pd.RSeqNo IN (",p_SeqNoList,")
  ORDER BY 
    pd.product_goods_code ASC, 
    pd.color_code ASC, 
    tbl_size.display_order ASC, 
    pd.size_code ASC 
  ");
  
    
  PREPARE stmt FROM @selectStmt;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
  -- INSERT INTO tbl_sys_log(sys_log) VALUE(@selectStmt);
  
  
  -- 3. GET PRODUCT MATERIAL INFO ---------------------------------------------------
  SET @selectStmt2 = CONCAT("SELECT 
    * 
  FROM 
    tbl_products_material 
  WHERE 
    tbl_products_material.RSeqNo IN (",p_SeqNoList,")
  order by RSeqNo asc");
  PREPARE stmt2 FROM @selectStmt2;
  EXECUTE stmt2;
  DEALLOCATE PREPARE stmt2;
  -- 4 list all detail order by size
  
  SET @selectStmt3 = CONCAT("SELECT 
    * 
  FROM (
    SELECT 
      * 
    FROM 
      tbl_products_details 
    WHERE 
      tbl_products_details.RSeqNo IN (",p_SeqNoList,")
  ) AS pd
    LEFT JOIN (
      SELECT 
        tbl_size.display_order,
        tbl_size.`size_code` AS s_size_code 
      FROM 
        tbl_size
    ) AS s
      ON pd.size_code = s.s_size_code
  ORDER BY   
    pd.product_goods_code ASC");
PREPARE stmt3 FROM @selectStmt3;
  EXECUTE stmt3;
  DEALLOCATE PREPARE stmt3;
  -- 5. GET EXTEND PRODUCT 
  SET @selectStmt4 = CONCAT("SELECT * FROM tbl_extend_ecomerce WHERE goods_color_code  IN (",p_GoodsColorCode_list,")");
  PREPARE stmt4 FROM @selectStmt4;
  EXECUTE stmt4;
  DEALLOCATE PREPARE stmt4;
  
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_Product_getProductDetailsByGoodsCodeList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_Product_getProductDetailsByGoodsCodeList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_Product_getProductDetailsByGoodsCodeList`(IN `p_goods_code_list` LONGTEXT, IN `p_shop_list` TEXT)
BEGIN			
	IF (p_goods_code_list <> '') THEN				
		-- GET PRODUCT DETAIL INFO ---------------------------------------------------		
		SET @getStockNumberStmt1 = getStockNumberStmt(
				'pd',
				'product_goods_code',
				'color_code',
				'size_code',
				'',
				1,
				1,
				1,
				0,
				p_shop_list
		);
		SET @selectStmt = 
		CONCAT(
		"SELECT 
			pd.*, 
			pd.color_code as ColorCode,
			pd.size_code as SizeCode,
			tbl_size.size_description, 
			tbl_size.display_order, 
			CASE WHEN `color_displayorder` IS NULL THEN "'-1000'" ELSE `color_displayorder`  END AS displayorder,
			CASE 
				WHEN pd.Individual_Color_Name IS NOT NULL AND pd.Individual_Color_Name <> '' THEN 
					pd.Individual_Color_Name
				WHEN pd.color_display IS NOT NULL AND pd.color_display <> '' THEN 
					pd.color_display
			ELSE  
				pd.color_name
				
			END AS color_display,
			tbl_colors.color_html_code,
			
			", @getStockNumberStmt1,"
			
			
		FROM tbl_products_details AS pd
			left join tbl_size
				ON pd.size_code = tbl_size.size_code
			left join tbl_colors
				ON pd.color_code = tbl_colors.color_code
		WHERE
			pd.RSeqNo in ( 
				SELECT Seqno FROM tbl_products WHERE tbl_products.product_status=1 
				AND goods_code IN (",p_goods_code_list,")
			)
			and pd.product_detail_status= 0
		ORDER BY tbl_colors.color_displayorder ASC, pd.color_code ASC, tbl_size.display_order ASC, pd.size_code ASC ");						
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
				
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_FrontEnd_shop_getList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_FrontEnd_shop_getList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_FrontEnd_shop_getList`()
BEGIN
	SELECT 
		tbl_shop.shop_id,
		tbl_shop.shop_code,
		tbl_shop.shop_name,
		tbl_shop.shop_namekana,
		tbl_shop.create_date,
		tbl_shop.modified_date,
		tbl_shop.shop_status,
		tbl_shop.shop_able,
		tbl_shop.display_name,
		tbl_shop.postcode,
		tbl_shop.state,
		tbl_shop.city,
		tbl_shop.address,
		tbl_shop.address2,
		tbl_shop.shop_site,
		tbl_shop.tel,
		tbl_shop.fax,
		tbl_shop.note,
		tbl_shop.SeqNo,
		tbl_shop.RSeqNo,
		tbl_shop.TIMESTAMP,
		tbl_shop.shop_logo,
		tbl_shop.shop_header,
		(CASE WHEN display_name IS NULL OR display_name = '' THEN
			shop_name
		ELSE 
			display_name
		END) AS shop_display_name
	FROM
		tbl_shop 
	WHERE
		shop_status = 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBlogFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBlogFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBlogFontEnd`(IN `p_au` VARCHAR(10), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_blog			
			WHERE 
				status_ = 1
			");
			
	IF (p_au <> '') THEN
		SET @strSelect = CONCAT(@strSelect," AND author_ = '",p_au,"' ");	
	END IF;
	
	SET @strSelect = CONCAT(@strSelect," ORDER BY date_ DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT * FROM tbl_author ORDER BY `author_order` DESC, `author_` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBlogFontEndForSearch` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBlogFontEndForSearch` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBlogFontEndForSearch`(IN `p_au` VARCHAR(10), IN `p_search` VARCHAR(255), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_blog			
			WHERE 
				status_ = 1
			");
			
	IF (p_au <> '') THEN
		SET @strSelect = CONCAT(@strSelect," AND author_ = '",p_au,"' ");	
	END IF;
	
	IF (p_search <> '') THEN
		SET @strSelect = CONCAT(@strSelect," 
				AND (
					author_ LIKE '%",p_search,"%'
					OR short_ LIKE '%",p_search,"%'
					OR title_ LIKE '%",p_search,"%'
					OR content_ LIKE '%",p_search,"%'
				)"
				);	
	END IF;
	
	SET @strSelect = CONCAT(@strSelect," ORDER BY date_ DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT * FROM tbl_author ORDER BY `author_` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBrand`()
BEGIN
	SELECT
		tbl_brands.SeqNo,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		tbl_brands.is_show_pickup,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display
	FROM tbl_brands;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBrandWithCountProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBrandWithCountProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBrandWithCountProduct`()
BEGIN
	SELECT brand.*, pro.total FROM 
		( SELECT
		tbl_brands.SeqNo,
		tbl_brands.RSeqNo,
		tbl_brands.brand_id,
		tbl_brands.brand_name,
		tbl_brands.brand_menu_type,
		tbl_brands.hot_brand,
		tbl_brands.brand_code,
		tbl_brands.brand_banner,
		tbl_brands.TimeStamp,
		tbl_brands.create_date,
		tbl_brands.brand_memo,
		tbl_brands.brand_status,
		tbl_brands.group_id,
		tbl_brands.brand_logo,
		tbl_brands.slug_url,
		tbl_brands.ecsite,
		tbl_brands.show_order,
		tbl_brands.brand_header,
		tbl_brands.is_show_as_menu,
		(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
			tbl_brands.brand_name
		ELSE 
			tbl_brands.brand_name_display
		END) AS brand_name_display
		FROM tbl_brands ) AS brand
	LEFT JOIN (SELECT brand_code, COUNT(brand_code) AS total FROM tbl_products GROUP BY brand_code) AS pro
	ON brand.`brand_code` = pro.`brand_code`;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllBrandWithCountProductForSearch` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllBrandWithCountProductForSearch` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllBrandWithCountProductForSearch`(IN `p_search` VARCHAR(50))
BEGIN
	IF p_search IS NOT NULL AND p_search <> ''
	THEN
		
		SET @search = CONCAT("
		AND (
			brand.brand_code like '%",p_search,"%'
			OR brand.brand_name like '%",p_search,"%'
			OR brand.brand_name_display like '%",p_search,"%'
			OR brand.brand_katagana like '%",p_search,"%'
		)");
	ELSE
		SET @search = '';
	END IF;
	
	SET @selectStmtStrRun = CONCAT("
	SELECT brand.*, pro.total 
	FROM ( 
		SELECT
			tbl_brands.*,
			(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
				tbl_brands.brand_name
			ELSE 
				tbl_brands.brand_name_display
			END) AS name_display
		FROM tbl_brands 
	) AS brand
		LEFT JOIN (SELECT brand_code, COUNT(brand_code) AS total FROM tbl_products GROUP BY brand_code) AS pro
		ON brand.`brand_code` = pro.`brand_code`
	WHERE brand.brand_status = 1",@search, ' GROUP BY name_display ORDER BY name_display ASC');
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCampaignFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCampaignFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCampaignFontEnd`(IN `p_campaign_id` BIGINT, IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_campaign			
			WHERE status = 1 AND campaign_id <> ",p_campaign_id,"
			");
	SET @strSelect = CONCAT(@strSelect," ORDER BY enddate DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllCategoryBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllCategoryBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllCategoryBrand`(IN `p_set_status` INT(2))
BEGIN
	select * from tbl_products_category where tbl_products_category.IsDisplay=1 and tbl_products_category.IsShowAsMenu=1 order by tbl_products_category.OrderNumber asc;
	select * from tbl_brands;
	select * from 
	(Select * From tbl_set_product where tbl_set_product.set_status=p_set_status order by tbl_set_product.createdate desc LIMIT 6) as tmp,
	tbl_products where tmp.set_id=tbl_products.set_id and tbl_products.product_setmain = 1;
	select tbl_products_details.product_id,tbl_products_details.size_name,tbl_products_details.product_detail_price from
        (select tbl_products.product_id from 
	(Select tbl_set_product.set_id From tbl_set_product order by tbl_set_product.createdate LIMIT 6) as tmp,
	tbl_products where tmp.set_id= tbl_products.set_id) as tmp1,
        tbl_products_details where tmp1.product_id = tbl_products_details.product_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllGifts` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllGifts` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllGifts`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SELECT 	
	SUM(gd.`total_price_goods_wrapping`) + g.`gift_bag_price` AS total_price, g.* ,gd.`total_price_goods_wrapping`
	FROM 	tbl_gift AS g, tbl_gift_detail AS gd
	WHERE 	gift_status = 1
		AND g.`gift_id` = gd.`gift_id`
	GROUP BY g.`gift_id`
	ORDER BY g.show_order DESC, g.create_date DESC, g.gift_code ASC
	LIMIT indexFrom ,indexLimit;
	
	SELECT 	COUNT(*) as total_items
	FROM 	tbl_gift AS g, tbl_gift_detail AS gd
	WHERE 	gift_status = 1
		AND g.`gift_id` = gd.`gift_id`
	GROUP BY g.`gift_id`;
	-- SET @selectStr =  CONCAT("
	-- SELECT 	*
	-- FROM 	tbl_gift
	-- ");
	-- SET @whereStr = CONCAT(@strSelect,"
	-- WHERE
	-- 	1=1
	-- 	AND gift_status = 1
	-- ");
	-- 	SET @orderStr = CONCAT(@strSelect,"
	-- ORDER BY create_date DESC, gift_code ASC
	-- ");
	-- 
	-- SET @limitStr = CONCAT("
	-- LIMIT ", indexFrom, ",", indexLimit);
	-- 
	-- SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- PREPARE stmt FROM @selectStmtStrRun;
	-- EXECUTE stmt;
	-- DEALLOCATE PREPARE stmt;
	
	-- -- SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	-- PREPARE stmt2 FROM @selectStmtStr2;
	-- EXECUTE stmt2;
	-- DEALLOCATE PREPARE stmt2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllLookBookByBrandOrItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllLookBookByBrandOrItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllLookBookByBrandOrItemCode`(IN `p_brand_code` VARCHAR(50), IN `p_is_category` INT, IN `p_item_code` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	set @condition = concat("1 = 2");
	if p_brand_code is not null and p_brand_code != ''
	then
		set @condition = concat(@condition , "
			OR brand_related like '%," , p_brand_code , ",%'");
	end if;
	
	if p_is_category is not null and p_is_category = 1
	then
		IF p_item_code IS NOT NULL AND p_item_code != ''
		THEN
			SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
			FROM 	tbl_products_category 
			WHERE 	category_group_id = p_item_code
			INTO 	@itemcode_from_group_category;
			
			SET @code = @itemcode_from_group_category;
			WHILE @code != '' DO
				SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
				SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
				SET @condition = 
					CONCAT(@condition , "
					OR item_related LIKE '%," ,@tmp2, ",%' 
					");
			END WHILE;
		END IF;	
	else
		IF p_item_code IS NOT NULL AND p_item_code != ''
		THEN
			SET @condition = concat(@condition , "
				OR item_related like '%," , p_item_code , ",%'");
		END IF;
	end if;
	
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 AND set_status = 1 AND (" , @condition ,")
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllLookBookFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllLookBookFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllLookBookFontEnd`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:08/08/2018
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllLookBookFontEndByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllLookBookFontEndByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllLookBookFontEndByBrandCode`(IN `brandcode` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 and set_status = 1 and brand_code = '",brandcode,"' and show_in_brand_page = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllLookBookFontEndTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllLookBookFontEndTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllLookBookFontEndTop`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 and set_status = 1 and show_in_top = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllLookBook_brand_season` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllLookBook_brand_season` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllLookBook_brand_season`()
BEGIN
	SELECT 
		tbl_set_seasons.set_season_id AS set_season_id,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name,
		tbl_set_seasons.set_season_order,
		tbl_brands.brand_code,
		CASE 
			WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' 
			THEN tbl_brands.brand_name
			ELSE  tbl_brands.brand_name_display 
		END AS brand_name,
		tbl_brands.show_order
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
			LEFT JOIN tbl_brands ON tbl_brands.brand_code = tbl_set_of_products.brand_code
	WHERE 	tbl_set_of_products.set_type = 1 AND tbl_set_of_products.set_status = 1
	
	ORDER BY 
		tbl_brands.show_order DESC, 
		tbl_set_seasons.set_season_order DESC,
		tbl_set_of_products.set_order DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllMediaByCateIDFontEnd_Realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllMediaByCateIDFontEnd_Realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllMediaByCateIDFontEnd_Realmccoys`(IN `p_cate_id` INT, IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay news theo cate id
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_media			
			WHERE 
				media_status = 1
				AND (
					tbl_media.published_date IS NULL
					OR tbl_media.published_date <= CURRENT_TIMESTAMP()
				)
			");
	-- ===================================================
	IF 
		p_cate_id 	IS NOT NULL 
		AND p_cate_id 	<> 0
	THEN
		SET @strSelect = CONCAT(@strSelect," AND tbl_media.category_id ='",p_cate_id,"' ");
	END IF;
	
	-- ===================================================
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = CONCAT(@strSelect," and concat(year(date(media_date)),'年',month(date(media_date)),'月')='",p_cate_date,"' ");
	END IF;
	
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY media_date DESC, published_date DESC ");
	
	-- ===================================================
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	-- ===================================================
	SELECT *
	FROM tbl_media			
	WHERE 
		MEDIA_STATUS = 1
		AND (
			tbl_media.published_date IS NULL
			OR tbl_media.published_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY media_date DESC
	LIMIT 0,10;
		
	-- ===================================================		
	SELECT * FROM tbl_media_category WHERE MEDIA_STATUS=1 ORDER BY show_order ASC;
	
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT
		CONCAT(YEAR(DATE(media_date)),'年',MONTH(DATE(media_date)),'月') AS ngaythang
	FROM tbl_media
	WHERE 
		MEDIA_STATUS = 1
		AND (
			tbl_media.published_date IS NULL
			OR tbl_media.published_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY media_date DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllMediaByPressFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllMediaByPressFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllMediaByPressFontEnd`(IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:08/01/2019
 * Note: lay media theo press, lam cho dmc
 */
		
	SET @strSelect = "SELECT CONCAT('''',GROUP_CONCAT(t2.media_number SEPARATOR ''','''),'''') INTO @v_media_number FROM (";
	
	SET @strSelect =  CONCAT(@strSelect,"SELECT * FROM (");
	SET @strSelect = CONCAT(@strSelect,"SELECT tmp.media_number FROM (
		SELECT *
		FROM (SELECT * FROM tbl_media WHERE media_number IS NOT NULL AND media_number<>'' ORDER BY media_number, media_page) AS tmp2			
		GROUP BY tmp2.media_number ) AS tmp ");
	
	SET @strLimit = CONCAT("LIMIT ",indexFrom,",",indexLimit, " ");
	
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = concat(@strSelect,"
		Where concat(year(date(tmp.media_date)),'年',month(date(tmp.media_date)),'月')='",p_cate_date,"'");					
	END IF;
	SET @strSelect = CONCAT(@strSelect," ORDER BY tmp.media_date ");	
	SET @strSelect = CONCAT(@strSelect, @strLimit);
	
	SET @strSelect = CONCAT(@strSelect, ") AS t1 ");
	SET @strSelect = CONCAT(@strSelect, ") AS t2 ");
	
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @strSelect = 
		CONCAT("
			select * from tbl_media where media_number in
			(",@v_media_number,"
			) and media_status = 1
			order by media_date, media_number, media_page
			");
		
	-- ===================================================
	PREPARE stmt2 FROM @strSelect;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SET @strSelect = 
		CONCAT("
			select count(tmp.total_items) as total_items from (
			select 1 as total_items from tbl_media where media_number in
			(",@v_media_number,"
			) and media_status = 1
			group by media_number 
			order by media_number, media_page 
			) as tmp");
			
	PREPARE stmt3 FROM @strSelect;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllMediaCategoryFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllMediaCategoryFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllMediaCategoryFontEnd`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: dung cho dmc
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_media_category			
			WHERE status = 1
			");
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY show_order ASC");
	
	-- ===================================================
	SET @strLimit = CONCAT(" LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllNewsByCateIDFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllNewsByCateIDFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllNewsByCateIDFontEnd`(IN `p_cate_id` INT, IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay news theo cate id
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE 
				status = 1
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)
			");
	-- ===================================================
	IF 
		p_cate_id 	IS NOT NULL 
		AND p_cate_id 	<> 0
	THEN
		SET @strSelect = CONCAT(@strSelect," AND tbl_news.category_id ='",p_cate_id,"' ");
	END IF;
	
	-- ===================================================
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = CONCAT(@strSelect," and concat(year(date(news_date)),'年',month(date(news_date)),'月')='",p_cate_date,"' ");
	END IF;
	
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC, public_date DESC ");
	
	-- ===================================================
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	-- ===================================================
	SELECT *
	FROM tbl_news			
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY news_date DESC
	LIMIT 0,5;
		
	-- ===================================================		
	SELECT * FROM tbl_news_category WHERE STATUS=1 ORDER BY show_order ASC;
	
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT
		CONCAT(YEAR(DATE(news_date)),'年',MONTH(DATE(news_date)),'月') AS ngaythang
	FROM tbl_news
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY news_date DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllNewsByCateIDFontEnd_ier` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllNewsByCateIDFontEnd_ier` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllNewsByCateIDFontEnd_ier`(IN `p_cate_id` INT, IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay news theo cate id
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE 
				status = 1
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)
			");
	-- ===================================================
	IF 
		p_cate_id 	IS NOT NULL 
		AND p_cate_id 	<> 0
	THEN
		SET @strSelect = CONCAT(@strSelect," AND tbl_news.category_id ='",p_cate_id,"' ");
	END IF;
	
	-- ===================================================
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = CONCAT(@strSelect," and concat(year(date(news_date)),'年',month(date(news_date)),'月')='",p_cate_date,"' ");
	END IF;
	
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC, public_date DESC ");
	
	-- ===================================================
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	-- ===================================================
	SELECT *
	FROM tbl_news			
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY news_date DESC
	LIMIT 0,10;
		
	-- ===================================================		
	SELECT * FROM tbl_news_category WHERE STATUS=1 ORDER BY show_order ASC;
	
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT
		CONCAT(YEAR(DATE(news_date)),'年',MONTH(DATE(news_date)),'月') AS ngaythang
	FROM tbl_news
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY news_date DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllNewsByCateIDFontEnd_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllNewsByCateIDFontEnd_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllNewsByCateIDFontEnd_realmccoys`(IN `p_cate_id` INT, IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay news theo cate id
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE 
				status = 1
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)
			");
	-- ===================================================
	IF 
		p_cate_id 	IS NOT NULL 
		AND p_cate_id 	<> 0
	THEN
		SET @strSelect = CONCAT(@strSelect," AND tbl_news.category_id ='",p_cate_id,"' ");
	END IF;
	
	-- ===================================================
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = CONCAT(@strSelect," and concat(year(date(news_date)),'年',month(date(news_date)),'月')='",p_cate_date,"' ");
	END IF;
	
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC, public_date DESC ");
	
	-- ===================================================
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	-- ===================================================
	SELECT *
	FROM tbl_news			
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY news_date DESC
	LIMIT 0,5;
		
	-- ===================================================		
	SELECT distinct (keyword_list) FROM tbl_news where keyword_id !='' AND tbl_news.status = 1;
	
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT
		CONCAT(YEAR(DATE(news_date)),'年',MONTH(DATE(news_date)),'月') AS ngaythang
	FROM tbl_news
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY news_date DESC;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllNewsFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllNewsFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllNewsFontEnd`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:01/11/2018
 * Note: them store nay cho kh harmony
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE 
				status = 1
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)
			");
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllOrdererrorPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllOrdererrorPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllOrdererrorPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `dkey` VARCHAR(50), IN `dadvancedsearch` TEXT)
BEGIN
IF dkey=NULL THEN
SET dkey='';
END IF;
IF dadvancedsearch=NULL THEN 
SET dadvancedsearch='';
END IF;
IF dkey='' THEN 
	IF dadvancedsearch='' THEN
	SELECT * FROM tbl_orders_tmp WHERE isReal=0 ORDER BY tbl_orders_tmp.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
	SELECT COUNT(*) AS total_items FROM tbl_orders_tmp WHERE isReal=0;
	ELSE
		SET @selectStmt2 =CONCAT('SELECT * FROM tbl_orders_tmp where ',dadvancedsearch,' AND isReal=0 ORDER BY tbl_orders_tmp.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,status DESC ',';');
		SET @selectStmt3=CONCAT('SELECT COUNT(*) AS total_items FROM tbl_orders_tmp where ',dadvancedsearch,' AND isReal=0;');
		PREPARE stmt FROM @selectStmt2;
	      EXECUTE stmt;
	      DEALLOCATE PREPARE stmt; 	
		PREPARE stmt FROM @selectStmt3;
	      EXECUTE stmt;
	      DEALLOCATE PREPARE stmt; 	
	END IF;
ELSE
 IF dkey='%代金%' OR dkey='%引換%' OR dkey='%代引%' OR dkey='%代金引換%' THEN 
	-- 2017-11-21 -338-★★★
	SELECT * FROM tbl_orders_tmp  WHERE payment_method ='Cash' AND isReal=0
	 GROUP BY order_code
	 ORDER BY tbl_orders_tmp.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
	SELECT COUNT(*) AS total_items FROM tbl_orders_tmp  WHERE payment_method ='Cash' AND isReal=0
	GROUP BY order_code;
 ELSE 
	IF dkey='%クレジット%' OR dkey='%カード%' OR dkey='%クレジットカード%' THEN 
	-- 2017-11-21 -338-★★★
	SELECT * FROM tbl_orders_tmp  WHERE payment_method ='card' AND isReal=0
		 GROUP BY order_code
		 ORDER BY tbl_orders_tmp.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
	SELECT COUNT(order_code) AS total_items FROM tbl_orders_tmp  WHERE payment_method ='card' AND isReal=0;
		
	ELSE 
	SELECT * FROM tbl_orders_tmp  WHERE order_code LIKE dkey OR created_on LIKE dkey
	OR customer_code LIKE dkey OR customer_name LIKE dkey AND isReal=0
	 GROUP BY order_code
	 ORDER BY tbl_orders_tmp.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
	SELECT COUNT(order_code) AS total_items FROM tbl_orders_tmp WHERE order_code LIKE dkey OR created_on LIKE dkey
	OR customer_code LIKE dkey OR customer_name LIKE dkey AND isReal=0 ;
	
	END IF;
  END IF;
END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllOrderPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllOrderPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllOrderPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `dkey` VARCHAR(50), IN `dadvancedsearch` TEXT, IN `p_is_get_pre_oder` TINYINT)
BEGIN
	IF dkey = NULL THEN
		SET dkey='';
	END IF;
	IF dadvancedsearch = NULL THEN 
		SET dadvancedsearch = '';
	END IF;
	
	SET @getPreOrderStmt = "";
	IF p_is_get_pre_oder <> 1 THEN
		SET @getPreOrderStmt = " preorder <> 1 ";
	ELSE 
		SET @getPreOrderStmt = " preorder = 1 ";
	END IF;
	IF dkey = '' THEN 
		IF dadvancedsearch = '' THEN
			-- 2021/01/11 Cuc add left join tbl_customer , 864973372　ハイブリッジ　4Dブラックリスト顧客をECに連動させる (2021/01/08 ~ 2021/01/12)
			SET @selectStmt = CONCAT('
			SELECT 	tbl_orders.* , tbl_customers.isblack
			FROM 	tbl_orders 
			LEFT JOIN `tbl_customers`
			ON  tbl_orders.`customer_code` = tbl_customers.`customer_code`
			WHERE 	', @getPreOrderStmt,'
			ORDER BY created_on DESC, order_code DESC, tbl_orders.customer_name DESC, total_amount DESC, tbl_orders.status DESC			
			');
			SET @selectStmtCount = CONCAT('
			SELECT 	COUNT(*) AS total_items 
			FROM 	tbl_orders
			WHERE 	', @getPreOrderStmt,'
			');
		ELSE
			
			SET @selectStmt = CONCAT('
			
				SELECT 	od.* , tbl_customers.isblack
				FROM 	tbl_orders od
					LEFT JOIN tbl_order_detail odd
						ON od.order_id = odd.order_id
					LEFT JOIN `tbl_customers`
						ON od.`customer_code` = tbl_customers.`customer_code`
				WHERE 	
					', @getPreOrderStmt,'
					',dadvancedsearch,' 
				GROUP BY od.order_code 
				ORDER BY od.created_on DESC, od.order_code DESC, od.customer_name DESC, od.total_amount DESC, od.status DESC 
						
				');
			SET @selectStmtCount = CONCAT('
			SELECT 	COUNT(*) AS total_items From (select od.order_code
			FROM 	tbl_orders od
				LEFT JOIN tbl_order_detail odd
					ON od.order_id = odd.order_id
			WHERE 	
				', @getPreOrderStmt,'
				',dadvancedsearch,' GROUP BY od.order_code) as tmp ;');
		END IF;
	ELSEIF dkey = '%代金%' OR dkey = '%引換%' OR dkey = '%代引%' OR dkey = '%代金引換%' THEN 
		-- 2017-11-21 -338-★★★
		SET @selectStmt = CONCAT("
		SELECT 	tbl_orders.* , tbl_customers.isblack
		FROM 	tbl_orders 
		LEFT JOIN `tbl_customers`
			ON  tbl_orders.`customer_code` = tbl_customers.`customer_code` 
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='Cash'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, tbl_orders.customer_name DESC, total_amount DESC, tbl_orders.status DESC
		");
		SET @selectStmtCount = CONCAT("
		SELECT 	COUNT(*) AS total_items 
		FROM 	tbl_orders
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='Cash'
		GROUP BY order_code
		");
	ELSEIF dkey = '%クレジット%' OR dkey = '%カード%' OR dkey = '%クレジットカード%' THEN 
		-- 2017-11-21 -338-★★★
		
		SET @selectStmt = CONCAT("
		SELECT 	tbl_orders.* , tbl_customers.isblack
		FROM 	tbl_orders
		LEFT JOIN `tbl_customers`
			ON tbl_orders.`customer_code` = tbl_customers.`customer_code` 
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='card'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, tbl_orders.customer_name DESC, total_amount DESC, tbl_orders.status DESC 
		");
		
		SET @selectStmtCount = CONCAT("		
		SELECT 	COUNT(order_code) AS total_items
		FROM 	tbl_orders
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='card'
		");
	ELSE 
		SET @selectStmt = CONCAT("
		SELECT 	tbl_orders.* , tbl_customers.isblack
		FROM 	tbl_orders
		LEFT JOIN `tbl_customers`
			ON tbl_orders.`customer_code` = tbl_customers.`customer_code` 
		WHERE 
			", @getPreOrderStmt,"
			AND order_code LIKE '%",dkey,"%'
			OR tbl_orders.created_on LIKE '%",dkey,"%'
			OR tbl_orders.customer_code LIKE '%",dkey,"%'
			OR tbl_orders.customer_name LIKE '%",dkey,"%'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, tbl_orders.customer_name DESC, total_amount DESC, tbl_orders.status DESC
		");
		SET @selectStmtCount = CONCAT("			
		SELECT 	COUNT(order_code) AS total_items
		FROM 	tbl_orders
		WHERE
			", @getPreOrderStmt,"
			AND order_code LIKE '%",dkey,"%' 
			OR created_on LIKE '%",dkey,"%'
			OR customer_code LIKE '%",dkey,"%' 
			OR customer_name LIKE '%",dkey,"%'
		");
	END IF;
	
	-- INSERT INTO `tbl_sys_log`(`sys_log`) VALUES(@selectStmt);
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
	
	
	PREPARE stmt FROM @selectStmtCount;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
		/*
		IF dkey=NULL THEN
	SET dkey='';
	END IF;
	IF dadvancedsearch=NULL THEN 
	SET dadvancedsearch='';
	END IF;
	IF dkey='' THEN 
		IF dadvancedsearch='' THEN
		SELECT * FROM tbl_orders ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
		SELECT COUNT(*) AS total_items FROM tbl_orders;
		ELSE
			SET @selectStmt2 =CONCAT('SELECT * FROM tbl_orders where ',dadvancedsearch,' ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,status DESC ',';');
			SET @selectStmt3=CONCAT('SELECT COUNT(*) AS total_items FROM tbl_orders where ',dadvancedsearch,';');
			PREPARE stmt FROM @selectStmt2;
		      EXECUTE stmt;
		      DEALLOCATE PREPARE stmt; 	
			PREPARE stmt FROM @selectStmt3;
		      EXECUTE stmt;
		      DEALLOCATE PREPARE stmt; 	
		END IF;
	ELSE
	 IF dkey='%代金%' OR dkey='%引換%' OR dkey='%代引%' OR dkey='%代金引換%' THEN 
		-- 2017-11-21 -338-★★★
		SELECT * FROM tbl_orders  WHERE payment_method ='Cash'
		 GROUP BY order_code
		 ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
		SELECT COUNT(*) AS total_items FROM tbl_orders  WHERE payment_method ='Cash'
		GROUP BY order_code;
	 ELSE 
		IF dkey='%クレジット%' OR dkey='%カード%' OR dkey='%クレジットカード%' THEN 
		-- 2017-11-21 -338-★★★
		SELECT * FROM tbl_orders  WHERE payment_method ='card'
			 GROUP BY order_code
			 ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
		SELECT COUNT(order_code) AS total_items FROM tbl_orders  WHERE payment_method ='card';
			
		ELSE 
		SELECT * FROM tbl_orders  WHERE order_code LIKE dkey OR created_on LIKE dkey
		OR customer_code LIKE dkey OR customer_name LIKE dkey
		 GROUP BY order_code
		 ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
		SELECT COUNT(order_code) AS total_items FROM tbl_orders WHERE order_code LIKE dkey OR created_on LIKE dkey
		OR customer_code LIKE dkey OR customer_name LIKE dkey ;
		
		END IF;
	  END IF;
	END IF;
	*/
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllPressFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllPressFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllPressFontEnd`(IN `p_cate_date` VARCHAR(50), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay press theo cac media co cung media_number
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_media			
			WHERE media_status = 1
			");
			
	-- ===================================================
	IF 
		p_cate_date 	IS NOT NULL 
		AND p_cate_date <> ''
		AND p_cate_date <> 'all'
	THEN
		SET @strSelect = CONCAT(@strSelect," and concat(year(date(media_date)),'年',month(date(media_date)),'月')='",p_cate_date,"' ");
	END IF;
	
	-- ===================================================
	SET @strSelect = CONCAT(@strSelect," ORDER BY media_date DESC");
	
	-- ===================================================
	SET @strLimit = CONCAT(" LIMIT ",indexFrom,",",indexLimit, " ");
			
	-- ===================================================
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===================================================
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ===================================================
	SELECT *
	FROM tbl_media			
	WHERE media_status = 1 AND media_number IS NOT NULL AND media_number <> ''
	ORDER BY media_date DESC, media_number DESC, media_page ASC;
	
	-- ===================================================
	SELECT CONCAT(YEAR(DATE(media_date)),'年',MONTH(DATE(media_date)),'月') AS ngaythang
	FROM tbl_media			
	WHERE media_status = 1
	GROUP BY ngaythang
	ORDER BY media_date DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllProductByGoogleShopping` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllProductByGoogleShopping` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllProductByGoogleShopping`()
BEGIN
	DECLARE vb_googles_all_product TINYINT(1) DEFAULT 0;
	SELECT googles_all_product INTO vb_googles_all_product FROM tbl_settings_googleshopping WHERE 1=1 LIMIT 1;
	IF vb_googles_all_product=1 THEN
		SELECT tbl_products.`goods_code`
			,tbl_products.`product_name_display`
			,tbl_products.`brand_name`
			,CONCAT(IF(tbl_products.`gender_men`=1,'male',''),IF(tbl_products.`gender_women`=1,IF(tbl_products.`gender_men`=1,',female','female'),''),IF(tbl_products.`gender_unisex`=1,IF(tbl_products.`gender_men`=1 OR tbl_products.`gender_women`=1,',unisex','unisex'),'')) AS googles_gender
			,CONCAT(tbl_products.`product_detail`,tbl_products.`googles_description`) AS googles_description_product
			,tbl_products_details.`barcode`
			,tbl_products_details.`color_code`
			,IF(tbl_products_details.`color_display` IS NOT NULL AND tbl_products_details.`color_display`<>'',tbl_products_details.`color_display`,tbl_products_details.`color_name`) AS color_name
			,tbl_products_details.`size_code`
			,IF(tbl_products_details.`size_display` IS NOT NULL AND tbl_products_details.`size_display`<>'',tbl_products_details.`size_display`,tbl_products_details.`size_name`) AS size_name
			,tbl_products_details.`product_detail_price_no_tax`			
			,tbl_products_details.`product_detail_price`
			,tbl_products_details.`product_detail_saleoff_price_no_tax`
			,tbl_products_details.`product_detail_saleoff_price`
			,(SELECT GROUP_CONCAT(tbl_products_material.`MaterialName`) FROM tbl_products_material WHERE tbl_products_material.`RSeqNo`=tbl_products.SeqNo AND tbl_products_material.`color_code`=tbl_products_details.`color_code`) AS material_name
			,tbl_products.`googles_product_category_code`
			,tbl_products.`googles_product_type`
			,tbl_products.`googles_condition`
			,tbl_products.`googles_age_group`
			,tbl_products.`googles_color`
			,tbl_products.`googles_pattern`
			,tbl_products.`sale_off_product`
		FROM tbl_products,tbl_products_details 
		WHERE tbl_products.`SeqNo`=tbl_products_details.RSeqNo
		ORDER BY tbl_products.`goods_code`,tbl_products_details.`color_code`
		 LIMIT 10
		;
	ELSE
		SELECT tbl_products.`goods_code`
			,tbl_products.`product_name_display`
			,tbl_products.`brand_name`
			,CONCAT(IF(tbl_products.`gender_men`=1,'male',''),IF(tbl_products.`gender_women`=1,IF(tbl_products.`gender_men`=1,',female','female'),''),IF(tbl_products.`gender_unisex`=1,IF(tbl_products.`gender_men`=1 OR tbl_products.`gender_women`=1,',unisex','unisex'),'')) AS googles_gender
			,CONCAT(tbl_products.`product_detail`,tbl_products.`googles_description`) AS googles_description_product
			,tbl_products_details.`barcode`
			,tbl_products_details.`color_code`
			,IF(tbl_products_details.`color_display` IS NOT NULL AND tbl_products_details.`color_display`<>'',tbl_products_details.`color_display`,tbl_products_details.`color_name`) AS color_name
			,tbl_products_details.`size_code`
			,IF(tbl_products_details.`size_display` IS NOT NULL AND tbl_products_details.`size_display`<>'',tbl_products_details.`size_display`,tbl_products_details.`size_name`) AS size_name
			,tbl_products_details.`product_detail_price_no_tax`
			,tbl_products_details.`product_detail_price`
			,tbl_products_details.`product_detail_saleoff_price_no_tax`
			,tbl_products_details.`product_detail_saleoff_price`
			,(SELECT GROUP_CONCAT(tbl_products_material.`MaterialName`) FROM tbl_products_material WHERE tbl_products_material.`RSeqNo`=tbl_products.SeqNo AND tbl_products_material.`color_code`=tbl_products_details.`color_code`) AS material_name
			,tbl_products.`googles_product_category_code`
			,tbl_products.`googles_product_type`
			,tbl_products.`googles_condition`
			,tbl_products.`googles_age_group`
			,tbl_products.`googles_color`
			,tbl_products.`googles_pattern`
			,tbl_products.`sale_off_product`
		FROM tbl_products,tbl_products_details 
		WHERE tbl_products.`SeqNo`=tbl_products_details.RSeqNo
		AND tbl_products.`product_status`=1
		ORDER BY tbl_products.`goods_code`,tbl_products_details.`color_code`
		 LIMIT 10
		;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllProductPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllProductPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllProductPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `p_mode` VARCHAR(20))
BEGIN
	-- Modified: 2019/10/28, S19102874 有限会社hapuna＆Co．ハプナ
	-- Them phan lay gia tu tbl_products_details
	IF(p_mode = 'hidden') THEN
		SELECT tbl_products.*,(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo) as `product_detail_price`
		FROM tbl_products Where tbl_products.product_status = 2 ORDER BY tbl_products.create_date,tbl_products.goods_code DESC LIMIT p_skip,p_limit;
		SELECT COUNT(*) AS total_items FROM tbl_products Where tbl_products.product_status = 2;
	ELSE
		SELECT tbl_products.*,(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo) AS `product_detail_price` 
		FROM tbl_products Where tbl_products.product_status <> 2 or tbl_products.product_status is null ORDER BY tbl_products.create_date,tbl_products.goods_code DESC LIMIT p_skip,p_limit;
		SELECT COUNT(*) AS total_items FROM tbl_products Where tbl_products.product_status <> 2 or tbl_products.product_status is null;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllProducts_category` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllProducts_category` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllProducts_category`()
BEGIN
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		category_header
	FROM tbl_products_category;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllStockNumPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllStockNumPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllStockNumPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `dkey` VARCHAR(50))
BEGIN
	DECLARE dshop_lits TEXT DEFAULT '';
	DECLARE vt_kano TEXT DEFAULT '';
	DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	SELECT 
		`shop_list`,is_shop_stock 
		INTO dshop_lits,vb_is_shop_stock 
	FROM 
		`tbl_settings` 
	WHERE 1=1 
	LIMIT 1;
	IF vb_is_shop_stock = 2 THEN
		SET vt_kano = 'SUM(KanoNum3)as KanoNum,';
	ELSE
		SET vt_kano = 'SUM(KanoNum)as KanoNum,';
	END IF;
	SET dshop_lits=CONCAT("'",REPLACE(dshop_lits,",","','"),"'");
	IF dkey=NULL THEN
		SET dkey='';
	END IF;
	
	IF dkey='' THEN 
		SET @stoctStmt =CONCAT("
		SELECT 
			IFNULL(StockNum,0) 	as StockNum,
			IFNULL(KanoNum,0) 	as KanoNum,
			goods_code 		as GoodCode,
			product_name,
			color_code 		as ColorCode,
			color_name,
			size_code 		as SizeCode,
			size_name,
			ShopCode 
		FROM (
			SELECT 
				* 
			FROM (
				SELECT 
					g.goods_code,
					gdt.color_code,
					gdt.size_code,
					gdt.color_name,
					gdt.size_name,
					g.product_name 
				FROM 
					tbl_products as g,
					tbl_products_details as gdt 
				WHERE 
					g.SeqNo=gdt.RSeqNo
			) as mt
				LEFT JOIN (
					SELECT 
						",vt_kano,"
						GoodCode,
						ColorCode,
						SizeCode  
					FROM 
						tbl_stock_num  
					GROUP BY GoodCode,ColorCode,SizeCode
				) AS kn 
					ON kn.GoodCode = mt.goods_code AND kn.ColorCode = mt.color_code AND kn.SizeCode = mt.size_code
		) AS gmt 
			left join (
				SELECT 
					SUM(StockNum) as StockNum,
					ShopCode,
					GoodCode,
					ColorCode,
					SizeCode 
				FROM 
					tbl_stock_num 
				WHERE 
					1=1 
		");
		IF dshop_lits <> "''" THEN
			SET @stoctStmt =CONCAT(@stoctStmt,"
					AND ShopCode IN (",dshop_lits,") ");
		END IF;
		SET @stoctStmt =CONCAT(@stoctStmt,"
				GROUP BY GoodCode,ColorCode,SizeCode 
			) AS st
				ON st.GoodCode = gmt.goods_code AND st.ColorCode = gmt.color_code AND st.SizeCode=gmt.size_code
		ORDER BY GoodCode,ColorCode,SizeCode DESC
		");
		SET @stoctStmt1 =CONCAT(@stoctStmt," limit ", p_skip,",",p_limit);
		SET @stoctStmt2 =CONCAT("select count(*) as total_items from(",@stoctStmt,") as fn") ;
		-- INSERT INTO tbl_sys_log(sys_log) VALUES(@stoctStmt1);
		PREPARE stmt FROM @stoctStmt1;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		PREPARE stmt2 FROM @stoctStmt2;
		EXECUTE stmt2;
		DEALLOCATE PREPARE stmt2;
	ELSE
		  SET @stoctStmt =CONCAT("
			SELECT 
				IFNULL(StockNum,0) as StockNum,
				IFNULL(KanoNum,0) as KanoNum,
				goods_code as GoodCode,
				product_name,
				color_code as ColorCode,
				color_name,
				size_code as SizeCode,
				size_name,
				ShopCode 
			FROM
			(
				SELECT * 
				FROM (
					SELECT 
						g.goods_code,
						gdt.color_code,
						gdt.size_code,
						gdt.color_name,
						gdt.size_name,
						g.product_name 
					FROM 
						tbl_products as g,
						tbl_products_details as gdt 
					WHERE 
						g.SeqNo = gdt.RSeqNo 
						AND (
							g.goods_code like '",dkey,"'
							OR g.product_name like '",dkey,"'
							OR g.product_name_display like '",dkey,"'
						)
				) as mt
					LEFT JOIN (
						SELECT 
							",vt_kano,"
							GoodCode,
							ColorCode,
							SizeCode 
						FROM 
							tbl_stock_num  
						group by GoodCode,ColorCode,SizeCode
					) AS kn	
						ON kn.GoodCode = mt.goods_code AND kn.ColorCode = mt.color_code AND kn.SizeCode = mt.size_code
			) AS gmt LEFT JOIN (
				SELECT 
					SUM(StockNum) as StockNum,
					ShopCode,
					GoodCode,
					ColorCode,
					SizeCode 
				FROM 
					tbl_stock_num 
				WHERE 
					1 = 1 ");
		IF dshop_lits <> "''" THEN
			SET @stoctStmt =CONCAT(@stoctStmt," 
					AND ShopCode IN (",dshop_lits,") ");
		END IF;
		
		SET @stoctStmt =CONCAT(@stoctStmt," 
				GROUP BY GoodCode,ColorCode,SizeCode 
			)as st 
				ON st.GoodCode = gmt.goods_code AND st.ColorCode = gmt.color_code AND st.SizeCode=gmt.size_code
			ORDER BY GoodCode,ColorCode,SizeCode DESC");
			
			
		SET @stoctStmt1 =CONCAT(@stoctStmt," limit ", p_skip,",",p_limit);
		SET @stoctStmt2 =CONCAT("select count(*) as total_items from(",@stoctStmt,") as fn") ;
		
		-- INSERT INTO tbl_sys_log(sys_log) VALUES(@stoctStmt1);
		PREPARE stmt FROM @stoctStmt1;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		PREPARE stmt2 FROM @stoctStmt2;
		EXECUTE stmt2;
		DEALLOCATE PREPARE stmt2;
	END IF;
	SELECT vb_is_shop_stock AS is_shop_stock;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllRentalPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllRentalPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllRentalPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `dkey` VARCHAR(50), IN `dadvancedsearch` TEXT, IN `p_is_get_pre_oder` TINYINT)
BEGIN
	IF dkey = NULL THEN
		SET dkey='';
	END IF;
	IF dadvancedsearch = NULL THEN 
		SET dadvancedsearch = '';
	END IF;
	
	SET @getPreOrderStmt = "";
	IF p_is_get_pre_oder <> 1 THEN
		SET @getPreOrderStmt = " preorder <> 1 ";
	ELSE 
		SET @getPreOrderStmt = " preorder = 1 ";
	END IF;
	IF dkey = '' THEN 
		IF dadvancedsearch = '' THEN
			SET @selectStmt = CONCAT('
			SELECT 	* 
			FROM 	tbl_rental 
			WHERE 	', @getPreOrderStmt,'
			ORDER BY created_on DESC, order_code DESC, customer_name DESC, total_amount DESC, tbl_rental.status DESC
			');
			SET @selectStmtCount = CONCAT('
			SELECT 	COUNT(*) AS total_items 
			FROM 	tbl_rental
			WHERE 	', @getPreOrderStmt,'
			');
		ELSE
			
			SET @selectStmt = CONCAT('
			SELECT 	* 
			FROM 	tbl_rental od
				LEFT JOIN tbl_rental_detail odd
					ON od.order_id = odd.order_id
			WHERE 	
				', @getPreOrderStmt,'
				',dadvancedsearch,' 
			GROUP BY od.order_code 
			ORDER BY od.created_on DESC, od.order_code DESC, od.customer_name DESC, od.total_amount DESC, od.status DESC ;');
			SET @selectStmtCount = CONCAT('
			SELECT 	COUNT(*) AS total_items From (select od.order_code
			FROM 	tbl_rental od
				LEFT JOIN tbl_rental_detail odd
					ON od.order_id = odd.order_id
			WHERE 	
				', @getPreOrderStmt,'
				',dadvancedsearch,' GROUP BY od.order_code) as tmp ;');
		END IF;
	ELSEIF dkey = '%代金%' OR dkey = '%引換%' OR dkey = '%代引%' OR dkey = '%代金引換%' THEN 
		-- 2017-11-21 -338-★★★
		SET @selectStmt = CONCAT("
		SELECT 	* 
		FROM 	tbl_rental  
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='Cash'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, customer_name DESC, total_amount DESC, tbl_rental.status DESC
		");
		SET @selectStmtCount = CONCAT("
		SELECT 	COUNT(*) AS total_items 
		FROM 	tbl_rental
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='Cash'
		GROUP BY order_code
		");
	ELSEIF dkey = '%クレジット%' OR dkey = '%カード%' OR dkey = '%クレジットカード%' THEN 
		-- 2017-11-21 -338-★★★
		
		SET @selectStmt = CONCAT("
		SELECT 	* 
		FROM 	tbl_rental
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='card'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, customer_name DESC, total_amount DESC, tbl_rental.status DESC 
		");
		
		SET @selectStmtCount = CONCAT("		
		SELECT 	COUNT(order_code) AS total_items
		FROM 	tbl_rental
		WHERE 	
			", @getPreOrderStmt,"
			AND payment_method ='card'
		");
	ELSE 
		SET @selectStmt = CONCAT("
		SELECT 	* 
		FROM 	tbl_rental
		WHERE 
			", @getPreOrderStmt,"
			AND order_code LIKE '%",dkey,"%'
			OR created_on LIKE '%",dkey,"%'
			OR customer_code LIKE '%",dkey,"%'
			OR customer_name LIKE '%",dkey,"%'
		GROUP BY order_code
		ORDER BY created_on DESC, order_code DESC, customer_name DESC, total_amount DESC, tbl_rental.status DESC
		");
		SET @selectStmtCount = CONCAT("			
		SELECT 	COUNT(order_code) AS total_items
		FROM 	tbl_rental
		WHERE
			", @getPreOrderStmt,"
			AND order_code LIKE '%",dkey,"%' 
			OR created_on LIKE '%",dkey,"%'
			OR customer_code LIKE '%",dkey,"%' 
			OR customer_name LIKE '%",dkey,"%'
		");
	END IF;
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
	PREPARE stmt FROM @selectStmtCount;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
		/*
		IF dkey=NULL THEN
	SET dkey='';
	END IF;
	IF dadvancedsearch=NULL THEN 
	SET dadvancedsearch='';
	END IF;
	IF dkey='' THEN 
		IF dadvancedsearch='' THEN
		SELECT * FROM tbl_rental ORDER BY tbl_rental.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
		SELECT COUNT(*) AS total_items FROM tbl_rental;
		ELSE
			SET @selectStmt2 =CONCAT('SELECT * FROM tbl_rental where ',dadvancedsearch,' ORDER BY tbl_rental.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,status DESC ',';');
			SET @selectStmt3=CONCAT('SELECT COUNT(*) AS total_items FROM tbl_rental where ',dadvancedsearch,';');
			PREPARE stmt FROM @selectStmt2;
		      EXECUTE stmt;
		      DEALLOCATE PREPARE stmt; 	
			PREPARE stmt FROM @selectStmt3;
		      EXECUTE stmt;
		      DEALLOCATE PREPARE stmt; 	
		END IF;
	ELSE
	 IF dkey='%代金%' OR dkey='%引換%' OR dkey='%代引%' OR dkey='%代金引換%' THEN 
		-- 2017-11-21 -338-★★★
		SELECT * FROM tbl_rental  WHERE payment_method ='Cash'
		 GROUP BY order_code
		 ORDER BY tbl_rental.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
		SELECT COUNT(*) AS total_items FROM tbl_rental  WHERE payment_method ='Cash'
		GROUP BY order_code;
	 ELSE 
		IF dkey='%クレジット%' OR dkey='%カード%' OR dkey='%クレジットカード%' THEN 
		-- 2017-11-21 -338-★★★
		SELECT * FROM tbl_rental  WHERE payment_method ='card'
			 GROUP BY order_code
			 ORDER BY tbl_rental.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC ;
		SELECT COUNT(order_code) AS total_items FROM tbl_rental  WHERE payment_method ='card';
			
		ELSE 
		SELECT * FROM tbl_rental  WHERE order_code LIKE dkey OR created_on LIKE dkey
		OR customer_code LIKE dkey OR customer_name LIKE dkey
		 GROUP BY order_code
		 ORDER BY tbl_rental.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,STATUS DESC;
		SELECT COUNT(order_code) AS total_items FROM tbl_rental WHERE order_code LIKE dkey OR created_on LIKE dkey
		OR customer_code LIKE dkey OR customer_name LIKE dkey ;
		
		END IF;
	  END IF;
	END IF;
	*/
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllStylingFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllStylingFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllStylingFontEnd`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:27/04/2020
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products_other			
			WHERE 	set_type = 1 and set_status = 1
			ORDER BY create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllTopPage_frontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllTopPage_frontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllTopPage_frontend`()
BEGIN
	SELECT * FROM (
		SELECT 
			tpg.`top_page_g_id` AS top_page_g_id,
			tpg.`top_page_g_type` AS top_page_g_type,
			tp.`top_page_id` AS top_page_id,
			tp.`top_page_image` AS top_page_image,
			tp.`top_page_link` AS top_page_link,
			tp.`top_page_name` AS top_page_name,
			tp.`top_page_iframe` AS top_page_iframe,
			tp.`top_page_type` AS top_page_type,
			IF(tp.`top_page_order_num`=0,999999999,tp.`top_page_order_num`) AS top_page_order_num,			
			tpg.`top_page_g_order_num` AS top_page_g_order_num
		FROM `tbl_top_page` AS tp,`tbl_top_page_group` AS tpg WHERE tp.`top_page_g_id`=tpg.`top_page_g_id`
			AND tpg.`top_page_g_status`=1 
			) AS tmp
	ORDER BY tmp.`top_page_g_order_num`,tmp.`top_page_g_id`,tmp.`top_page_order_num`;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAllVoiceFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAllVoiceFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAllVoiceFontEnd`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_voice			
			WHERE status = 1
			");
	SET @strSelect = CONCAT(@strSelect," ORDER BY voice_date DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBasicInfoAllCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBasicInfoAllCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBasicInfoAllCustomer`(IN `p_customer_code` VARCHAR(20))
BEGIN
	IF p_customer_code IS NOT NULL AND p_customer_code <> ''
	THEN
		SET @condition = CONCAT("WHERE tbl_customers.customer_code 		= '" ,p_customer_code, "'");
	ELSE
		SET @condition = "";
	END IF;
	
	set @selectStmtStrRun = concat("
	SELECT 
		customer_code,
		CASE WHEN tbl_customers.customer_nickname IS NULL OR tbl_customers.customer_nickname = '' THEN
			tbl_customers.customer_nickname
		ELSE 
			tbl_customers.customer_name
		END AS customer_name_display,
		first_name,
		last_name
	FROM tbl_customers
	",@condition);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBasicInfoAllProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBasicInfoAllProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBasicInfoAllProduct`(IN `p_goods_code` VARCHAR(50))
BEGIN
	if p_goods_code is not null and p_goods_code <> ''
	then
		set @condition = concat("AND tbl_products.goods_code 		= '" ,p_goods_code, "'");
	else
		set @condition = "";
	end if;
	
	SET @selectStmtStrRun = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( 
		SELECT 	
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0
			",@condition,"
			AND tbl_products.is_color_show			= 0 
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code  
			) AS all_product  UNION   
		SELECT 	
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			",@condition,"
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS product_info  
	) AS product_info_ok");
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getAll_ExtendProductPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getAll_ExtendProductPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getAll_ExtendProductPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_shop_list` VARCHAR(1000))
BEGIN
DECLARE p_stock_stmt 		VARCHAR(1000);
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
SELECT 
		actual_num, 
		is_actual_num, 
		is_actual_zero, 
		is_shop_stock 
	INTO 
		vi_actual_num, 
		vb_is_actual_num, 
		vb_is_actual_zero, 
		vb_is_shop_stock
	FROM 	tbl_settings;
	
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_shop_stock = 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END AS stock_num
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END AS stock_num
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			';
		END IF;
	ELSEIF vb_is_shop_stock = 1 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN 
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,') 
						ELSE 
							SUM(tbl_stock_num.KanoNum) 
						END AS stock_num
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN 
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,') 
						ELSE 
							0 
						END AS stock_num
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN 
							SUM(tbl_stock_num.KanoNum) 
						ELSE 
							0 
						END AS stock_num
			';
		END IF;
	ELSEIF vb_is_shop_stock = 2 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN 
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,') 
						ELSE 
							SUM(tbl_stock_num.KanoNum3) 
						END AS stock_num
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum3) - ' ,vi_actual_num,') > 0) THEN 
							(SUM(tbl_stock_num.KanoNum3) - ',vi_actual_num,') 
						ELSE 
							0 
						END AS stock_num
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum3) > 0) THEN 
							SUM(tbl_stock_num.KanoNum3) 
						ELSE 
							0 
						END AS stock_num
			';
		END IF;
	END IF;	
	
	SET @stuckNumberByColorStmt = CONCAT("
			LEFT JOIN (
				SELECT 
					GoodCode,
					ColorCode,",
					p_stock_stmt,"
				FROM 
					tbl_stock_num ");
	IF p_shop_list <> "'-1999'" THEN
		SET @stuckNumberByColorStmt = CONCAT(@stuckNumberByColorStmt, "
				WHERE 	ShopCode IN (",   p_shop_list ,") ");
	END IF;
	SET @stuckNumberByColorStmt = CONCAT(@stuckNumberByColorStmt, "
				GROUP BY GoodCode, ColorCode
			) AS stock_num_info 
				ON stock_num_info.GoodCode = dt.product_goods_code
				AND stock_num_info.ColorCode = dt.color_code ");
SET @strSelect = 'SELECT p.product_image_details,p.product_id,dt.color_code,p.product_image,p.goods_code,p.product_name,dt.color_name,p.product_detail,p.product_status,
  p.is_comming_soon,p.is_pre_order,p.is_sold_out,e.econdition,dt.product_detail_price as price,(SELECT 
      (CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '''' THEN
        tbl_brands.brand_name
      ELSE 
        tbl_brands.brand_name_display
      END)
    FROM tbl_brands WHERE tbl_brands.brand_id = p.brand_id) 
    AS brand_name,stock_num FROM tbl_products p INNER JOIN tbl_products_details dt
  ON p.SeqNo = dt.RSeqNo';
SET @selectGroupby = ' GROUP BY p.product_id,dt.color_code,p.product_image,p.goods_code,p.product_name,dt.color_name,p.product_detail,p.product_status,
  p.is_comming_soon,p.is_pre_order,p.is_sold_out,e.econdition,p.price,p.brand_name,stock_num ';
SET @selectLimit = CONCAT(' LIMIT ',p_skip,',',p_limit);
SET @leftjoinextend = ' LEFT JOIN tbl_extend_ecomerce e ON CONCAT(p.goods_code,''_'',dt.color_code) = e.Goods_Color_Code ';
SET @wherecalse = '';
IF(p_keyword <>'') THEN
SET @wherecalse = CONCAT('  WHERE p.product_name like CONCAT(''%'',LOWER(TRIM(''',p_keyword,''')),''%'') or p.goods_code like CONCAT(''%'',LOWER(TRIM(''',p_keyword,''')),''%'') ');
END IF;
INSERT INTO tbl_sys_log(tbl_sys_log.sys_action) VALUES('1');
SET @strSelect1 = CONCAT(@strSelect,@stuckNumberByColorStmt,@leftjoinextend,@wherecalse,@selectGroupby,@selectLimit);
INSERT INTO tbl_sys_log(tbl_sys_log.sys_action) VALUES(@strSelect1);
PREPARE stmt1 FROM @strSelect1;
EXECUTE stmt1;
SET @strSelect2 = CONCAT('SELECT COUNT(*) AS total_items From (',@strSelect,@stuckNumberByColorStmt,@leftjoinextend,@wherecalse,@selectGroupby,') as total_tbl');
PREPARE stmt2 FROM @strSelect2;
EXECUTE stmt2;
DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getBrandByListBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getBrandByListBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getBrandByListBrandCode`(IN `p_lst_brand_code` TEXT, IN `p_first_character` VARCHAR(10))
BEGIN
	IF p_lst_brand_code <> 'all' THEN
		SET @condition = CONCAT(" WHERE brand_code IN (",p_lst_brand_code,") ");
	ELSE 
		SET @condition = " WHERE 1=1 ";
	END IF;
	
	
	IF p_first_character <> '' THEN
		IF p_first_character <> 'not_all' THEN	
		SET @condition = CONCAT(@condition," AND SUBSTRING(brand_name_display, 1, 1) = '",p_first_character,"' ");
		ELSE
		SET @condition = CONCAT(@condition," AND FIND_IN_SET(SUBSTRING(brand_name_display, 1, 1),'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,S,T,U,V,W,X,Y,Z') =0 ");
		END IF;
	END IF;
	
	SET @strSelect = CONCAT("SELECT 
			tbl_brands.SeqNo,
			tbl_brands.RSeqNo,
			tbl_brands.brand_id,
			tbl_brands.brand_name,
			tbl_brands.brand_menu_type,
			tbl_brands.hot_brand,
			tbl_brands.brand_code,
			tbl_brands.brand_banner,
			tbl_brands.TimeStamp,
			tbl_brands.create_date,
			tbl_brands.brand_memo,
			tbl_brands.brand_status,
			tbl_brands.group_id,
			tbl_brands.brand_logo,
			tbl_brands.slug_url,
			tbl_brands.ecsite,
			tbl_brands.show_order,
			tbl_brands.brand_header,
			tbl_brands.is_show_as_menu,
			tbl_brands.is_show_pickup,
			(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
				tbl_brands.brand_name
			ELSE 
				tbl_brands.brand_name_display
			END) AS brand_name_display
		FROM tbl_brands ",@condition);
	 -- INSERT `tbl_sys_log`(`sys_log`)VALUES(@strSelect);
	PREPARE stmt FROM @strSelect;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getGiftBagByGiftCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getGiftBagByGiftCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getGiftBagByGiftCode`(IN `p_gift_code` VARCHAR(200), IN `p_shop_list` VARCHAR(1000))
BEGIN
       -- ===========================================================================================
	SET @getStockNumberStmt1 = getStockNumberStmt(
			'pd',
			'product_goods_code',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shop_list
	);
	SET @selectStmt = 
	CONCAT(
	"
	SELECT 
		tbl_gift.*, 
		pd.*,
		tbl_p.*,
		", @getStockNumberStmt1,",
		CASE 
			WHEN tbl_p.product_name_display IS NULL OR tbl_p.product_name_display = '' THEN 
				tbl_p.product_name 
		ELSE  
			tbl_p.product_name_display 
		END AS product_product_name_display
	FROM 
		tbl_gift
		INNER JOIN tbl_products_details pd
			ON pd.product_goods_code = tbl_gift.gift_bag_code
		INNER JOIN tbl_products tbl_p
			ON tbl_p.SeqNo = pd.RSeqNo
	WHERE 
		tbl_gift.gift_code = '", p_gift_code,"'
		AND tbl_p.product_status=1 
		AND pd.product_detail_status= 0
	GROUP BY pd.product_goods_code ");
        INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectGiftProductBagStmt = 
	CONCAT(
	"
	SELECT 
		tbl_gift_detail.*, 
		tbl_gift_detail.goods_code AS gift_bag_for_product_code, 
		pd.*,
		tbl_p.*,
		", @getStockNumberStmt1,",
		CASE 
			WHEN tbl_p.product_name_display IS NULL OR tbl_p.product_name_display = '' THEN 
				tbl_p.product_name 
		ELSE  
			tbl_p.product_name_display 
		END AS product_product_name_display
	FROM 
		tbl_gift_detail
		INNER JOIN tbl_products_details pd
			ON pd.product_goods_code = tbl_gift_detail.wrapping_bag_code
		INNER JOIN tbl_products tbl_p
			ON tbl_p.SeqNo = pd.RSeqNo
		INNER JOIN tbl_gift 
			ON tbl_gift_detail.gift_code = tbl_gift.gift_code
	WHERE 
		tbl_gift_detail.gift_code = '", p_gift_code,"'
		AND tbl_p.product_status=1 
		AND pd.product_detail_status= 0
	GROUP BY pd.product_goods_code
	ORDER BY 
		tbl_gift_detail.line_no ASC");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
	
	PREPARE stmtGiftProductBag FROM @selectGiftProductBagStmt ;
	EXECUTE stmtGiftProductBag;
	DEALLOCATE PREPARE stmtGiftProductBag;
		
		
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getGiftInfoById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getGiftInfoById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getGiftInfoById`(IN `p_gift_id` BIGINT)
BEGIN
	SELECT * FROM tbl_gift
	WHERE gift_id = p_gift_id;
	-- ------------------------------------------------------------------------------------------------------------
	SELECT * FROM tbl_gift_detail
	WHERE gift_id = p_gift_id
	order by line_no asc;
	-- ------------------------------------------------------------------------------------------------------------
	
	SELECT * FROM tbl_gift_product_detail
	WHERE gift_id = p_gift_id;
	
	
/*
		-- ------------------------------------------------------------------------------------------------------------
		Select * From (
			SELECT * FROM tbl_products_details 
			WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)
		) as pd
			LEFT JOIN (
				Select 
					tbl_size.display_order,
					tbl_size.`size_code` as s_size_code 
				from tbl_size
			) as s ON pd.size_code = s.s_size_code
		order by pd.color_code asc, s.display_order ASC, pd.size_code asc;
		-- ------------------------------------------------------------------------------------------------------------
		SELECT 
			tbl_products_category.Name 
		FROM 
			tbl_products_category 
		WHERE ItemCode = (select ItemCode from tbl_products where product_id = p_product_id);
		-- ------------------------------------------------------------------------------------------------------------
		-- order theo size
		Select * From (
			SELECT * FROM tbl_products_details 
			WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)
		) as pd
			LEFT JOIN (
				Select 
					tbl_size.display_order,
					tbl_size.`size_code` as s_size_code 
				from tbl_size
			) as s
				ON pd.size_code = s.s_size_code
		order by s.display_order,pd.size_code asc;
		*/
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getGiftProductByGiftCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getGiftProductByGiftCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getGiftProductByGiftCode`(IN `p_gift_code` VARCHAR(200), IN `p_shop_list` VARCHAR(1000))
BEGIN
       -- ===========================================================================================
        SELECT 	*
        FROM 	tbl_gift
        WHERE 	gift_code 	= p_gift_code
		and gift_status = 1;
       -- ===========================================================================================
  	/* SELECT 	*
	FROM 	tbl_gift_detail
			LEFT JOIN tbl_products
				ON tbl_products.goods_code = tbl_gift_detail.goods_code
				AND tbl_products.product_status = 1
	
	; */
	SELECT 	*
	FROM 	tbl_gift_detail
	where 	gift_code = p_gift_code;
       -- ===========================================================================================
        /* SELECT 
		tbl_gift_product_detail.*, 
		pd.*,
		tbl_p.*,
		'10' AS stock_num,
		
		
		CASE 
			WHEN tbl_p.product_name_display IS NULL OR tbl_p.product_name_display = '' THEN 
				tbl_p.product_name 
		ELSE  
			tbl_p.product_name_display 
		END AS product_product_name_display
	FROM 
		tbl_gift_product_detail
		INNER JOIN tbl_products_details pd
			ON pd.product_goods_code = tbl_gift_product_detail.goods_code
				AND pd.color_code = tbl_gift_product_detail.color_code
				AND pd.size_code = tbl_gift_product_detail.size_code
		INNER JOIN tbl_products tbl_p
			ON tbl_p.SeqNo = pd.RSeqNo
		INNER JOIN tbl_gift 
			ON tbl_gift_product_detail.gift_code = tbl_gift.gift_code
	WHERE 
		tbl_gift_product_detail.gift_code = p_gift_code
		AND tbl_p.product_status=1 
		AND pd.product_detail_status= 0
	GROUP BY pd.product_goods_code, pd.color_code, pd.size_code 	
	ORDER BY 
		tbl_gift_product_detail.line_no ASC,
		tbl_gift_product_detail.color_code ASC,
		tbl_gift_product_detail.size_code ASC;
	*/
		
		
	
	
	SET @getStockNumberStmt1 = getStockNumberStmt(
			'pd',
			'product_goods_code',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shop_list
	);
	SET @selectStmt = 
	CONCAT(
	"
	SELECT 
		tbl_gift_product_detail.*, 
		pd.*,
		tbl_p.*,
		", @getStockNumberStmt1,",
		
		
		CASE 
			WHEN tbl_p.product_name_display IS NULL OR tbl_p.product_name_display = '' THEN 
				tbl_p.product_name 
		ELSE  
			tbl_p.product_name_display 
		END AS product_product_name_display
	FROM 
		tbl_gift_product_detail
		INNER JOIN tbl_products_details pd
			ON pd.product_goods_code = tbl_gift_product_detail.goods_code
				AND pd.color_code = tbl_gift_product_detail.color_code
				AND pd.size_code = tbl_gift_product_detail.size_code
		INNER JOIN tbl_products tbl_p
			ON tbl_p.SeqNo = pd.RSeqNo
		INNER JOIN tbl_gift 
			ON tbl_gift_product_detail.gift_code = tbl_gift.gift_code
	WHERE 
		tbl_gift_product_detail.gift_code = '", p_gift_code,"'
		AND tbl_p.product_status=1 
		AND pd.product_detail_status= 0
	GROUP BY pd.product_goods_code, pd.color_code, pd.size_code 	
	ORDER BY 
		tbl_gift_product_detail.line_no ASC,
		tbl_gift_product_detail.color_code ASC,
		tbl_gift_product_detail.size_code ASC ");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmt );
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
		
		
		
       -- ===========================================================================================
	SELECT 	tbl_option.*,tbl_p.goods_code
	FROM 	tbl_products_options tbl_option
		inner join tbl_products tbl_p
			on tbl_option.RSeqNo = tbl_p.SeqNo
	WHERE 	
		tbl_p.goods_code in (
			select 	goods_code 
			from 	tbl_gift_product_detail 
			where 	gift_code = p_gift_code
		)
	ORDER BY tbl_p.goods_code, option_index ASC;
       -- ===========================================================================================
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getListEmailRemindOk` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getListEmailRemindOk` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getListEmailRemindOk`(IN `p_shop_list` VARCHAR(200))
BEGIN
	SET @getStockNumberStmt1 = getStockNumberStmt(
			'tbl_mail_remind_order',
			'product_no',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shop_list
	);
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_mail_remind_order',
		'product_no',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	
	-- Get danh sach nhung record tinh den ca size
	SET @selectStmt2 = CONCAT("
	SELECT 	DISTINCT customer_email FROM (
		SELECT 	id,
			customer_email,
			product_no,
			color_code,
			size_code,
			", @getStockNumberStmt1,"
		FROM 	tbl_mail_remind_order
		WHERE  	is_sent_email_remind = 0 
		GROUP BY id
	) AS TBL_TMP_1
		JOIN tbl_products 
			ON TBL_TMP_1.product_no = tbl_products.goods_code
				AND tbl_products.product_status = 1 
		JOIN tbl_products_details
			ON TBL_TMP_1.product_no = tbl_products_details.product_goods_code
				AND TBL_TMP_1.color_code = tbl_products_details.color_code
				AND TBL_TMP_1.size_code = tbl_products_details.size_code
				AND tbl_products_details.product_detail_status 	= 0 
	WHERE stock_num > 0 
	UNION
	SELECT 	DISTINCT customer_email FROM (
		SELECT 	id,
			customer_email,
			product_no,
			color_code,
			", @getStockNumberStmt2,"
		FROM 	tbl_mail_remind_order
		WHERE 	tbl_mail_remind_order.is_sent_email_remind = 0 
			AND tbl_mail_remind_order.size_code = '-1999'
		GROUP BY tbl_mail_remind_order.id
	) AS TBL_TMP_2 
		JOIN tbl_products 
			ON TBL_TMP_2.product_no = tbl_products.goods_code
				AND tbl_products.product_status = 1 
		JOIN tbl_products_details
			ON TBL_TMP_2.product_no = tbl_products_details.product_goods_code
				AND TBL_TMP_2.color_code = tbl_products_details.color_code
				AND tbl_products_details.product_detail_status 	= 0 
	WHERE stock_num > 0 ");
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt2);
	-- Danh sach email ma khong co size.
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getItemForMenuByBrandGroupAndItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getItemForMenuByBrandGroupAndItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getItemForMenuByBrandGroupAndItem`(IN `p_brand_group_id` INT, IN `p_item` VARCHAR(20))
BEGIN
	SET @selectFromStmt = 
		CONCAT("
		SELECT 
			DISTINCT(name_display),
			name_display_en,
			SUM(total_product) AS total_product,
			SeqNo,
			RSeqNo,
			product_category_id,
			OrderNumber,
			tbl_tmp.Name,
			IsDisplay,
			IsShowAsMenu,
			create_date,
			category_banner,
			ItemCode,
			tbl_tmp.TimeStamp,
			memo,
			slug_url,
			category_status,
			parent_id,
			show_order,
			ecsite,
			category_group_id
		FROM 	(
			SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
			FROM  	(
				SELECT
					tbl_products_category.SeqNo,
					tbl_products_category.RSeqNo,
					tbl_products_category.product_category_id,
					tbl_products_category.OrderNumber,
					tbl_products_category.Name,
					tbl_products_category.IsDisplay,
					tbl_products_category.IsShowAsMenu,
					tbl_products_category.create_date,
					tbl_products_category.category_banner,
					tbl_products_category.ItemCode,
					tbl_products_category.TimeStamp,
					tbl_products_category.memo,
					tbl_products_category.slug_url,
					tbl_products_category.category_status,
					tbl_products_category.parent_id,
					tbl_products_category.show_order,
					tbl_products_category.ecsite,
					tbl_products_category.category_group_id,
					(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
						tbl_products_category.Name
					ELSE 
						tbl_products_category.name_display
					END) AS name_display, 
					tbl_products_category.name_display_en
				FROM tbl_products_category
				WHERE 	
					IsDisplay 	= 1
					AND IsShowAsMenu = 1
				ORDER BY OrderNumber ASC
			) AS tbl_category_tmp
				 JOIN  (
					SELECT  
						tbl_products.goods_code, 
						tbl_products_details.color_code,
						tbl_products.product_itemcode
					FROM 
						tbl_products, 
						tbl_products_details 
					WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
						AND tbl_products.product_status 		= 1
						AND tbl_products_details.product_detail_status 	= 0
						AND tbl_products.is_color_show			= 0 ");
		IF p_item = 'sale' 
		THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
						AND tbl_products.sale_off_product = 1 ");
		ELSEIF (p_item = 'new' OR p_item = 'new-arrival') THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
						AND tbl_products.new_product = 1 ");		
		END IF;
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "		
						And tbl_products.brand_code IN 
							(SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
					GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
					UNION
					SELECT  
						tbl_products.goods_code, 
						tbl_products_details.color_code,
						tbl_products.product_itemcode
					FROM 
						tbl_products, 
						tbl_products_details 
					WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
						AND tbl_products.product_status 		= 1
						AND tbl_products_details.product_detail_status 	= 0
						AND tbl_products.is_color_show			= 1
						AND tbl_products_details.is_main_color		= 1 ");
		IF p_item = 'sale' 
		THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
						AND tbl_products.sale_off_product = 1 ");
		ELSEIF (p_item = 'new' OR p_item = 'new-arrival') THEN
			SET @selectFromStmt = 
					CONCAT(@selectFromStmt, " 
						AND tbl_products.new_product = 1 ");		
		END IF;
						
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
						AND tbl_products.brand_code IN 
							(SELECT brand_code FROM tbl_brands AS brand_tmp WHERE brand_tmp.group_id = '",p_brand_group_id,"')
					GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
				) AS tbl_total_product_tmp
					ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
			GROUP BY tbl_category_tmp.ItemCode
		) AS tbl_tmp
		GROUP BY tbl_tmp.name_display
		ORDER BY tbl_tmp.OrderNumber ASC;");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectFromStmt);
	PREPARE stmt FROM @selectFromStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getListMailRemind_Id_Ok` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getListMailRemind_Id_Ok` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getListMailRemind_Id_Ok`(IN `p_shop_list` VARCHAR(200))
BEGIN
	SET @getStockNumberStmt1 = getStockNumberStmt(
			'tbl_mail_remind_order',
			'product_no',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shop_list
	);
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_mail_remind_order',
		'product_no',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	SET @selectStmt2 = CONCAT("
	SELECT id FROM (
		SELECT 	id,
			product_no,
			color_code,
			size_code,
			", @getStockNumberStmt1,"
		FROM 	tbl_mail_remind_order 
		WHERE  	 tbl_mail_remind_order.is_sent_email_remind = 0 
		GROUP BY tbl_mail_remind_order.id 
	) AS TBL_TMP_1
		JOIN tbl_products 
			ON TBL_TMP_1.product_no = tbl_products.goods_code
				AND tbl_products.product_status = 1 
		JOIN tbl_products_details
			ON TBL_TMP_1.product_no = tbl_products_details.product_goods_code
				AND TBL_TMP_1.color_code = tbl_products_details.color_code
				AND TBL_TMP_1.size_code = tbl_products_details.size_code
				AND tbl_products_details.product_detail_status 	= 0 
	WHERE stock_num > 0 
	UNION
	SELECT id FROM (
		SELECT 	id,
			product_no,
			color_code,
			", @getStockNumberStmt2,"
		FROM 	tbl_mail_remind_order
		WHERE 	
			tbl_mail_remind_order.is_sent_email_remind = 0 
			AND tbl_mail_remind_order.size_code = '-1999'
		GROUP BY tbl_mail_remind_order.id 
	) AS TBL_TMP_2
		JOIN tbl_products 
			ON TBL_TMP_2.product_no = tbl_products.goods_code
				AND tbl_products.product_status = 1 
		JOIN tbl_products_details
			ON TBL_TMP_2.product_no = tbl_products_details.product_goods_code
				AND TBL_TMP_2.color_code = tbl_products_details.color_code
				AND tbl_products_details.product_detail_status 	= 0 
	WHERE stock_num > 0 ");
	-- UNION Danh sach email ma khong co size.
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetListPriceCompareProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetListPriceCompareProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetListPriceCompareProduct`(IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @strSelect = 
			CONCAT ("
				SELECT  *
				 
				FROM 
					tbl_products
				WHERE 
					goods_code IN (
					SELECT 
						product_goods_code 
					FROM (
						SELECT 
							product_goods_code, 
							COUNT(product_goods_code) AS product_count 
						FROM (
							SELECT DISTINCT
								RSeqNo, 
								product_detail_price_no_tax, 
								product_detail_price, 
								product_detail_saleoff_price_no_tax, 
								product_detail_saleoff_price,
								product_detail_price2,
								product_detail_saleoff_price2,
								product_goods_code
							FROM 
								tbl_products_details
						
						     ) AS tbl_
						GROUP BY product_goods_code
					     ) AS tbl_2
					WHERE tbl_2.product_count > 1
					)
				");
			
	SET @limitStr = CONCAT("
	     LIMIT ", indexFrom, ",", indexLimit);
	
	
	SET @selectStmtStrRun = CONCAT(@strSelect,@limitStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES( @selectStmtStrRun );
	
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getLookBookFontEndbyGoodcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getLookBookFontEndbyGoodcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getLookBookFontEndbyGoodcode`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT)
BEGIN
/**
 * User:hoaxuan
 * Date:08/08/2018
 * Note: them store nay cho kh manifest
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE 	set_type = 1 and set_status = 1
			AND set_content LIKE  '%", p_product_codes , "%'
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect, @strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getNewsById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getNewsById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getNewsById`(IN `p_news_id` BIGINT)
BEGIN
	-- 179101972 k lay doan select 2 nua ma lay theo select 4
	DECLARE v_news_date VARCHAR(200) DEFAULT NULL;
	SELECT news_date FROM tbl_news WHERE news_id = p_news_id INTO v_news_date;
	
	-- ===================================================
	SELECT * 
	FROM tbl_news 
	WHERE 
		news_id = p_news_id
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	;
		
	-- ===================================================
	SELECT 	*
	FROM 	tbl_news			
	WHERE 	
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY news_date DESC
	LIMIT 0,5;
		
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT 
		COUNT(*) AS total_items,
		CONCAT(YEAR(DATE(news_date)),'年',MONTH(DATE(news_date)),'月') AS ngaythang
	FROM tbl_news
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY news_date DESC;
	
	-- ===================================================
	SELECT *
	FROM tbl_news			
	WHERE 
		STATUS = 1 
		AND news_date < v_news_date
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)		
	ORDER BY news_date DESC
	LIMIT 0,5;
	
	-- ===================================================		
	SELECT * FROM tbl_news_category WHERE STATUS=1 ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getNewsByIdPreview` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getNewsByIdPreview` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getNewsByIdPreview`(IN `p_news_id` BIGINT)
BEGIN
	-- 179101972 k lay doan select 2 nua ma lay theo select 4
	DECLARE v_news_date VARCHAR(200) DEFAULT NULL;
	SELECT news_date FROM tbl_news WHERE news_id = p_news_id INTO v_news_date;
	
	-- ===================================================
	SELECT * 
	FROM tbl_news 
	WHERE 
		news_id = p_news_id
		/*AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)*/
	;
		
	-- ===================================================
	SELECT 	*
	FROM 	tbl_news			
	WHERE 	
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	ORDER BY news_date DESC
	LIMIT 0,5;
		
	-- ===================================================
	-- lay cac thang / nam co bai viet
	SELECT 
		COUNT(*) AS total_items,
		CONCAT(YEAR(DATE(news_date)),'年',MONTH(DATE(news_date)),'月') AS ngaythang
	FROM tbl_news
	WHERE 
		STATUS = 1
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	GROUP BY ngaythang
	ORDER BY news_date DESC;
	
	-- ===================================================
	SELECT *
	FROM tbl_news			
	WHERE 
		STATUS = 1 
		AND news_date < v_news_date
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)		
	ORDER BY news_date DESC
	LIMIT 0,5;
	
	-- ===================================================		
	SELECT * FROM tbl_news_category WHERE STATUS=1 ORDER BY show_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrderStatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrderStatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrderStatus`(IN `p_customer_code` VARCHAR(50), IN `p_skip` INT, IN `p_limit` INT, IN `p_year` VARCHAR(10))
BEGIN
IF(p_year='')THEN
	-- 2020-11-10 Cuc add  order from support S20110919
	SELECT * FROM (
		SELECT  
			tbl_orders.*,
			GROUP_CONCAT(tbl_order_detail.goods_code SEPARATOR 'д') AS lst_goods_code,
			GROUP_CONCAT(tbl_order_detail.`color_code` SEPARATOR 'д') AS lst_color_code,
			YEAR(tbl_orders.created_on) AS YEAR
		FROM 
			tbl_orders,
			tbl_order_detail
		WHERE 
			tbl_orders.order_id = tbl_order_detail.order_id
			AND tbl_orders.customer_code = p_customer_code
			AND (
				is_customer_withdraw IS NULL
				OR is_customer_withdraw <> 1
			)
		GROUP BY tbl_orders.order_code
		ORDER BY YEAR DESC, tbl_orders.order_id DESC 
	  limit p_skip,p_limit
	) AS tbl ORDER BY YEAR DESC, order_id DESC;
ELSE
	SELECT * FROM (
		SELECT  
			tbl_orders.*,
			GROUP_CONCAT(tbl_order_detail.goods_code SEPARATOR 'д') AS lst_goods_code,
			GROUP_CONCAT(tbl_order_detail.`color_code` SEPARATOR 'д') AS lst_color_code,
			YEAR(tbl_orders.created_on) AS YEAR
		FROM 
			tbl_orders,
			tbl_order_detail
		WHERE 
			tbl_orders.order_id = tbl_order_detail.order_id
			AND tbl_orders.customer_code = p_customer_code
			AND (
				is_customer_withdraw IS NULL
				OR is_customer_withdraw <> 1
			)
		GROUP BY tbl_orders.order_code
		ORDER BY YEAR DESC, tbl_orders.order_id DESC 
	  limit p_skip,p_limit
	) AS tbl  
	WHERE  YEAR = p_year 
	ORDER BY YEAR DESC, order_id DESC
	;
END IF;
	SELECT 
		COUNT(*) AS total_items 
	FROM 
		tbl_orders 
	WHERE 
		tbl_orders.customer_code = p_customer_code
		AND (
			is_customer_withdraw IS NULL
			OR is_customer_withdraw <> 1
		);
	SELECT 
		YEAR(tbl_orders.created_on) AS YEAR, 
		COUNT(order_id) AS item
	FROM 
		tbl_orders
	WHERE 
		tbl_orders.customer_code = p_customer_code
		AND (
			is_customer_withdraw IS NULL
			OR is_customer_withdraw <> 1
		)
	GROUP BY YEAR
	ORDER BY YEAR ASC ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getOrderStatusDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getOrderStatusDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getOrderStatusDetail`(IN `p_order_code` VARCHAR(255), `p_email` VARCHAR(200))
BEGIN
IF(EXISTS(SELECT * FROM tbl_orders where order_code =p_order_code and customer_email = p_email)) THEN
  SELECT goods_code,color_code,product_name,quantity,size_name,color_name, unit_cost, product_image,order_detail_id,is_gift,
   IF( EXISTS(
             SELECT *
             FROM tbl_review
             WHERE tbl_review.goods_code = tbl_order_detail.goods_code 
             AND tbl_review.color_code = tbl_order_detail.color_code 
             and tbl_review.order_id = tbl_order_detail.order_id 
             and tbl_review.order_detail_id = tbl_order_detail.order_detail_id
             and tbl_review.status = 1), 1, 0) as is_review     
  FROM tbl_order_detail
  WHERE tbl_order_detail.`order_code` =p_order_code 
  and tbl_order_detail.is_cancel!= 1 -- 803864891 Fraise マイページ購入履歴表示変更 
  order by tbl_order_detail.order_detail_id  ;
  SELECT * FROM tbl_orders where order_code =p_order_code and customer_email = p_email;
end if;
 
 -- SELECT tbl_credit_card.* FROM tbl_credit_card where credit_id = (SELECT credit_id FROM tbl_orders where order_id =p_order_id ) ;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getPressByIdFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getPressByIdFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getPressByIdFontEnd`(IN `p_press_number` VARCHAR(255))
BEGIN
/**
 * User:hoaxuan
 * Date:04/01/2019
 * Note: lay press theo cac media co cung media_number
 */
	-- 179101972 k lay doan select 2 nua ma lay theo select 4
	DECLARE v_media_date VARCHAR(200) DEFAULT NULL;
	SELECT media_date FROM tbl_media WHERE media_number = p_press_number ORDER BY media_page ASC LIMIT 0,1 INTO v_media_date;
 
	-- ===================================================
	SELECT * FROM tbl_media WHERE media_number = p_press_number ORDER BY media_page ASC;
		
	-- ===================================================
	SELECT *
	FROM tbl_media			
	WHERE media_status = 1 AND media_number IS NOT NULL AND media_number <> ''
	ORDER BY media_date DESC;
		
	-- ===================================================
	SELECT CONCAT(YEAR(DATE(media_date)),'年',MONTH(DATE(media_date)),'月') AS ngaythang
	FROM tbl_media			
	WHERE media_status = 1
	GROUP BY ngaythang
	ORDER BY media_date DESC;
	
	-- ===================================================
	SELECT *
	FROM tbl_media			
	WHERE media_status = 1 AND media_number IS NOT NULL AND media_number <> '' AND media_date < v_media_date
	ORDER BY media_date DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductById`(IN `p_product_id` BIGINT)
BEGIN
	
		SELECT * FROM tbl_products 
		WHERE product_id = p_product_id;
		-- ------------------------------------------------------------------------------------------------------------
		Select * From (
			SELECT * FROM tbl_products_details 
			WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)
		) as pd
			LEFT JOIN (
				Select 
					tbl_size.display_order,
					tbl_size.`size_code` as s_size_code 
				from tbl_size
			) as s ON pd.size_code = s.s_size_code
		order by pd.color_code asc, s.display_order ASC, pd.size_code asc;
		-- ------------------------------------------------------------------------------------------------------------
		SELECT 
			tbl_products_category.Name 
		FROM 
			tbl_products_category 
		WHERE ItemCode = (select ItemCode from tbl_products where product_id = p_product_id);
		-- ------------------------------------------------------------------------------------------------------------
		-- order theo size
		Select * From (
			SELECT * FROM tbl_products_details 
			WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)
		) as pd
			LEFT JOIN (
				Select 
					tbl_size.display_order,
					tbl_size.`size_code` as s_size_code 
				from tbl_size
			) as s
				ON pd.size_code = s.s_size_code
		order by s.display_order,pd.size_code asc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductByMaterials` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductByMaterials` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductByMaterials`(IN `p_materials` TEXT, IN `p_sort` VARCHAR(50), IN `p_filter` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.materials LIKE '%",p_materials,"%'");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	
	SELECT 
		*
	FROM
		tbl_materials
	WHERE
		materials_code = p_materials;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductImageByNGoodCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductImageByNGoodCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductImageByNGoodCode`(IN `p_good_color` TEXT)
BEGIN
SET @str = CONCAT("
		SELECT 
			tbl_products.`goods_code`,
			tbl_products.product_image_details,
			tbl_products.slug_url,
			tbl_products_details.`color_code`,
			tbl_products_details.`product_detail_price_no_tax`,
			tbl_products_details.color_slug_url 
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo = tbl_products_details.RSeqNo
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",p_good_color,")
		GROUP BY CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) ");
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@str);     	
        PREPARE stmt2 FROM @str;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
		
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductByStone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductByStone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductByStone`(IN `p_stone` TEXT, IN `p_sort` VARCHAR(50), IN `p_filter` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.stone LIKE '%",p_stone,"%'");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	
	SELECT 
		*
	FROM
		tbl_stone
	WHERE
		stone_code = p_stone;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductListInGiftByGiftCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductListInGiftByGiftCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductListInGiftByGiftCode`(IN `gift_code` VARCHAR(500), IN `p_shop_list` VARCHAR(1000))
BEGIN
       SELECT 
		tbl_gift_product_detail.* , 
		pd.*,
		tbl_p.*,
		'10' AS stock_num
	FROM 
		tbl_gift_product_detail
		INNER JOIN tbl_products_details pd
			ON pd.product_goods_code = tbl_gift_product_detail.goods_code
				AND pd.color_code = tbl_gift_product_detail.color_code
				AND pd.size_code = tbl_gift_product_detail.size_code
		INNER JOIN tbl_products tbl_p
			ON tbl_p.SeqNo = pd.RSeqNo
		INNER JOIN tbl_gift 
			ON tbl_gift_product_detail.gift_code = tbl_gift.gift_code
			
	WHERE 
		tbl_gift_product_detail.gift_code = 'gift_code_1'
		AND tbl_p.product_status=1 
		AND pd.product_detail_status= 0
	GROUP BY pd.product_goods_code, pd.color_code, pd.size_code 	
	ORDER BY 
		tbl_gift_product_detail.line_no ASC,
		tbl_gift_product_detail.color_code ASC,
		tbl_gift_product_detail.size_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetProductRelateAllLookbook` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetProductRelateAllLookbook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetProductRelateAllLookbook`(IN `p_set_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	SET @selectStmt = getListColumnForSelectingProductList();
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",(
			SELECT CASE 
				WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN "'-9999'" 
				ELSE set_content_for_search END 
			FROM tbl_set_of_products WHERE set_id = p_set_id),") ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- SET @selectLimitStmt = CONCAT("
	-- 	LIMIT ",indexFrom,",",indexLimit," ");
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	SET @selectLimitStmt = CONCAT(" ");
	SET @selectStmtStr = CONCAT("
	SELECT product_info.*,
	",@getStockNumberStmt2,"
	 FROM ( 
		", @selectStmt, "
		", @selectFromStmt,"
		", @selectGroupStmt,"
		", @orderStmt,"
		", @selectLimitStmt, "
	) AS product_info 
	");
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt);
 	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetProductSecretSaleByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetProductSecretSaleByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetProductSecretSaleByBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.num_order 		AS pro_detail_num_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products.product_itemcode";
	-- --------------------------------------------------
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.brand_code 			= '",p_brand_code,"'");
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code ");
	
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, 
		@orderStmt, "
		",@selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_GetProductSecretSaleByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_GetProductSecretSaleByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_GetProductSecretSaleByItemCode`(IN `p_item_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = "
		SELECT 	
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.num_order 		AS pro_detail_num_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products.brand_id";
	-- --------------------------------------------------
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_itemcode 		= '",p_item_code,"'");
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code ");
	
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, 
		@orderStmt, "
		",@selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductSizeGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductSizeGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductSizeGuide`(`p_product_id` INT)
BEGIN
	-- Modified: 2019/06/20, 246130096 #Aspiration｜アスピレーション(Massimo)
	SELECT 	* 
	FROM 	tbl_products_size_guide 
	WHERE 	tbl_products_size_guide.goodscode = (
			SELECT tbl_products.goods_code FROM tbl_products WHERE tbl_products.product_id = p_product_id
		)
	ORDER BY SeqNo;
	
	SELECT pd.size_code,s.display_order,pd.size_name FROM (SELECT * FROM tbl_products_details 
	WHERE tbl_products_details.RSeqNo = (SELECT SeqNo FROM tbl_products WHERE product_id = p_product_id)) AS pd
	LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
	ON pd.size_code = s.s_size_code
	ORDER BY pd.size_code ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getrental` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getrental` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getrental`(IN `p_customer_code` VARCHAR(50), IN `p_skip` INT, IN `p_limit` INT, IN `p_year` VARCHAR(10))
BEGIN
IF(p_year='')THEN
	SELECT * FROM (
		SELECT  
			`tbl_rental`.*,
			GROUP_CONCAT(`tbl_rental_detail`.goods_code SEPARATOR 'д') AS lst_goods_code,
			GROUP_CONCAT(`tbl_rental_detail`.`color_code` SEPARATOR 'д') AS lst_color_code,
			YEAR(`tbl_rental`.created_on) AS YEAR
		FROM 
			`tbl_rental`,
			`tbl_rental_detail`
		WHERE 
			`tbl_rental`.order_id = `tbl_rental_detail`.order_id
			AND `tbl_rental`.customer_code = p_customer_code
			AND (
				is_customer_withdraw IS NULL
				OR is_customer_withdraw <> 1
			)
		GROUP BY `tbl_rental`.order_code
		ORDER BY YEAR DESC, `tbl_rental`.order_id DESC 
	  LIMIT p_skip,p_limit
	) AS tbl ;
ELSE
	SELECT * FROM (
		SELECT  
			`tbl_rental`.*,
			GROUP_CONCAT(`tbl_rental_detail`.goods_code SEPARATOR 'д') AS lst_goods_code,
			GROUP_CONCAT(`tbl_rental_detail`.`color_code` SEPARATOR 'д') AS lst_color_code,
			YEAR(`tbl_rental`.created_on) AS YEAR
		FROM 
			`tbl_rental`,
			`tbl_rental_detail`
		WHERE 
			`tbl_rental`.order_id = `tbl_rental_detail`.order_id
			AND `tbl_rental`.customer_code = p_customer_code
			AND (
				is_customer_withdraw IS NULL
				OR is_customer_withdraw <> 1
			)
		GROUP BY `tbl_rental`.order_code
		ORDER BY YEAR DESC, `tbl_rental`.order_id DESC 
	  LIMIT p_skip,p_limit
	) AS tbl  
	WHERE  YEAR = p_year;
END IF;
	SELECT 
		COUNT(*) AS total_items 
	FROM 
		`tbl_rental` 
	WHERE 
		`tbl_rental`.customer_code = p_customer_code
		AND (
			is_customer_withdraw IS NULL
			OR is_customer_withdraw <> 1
		);
	SELECT 
		YEAR(`tbl_rental`.created_on) AS YEAR, 
		COUNT(order_id) AS item
	FROM 
		`tbl_rental`
	WHERE 
		`tbl_rental`.customer_code = p_customer_code
		AND (
			is_customer_withdraw IS NULL
			OR is_customer_withdraw <> 1
		)
	GROUP BY YEAR
	ORDER BY YEAR ASC ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductSecretSaleFrontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductSecretSaleFrontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductSecretSaleFrontend`(IN `p_brand_code_list` TEXT, IN `p_item_code_list` TEXT, IN `p_goods_code_list` TEXT, IN `p_product_ignore` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 ");
			
	IF p_brand_code_list IS NOT NULL AND p_brand_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",p_brand_code_list,")
			 ");
	END IF;
	
	IF p_item_code_list IS NOT NULL AND p_item_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN (",p_item_code_list,")
			 ");
	END IF;
	
	IF p_goods_code_list IS NOT NULL AND p_goods_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, "
			AND tbl_products.goods_code IN (",p_goods_code_list,")
			 ");
	END IF;
	
	IF p_product_ignore IS NOT NULL AND p_product_ignore != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.goods_code NOT IN (",p_product_ignore,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
				
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
	--	INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getrental_detail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getrental_detail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getrental_detail`(IN `p_order_code` VARCHAR(255), `p_email` VARCHAR(200))
BEGIN
IF(EXISTS(SELECT * FROM `tbl_rental` WHERE order_code =p_order_code AND customer_email = p_email)) THEN
  SELECT goods_code,color_code,product_name,quantity,size_name,color_name, unit_cost, product_image,order_detail_id,is_gift,
   IF( EXISTS(
             SELECT *
             FROM tbl_review
             WHERE tbl_review.goods_code = `tbl_rental_detail`.goods_code 
             AND tbl_review.color_code = `tbl_rental_detail`.color_code 
             AND tbl_review.order_id = `tbl_rental_detail`.order_id 
             AND tbl_review.order_detail_id = `tbl_rental_detail`.order_detail_id
             AND tbl_review.status = 1), 1, 0) AS is_review     
  FROM `tbl_rental_detail`
  WHERE `tbl_rental_detail`.`order_code` =p_order_code 
  ORDER BY `tbl_rental_detail`.order_detail_id  ;
  SELECT * FROM `tbl_rental` WHERE order_code =p_order_code AND customer_email = p_email;
END IF;
 
 
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProductSecretSaleFrontend_filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProductSecretSaleFrontend_filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProductSecretSaleFrontend_filter`(IN `p_brand_code_list` TEXT, IN `p_item_code_list` TEXT, IN `p_goods_code_list` TEXT, IN `p_product_ignore` TEXT, IN `p_search_sql` TEXT, IN `p_search_instock` INT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 ");
			
	IF p_brand_code_list IS NOT NULL AND p_brand_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",p_brand_code_list,")
			 ");
	END IF;
	
	IF p_item_code_list IS NOT NULL AND p_item_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN (",p_item_code_list,")
			 ");
	END IF;
	
	IF p_goods_code_list IS NOT NULL AND p_goods_code_list != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, "
			AND tbl_products.goods_code IN (",p_goods_code_list,")
			 ");
	END IF;
	
	IF p_product_ignore IS NOT NULL AND p_product_ignore != ''
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.goods_code NOT IN (",p_product_ignore,")
			 ");
	END IF;
	
	IF 	p_search_sql IS NOT NULL AND p_search_sql <> ''
	THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			",p_search_sql);
	END IF;
	
	IF 	p_search_instock IS NOT NULL AND p_search_instock = '1'
	THEN
		SET @stock_condition = "
		WHERE product_info_ok.stock_num > 0";
	ELSE
		SET @stock_condition = "";
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
				
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok 
	",@stock_condition);
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
		
	--	INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getSetHotProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getSetHotProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getSetHotProduct`(IN `p_set_status` INT(2))
BEGIN
	
	select * from 
	(Select * From tbl_set_product where tbl_set_product.set_status=p_set_status order by tbl_set_product.createdate desc) as tmp,
	tbl_products where tmp.set_id=tbl_products.set_id and tbl_products.product_setmain = 1 LIMIT 8;
	select tbl_products_details.product_id,tbl_products_details.size_name,tbl_products_details.product_detail_price from
        (select tbl_products.product_id from 
	(Select tbl_set_product.set_id From tbl_set_product order by tbl_set_product.createdate DESC) as tmp,
	tbl_products where tmp.set_id= tbl_products.set_id and tbl_products.product_setmain = 1 LIMIT 8) as tmp1,
        tbl_products_details where tmp1.product_id = tbl_products_details.product_id;
    
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProduct_ChangeColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProduct_ChangeColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProduct_ChangeColor`(IN `p_product_id` BIGINT, IN `p_color_code` VARCHAR(20), IN `p_customer_id` BIGINT(20))
BEGIN
	IF p_customer_id <> 0 THEN
		Select * from (SELECT * From (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
                p.brand_code,
                p.brand_id,
                p.brand_name,
		p.slug_url,
		p.new_product,
                pd.color_id,
		pd.color_code,
		pd.color_name,
		pd.size_id,
		pd.size_code,
		pd.size_name,
		pd.color_slug_url,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd 
		where p.SeqNo=pd.RSeqNo
		and p.product_id = p_product_id and pd.color_code = p_color_code) as tmp_p
		LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,s.SizeCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode,s.SizeCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode and tmp_p.size_code = soton.SizeCode) as timp
		LEFT JOIN (select tbl_wish_list.product_id as r_product_id,tbl_wish_list.color_code as r_color_code from tbl_wish_list where tbl_wish_list.customer_id = p_customer_id) as wl on timp.product_id = wl.r_product_id and timp.color_code = wl.r_color_code;
	ELSE
	SELECT * From (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
                p.brand_code,
                p.brand_id,
                p.brand_name,
		p.slug_url,
		p.new_product,
                pd.color_id,
		pd.color_code,
		pd.color_name,
		pd.size_id,
		pd.size_code,
		pd.size_name,
		pd.color_slug_url,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd 
		where p.SeqNo=pd.RSeqNo
		and p.product_id = p_product_id and pd.color_code = p_color_code) as tmp_p
		LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,s.SizeCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode,s.SizeCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode and tmp_p.size_code = soton.SizeCode;
	END IF;
	
	
		SELECT * FROM (SELECT * FROM tbl_products_details 
		WHERE tbl_products_details.RSeqNo = (Select tbl_products.SeqNo from tbl_products WHERE tbl_products.product_id = p_product_id)) AS pd
		LEFT JOIN (SELECT tbl_size.display_order,tbl_size.`size_code` AS s_size_code FROM tbl_size) AS s
		ON pd.size_code = s.s_size_code
		ORDER BY pd.color_code ASC, s.display_order ASC, pd.size_code ASC;
	
	
	SELECT * FROM tbl_products_material WHERE tbl_products_material.RSeqNo = (Select tbl_products.SeqNo from tbl_products WHERE tbl_products.product_id = p_product_id) and tbl_products_material.color_code=p_color_code;
	SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.goodscode = (SELECT tbl_products.goods_code FROM tbl_products WHERE  product_id = p_product_id); 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getSizePriceDetailsStockNum` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getSizePriceDetailsStockNum` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getSizePriceDetailsStockNum`(IN `p_list_product_id` TEXT, IN `p_list_goods_code` TEXT)
BEGIN
      SET @selectStmt2 = "select * from (select p.goods_code,pd.RSeqNo, pd.color_code, pd.size_id, pd.size_code, pd.size_name,pd.product_detail_status
from tbl_products_details as pd
,tbl_products as p where p.SeqNo = pd.RSeqNo ) as tmp
		LEFT JOIN
		( SELECT s.GoodCode,s.ColorCode,s.SizeCode,SUM(s.StockNum) as stock_num 
		  FROM tbl_stock_num as s where  s.GoodCode in (";
      SET @selectStmt2 = CONCAT(@selectStmt2,p_list_goods_code,")and s.ShopCode = '05'
		  group by s.GoodCode, s.colorcode,s.sizecode
		) as soton on tmp.goods_code=soton.GoodCode and tmp.color_code=soton.ColorCode and tmp.size_code=soton.SizeCode
WHERE tmp.RSeqNo IN ( ");
      SET @selectStmt2 = CONCAT(@selectStmt2,p_list_product_id,") and tmp.product_detail_status = 0 
group by RSeqNo, color_code,size_code
order by tmp.goods_code, tmp.color_code asc");
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT
  tbl_products.*
  ,tbl_wish_list.item_id
  ,tbl_wish_list.size_code  as  wish_size_code 
  , tbl_products_details.color_code
  , tbl_products_details.color_slug_url
  , tbl_products_details.color_name
  , tbl_products_details.color_id
  , tbl_products_details.product_detail_price
  , tbl_products_details.product_detail_saleoff_price 
  , tbl_products_details.color_display
  , tbl_products_details.size_display
  , tbl_products_details.size_name
  , tbl_products_details.`barcode`
  , tbl_products_details.`product_detail_price_no_tax`
  , tbl_products_details.`product_detail_saleoff_price_no_tax`
  , tbl_products_details.Individual_Size_Name
  FROM 
  tbl_products
  , tbl_wish_list
  , tbl_products_details
  WHERE		tbl_products.product_id = tbl_wish_list.product_id 
  and 		tbl_wish_list.customer_id =p_customer_id 
  and 		tbl_products.SeqNo = tbl_products_details.RSeqNo
  and 		tbl_products_details.color_code = tbl_wish_list.color_code
  group by 	tbl_wish_list.item_id
  
  
 -- tbl_products.SeqNo,tbl_products_details.color_code,,tbl_products_details.color_code
  order by 	tbl_wish_list.item_id desc 
  limit 	p_skip,p_limit;
  
  
  
  
  SELECT count(*) 
  AS total_items 
  FROM tbl_wish_list 
  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'tmp_p',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		1,
		0,
		p_shoplist
	);
	SET @selectStmt = CONCAT(
	"
	SELECT 
		tmp_p.* ,
		",@getStockNumberStmt ,"
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.goods_code AS GoodCode,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			(SELECT 
						(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
							tbl_brands.brand_name
						ELSE 
							tbl_brands.brand_name_display
						END) AS brand_name_display
					FROM tbl_brands WHERE tbl_brands.brand_code = tbl_products.brand_code) 
					AS brand_name ,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_code AS ColorCode,
			CASE WHEN tbl_products_details.color_display IS NULL OR tbl_products_details.color_display = '' THEN tbl_products_details.color_name ELSE  tbl_products_details.color_display END AS color_name,
			tbl_products_details.size_display,
			tbl_products_details.color_display,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_code AS SizeCode,
			CASE WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN tbl_products_details.size_name ELSE  tbl_products_details.size_display END AS size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			(SELECT 
						(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
							tbl_products_category.Name
						ELSE 
							tbl_products_category.name_display
						END) AS name_display
					FROM tbl_products_category WHERE tbl_products_category.ItemCode = tbl_products.product_itemcode) 
					AS product_itemname,
			tbl_products.product_itemcode,
			tbl_products.product_status
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
			AND tbl_products.product_status = '1'
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code
	) as tmp_p
	
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	PREPARE statement FROM @selectStmt;
        SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_absolut` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_absolut` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_absolut`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT 
  tbl_products.*
  ,tbl_wish_list.item_id
  ,tbl_wish_list.size_code  AS  wish_size_code 
  , tbl_products_details.`display_top`
  , tbl_products_details.color_code
  , tbl_products_details.color_slug_url
  , tbl_products_details.color_name
  , tbl_products_details.color_id
  , tbl_products_details.product_detail_price
  , tbl_products_details.product_detail_saleoff_price 
  , tbl_products_details.color_display
  , tbl_products_details.size_display
  , tbl_products_details.size_name
  , tbl_products_details.`barcode`
  , tbl_products_details.`product_detail_price_no_tax`
  , tbl_products_details.`product_detail_saleoff_price_no_tax`
  FROM 
  tbl_products
  , tbl_wish_list
  , tbl_products_details
  WHERE		tbl_products.product_id = tbl_wish_list.product_id 
  AND 		tbl_wish_list.customer_id =p_customer_id 
  AND 		tbl_products.SeqNo = tbl_products_details.RSeqNo
  AND 		tbl_products_details.color_code = tbl_wish_list.color_code
  GROUP BY 	tbl_wish_list.item_id
  
  
 -- tbl_products.SeqNo,tbl_products_details.color_code,,tbl_products_details.color_code
  ORDER BY 	tbl_wish_list.item_id DESC 
  LIMIT 	p_skip,p_limit;
  
  
  
  
  SELECT COUNT(*) 
  AS total_items 
  FROM tbl_wish_list 
  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getstocknum` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getstocknum` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getstocknum`(`p_goods_code` TEXT, `p_shop_list` VARCHAR(1000))
BEGIN
	-- ----------------------------------------------------------------
	DECLARE p_stock_stmt 		VARCHAR(1000);
	DECLARE p_condition_stmt 	VARCHAR(1000);
	-- ----------------------------------------------------------------
	DECLARE vi_actual_num 		BIGINT(20) DEFAULT 0;
	DECLARE vb_is_actual_num 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_actual_zero 	TINYINT(1) DEFAULT 0;
	DECLARE vb_is_shop_stock 	TINYINT(1) DEFAULT 0;
	-- ----------------------------------------------------------------
	SET p_condition_stmt = "";
	
	--  ---------------------------
	
	-- GET stock setting infomation
	SELECT 
		IFNULL(actual_num,0),
		IFNULL(is_actual_num,0),
		IFNULL(is_actual_zero,0),
		IFNULL(is_shop_stock,0)
	INTO 
		vi_actual_num,
		vb_is_actual_num,
		vb_is_actual_zero,
		vb_is_shop_stock
	FROM 	tbl_settings;
	SET vi_actual_num=IFNULL(vi_actual_num,0);
	SET vb_is_actual_num=IFNULL(vb_is_actual_num,0);
	SET vb_is_actual_zero=IFNULL(vb_is_actual_zero,0);
	SET vb_is_shop_stock=IFNULL(vb_is_shop_stock,0);
	
	IF vb_is_shop_stock <> 0 THEN
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							SUM(tbl_stock_num.KanoNum)
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
						CASE WHEN ((SUM(tbl_stock_num.KanoNum) - ' ,vi_actual_num,') > 0) THEN
							(SUM(tbl_stock_num.KanoNum) - ',vi_actual_num,')
						ELSE
							0
						END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
						CASE WHEN (SUM(tbl_stock_num.KanoNum) > 0) THEN
							SUM(tbl_stock_num.KanoNum)
						ELSE
							0
						END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
						AND tbl_stock_num.KanoNum <> 0
			');
		END IF;
	ELSE 
		IF vb_is_actual_num = 1 THEN
			IF vb_is_actual_zero = 1 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						SUM(tbl_stock_num.StockNum) 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			ELSEIF vb_is_actual_zero = 0 THEN
				SET p_stock_stmt = CONCAT('
					CASE WHEN ((SUM(tbl_stock_num.StockNum) - ' ,vi_actual_num,') > 0) THEN 
						(SUM(tbl_stock_num.StockNum) - ',vi_actual_num,') 
					ELSE 
						0 
					END 
				');
				SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
				');
			END IF;
		ELSEIF vb_is_actual_num = 0 THEN
			SET p_stock_stmt = '
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END 
			';
			SET p_condition_stmt = CONCAT(p_condition_stmt, '
					AND tbl_stock_num.StockNum <> 0 
			');
		END IF;
	END IF;		
	
	-- ----------------------------------------------------------------------------------------------------------------------
	
	SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND tbl_stock_num.r_product_detail_status = 0 ");
					
	IF p_shop_list <> "'-1999'" THEN
		SET p_condition_stmt = CONCAT(p_condition_stmt, "
					AND ShopCode IN (",   p_shop_list ,") ");
	END IF;
	
	--  --------------------------
	SET @selectStmtStr = CONCAT("
		SELECT 
			GoodCode,
			ColorCode,
			",p_stock_stmt," AS stock
		FROM 
			tbl_stock_num 
		WHERE 
			CONCAT_WS('_',GoodCode,ColorCode) in (",p_goods_code,")
			",p_condition_stmt,"
		GROUP BY GoodCode, ColorCode
	");
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_aragin` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_aragin` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_aragin`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT
  tbl_products.*
  ,tbl_wish_list.item_id
  ,tbl_wish_list.size_code  AS  wish_size_code 
  , tbl_products_details.color_code
  , tbl_products_details.color_slug_url
  , tbl_products_details.color_name
  , tbl_products_details.color_id
  , tbl_products_details.product_detail_price
  , tbl_products_details.product_detail_saleoff_price 
  , tbl_products_details.color_display
  , tbl_products_details.size_display
  , tbl_products_details.size_name
  , tbl_products_details.`barcode`
  , tbl_products_details.`product_detail_price_no_tax`
  , tbl_products_details.`product_detail_saleoff_price_no_tax`
  , tbl_products_details.Individual_Size_Name
  FROM 
  tbl_products
  , tbl_wish_list
  , tbl_products_details
  WHERE		tbl_products.product_id = tbl_wish_list.product_id 
  AND 		tbl_wish_list.customer_id =p_customer_id 
  AND 		tbl_products.SeqNo = tbl_products_details.RSeqNo
  AND 		tbl_products_details.color_code = tbl_wish_list.color_code
  AND 		tbl_products_details.size_code = tbl_wish_list.size_code
  GROUP BY 	tbl_wish_list.item_id
  
  
 -- tbl_products.SeqNo,tbl_products_details.color_code,,tbl_products_details.color_code
  ORDER BY 	tbl_wish_list.item_id DESC 
  LIMIT 	p_skip,p_limit;
  
  
  
  
  SELECT COUNT(*) 
  AS total_items 
  FROM tbl_wish_list 
  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_ColorSize` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_ColorSize` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_ColorSize`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
  SELECT tbl_products.*,tbl_wish_list.item_id,tbl_wish_list.size_code as wish_size_code , tbl_products_details.color_code, tbl_products_details.color_slug_url,tbl_products_details.color_name,tbl_products_details.color_id,
tbl_products_details.product_detail_price,tbl_products_details.product_detail_saleoff_price 
,tbl_products_details.color_display
,tbl_products_details.size_display
  FROM tbl_products, tbl_wish_list ,tbl_products_details
  WHERE tbl_products.product_id = tbl_wish_list.product_id 
  and tbl_wish_list.customer_id =p_customer_id 
and tbl_products.SeqNo = tbl_products_details.RSeqNo
and tbl_products_details.color_code = tbl_wish_list.color_code
 group by tbl_wish_list.item_id
 -- tbl_products.SeqNo,tbl_products_details.color_code,,tbl_products_details.color_code
  order by tbl_wish_list.item_id desc 
 limit p_skip,p_limit;
  
SELECT count(*) AS total_items FROM tbl_products, tbl_wish_list WHERE tbl_products.product_id = tbl_wish_list.product_id and tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_Free` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_Free` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_Free`(IN `p_product_id` TEXT)
BEGIN
      SET @selectStmt2 = CONCAT("SELECT tbl_products.*, tbl_products_details.color_slug_url,tbl_products_details.color_name,tbl_products_details.color_id,
	tbl_products_details.product_detail_price,tbl_products_details.product_detail_saleoff_price 
	,tbl_products_details.color_display
	,tbl_products_details.size_display
	,tbl_products_details.color_code
	,tbl_products_details.size_code
	,tbl_products_details.size_name
	,tbl_products_details.Individual_Size_Name
  FROM   tbl_products ,tbl_products_details
  WHERE  tbl_products.product_id IN (",p_product_id,") AND tbl_products.SeqNo = tbl_products_details.RSeqNo
  GROUP BY  tbl_products.`goods_code`, `tbl_products_details`.`color_code`, `tbl_products_details`.`size_code`");
      
	-- insert into tbl_sys_log(sys_log) values (@selectStmt2);
      
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
  
 
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_Free_absolut` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_Free_absolut` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_Free_absolut`(IN `p_product_id` TEXT)
BEGIN
      SET @selectStmt2 = CONCAT("SELECT tbl_products.*, tbl_products_details.color_slug_url,tbl_products_details.color_name,tbl_products_details.color_id,
	tbl_products_details.product_detail_price,tbl_products_details.product_detail_saleoff_price
	, tbl_products_details.`display_top` 
	,tbl_products_details.color_display
	,tbl_products_details.size_display
	,tbl_products_details.color_code
	,tbl_products_details.size_code
	,tbl_products_details.size_name
  FROM   tbl_products ,tbl_products_details
  WHERE  tbl_products.product_id IN (",p_product_id,") AND tbl_products.SeqNo = tbl_products_details.RSeqNo
  GROUP BY  tbl_products.`goods_code`, `tbl_products_details`.`color_code`, `tbl_products_details`.`size_code`");
      
      --	INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt2);
      
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
  
 
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_Lookbook` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_Lookbook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_Lookbook`(IN `p_customer_id` BIGINT(20), IN `p_look_book_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT 	tbl_wish_list_look_book.*, tbl_set_of_products.*
	FROM 	tbl_wish_list_look_book, tbl_set_of_products
	WHERE 	tbl_wish_list_look_book.set_id = tbl_set_of_products.set_id AND tbl_wish_list_look_book.customer_id = p_customer_id 
	ORDER BY tbl_wish_list_look_book.id DESC 
	LIMIT 	p_skip, p_limit;
	SELECT COUNT(*) 
	AS total_items 
	FROM tbl_wish_list_look_book 
	WHERE tbl_wish_list_look_book.customer_id = p_customer_id;
	
	
	SET @selectStmt = CONCAT("SELECT *");
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	IF (p_customer_id <> '') THEN
		SET @selectStmt = 
			CONCAT(@selectStmt,", is_wished ");
			
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					set_id,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list_look_book 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY set_id
			
			) AS wish_list_info
				ON wish_list_info.set_id 	= tbl_set_of_products.set_id");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(
		@selectStmt,"
		FROM 	tbl_set_of_products", @selectJoinWishListStmt, "
		WHERE	tbl_set_of_products.set_id = '",p_look_book_id,"'");
		
	--		INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_print` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_print` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_print`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT, IN `p_list_goods_code` TEXT)
BEGIN
      SET @selectStmt = CONCAT("SELECT
  tbl_products.*
  ,tbl_wish_list.item_id
  ,tbl_wish_list.size_code  AS  wish_size_code 
  , tbl_products_details.color_code
  , tbl_products_details.color_slug_url
  , tbl_products_details.color_name
  , tbl_products_details.color_id
  , tbl_products_details.product_detail_price
  , tbl_products_details.product_detail_saleoff_price 
  , tbl_products_details.color_display
  , tbl_products_details.size_display
  , tbl_products_details.size_name
  , tbl_products_details.`barcode`
  , tbl_products_details.`product_detail_price_no_tax`
  , tbl_products_details.`product_detail_saleoff_price_no_tax`
  
  FROM 
  tbl_products
  , tbl_wish_list
  , tbl_products_details
  WHERE		tbl_products.product_id = tbl_wish_list.product_id 
  AND 		tbl_wish_list.customer_id =",p_customer_id," 
  AND 		tbl_products.SeqNo = tbl_products_details.RSeqNo
  AND 		tbl_products_details.color_code = tbl_wish_list.color_code
  AND tbl_products.`goods_code` in ('",p_list_goods_code, "')
  GROUP BY 	tbl_wish_list.item_id  
  ORDER BY 	tbl_wish_list.item_id DESC 
  LIMIT 	",p_skip,",",p_limit);
      
      -- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmt);
      
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
  
  
  
  SELECT count(*) 
  AS total_items 
  FROM tbl_wish_list 
  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_getWishList_tabisu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_getWishList_tabisu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_getWishList_tabisu`(IN `p_customer_id` BIGINT(20), IN `p_skip` INT, IN `p_limit` INT, IN `p_shop_list` TEXT)
BEGIN
	SELECT
		  tbl_products.*
		  ,tbl_wish_list.item_id
		  ,tbl_wish_list.size_code  AS  wish_size_code 
		  , tbl_products_details.color_code
		  , tbl_products_details.color_slug_url
		  , tbl_products_details.color_name
		  , tbl_products_details.color_id
		  , tbl_products_details.product_detail_price
		  , tbl_products_details.product_detail_saleoff_price 
		  , tbl_products_details.color_display
		  , tbl_products_details.size_display
		  , tbl_products_details.size_name
		  , tbl_products_details.`barcode`
		  , tbl_products_details.`product_detail_price_no_tax`
		  , tbl_products_details.`product_detail_saleoff_price_no_tax`
		  ,
			(
					SELECT 
						
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END AS stock_num
			
					FROM 
						tbl_stock_num 
					WHERE 
						 
					tbl_stock_num.GoodCode = tbl_products.goods_code 
						
					AND tbl_stock_num.StockNum <> 0 
			
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (p_shop_list) 
						
					AND tbl_stock_num.ColorCode = tbl_products_details.color_code 
						
					AND tbl_stock_num.SizeCode = tbl_products_details.size_code 
					
					GROUP BY GoodCode , ColorCode, SizeCode
			) AS stock_num
		
		  FROM 
		  tbl_products
		  , tbl_wish_list
		  , tbl_products_details
		  WHERE		tbl_products.product_id = tbl_wish_list.product_id 
		  AND 		tbl_wish_list.customer_id =p_customer_id 
		  AND 		tbl_products.SeqNo = tbl_products_details.RSeqNo
		  AND 		tbl_products_details.color_code = tbl_wish_list.color_code
		  AND 		tbl_products_details.size_code = tbl_wish_list.size_code
		  GROUP BY 	tbl_wish_list.item_id
		  
		  
		  ORDER BY 	tbl_wish_list.item_id DESC 
		  LIMIT 	p_skip,p_limit;
  
  
		  SELECT COUNT(*) 
		  AS total_items 
		  FROM tbl_wish_list 
		  WHERE tbl_wish_list.customer_id =p_customer_id;
  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_products_draft_shop_by_product` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_products_draft_shop_by_product` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_products_draft_shop_by_product`(IN `p_product_goods_code` VARCHAR(20), IN `p_city` VARCHAR(20), IN `is_select_by_state` VARCHAR(20))
BEGIN
	SELECT
		shop.shop_id,
		shop.shop_code,
		shop.shop_name,
		shop.shop_namekana,
		shop.create_date,
		shop.modified_date,
		shop.shop_status,
		shop.shop_able,
		shop.display_name,
		shop.postcode,
		shop.state,
		shop.city,
		shop.address,
		shop.address2,
		shop.shop_site,
		shop.tel,
		shop.fax,
		shop.note,
		shop.SeqNo,
		shop.RSeqNo,
		shop.TimeStamp,
		1 as stock_num
	FROM
		tbl_shop shop, tbl_products_draft_shop pshop
	WHERE  	
		shop.shop_code = pshop.shop_SeqNo
		AND pshop.product_goods_code = p_product_goods_code
		AND
		CASE is_select_by_state WHEN 1 THEN
			 shop.state = p_city 
		ELSE
			shop.state <> p_city 
		END
	ORDER BY shop.city,shop.shop_name;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_products_shop_by_product` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_products_shop_by_product` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_products_shop_by_product`(IN `p_product_goods_code` VARCHAR(20), IN `p_city` VARCHAR(20), IN `is_select_by_state` VARCHAR(20))
BEGIN
	SELECT
		shop.shop_id,
		shop.shop_code,
		shop.shop_name,
		shop.shop_namekana,
		shop.create_date,
		shop.modified_date,
		shop.shop_status,
		shop.shop_able,
		shop.display_name,
		shop.postcode,
		shop.state,
		shop.city,
		shop.address,
		shop.address2,
		shop.shop_site,
		shop.tel,
		shop.fax,
		shop.note,
		shop.SeqNo,
		shop.RSeqNo,
		shop.TimeStamp,
		1 as stock_num
	FROM
		tbl_shop shop, tbl_products_shop pshop
	WHERE  	
		shop.shop_code = pshop.shop_SeqNo
		AND pshop.product_goods_code = p_product_goods_code
		AND
		CASE is_select_by_state WHEN 1 THEN
			 shop.state = p_city 
		ELSE
			shop.state <> p_city 
		END
	ORDER BY shop.city,shop.shop_name;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_products_shop_by_product_all_city` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_products_shop_by_product_all_city` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_products_shop_by_product_all_city`(IN `p_product_goods_code` VARCHAR(20))
BEGIN
	SELECT
		shop.shop_id,
		shop.shop_code,
		shop.shop_name,
		shop.shop_namekana,
		shop.create_date,
		shop.modified_date,
		shop.shop_status,
		shop.shop_able,
		shop.display_name,
		shop.postcode,
		shop.state,
		shop.city,
		shop.address,
		shop.address2,
		shop.shop_site,
		shop.tel,
		shop.fax,
		shop.note,
		shop.SeqNo,
		shop.RSeqNo,
		shop.TimeStamp,
		1 AS stock_num
	FROM
		tbl_shop shop, tbl_products_shop pshop
	WHERE  	
		shop.shop_code = pshop.shop_SeqNo
		AND pshop.product_goods_code = p_product_goods_code
	ORDER BY shop.postcode,shop.shop_namekana;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_shop_by_condition` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_shop_by_condition` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_shop_by_condition`(IN `ipt_quick_search` TEXT, IN `p_product_goods_code` VARCHAR(20))
BEGIN
	SET @mySQL = CONCAT(' 	SELECT
				shop.shop_id,
				shop.shop_code,
				shop.shop_name,
				shop.shop_namekana,
				shop.create_date,
				shop.modified_date,
				shop.shop_status,
				shop.shop_able,
				shop.display_name,
				shop.postcode,
				shop.state,
				shop.city,
				shop.address,
				shop.address2,
				shop.shop_site,
				shop.tel,
				shop.fax,
				shop.note,
				shop.SeqNo,
				shop.RSeqNo,
				shop.TimeStamp,
					CASE WHEN  pshop.shop_SeqNo IS NOT NULL THEN
						''checked''
					ELSE 
						''''
					END AS is_checked
			FROM
				tbl_shop shop
					LEFT JOIN tbl_products_shop pshop ON shop.shop_code = pshop.shop_SeqNo
						AND pshop.product_goods_code = ''' , p_product_goods_code, '''' ,
			' WHERE  	
				1=1 ');
	SET @mySqlCondition = ' ';
	SET @mySqlGroupBy = ' ';
	SET @mySqlOder = ' ';
	-- Tinh toan phan trang, neu tham so index, va limit truyen vao = 0 thi SELECT ALL
	SET @mySqlLimit = ' ';
	IF ipt_quick_search IS NOT NULL AND ipt_quick_search <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND ( ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' UPPER(shop.state) like UPPER(''%', ipt_quick_search , '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.shop_name) like UPPER(''%', ipt_quick_search, '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.tel) like UPPER(''%', ipt_quick_search, '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.postcode) like UPPER(''%', ipt_quick_search, '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.city) like UPPER(''%', ipt_quick_search, '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.address) like UPPER(''%', ipt_quick_search, '%'') ');
			SET @mySqlCondition = CONCAT(@mySqlCondition, 
								' OR UPPER(shop.address2) like UPPER(''%', ipt_quick_search, '%'') ');
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' ) ');
	END IF;
	-- Thuc hien truy van sql lay ket qua search
	SET @selectStmt = CONCAT(@mySQL, @mySqlCondition, @mySqlGroupBy, @mySqlOder, @mySqlLimit);
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- Lay ra so luong record theo dieu dien search
	SET @getCountStatement = '	SELECT 	FOUND_ROWS() AS total_items 
					FROM 	tbl_shop shop
					WHERE  	1=1 ';
	SET @selectCountStmt = CONCAT(@getCountStatement, @mySqlCondition, @mySqlGroupBy);
	PREPARE countStmt FROM @selectCountStmt;
	EXECUTE countStmt;
	DEALLOCATE PREPARE countStmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_shop_join_product_draft_shop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_shop_join_product_draft_shop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_shop_join_product_draft_shop`(IN `p_product_goods_code` VARCHAR(20), IN `p_product_draft_id` VARCHAR(20))
BEGIN
	SELECT
		shop.shop_id,
		shop.shop_code,
		shop.shop_name,
		shop.shop_namekana,
		shop.create_date,
		shop.modified_date,
		shop.shop_status,
		shop.shop_able,
		shop.display_name,
		shop.postcode,
		shop.state,
		shop.city,
		shop.address,
		shop.address2,
		shop.shop_site,
		shop.tel,
		shop.fax,
		shop.note,
		shop.SeqNo,
		shop.RSeqNo,
		shop.TimeStamp,
		CASE WHEN  pshop.shop_SeqNo IS NOT NULL THEN
			'checked'
		ELSE 
			''
		END AS is_checked
		
	FROM
		tbl_shop shop
			LEFT JOIN tbl_products_draft_shop pshop ON shop.shop_code = pshop.shop_SeqNo
						AND pshop.product_goods_code = p_product_goods_code
						AND pshop.product_draft_id = p_product_draft_id
	ORDER BY is_checked DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_shop_join_product_shop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_shop_join_product_shop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_shop_join_product_shop`(IN `p_product_goods_code` VARCHAR(20))
BEGIN
	SELECT
		shop.shop_id,
		shop.shop_code,
		shop.shop_name,
		shop.shop_namekana,
		shop.create_date,
		shop.modified_date,
		shop.shop_status,
		shop.shop_able,
		shop.display_name,
		shop.postcode,
		shop.state,
		shop.city,
		shop.address,
		shop.address2,
		shop.shop_site,
		shop.tel,
		shop.fax,
		shop.note,
		shop.SeqNo,
		shop.RSeqNo,
		shop.TimeStamp,
		CASE WHEN  pshop.shop_SeqNo IS NOT NULL THEN
			'checked'
		ELSE 
			''
		END AS is_checked
		
	FROM
		tbl_shop shop
			LEFT JOIN tbl_products_shop pshop ON shop.shop_code = pshop.shop_SeqNo
						AND pshop.product_goods_code = p_product_goods_code
	ORDER BY is_checked DESC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_product_by_good_code` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_product_by_good_code` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_product_by_good_code`(IN `p_goods_code` VARCHAR(20))
BEGIN
	SELECT
		tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.country_name 		AS product_country_name,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products.product_image_server	AS product_product_image_server,
			tbl_products.is_main_image	        AS product_is_main_image,
			tbl_products.is_hide_while_out_of_stock	AS product_is_hide_while_out_of_stock,
			tbl_products.is_color_show		AS product_is_color_show,
			tbl_products.is_popularity		AS product_is_popularity,
			tbl_products.is_classic			AS product_is_classic,
			tbl_products.is_show_link_destination 	AS product_is_show_link_destination,
			tbl_products.link_destination 		AS product_link_destination,
			
			tbl_products.is_flash_sale		AS product_is_flash_sale,
			tbl_products.flash_sale_from 		AS product_flash_sale_from,
			tbl_products.flash_sale_to 		AS product_flash_sale_to,
			
			tbl_products.is_restock_item 		AS product_is_restock_item,
			tbl_products.is_restock_item_always 	AS product_is_restock_item_always,
			tbl_products.restock_from 		AS product_restock_from,
			tbl_products.restock_to 		AS product_restock_to,
			
			tbl_products.is_magazine 		AS product_is_magazine,
			tbl_products.is_recommended_item AS product_is_recommended_item,
			
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.color_html_code 	AS pro_detail_color_html_code,
			tbl_products_details.is_main_color 	AS pro_detail_is_main_color,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
			END AS color_display,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			
			CASE 
				WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
					tbl_products_details.size_name 
			ELSE 
				tbl_products_details.size_display 
			END AS pro_detail_size_display,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			CASE 
				WHEN tbl_products.sale_off_product IS NOT NULL AND tbl_products.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END AS price_for_sort ,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status,
			tbl_products_details.num_order 	AS pro_detail_num_order,
			tbl_products_details.product_ranking AS pro_detail_ranking,
			tbl_stock_num.StockNum AS stock_num
	FROM
		tbl_products , 
		tbl_products_details,
		tbl_stock_num
	WHERE  	
		tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
		AND tbl_stock_num.GoodCode	 	= tbl_products.goods_code
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1 
		AND tbl_products.is_color_show			= 1
		AND tbl_products.goods_code = p_goods_code
		GROUP BY tbl_products.RSeqNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_get_product_by_good_code_and_color` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_get_product_by_good_code_and_color` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_get_product_by_good_code_and_color`(IN `p_goods_code` VARCHAR(20), IN `p_color_code` TEXT)
BEGIN
	SELECT
		tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE 
				WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN 
					tbl_products.product_name 
			ELSE  
				tbl_products.product_name_display 
			END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.country_name 		AS product_country_name,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products.product_image_server	AS product_product_image_server,
			tbl_products.is_main_image	        AS product_is_main_image,
			tbl_products.is_hide_while_out_of_stock	AS product_is_hide_while_out_of_stock,
			tbl_products.is_color_show		AS product_is_color_show,
			tbl_products.is_popularity		AS product_is_popularity,
			tbl_products.is_classic			AS product_is_classic,
			tbl_products.is_show_link_destination 	AS product_is_show_link_destination,
			tbl_products.link_destination 		AS product_link_destination,
			
			tbl_products.is_flash_sale		AS product_is_flash_sale,
			tbl_products.flash_sale_from 		AS product_flash_sale_from,
			tbl_products.flash_sale_to 		AS product_flash_sale_to,
			
			tbl_products.is_restock_item 		AS product_is_restock_item,
			tbl_products.is_restock_item_always 	AS product_is_restock_item_always,
			tbl_products.restock_from 		AS product_restock_from,
			tbl_products.restock_to 		AS product_restock_to,
			
			tbl_products.is_magazine 		AS product_is_magazine,
			tbl_products.is_recommended_item AS product_is_recommended_item,
			
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.color_html_code 	AS pro_detail_color_html_code,
			tbl_products_details.is_main_color 	AS pro_detail_is_main_color,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
			END AS color_display,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			
			CASE 
				WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' THEN 
					tbl_products_details.size_name 
			ELSE 
				tbl_products_details.size_display 
			END AS pro_detail_size_display,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			CASE 
				WHEN tbl_products.sale_off_product IS NOT NULL AND tbl_products.sale_off_product = '1' THEN 
					tbl_products_details.product_detail_saleoff_price
			ELSE  
				tbl_products_details.product_detail_price
			END AS price_for_sort ,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status,
			tbl_products_details.num_order 	AS pro_detail_num_order,
			tbl_products_details.product_ranking AS pro_detail_ranking,
			tbl_stock_num.StockNum AS stock_num
	FROM
		tbl_products , 
		tbl_products_details,
		tbl_stock_num
	WHERE  	
		tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
		AND tbl_stock_num.GoodCode	 	= tbl_products.goods_code
		AND tbl_products.goods_code = p_goods_code
		AND tbl_products_details.color_code = p_color_code
		GROUP BY tbl_products.RSeqNo;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Gift_color_size_Product` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Gift_color_size_Product` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Gift_color_size_Product`(IN `p_goods_code` VARCHAR(500), IN `p_color_code` TEXT, IN `p_size_code` TEXT, IN `p_shop_list` VARCHAR(1000))
BEGIN
  
          
       SET @selectStmtone = 
        CONCAT("
	        SELECT 
			*	
		FROM 
			tbl_products_details 
			
		   INNER JOIN 
		   
		       `tbl_gift_detail` 
		       
			    ON `tbl_products_details`.`product_goods_code` = `tbl_gift_detail`.goods_code 
		WHERE  1 " );
		           
		           
	IF p_goods_code <> "''" THEN
		SET @selectStmttwo = CONCAT(@selectStmtone, "
			AND `tbl_products_details`.`product_goods_code`  =  '",p_goods_code,"'  ");
	END IF;
					
	IF p_color_code <> "''" THEN
		SET @selectStmtthree = CONCAT(@selectStmttwo, "
			AND  tbl_products_details.color_code IN (",p_color_code,")");
	END IF;
	
		
 	SET @selectStmtall = CONCAT(@selectStmtthree,"
              	GROUP BY tbl_products_details.color_code ASC ");
              	
              	
        PREPARE stmt FROM @selectStmtall;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
              	
              	
       -- size -------------------------------------------------------------------------------       	
        IF p_size_code <> "''" THEN
		SET @selectStmtfour = CONCAT(@selectStmtthree, "
			AND  tbl_products_details.size_code  IN (",p_size_code,")");
	END IF;
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
              	
        
        SET @selectStmt2 =  CONCAT(@selectStmtfour,@getStockNumberStmt,"
              	GROUP BY tbl_products_details.size_code ASC "); 
              	
       -- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt2);     	
        PREPARE stmt2 FROM @selectStmt2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
        	
              	
              	
	
       
       		   
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Hashtag_GetAll_Paging_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Hashtag_GetAll_Paging_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Hashtag_GetAll_Paging_mida`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
        SET @strSelect = 
		CONCAT("
	SELECT 
		* 
	FROM 
		tbl_products_hashtag AS ht 
	WHERE 
		ht.status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
		ORDER BY show_order ASC, create_date DESC 
			");
	SET @strLimit = 
		CONCAT("
			LIMIT ",p_skip,",",p_limit, " ");
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Hashtag_GetNoteForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Hashtag_GetNoteForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Hashtag_GetNoteForMenu`(IN `p_ConditionStr` TEXT, IN `p_SortStr` TEXT)
BEGIN
/***
p_SortStr for Union
	ORDER BY FIELD(NOTE, 
				'Z','Y','X',
				'W','V','U',
				'T','S','R',
				'Q','P','O',
				'N','M','L',
				'K','J','I',
				'H','G','F',
				'E','D','C',
				'B','A','ワ',
				'ラ','ヤ','マ',
				'ハ','ナ','タ',
				'サ','カ','ア'
			)  DESC 
*/
	SET @selectStmtStr = concat (" 
	SELECT DISTINCT(NOTE) FROM tbl_products_hashtag
	WHERE 
		NOTE IS NOT NULL 
		AND TRIM(NOTE) <> ''
		AND status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	",
	p_ConditionStr,
	p_SortStr
	);
	
	
			
			
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_insertKonbiniPayRespone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_insertKonbiniPayRespone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_insertKonbiniPayRespone`(`p_order_id` INT(11), `p_itakusya_no` INT(5), `p_kokyaku_no` VARCHAR(15), `p_kakunin_no` INT(6), `p_cn_cd` INT(17), `p_kokyaku_name` VARCHAR(24), `p_syunou_kingaku` INT(11), `p_syunou_status` INT(2), `p_syunou_date_time` DATETIME, `p_syunou_nyuryoku_kbn` INT(2), `p_syunou_channel_kbn` INT(2), `p_syunou_channel_cd` INT(4), `p_cvstenpo_cd` VARCHAR(7), `p_syomei_cd` VARCHAR(32))
BEGIN
	
	INSERT INTO tbl_konbini_pay_respone(
				order_id,
				itakusya_no,
				kokyaku_no,
				kakunin_no,
				cn_cd,
				kokyaku_name,
				syunou_kingaku,
				syunou_status,
				syunou_date_time,
				syunou_nyuryoku_kbn,
				syunou_channel_kbn,
				syunou_channel_cd,
				cvstenpo_cd,
				syomei_cd)
	VALUES (
		p_order_id,
		p_itakusya_no,
		p_kokyaku_no,
		p_kakunin_no,
		p_cn_cd,
		p_kokyaku_name,
		p_syunou_kingaku,
		p_syunou_status,
		p_syunou_date_time,
		p_syunou_nyuryoku_kbn,
		p_syunou_channel_kbn,
		p_syunou_channel_cd,
		p_cvstenpo_cd,
		p_syomei_cd
	);
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_instagram_data_getData` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_instagram_data_getData` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_instagram_data_getData`(IN `p_instagram_id` VARCHAR(50), IN `p_instagram_user_id` VARCHAR(50), IN `p_instagram_access_token` VARCHAR(100), IN `p_brand_code` VARCHAR(500), IN `p_product_code` VARCHAR(500), IN `p_product_codes` VARCHAR(1000), IN `p_is_onsite` TINYINT(1), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_insta.*,
		CASE 
			WHEN tbl_pro.product_name_display IS NULL OR tbl_pro.product_name_display = '' THEN 
				tbl_pro.product_name 
		ELSE  
			tbl_pro.product_name_display 
		END AS product_name_display,
		tbl_pro.brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = tbl_pro.brand_code
		) AS brand_name_display
	");
	-- ---------------------------------------------------------------
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_instagram_data AS tbl_insta
			LEFT JOIN tbl_products AS tbl_pro
				ON tbl_insta.goods_code = tbl_pro.goods_code
	");
	IF p_brand_code IS NOT NULL AND p_brand_code <> '' THEN
		SET @selectFromStmt = CONCAT("
	FROM 
		tbl_instagram_data AS tbl_insta
			JOIN tbl_products AS tbl_pro
				ON tbl_insta.goods_code = tbl_pro.goods_code
	");
	END IF;
	-- ---------------------------------------------------------------
	SET @selectWhereStmt = CONCAT("
	WHERE 
		1=1
		
	");
	-- ---------------------------------------------------------------
	SET @selectConditionStmt = "";
	IF p_is_onsite IS NOT NULL AND p_is_onsite = 1 THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.is_onsite = 1
		");
	END IF;
	
	IF p_brand_code IS NOT NULL AND p_brand_code <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_pro.brand_code = '",p_brand_code,"'
		");
	END IF;
	
	IF p_product_code IS NOT NULL AND p_product_code <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.goods_code LIKE '%",p_product_code,"%'
		");
	END IF;
	
	IF p_instagram_id IS NOT NULL AND p_instagram_id <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_id = '",p_instagram_id,"'
		");
	END IF;
	IF p_instagram_user_id IS NOT NULL AND p_instagram_user_id <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_user_id = '",p_instagram_user_id,"'
		");
	END IF;
	IF p_instagram_access_token IS NOT NULL AND p_instagram_access_token <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_access_token = '",p_instagram_access_token,"'
		");
	END IF;
	-- ---------------------------------------------------------------
	
	SET @selectOrderByStmt = "
		ORDER BY tbl_insta.instagram_created_time DESC	
	";
	
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	
	
	
	
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@selectFromStmt, 
		@selectWhereStmt,
		@selectConditionStmt,
		@selectOrderByStmt,
		@selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmt, 
			@selectFromStmt, 
			@selectWhereStmt,
			@selectConditionStmt,
			@selectOrderByStmt,
			@selectLimitStmt," 
		) AS TBL_TMP  ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
		
		
		
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_inUp_extend_ecomerce_ById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_inUp_extend_ecomerce_ById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_inUp_extend_ecomerce_ById`(IN `p_goods_color_code` VARCHAR(255), IN `p_goods_name` VARCHAR(255), IN `p_description` LONGTEXT, IN `p_availability` TEXT, IN `p_condition` TEXT, IN `p_price` FLOAT, IN `p_link` TEXT, IN `p_images_link` TEXT, IN `p_brand` VARCHAR(255), IN `p_additional_images_link` LONGTEXT, IN `p_age_group` VARCHAR(255), IN `p_color` VARCHAR(255), IN `p_gender` VARCHAR(50), IN `p_item_group_id` VARCHAR(255), IN `p_google_product_categroy` TEXT, IN `p_material` TEXT, IN `p_pattern` VARCHAR(255), IN `p_product_type` VARCHAR(255), IN `p_sale_price` FLOAT, IN `p_sale_price_effective_date` TEXT, IN `p_shipping` VARCHAR(255), IN `p_shipping_weight` VARCHAR(255), IN `p_size` TEXT, IN `p_custom_label_0` VARCHAR(255), IN `p_custom_label_1` VARCHAR(255), IN `p_custom_label_2` VARCHAR(255), IN `p_custom_label_3` VARCHAR(255), IN `p_custom_label_4` VARCHAR(255))
BEGIN
IF(EXISTS(SELECT * FROM tbl_extend_ecomerce WHERE tbl_extend_ecomerce.goods_color_code = p_goods_color_code)) THEN
    UPDATE tbl_extend_ecomerce SET goods_name = p_goods_name,
    description=p_description ,
	availability= p_availability,
	econdition=p_condition ,
	price=p_price ,
	link= p_link,
	images_link=p_images_link ,
	brand=p_brand ,
	additional_images_link= p_additional_images_link,
	age_group=p_age_group ,
	color=p_color ,
	gender= p_gender,
	item_group_id=p_item_group_id ,
	google_product_categroy=p_google_product_categroy ,
	material= p_material,
	pattern=p_pattern ,
	product_type= p_product_type,
	sale_price= p_sale_price,
	sale_price_effective_date=p_sale_price_effective_date ,
	shipping= p_shipping,
	shipping_weight=p_shipping_weight ,
	size= p_size,
	custom_label_0= p_custom_label_0,
	custom_label_1= p_custom_label_1,
	custom_label_2= p_custom_label_2,
	custom_label_3= p_custom_label_3,
	custom_label_4= p_custom_label_4
    WHERE tbl_extend_ecomerce.goods_color_code = p_goods_color_code;
ELSE
	INSERT INTO tbl_extend_ecomerce(goods_color_code,	goods_name,description,availability,econdition,price,link,images_link,brand,additional_images_link,age_group,color,gender,item_group_id,google_product_categroy,material,pattern,product_type,sale_price,sale_price_effective_date,shipping,shipping_weight,size,custom_label_0,custom_label_1,custom_label_2,custom_label_3,custom_label_4) VALUES (p_goods_color_code,p_goods_name,p_description,p_availability,p_condition,p_price,p_link,p_images_link,p_brand,p_additional_images_link,p_age_group,p_color,p_gender,p_item_group_id,p_google_product_categroy,p_material,p_pattern,p_product_type,p_sale_price,p_sale_price_effective_date,p_shipping,p_shipping_weight,p_size,p_custom_label_0,p_custom_label_1,p_custom_label_2,p_custom_label_3,p_custom_label_4);
END IF;	
SELECT 'ok' AS msg;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_instagram_data_getData_checkVideo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_instagram_data_getData_checkVideo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_instagram_data_getData_checkVideo`(IN `p_instagram_id` VARCHAR(50), IN `p_instagram_user_id` VARCHAR(50), IN `p_instagram_access_token` VARCHAR(100), IN `p_brand_code` VARCHAR(500), IN `p_product_code` VARCHAR(500), IN `p_product_codes` VARCHAR(1000), IN `p_is_onsite` TINYINT(1), IN `p_is_video` TINYINT(1), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_insta.*,
		CASE 
			WHEN tbl_pro.product_name_display IS NULL OR tbl_pro.product_name_display = '' THEN 
				tbl_pro.product_name 
		ELSE  
			tbl_pro.product_name_display 
		END AS product_name_display,
		tbl_pro.brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = tbl_pro.brand_code
		) AS brand_name_display
	");
	-- ---------------------------------------------------------------
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_instagram_data AS tbl_insta
			LEFT JOIN tbl_products AS tbl_pro
				ON tbl_insta.goods_code = tbl_pro.goods_code
	");
	IF p_brand_code IS NOT NULL AND p_brand_code <> '' THEN
		SET @selectFromStmt = CONCAT("
	FROM 
		tbl_instagram_data AS tbl_insta
			JOIN tbl_products AS tbl_pro
				ON tbl_insta.goods_code = tbl_pro.goods_code
	");
	END IF;
	-- ---------------------------------------------------------------
	SET @selectWhereStmt = CONCAT("
	WHERE 
		1=1
		
	");
	-- ---------------------------------------------------------------
	SET @selectConditionStmt = "";
	IF p_is_onsite IS NOT NULL AND p_is_onsite = 1 THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.is_onsite = 1
		");
	END IF;
	
	IF p_is_video IS NOT NULL and p_is_video = 0 THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.is_video = ",p_is_video,"
		");
	END IF;
	
	IF p_brand_code IS NOT NULL AND p_brand_code <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_pro.brand_code = '",p_brand_code,"'
		");
	END IF;
	
	IF p_product_code IS NOT NULL AND p_product_code <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.goods_code LIKE '%",p_product_code,"%'
		");
	END IF;
	
	IF p_instagram_id IS NOT NULL AND p_instagram_id <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_id = '",p_instagram_id,"'
		");
	END IF;
	IF p_instagram_user_id IS NOT NULL AND p_instagram_user_id <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_user_id = '",p_instagram_user_id,"'
		");
	END IF;
	IF p_instagram_access_token IS NOT NULL AND p_instagram_access_token <> '' THEN
		SET @selectConditionStmt = CONCAT(@selectConditionStmt, "
		AND tbl_insta.instagram_access_token = '",p_instagram_access_token,"'
		");
	END IF;
	-- ---------------------------------------------------------------
	
	SET @selectOrderByStmt = "
		ORDER BY tbl_insta.instagram_created_time DESC	
	";
	
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	
	
	
	
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@selectFromStmt, 
		@selectWhereStmt,
		@selectConditionStmt,
		@selectOrderByStmt,
		@selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmt, 
			@selectFromStmt, 
			@selectWhereStmt,
			@selectConditionStmt,
			@selectOrderByStmt,
			@selectLimitStmt," 
		) AS TBL_TMP  ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
		
		
		
		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_JamSync_StockSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_JamSync_StockSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_JamSync_StockSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_stock_num_tmp(SeqNo,ShopCode,GoodCode,ColorCode,SizeCode,StockNum)
		VALUES ',atData);
		
		 PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
	INSERT INTO tbl_stock_num (SeqNo,ShopCode,GoodCode,ColorCode,SizeCode,StockNum)	
				SELECT MInv.SeqNo,MInv.ShopCode,MInv.GoodCode,MInv.ColorCode,MInv.SizeCode,MInv.StockNum
				FROM tbl_stock_num_tmp as MInv
				ON DUPLICATE KEY UPDATE tbl_stock_num.SeqNo=MInv.SeqNo,
							tbl_stock_num.ShopCode=MInv.ShopCode, 
							tbl_stock_num.GoodCode=MInv.GoodCode, 
							tbl_stock_num.ColorCode=MInv.ColorCode,
							tbl_stock_num.SizeCode=MInv.SizeCode, 
							tbl_stock_num.StockNum=MInv.StockNum
							
				
				;
		DELETE From tbl_stock_num_tmp;
       
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_lookbook_group_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_lookbook_group_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_lookbook_group_save`(`p_group_id` INT, `p_group_code` VARCHAR(255), `p_group_name` VARCHAR(255), `p_group_status` TINYINT, `p_barcode_related` TEXT, `p_barcode_related_search` TEXT, `p_for_customer` VARCHAR(255))
BEGIN
	IF (p_group_id = 0) THEN
		INSERT INTO tbl_lookbook_group (
				group_code,
				group_name,
				group_status,
				barcode_related,
				barcode_related_search,
				for_customer
		) VALUES (
			p_group_code,
			p_group_name,
			p_group_status,
			p_barcode_related,
			p_barcode_related_search,
			p_for_customer
		);
		SELECT MAX(group_id) AS group_id FROM tbl_lookbook_group;
	ELSE
		UPDATE 	tbl_lookbook_group 
		SET 
			group_code		= p_group_code,
			group_name		= p_group_name,
			group_status 	= p_group_status,
			barcode_related = p_barcode_related,
			barcode_related_search = p_barcode_related_search,
			for_customer	= p_for_customer
		WHERE 	
			group_id		= p_group_id;
		SELECT 	p_group_id AS group_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_save`(`p_lbk_id` BIGINT, `p_lbk_code` VARCHAR(255), `p_lbk_name` VARCHAR(255), `p_lbk_content` TEXT, `p_lbk_content_for_search` TEXT, `p_lbk_status` TINYINT(2), `p_lbk_year_id` BIGINT(11), `p_lbk_season_id` BIGINT, `p_lbk_url` VARCHAR(255))
BEGIN
	IF (p_lbk_id = 0) THEN
		INSERT INTO tbl_look_book (
			lbk_code,
			lbk_name,
			lbk_content,
			lbk_content_for_search,
			lbk_status,
			lbk_year_id,
			lbk_season_id,
			lbk_url
		) VALUES (
			p_lbk_code,
			p_lbk_name,
			p_lbk_content,
			p_lbk_content_for_search,
			p_lbk_status,
			p_lbk_year_id,
			p_lbk_season_id,
			p_lbk_url
		);
		SELECT MAX(lbk_id) AS lbk_id FROM tbl_look_book;
	ELSE
		UPDATE 	tbl_look_book
		SET 
			lbk_code 	= p_lbk_code,
			lbk_name 	= p_lbk_name,
			lbk_content 	= p_lbk_content,
			lbk_content_for_search = p_lbk_content_for_search,
			lbk_status 	= p_lbk_status,
			lbk_year_id 	= p_lbk_year_id,
			lbk_season_id 	= p_lbk_season_id,
			lbk_url 	= p_lbk_url
		WHERE 	lbk_id		= p_lbk_id
			AND lbk_year_id 	= p_lbk_year_id
			AND lbk_season_id 	= p_lbk_season_id;
		SELECT p_lbk_id AS lbk_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_season_delete_IdNotIn` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_season_delete_IdNotIn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_season_delete_IdNotIn`(`p_id_list` VARCHAR(255), `lbk_year_id` BIGINT)
BEGIN
	SET @selectStmtStr = CONCAT("
			DELETE FROM tbl_look_book_season 
			WHERE 	lbk_season_id NOT IN (", p_id_list ,") 
				AND lbk_year_id = ", lbk_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
			DELETE FROM tbl_look_book 
			WHERE 	lbk_season_id NOT IN (", p_id_list ,") 
				AND lbk_year_id = ", lbk_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_season_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_season_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_season_save`(`p_lbk_season_id` BIGINT, `p_lbk_year_id` BIGINT, `p_lbk_season_code` VARCHAR(255), `p_lbk_season_name` VARCHAR(255), `p_lbk_season_status` TINYINT, `p_lbk_season_order` TINYINT, `p_lbk_season_is_show_as_menu` TINYINT)
BEGIN
	IF (p_lbk_season_id = 0) THEN
		INSERT INTO tbl_look_book_season (
			lbk_year_id,
			lbk_season_code,
			lbk_season_name,
			lbk_season_status,
			lbk_season_order,
			lbk_season_is_show_as_menu
		) VALUES (
			p_lbk_year_id,
			p_lbk_season_code,
			p_lbk_season_name,
			p_lbk_season_status,
			p_lbk_season_order,
			p_lbk_season_is_show_as_menu
		);
		SELECT MAX(lbk_season_id) AS lbk_season_id FROM tbl_look_book_season;
	ELSE
		UPDATE 	tbl_look_book_season 
		SET 
			lbk_year_id	= p_lbk_year_id,
			lbk_season_code	= p_lbk_season_code,
			lbk_season_name	= p_lbk_season_name,
			lbk_season_status= p_lbk_season_status,
			lbk_season_order= p_lbk_season_order,
			lbk_season_is_show_as_menu = p_lbk_season_is_show_as_menu
		WHERE 	lbk_season_id	= p_lbk_season_id
			AND lbk_year_id	= p_lbk_year_id;
		SELECT p_lbk_season_id AS lbk_season_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_look_book_year_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_look_book_year_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_look_book_year_save`(`p_lbk_year_id` BIGINT, `p_lbk_year_code` VARCHAR(255), `p_lbk_year_name` VARCHAR(255), `p_lbk_year_status` TINYINT, `p_lbk_year_order` TINYINT, `p_lbk_year_is_show_as_menu` TINYINT)
BEGIN
	IF (p_lbk_year_id = 0) THEN
		INSERT INTO tbl_look_book_year (
			lbk_year_code,
			lbk_year_name,
			lbk_year_status,
			lbk_year_order,
			lbk_year_is_show_as_menu
		) VALUES (
			p_lbk_year_code,
			p_lbk_year_name,
			p_lbk_year_status,
			p_lbk_year_order,
			p_lbk_year_is_show_as_menu
		);
		SELECT MAX(lbk_year_id) AS lbk_year_id FROM tbl_look_book_year;
	ELSE
		UPDATE 	tbl_look_book_year 
		SET 
			lbk_year_code	= p_lbk_year_code,
			lbk_year_name	= p_lbk_year_name,
			lbk_year_status	= p_lbk_year_status,
			lbk_year_order	= p_lbk_year_order,
			lbk_year_is_show_as_menu = p_lbk_year_is_show_as_menu
		WHERE 	lbk_year_id	= p_lbk_year_id;
		SELECT p_lbk_year_id AS lbk_year_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_magazine_stop_email` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_magazine_stop_email` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_magazine_stop_email`(IN `p_email_stop` VARCHAR(255))
BEGIN
DECLARE v_result VARCHAR(20) DEFAULT "";
IF(p_email_stop<>'') THEN
  -- 2020-06-12 Cuc edit S20061256　グルッポタナカ
  -- SELECT email_status into v_status FROM tbl_mail_magazine_register WHERE email_name=p_email_stop limit 1;	
  -- IF v_status ="1" THEN    
  
  SET v_result = "NOTOK";
  
  IF(EXISTS(SELECT * FROM tbl_mail_magazine_register WHERE email_name=p_email_stop and `email_status`=1)) THEN 
  
    UPDATE tbl_mail_magazine_register  SET email_status=0 , `stop_date`=now()  WHERE tbl_mail_magazine_register.email_name =p_email_stop;    
    set v_result = "OK";
    
  END IF;
  
  -- them huy dk o tbl_customer nua
  -- ma yc: 606037424 グルッポタナカのメールマガジン解除の修正依頼 (2020/06/23 ~ 2020/06/23) (100%)
  IF(EXISTS(SELECT * FROM `tbl_customers` WHERE `email`=p_email_stop)) THEN 
   
    UPDATE `tbl_customers`  SET `emailmagazine`=0  WHERE `tbl_customers`.`email` =p_email_stop;    
    SET v_result = "OK";
    
  END IF;
      
      
  SELECT  v_result AS msg;
      
END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_mail_magazine_register_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_mail_magazine_register_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_mail_magazine_register_save`(IN `p_mail_name` VARCHAR(255), IN `p_chronology` VARCHAR(255), IN `p_gender` VARCHAR(255))
BEGIN
	IF (
		(SELECT COUNT(*) FROM tbl_mail_magazine_register WHERE UPPER(email_name) = UPPER(p_mail_name)) = 0
	) THEN
		INSERT INTO tbl_mail_magazine_register (
			email_name, 
			register_date, 
			email_status,
			chronology,
			gender
		) VALUES (
			p_mail_name, 
			NOW(), 
			1,
			p_chronology,
			p_gender
		);
	ELSE
		IF (
			(SELECT COUNT(*) FROM tbl_mail_magazine_register WHERE UPPER(email_name) = UPPER(p_mail_name) AND email_status = 0) > 0
		) THEN
			UPDATE 	tbl_mail_magazine_register 
			SET 	email_name 	= p_mail_name,
				email_status	= 1,
				chronology	= p_chronology,
				gender		= p_gender
			WHERE 	UPPER(email_name) = UPPER(p_mail_name)
				AND email_status = 0;
		END IF;
	
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getallfontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getallfontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getallfontend`(IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	SET @insertStmt = '
		SELECT * 
		FROM 	tbl_media  
		WHERE 	media_status = 1 
			AND (
				(NOW() BETWEEN `start_date` AND `end_date`)
				OR `unlimited` = 1
			) ';
	SET @insertStmt = CONCAT(@insertStmt,"ORDER BY media_date DESC,media_id DESC LIMIT ",p_index_from,",",p_index_to);	
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        
        SET @insertStmt2 = "
		SELECT COUNT(*) AS total_items 
		FROM 	tbl_media 
		WHERE 	media_status = 1 
			AND (
				(NOW() BETWEEN `start_date` AND `end_date`)
				OR `unlimited` = 1
			) ";   
	PREPARE stmt2 FROM @insertStmt2;
        EXECUTE stmt2;
        DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getallfontendbycategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getallfontendbycategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getallfontendbycategory`(IN `p_category` VARCHAR(50), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	SET @insertStmt = '
		SELECT * 
		FROM 	tbl_media  
		WHERE 	media_status = 1 
			AND (
				(NOW() BETWEEN `start_date` AND `end_date`)
				OR `unlimited` = 1
			)		
			';
	IF (p_category <> '') THEN
		SET @insertStmt = CONCAT(@insertStmt," AND category_code = '",p_category,"' ORDER BY media_date DESC,media_id DESC LIMIT ",p_index_from,",",p_index_to);	
	else
		SET @insertStmt = CONCAT(@insertStmt," ORDER BY media_date DESC,media_id DESC LIMIT ",p_index_from,",",p_index_to);	
	end if;
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@insertStmt);
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        
        SET @insertStmt2 = "
		SELECT COUNT(*) AS total_items 
		FROM 	tbl_media 
		WHERE 	media_status = 1 
			AND (
				(NOW() BETWEEN `start_date` AND `end_date`)
				OR `unlimited` = 1
			) 
			
			";   
	IF (p_category <> '') THEN
		SET @insertStmt2 = CONCAT(@insertStmt2," AND category_code = '",p_category,"' ");
	END IF;
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@insertStmt2);
	PREPARE stmt2 FROM @insertStmt2;
        EXECUTE stmt2;
        DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getMediaById_canadaofficial` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getMediaById_canadaofficial` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getMediaById_canadaofficial`(IN `p_media_id` BIGINT)
BEGIN	
	SELECT * FROM tbl_media WHERE media_id = p_media_id order by media_id desc;
	SELECT * FROM `tbl_shop` WHERE `shop_code` = (select `shop_code` FROM tbl_media WHERE media_id = p_media_id);
	SELECT CONCAT(YEAR(`media_date2`),'年',MONTH(`media_date2`),'月',DAY(`media_date2`)) AS `media_date3`,
		SUM(cnt) AS `number_of_media`
		FROM (
			SELECT DATE(REPLACE(`media_date`,'/','-')) AS `media_date2`, 1 AS cnt
			FROM tbl_media WHERE media_status = 1 ORDER BY `media_date` DESC
		) AS `media` 
		GROUP BY `media_date2` ORDER BY `media_date2` DESC;
	select CONCAT('''',REPLACE(IFNULL(`keyword_list`,''),'\r\n',''','''),'''') into @keyword_list
		from `tbl_media` where `media_id`=p_media_id;
	SET @insertStmt = "SELECT tbl_keyword.*,
		(CASE WHEN tbl_keyword.show_order > 0 THEN 
					tbl_keyword.show_order
				ELSE 
					999 
				END) AS show_order2
	FROM tbl_keyword
	WHERE keyword_status = 1 AND is_keyword = 1";
	SET @insertStmt = CONCAT(@insertStmt," and `keyword_name` in (",@keyword_list,")");
	SET @insertStmt = CONCAT(@insertStmt," ORDER BY show_order2 ASC");
	-- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_GetmediaByTime_fontend_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_GetmediaByTime_fontend_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_GetmediaByTime_fontend_mida`(IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @strSelect = 
		CONCAT("
	SELECT *
	FROM 
		tbl_media 
	WHERE 
	        tbl_media.media_status = 1 
		AND (			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1)
	ORDER BY tbl_media.`media_date` DESC ,tbl_media.media_id DESC	
			");
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;		
	
										
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_getNextAndPreviousMediaById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_getNextAndPreviousMediaById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_getNextAndPreviousMediaById`(IN `p_current_media_id` BIGINT)
BEGIN
	SET @selectStmt = 
		CONCAT(" 
		SELECT 	* 
		FROM 	tbl_media  
		WHERE 	media_status = 1 
		AND (
			(NOW() BETWEEN start_date AND end_date)
			OR unlimited = 1
		)
		ORDER BY media_date DESC,media_id  ");
	
	-- GET PREVIOUS
	SET @selectPreviousStmt = CONCAT("SELECT MAX(media_id) AS media_id FROM (",@selectStmt ,") AS tbl_media_TMP WHERE media_id < ",p_current_media_id);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectPreviousStmt);
	PREPARE stmt FROM @selectPreviousStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- GET NEXT
	SET @selectNextStmt = CONCAT("SELECT MIN(media_id) AS media_id FROM (",@selectStmt ,") AS tbl_media_TMP WHERE media_id > ",p_current_media_id);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectNextStmt);
	PREPARE stmt FROM @selectNextStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_hotlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_hotlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_hotlist`(IN `p_media_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	IF(p_media_id = 0) THEN
		SELECT 	* 
		FROM 	tbl_media  
		WHERE 	media_status = 1 
			AND (
				(NOW() BETWEEN start_date AND end_date)
				OR unlimited = 1
			)
		ORDER BY media_date DESC,media_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_media  
		WHERE 	media_status = 1
			AND (
				(NOW() BETWEEN start_date AND end_date)
				OR unlimited = 1
			);
	ELSE
		SELECT	* 
		FROM 	tbl_media  
		WHERE 	media_status = 1
			AND media_id <> p_media_id
			AND (
				(NOW() BETWEEN start_date AND end_date)
				OR unlimited = 1
			)
		ORDER BY media_date DESC,media_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_media  
		WHERE 	media_status = 1 
			AND media_id <> p_media_id
			AND (
				(NOW() BETWEEN start_date AND end_date)
				OR unlimited = 1
			);
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_hotlist_by_tag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_hotlist_by_tag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_hotlist_by_tag`(IN `p_tag` VARCHAR(100), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN				
		SET @strSelect = "
			SELECT *
			FROM tbl_media			
			WHERE media_status = 1
				AND (
					(NOW() BETWEEN start_date AND end_date)
					OR unlimited = 1
				)
			";			
		IF p_tag IS NOT NULL AND p_tag <> '' THEN
			SET @strSelect = CONCAT(@strSelect," AND CONCAT('''',REPLACE(IFNULL(`keyword_list`,''),'\r\n',''','''),'''') like '%''",p_tag,"''%'");
		END IF;
		
		SET @strSelect = CONCAT(@strSelect," ORDER BY media_date DESC, media_id DESC");	
			
		SET @strLimit = CONCAT(" LIMIT ",p_index_from,",",p_index_to, " ");
			
		SET @selectStmtStr = CONCAT(@strSelect,@strLimit);
		PREPARE stmt FROM @selectStmtStr;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		 
		SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, @strLimit," ) AS TBL_TMP ");
		PREPARE stmt2 FROM @selectStmtStr2;
		EXECUTE stmt2;
		DEALLOCATE PREPARE stmt2;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_media_hotlist_canadaofficial` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_media_hotlist_canadaofficial` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_media_hotlist_canadaofficial`(IN `p_media_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2), IN `p_shop_code` VARCHAR(10), IN `p_tag_name` TEXT, IN `p_date` VARCHAR(40))
BEGIN
	SET @insertStmt = 'SELECT * 
		FROM 	tbl_media  
		WHERE 	media_status = 1 ';
	if (p_shop_code <> '') then 
		SET @insertStmt = CONCAT(@insertStmt,"AND `shop_code` = '",p_shop_code,"' ");
	end if;
	IF (p_tag_name <> '') THEN 
		SET @insertStmt = CONCAT(@insertStmt,"AND (CONCAT('''',REPLACE(IFNULL(`keyword_list`,''),'\r\n',''','''),'''')) LIKE '%''",p_tag_name,"''%' ");
	END IF;
	IF (p_date <> '') THEN 
		SET @insertStmt = CONCAT(@insertStmt,"AND CONCAT(YEAR(DATE(REPLACE(`media_date`,'/','-'))),'年',MONTH(DATE(REPLACE(`media_date`,'/','-'))),'月',DAY(DATE(REPLACE(`media_date`,'/','-')))) LIKE '",p_date,"' ");
	END IF;	
	IF(p_media_id <> 0) THEN
		SET @insertStmt = CONCAT(@insertStmt,"AND media_id <> ",p_media_id," ");
	END IF;
	SET @insertStmt = CONCAT(@insertStmt,"ORDER BY media_date DESC,media_id DESC LIMIT ",p_index_from,",",p_index_to);	
	PREPARE stmt FROM @insertStmt;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
        
        SET @insertStmt = "SELECT COUNT(*) AS total_items FROM 	tbl_media WHERE media_status = 1 ";
        IF (p_shop_code <> '') THEN 
		SET @insertStmt = CONCAT(@insertStmt,"AND `shop_code` = '",p_shop_code,"' ");
	END IF;
	IF (p_tag_name <> '') THEN 
		SET @insertStmt = CONCAT(@insertStmt,"AND (CONCAT('''',REPLACE(IFNULL(`keyword_list`,''),'\r\n',''','''),'''')) LIKE '%''",p_tag_name,"''%' ");
	END IF;
	IF (p_date <> '') THEN 
		SET @insertStmt = CONCAT(@insertStmt,"AND CONCAT(YEAR(DATE(REPLACE(`media_date`,'/','-'))),'年',MONTH(DATE(REPLACE(`media_date`,'/','-'))),'月',DAY(DATE(REPLACE(`media_date`,'/','-')))) LIKE '",p_date,"' ");
	END IF;
        IF(p_media_id <> 0) THEN
		SET @insertStmt = CONCAT(@insertStmt,"AND media_id <> ",p_media_id);
	end if;
	PREPARE stmt2 FROM @insertStmt;
        EXECUTE stmt2;
        DEALLOCATE PREPARE stmt2;    
        
        select * from `tbl_shop` where `shop_code` = p_shop_code;
        
        SELECT CONCAT(YEAR(`media_date2`),'年',MONTH(`media_date2`),'月',DAY(`media_date2`)) AS `media_date3`,
		SUM(cnt) AS `number_of_media`
		FROM (
			SELECT DATE(REPLACE(`media_date`,'/','-')) AS `media_date2`, 1 AS cnt
			FROM tbl_media WHERE media_status = 1 ORDER BY `media_date` DESC
		) AS `media` 
		GROUP BY `media_date2` ORDER BY `media_date2` desc;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_modalwindow_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_modalwindow_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_modalwindow_save`(IN `p_mode` VARCHAR(20), IN `p_modalwindow_code` VARCHAR(20), IN `p_target_person` TINYINT, IN `p_status` TINYINT, IN `p_modalwindow_from` DATETIME, IN `p_modalwindow_to` DATETIME, IN `p_no_period` TINYINT, IN `p_description` TEXT, IN `p_modalwindow_id` TEXT)
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO 
		tbl_modalwindow(
			modalwindow_code, 
			target_person, 
			modalwindow_status, 
			modalwindow_from, 
			modalwindow_to, 
			no_period,
			description)
		VALUES(
			p_modalwindow_code, 
			p_target_person, 
			p_status, 
			p_modalwindow_from, 
			p_modalwindow_to, 
			p_no_period,
			p_description
			);
	ELSE
		UPDATE tbl_modalwindow
		SET
			modalwindow_code   = p_modalwindow_code,
			target_person      = p_target_person,
			modalwindow_status = p_status,
			modalwindow_from   = p_modalwindow_from,
			modalwindow_to     = p_modalwindow_to,
			no_period          = p_no_period,
			description        = p_description
		WHERE
			id = p_modalwindow_id;
	END IF;	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_News_byDate` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_News_byDate` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_News_byDate`(IN `p_year` VARCHAR(4), IN `p_month` VARCHAR(2), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
		SET @selectStmt = "
			SELECT 	* 
			FROM 	tbl_news  
			WHERE 	
				tbl_news.status = 1 
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)";
			
		SET @selectStmt = CONCAT(@selectStmt, 					
				"AND YEAR(tbl_news.news_date) = '", p_year, "' ",
				"AND MONTH(tbl_news.news_date) = '", p_month, "' ",
				"ORDER BY tbl_news.news_date DESC, news_id DESC 
				LIMIT ", p_index_from, " ," ,p_index_to
			);
				
		-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmt);
		
		PREPARE stmt FROM @selectStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
	
	
		
		
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
			AND YEAR(tbl_news.news_date) = p_year
			AND MONTH(tbl_news.news_date) = p_month
		;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_News_GetNewsByCategoryInfo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_News_GetNewsByCategoryInfo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_News_GetNewsByCategoryInfo`(IN `p_category_id` INT, IN `p_category_code` VARCHAR(255), IN `p_category_name` VARCHAR(255), IN `p_index_from` INT, IN `p_index_to` INT)
BEGIN
	SET @selectStr = "
	SELECT 	* 
	";
	SET @selectCountStr = "
	SELECT 	COUNT(*) AS total_items
	";
	SET @fromStr = " 
	FROM 	tbl_news,
		tbl_news_category
	";
	SET @conditionStr = "
	WHERE 	tbl_news.status 	 = 1 
		AND tbl_news.category_id = tbl_news_category.id	
		AND (
			tbl_news.public_date IS NULL
			OR tbl_news.public_date <= CURRENT_TIMESTAMP()
		)
	";
	IF (p_category_id IS NOT NULL and p_category_id <> 0) THEN
		SET @conditionStr = CONCAT(@conditionStr, "
		AND tbl_news.category_id  = ", p_category_id ,"
		");
	END IF;
	IF (p_category_code IS NOT NULL AND p_category_code <> '') THEN
		SET @conditionStr = CONCAT(@conditionStr, "
		AND UPPER(tbl_news_category.category_code) = UPPER('", p_category_code, "')
		");
	END IF;
	IF (p_category_name is not null AND p_category_name <> '') THEN
		SET @conditionStr = CONCAT(@conditionStr, "
		AND UPPER(tbl_news_category.category_name) = UPPER('", p_category_name, "')
		");
	END IF;
	SET @orderStr = "
	ORDER BY tbl_news.news_date DESC, tbl_news.news_id DESC
	";
	
	SET @limitStr = CONCAT("
	LIMIT ",p_index_from,",",p_index_to, "
	");
	SET @selectStmt = CONCAT(@selectStr, @fromStr, @conditionStr, @orderStr, @limitStr);
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectCountStmt = CONCAT(@selectCountStr, @fromStr, @conditionStr);
	PREPARE stmt FROM @selectCountStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_News_hotlist` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_News_hotlist` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_News_hotlist`(IN `p_news_id` BIGINT(8), IN `p_index_from` TINYINT(2), IN `p_index_to` TINYINT(2))
BEGIN
	IF (p_news_id = 0 or p_news_id = '') THEN
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)		
		ORDER BY tbl_news.news_date DESC, news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		;
	ELSE
		SELECT 	* 
		FROM 	tbl_news  
		WHERE 	
			tbl_news.status = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		ORDER BY tbl_news.news_date DESC, news_id DESC
		LIMIT 	p_index_from,p_index_to;
		SELECT 	COUNT(*) AS total_items
		FROM 	tbl_news  
		WHERE 	
			STATUS = 1 
			AND tbl_news.news_id <> p_news_id 
			AND (
				tbl_news.public_date IS NULL
				OR tbl_news.public_date <= CURRENT_TIMESTAMP()
			)
		;
	END IF;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orderstmp_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orderstmp_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orderstmp_add`(`dodercode` VARCHAR(255), `dtotal_amount` DECIMAL(10,2), `dstatus` INT, `dshipped_on` VARCHAR(10), `dcomments` TEXT, `dcustomer_name` VARCHAR(100), `dcustomer_email` VARCHAR(50), `dshipping_postcode` VARCHAR(255), `dshipping_state` VARCHAR(50), `dshipping_city` VARCHAR(50), `dshipping_address` VARCHAR(255), `dshipping_address2` VARCHAR(500), `dshipping_phone` VARCHAR(50), `dshipping_customer_name` VARCHAR(200), `dshipping_customer_namekana` VARCHAR(200), `dpayment_method` VARCHAR(50), `dtotal_quantity` BIGINT, `dusepoint` BIGINT, `dcustomer_code` VARCHAR(20), `dcost` DECIMAL(10,2), `dfee` DECIMAL(10,2), `dshipping_date` VARCHAR(50), `dshipping_time` VARCHAR(50), `dcustomer_namekana` VARCHAR(255), `dncustomer_phone` VARCHAR(20), `dcouponmoney` DECIMAL(10,2), `dcouponinfo` TEXT, `dThisTimeIssuedPoint` INT, `dThisTimeUsePoint` INT, `dThisTimeUseMoney` DECIMAL(10,2), `dpay_id` TEXT, `dis_pre_order` INT, `dis_login` INT, `dparce_name` VARCHAR(255), `dpoint_rate` INT, `drcustomerrank` VARCHAR(255), `drankrate` DECIMAL(10,2), `dshipping_days` INT, `dcustomer_opinion` TEXT, `dspecial_point` INT)
BEGIN
DECLARE iPointMoneyType DOUBLE DEFAULT 0;
DECLARE iMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPointForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPercentForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iMinMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iUnitUsePoint DOUBLE DEFAULT 0;
DECLARE oUnitUsePoint DOUBLE DEFAULT 1;
DECLARE iUsePoint_Point DOUBLE DEFAULT 0;
DECLARE iUsePoint_Money DOUBLE DEFAULT 0;
DECLARE iUsePointMoneyType DOUBLE DEFAULT 0;
DECLARE	itracking_name VARCHAR(255) DEFAULT '';
DECLARE iusecoupon TINYINT(4) DEFAULT 1;
DECLARE iissuepointbycoupon TINYINT(4) DEFAULT 1;
DECLARE iEC_UseInvoiceSetting TINYINT(4) DEFAULT 0;
DECLARE iEC_InvoicePrefix VARCHAR(4) DEFAULT '';
DECLARE iIsNoPointForSaleOffType TINYINT(4) DEFAULT 1; -- Huy add 2020/07/06 632179694
SELECT PointMoneyType,MoneyForCalIssuePoint,PointForCalIssuePoint,PercentForCalIssuePoint,MinMoneyForCalIssuePoint,UnitUsePoint,UsePoint_Point,UsePoint_Money,UsePointMoneyType,IsNoPointForSaleOffType
INTO iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,iMinMoneyForCalIssuePoint,iUnitUsePoint,iUsePoint_Point,iUsePoint_Money,iUsePointMoneyType,iIsNoPointForSaleOffType
FROM tbl_prepointsettings LIMIT 1;
if dparce_name<>'' then -- Huy add 2020/06/19 583912189
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` where tracking_name=dparce_name ORDER BY  tracking_parcel DESC,tracking_use DESC,id ASC LIMIT 1;
else
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` ORDER BY  tracking_parcel DESC,tracking_use DESC,id ASC LIMIT 1;
END IF;
IF (iUnitUsePoint > 0) THEN
 SET oUnitUsePoint=iUnitUsePoint;
END IF;
SELECT usecoupon,issuepointbycoupon INTO iusecoupon,iissuepointbycoupon FROM `tbl_settings` LIMIT 1;
SELECT IFNULL(EC_UseInvoiceSetting,0),EC_InvoicePrefix INTO iEC_UseInvoiceSetting, iEC_InvoicePrefix FROM tbl_website,tbl_settings WHERE tbl_website.website_code = tbl_settings.site_default LIMIT 1;
IF iEC_UseInvoiceSetting < 1 THEN 
	SET iEC_InvoicePrefix='';
END IF;
INSERT INTO tbl_orders_tmp(IsNoPointForSaleOffType,point_target,point_issuemoney,point_issueunit,
point_issuepercent,point_limit,point_useunit,point_userate,point_useunitpoint,
point_useunitmoney,point_usetarget,order_code,total_amount,created_on,shipped_on,
`status`,comments,customer_name,customer_email,shipping_postcode,shipping_state,
shipping_city,shipping_address,shipping_address2,shipping_phone,shipping_customer_name,
shipping_customer_namekana,payment_method,total_quantity,usepoint,customer_code,
shipping_cost,shipping_fee,shipping_date,shipping_time,customer_namekana,customer_phone,usecoupon,
issuepointbycoupon,couponmoney,couponinfo,thistimeissuedpoint,thistimeusepoint,thistimeusemoney,pay_id,preorder,
islogin,delivery_company,delivery_id,ec_prefix,thistimerate,rcustomerrank,rankrate,shipping_days,customer_opinion, special_point)
VALUES(iIsNoPointForSaleOffType,iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,
iMinMoneyForCalIssuePoint,oUnitUsePoint,oUnitUsePoint,iUsePoint_Point,iUsePoint_Money,
iUsePointMoneyType,dodercode,dtotal_amount,NOW(),dshipped_on,dstatus,dcomments,
dcustomer_name,dcustomer_email,dshipping_postcode,dshipping_state,dshipping_city,
dshipping_address,dshipping_address2,dshipping_phone,dshipping_customer_name,
dshipping_customer_namekana,dpayment_method,dtotal_quantity,dusepoint,dcustomer_code,
dcost,dfee,dshipping_date,dshipping_time,dcustomer_namekana,dncustomer_phone,iusecoupon,
iissuepointbycoupon,dcouponmoney,dcouponinfo,dThisTimeIssuedPoint,dThisTimeUsePoint,dThisTimeUseMoney,dpay_id,dis_pre_order,
dis_login,itracking_name,dparce_name,iEC_InvoicePrefix,dpoint_rate,drcustomerrank,drankrate,dshipping_days,dcustomer_opinion, dspecial_point);
SELECT LAST_INSERT_ID() AS msg;  
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_export` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_export` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_export`(IN `dtransaction` INT, IN `dshipreport` INT, IN `dpospay_credit` INT, IN `dpospay_report` INT)
BEGIN
if dtransaction = '1' THEN
	SELECT * FROM ( select * FROM (SELECT * FROM tbl_orders where payment_method='nppay' and `status`=7)  AS od 
	LEFT JOIN (SELECT customer_code AS cus_code,first_name,last_name,postcode,state,city,address,
	address2,phone,email FROM tbl_customers) AS cus ON od.customer_code= cus.cus_code ) AS mt
	RIGHT JOIN (SELECT dt.*,od.order_code AS od_code FROM tbl_order_detail AS dt,tbl_orders AS od 
	WHERE od.order_code=dt.order_code and od.payment_method='nppay' AND od.`status`=7  ORDER BY od.order_code) AS dt 
	ON mt.order_code=dt.order_code ORDER BY mt.order_code ASC;
	
	if dpospay_credit='1' THEN
		update tbl_orders set `status`=8
		WHERE order_code IN (SELECT mt.order_code FROM ( SELECT * FROM (SELECT * FROM tbl_orders WHERE payment_method='nppay' AND `status`=7)  AS od 
	LEFT JOIN (SELECT customer_code AS cus_code,first_name,last_name,postcode,state,city,address,
	address2,phone,email FROM tbl_customers) AS cus ON od.customer_code= cus.cus_code ) AS mt
	RIGHT JOIN (SELECT dt.*,od.order_code AS od_code FROM tbl_order_detail AS dt,tbl_orders AS od 
	WHERE od.order_code=dt.order_code AND od.payment_method='nppay' AND od.`status`=7  ORDER BY od.order_code) AS dt 
	ON mt.order_code=dt.order_code ORDER BY mt.order_code ASC);
	END IF;
Else 
if dshipreport='1' THEN 
	SELECT * FROM ( SELECT * FROM (SELECT * FROM tbl_orders WHERE payment_method='nppay' AND `status`=2)  AS od 
		LEFT JOIN (SELECT customer_code AS cus_code,first_name,last_name,postcode,state,city,address,
		address2,phone,email FROM tbl_customers) AS cus ON od.customer_code= cus.cus_code ) AS mt
		RIGHT JOIN (SELECT dt.*,od.order_code AS od_code FROM tbl_order_detail AS dt,tbl_orders AS od 
		WHERE od.order_code=dt.order_code AND od.payment_method='nppay' AND od.`status`=2  ORDER BY od.order_code) AS dt 
		ON mt.order_code=dt.order_code ORDER BY mt.order_code ASC;
		if dpospay_report='1' THEN
			UPDATE tbl_orders SET `status`=9
			WHERE order_code IN (SELECT mt.order_code FROM ( SELECT * FROM (SELECT * FROM tbl_orders WHERE payment_method='nppay' AND `status`=2)  AS od 
				LEFT JOIN (SELECT customer_code AS cus_code,first_name,last_name,postcode,state,city,address,
				address2,phone,email FROM tbl_customers) AS cus ON od.customer_code= cus.cus_code ) AS mt
				RIGHT JOIN (SELECT dt.*,od.order_code AS od_code FROM tbl_order_detail AS dt,tbl_orders AS od 
				WHERE od.order_code=dt.order_code AND od.payment_method='nppay' AND od.`status`=2  ORDER BY od.order_code) AS dt 
				ON mt.order_code=dt.order_code ORDER BY mt.order_code ASC);
		END IF;
		
END IF;
End IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_add`(`dodercode` VARCHAR(255), `dtotal_amount` DECIMAL(10,2), `dstatus` INT, `dshipped_on` VARCHAR(10), `dcomments` TEXT, `dcustomer_name` VARCHAR(100), `dcustomer_email` VARCHAR(50), `dshipping_postcode` VARCHAR(255), `dshipping_state` VARCHAR(50), `dshipping_city` VARCHAR(50), `dshipping_address` VARCHAR(255), `dshipping_address2` VARCHAR(500), `dshipping_phone` VARCHAR(50), `dshipping_customer_name` VARCHAR(200), `dshipping_customer_namekana` VARCHAR(200), `dpayment_method` VARCHAR(50), `dtotal_quantity` BIGINT, `dusepoint` BIGINT, `dcustomer_code` VARCHAR(20), `dcost` DECIMAL(10,2), `dfee` DECIMAL(10,2), `dshipping_date` VARCHAR(50), `dshipping_time` VARCHAR(50), `dcustomer_namekana` VARCHAR(255), `dncustomer_phone` VARCHAR(20), `dcouponmoney` DECIMAL(10,2), `dcouponinfo` TEXT, `dThisTimeIssuedPoint` INT, `dThisTimeUsePoint` INT, `dThisTimeUseMoney` DECIMAL(10,2), `dpay_id` TEXT, `dis_pre_order` INT, `dis_login` INT, `dparce_name` VARCHAR(255), `dpoint_rate` INT, `drcustomerrank` VARCHAR(255), `drankrate` DECIMAL(10,2), `dshipping_days` INT, `dcustomer_opinion` TEXT, `dspecial_point` INT)
BEGIN
DECLARE iPointMoneyType DOUBLE DEFAULT 0;
DECLARE iMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPointForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPercentForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iMinMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iUnitUsePoint DOUBLE DEFAULT 0;
DECLARE oUnitUsePoint DOUBLE DEFAULT 1;
DECLARE iUsePoint_Point DOUBLE DEFAULT 0;
DECLARE iUsePoint_Money DOUBLE DEFAULT 0;
DECLARE iUsePointMoneyType DOUBLE DEFAULT 0;
DECLARE	itracking_name VARCHAR(255) DEFAULT '';
DECLARE iusecoupon TINYINT(4) DEFAULT 1;
DECLARE iissuepointbycoupon TINYINT(4) DEFAULT 1;
DECLARE iEC_UseInvoiceSetting TINYINT(4) DEFAULT 0;
DECLARE iEC_InvoicePrefix VARCHAR(4) DEFAULT '';
DECLARE iIsNoPointForSaleOffType TINYINT(4) DEFAULT 1; -- Huy add 2020/07/06 632179694
DECLARE iIsUsePointSettings TINYINT(4) DEFAULT 1; -- Huy add 2021/01/21 980308049 ko su dung thiet lap point
select IsUsePointSettings into iIsUsePointSettings from tbl_settings limit 1;
IF (iIsUsePointSettings = 1) THEN
SELECT PointMoneyType,MoneyForCalIssuePoint,PointForCalIssuePoint,PercentForCalIssuePoint,MinMoneyForCalIssuePoint,UnitUsePoint,UsePoint_Point,UsePoint_Money,UsePointMoneyType,IsNoPointForSaleOffType
INTO iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,iMinMoneyForCalIssuePoint,iUnitUsePoint,iUsePoint_Point,iUsePoint_Money,iUsePointMoneyType,iIsNoPointForSaleOffType
FROM tbl_prepointsettings LIMIT 1;
end if;
IF dparce_name<>'' THEN -- Huy add 2020/06/19 583912189
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` WHERE tracking_name=dparce_name ORDER BY  tracking_parcel DESC,tracking_use DESC,id ASC LIMIT 1;
ELSE
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` ORDER BY  tracking_parcel DESC,tracking_use DESC,id ASC LIMIT 1;
END IF;
IF (iUnitUsePoint > 0) THEN
 SET oUnitUsePoint=iUnitUsePoint;
END IF;
SELECT usecoupon,issuepointbycoupon INTO iusecoupon,iissuepointbycoupon FROM `tbl_settings` LIMIT 1;
SELECT IFNULL(EC_UseInvoiceSetting,0),EC_InvoicePrefix INTO iEC_UseInvoiceSetting, iEC_InvoicePrefix FROM tbl_website,tbl_settings WHERE tbl_website.website_code = tbl_settings.site_default LIMIT 1;
IF iEC_UseInvoiceSetting < 1 THEN 
	SET iEC_InvoicePrefix='';
END IF;
INSERT INTO tbl_orders(IsNoPointForSaleOffType,point_target,point_issuemoney,point_issueunit,
point_issuepercent,point_limit,point_useunit,point_userate,point_useunitpoint,
point_useunitmoney,point_usetarget,order_code,total_amount,created_on,shipped_on,
`status`,comments,customer_name,customer_email,shipping_postcode,shipping_state,
shipping_city,shipping_address,shipping_address2,shipping_phone,shipping_customer_name,
shipping_customer_namekana,payment_method,total_quantity,usepoint,customer_code,
shipping_cost,shipping_fee,shipping_date,shipping_time,customer_namekana,customer_phone,usecoupon,
issuepointbycoupon,couponmoney,couponinfo,thistimeissuedpoint,thistimeusepoint,thistimeusemoney,pay_id,preorder,
islogin,delivery_company,delivery_id,ec_prefix,thistimerate,rcustomerrank,rankrate,shipping_days,customer_opinion, special_point)
VALUES(iIsNoPointForSaleOffType,iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,
iMinMoneyForCalIssuePoint,oUnitUsePoint,oUnitUsePoint,iUsePoint_Point,iUsePoint_Money,
iUsePointMoneyType,dodercode,dtotal_amount,NOW(),dshipped_on,dstatus,dcomments,
dcustomer_name,dcustomer_email,dshipping_postcode,dshipping_state,dshipping_city,
dshipping_address,dshipping_address2,dshipping_phone,dshipping_customer_name,
dshipping_customer_namekana,dpayment_method,dtotal_quantity,dusepoint,dcustomer_code,
dcost,dfee,dshipping_date,dshipping_time,dcustomer_namekana,dncustomer_phone,iusecoupon,
iissuepointbycoupon,dcouponmoney,dcouponinfo,dThisTimeIssuedPoint,dThisTimeUsePoint,dThisTimeUseMoney,dpay_id,dis_pre_order,
dis_login,itracking_name,dparce_name,iEC_InvoicePrefix,dpoint_rate,drcustomerrank,drankrate,dshipping_days,dcustomer_opinion, dspecial_point);
UPDATE tbl_orders_tmp SET isReal=1,pay_id=dpay_id WHERE order_code=dodercode;
SELECT LAST_INSERT_ID() AS msg;  
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_orders_getAllPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_orders_getAllPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_orders_getAllPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `dkey` TEXT)
BEGIN
if dkey=null then
set dkey='';
end if;
if dkey='' then 
	SELECT * FROM tbl_orders ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,status DESC LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items FROM tbl_orders;
else
SET @selectsmt=Concat("SELECT * FROM tbl_orders  where", dkey," group by order_code
 ORDER BY tbl_orders.created_on DESC,order_code DESC,customer_name DESC,total_amount DESC,status DESC LIMIT ",p_skip,",",p_limit,";");
	
 PREPARE stmt FROM @selectsmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
SET @selectsmt2=concat("SELECT COUNT(*) AS total_items FROM(",@selectsmt,")");
 PREPARE stmt FROM @selectsmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointexception_get_for_order` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointexception_get_for_order` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointexception_get_for_order`()
BEGIN
DECLARE dshop_stock TEXT DEFAULT '';
SELECT IFNULL(shop_default,'') INTO dshop_stock FROM `tbl_settings` WHERE 1=1 LIMIT 1;
IF dshop_stock <> '' THEN
		SELECT p1.`Days`,p1.`Magnification` AS Magnification1, pp.* FROM 
	(SELECT p2.`ShopCode`,p2.`ShopName`, p.`StartDate`,p.`EndDate`,
	p.`Spot_Magnification`,p.`IsSpot`,p.`Monthly`,p.`Shop`,p.`Magnification`,p.`MergeKey`,p.`SeqNo`
	 FROM `tbl_pointdetail2` AS p2, `tbl_pointexception` AS p  
	 WHERE p.Seqno=p2.RSeqNo AND p2.`ShopCode`=dshop_stock LIMIT 1) AS pp LEFT JOIN `tbl_pointdetail1` AS p1
	 ON pp.SeqNo=p1.RSeqNo LIMIT 1;
		
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_save`(`p_mode` VARCHAR(20), `p_pointsettings_id` BIGINT(20), `p_rate` FLOAT, `p_isallproduct` TINYINT(1), `p_items` TEXT, `p_brands` TEXT, `p_products` LONGTEXT, `p_applydate` DATETIME)
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_prepointsettings_auto(rate,isallproduct,list_item,list_brand,list_product,
				applydate,created_date
		)
		VALUES(p_rate, p_isallproduct, p_items, p_brands,p_products,
			p_applydate,NOW()
		);
	ELSE
		UPDATE tbl_prepointsettings_auto
		SET
			tbl_prepointsettings_auto.rate = p_rate,			
			tbl_prepointsettings_auto.isallproduct = p_isallproduct,
			tbl_prepointsettings_auto.list_item = p_items,
			tbl_prepointsettings_auto.list_brand = p_brands,
			tbl_prepointsettings_auto.list_product = p_products,
			tbl_prepointsettings_auto.applydate = p_applydate,
			tbl_prepointsettings_auto.modified_date = NOW()
		WHERE
			tbl_prepointsettings_auto.pointsettings_id = p_pointsettings_id;
			
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_pointsettingsauto_save_highbridgeec` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_pointsettingsauto_save_highbridgeec` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_pointsettingsauto_save_highbridgeec`(`p_mode` VARCHAR(20), `p_pointsettings_id` BIGINT(20), `p_rate` FLOAT, `p_isallproduct` TINYINT(1), `p_items` TEXT, `p_brands` TEXT, `p_products` LONGTEXT, `p_applydate` DATETIME, `p_enddate` DATETIME)
BEGIN
	
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_prepointsettings_auto(rate,isallproduct,list_item,list_brand,list_product,
				applydate,enddate,created_date
		)
		VALUES(p_rate, p_isallproduct, p_items, p_brands,p_products,
			p_applydate,p_enddate,NOW()
		);
	ELSE
		UPDATE tbl_prepointsettings_auto
		SET
			tbl_prepointsettings_auto.rate = p_rate,			
			tbl_prepointsettings_auto.isallproduct = p_isallproduct,
			tbl_prepointsettings_auto.list_item = p_items,
			tbl_prepointsettings_auto.list_brand = p_brands,
			tbl_prepointsettings_auto.list_product = p_products,
			tbl_prepointsettings_auto.applydate = p_applydate,
			tbl_prepointsettings_auto.enddate = p_enddate,
			tbl_prepointsettings_auto.modified_date = NOW()
		WHERE
			tbl_prepointsettings_auto.pointsettings_id = p_pointsettings_id;
			
	END IF;
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productDeleteSearchKeyByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productDeleteSearchKeyByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productDeleteSearchKeyByBrandCode`(IN `p_search_key` VARCHAR(1000), IN `p_brand_codes` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = trim(p_search_key);
	-- Delete key
	-- sau do replace tat ca dau ,, -> ,
	SET @update_replace_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = REPLACE ( REPLACE (
						CONCAT(',', search_keywords, ','),
						',",p_search_key,",',
						','
					),
					',,',
					','
				)
	WHERE 	brand_code IN (",p_brand_codes,")
		AND CONCAT(',',search_keywords,',') LIKE '%,",p_search_key,",%'
	");
	
	
	PREPARE update_replace_run FROM @update_replace_stmt;
	EXECUTE update_replace_run;
	DEALLOCATE PREPARE update_replace_run;	
	-- Replace dau ,, -> ,
	
	-- SET @update_replace_stmt2 = 
	-- 	CONCAT("
	-- UPDATE 	tbl_products 
	-- SET 	search_keywords = REPLACE (
	-- 				CONCAT(',', search_keywords, ','),
	-- 				',,',
	-- 				','
	-- 			)
	-- WHERE 	goods_code IN (",p_goods_code,")
	-- ");
	-- PREPARE update_replace_run2 FROM @update_replace_stmt2;
	-- EXECUTE update_replace_run2;
	-- DEALLOCATE PREPARE update_replace_run2;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productDeleteSearchKeyByBrandCodes` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productDeleteSearchKeyByBrandCodes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productDeleteSearchKeyByBrandCodes`(IN `p_search_key` VARCHAR(1000), IN `p_brand_codes` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = trim(p_search_key);
	-- Delete key
	-- sau do replace tat ca dau ,, -> ,
	SET @update_replace_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = REPLACE ( REPLACE (
						CONCAT(',', search_keywords, ','),
						',",p_search_key,",',
						','
					),
					',,',
					','
				)
	WHERE 	brand_code IN (",p_brand_codes,")
		AND CONCAT(',',search_keywords,',') LIKE '%,",p_search_key,",%'
	");
	
	
	PREPARE update_replace_run FROM @update_replace_stmt;
	EXECUTE update_replace_run;
	DEALLOCATE PREPARE update_replace_run;	
	-- Replace dau ,, -> ,
	
	-- SET @update_replace_stmt2 = 
	-- 	CONCAT("
	-- UPDATE 	tbl_products 
	-- SET 	search_keywords = REPLACE (
	-- 				CONCAT(',', search_keywords, ','),
	-- 				',,',
	-- 				','
	-- 			)
	-- WHERE 	goods_code IN (",p_goods_code,")
	-- ");
	-- PREPARE update_replace_run2 FROM @update_replace_stmt2;
	-- EXECUTE update_replace_run2;
	-- DEALLOCATE PREPARE update_replace_run2;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productDeleteSearchKeyByGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productDeleteSearchKeyByGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productDeleteSearchKeyByGoodsCode`(IN `p_search_key` VARCHAR(1000), IN `p_goods_code` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = TRIM(p_search_key);
	-- Delete key
	-- sau do replace tat ca dau ,, -> ,
	SET @update_replace_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = REPLACE ( REPLACE (
						CONCAT(',', search_keywords, ','),
						',",p_search_key,",',
						','
					),
					',,',
					','
				)
	WHERE 	goods_code IN (",p_goods_code,")
		AND CONCAT(',',search_keywords,',') LIKE '%,",p_search_key,",%'
	");
	
	
	PREPARE update_replace_run FROM @update_replace_stmt;
	EXECUTE update_replace_run;
	DEALLOCATE PREPARE update_replace_run;	
	-- Replace dau ,, -> ,
	
	-- SET @update_replace_stmt2 = 
	-- 	CONCAT("
	-- UPDATE 	tbl_products 
	-- SET 	search_keywords = REPLACE (
	-- 				CONCAT(',', search_keywords, ','),
	-- 				',,',
	-- 				','
	-- 			)
	-- WHERE 	goods_code IN (",p_goods_code,")
	-- ");
	-- PREPARE update_replace_run2 FROM @update_replace_stmt2;
	-- EXECUTE update_replace_run2;
	-- DEALLOCATE PREPARE update_replace_run2;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productDeleteSearchKeyByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productDeleteSearchKeyByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productDeleteSearchKeyByItemCode`(IN `p_search_key` VARCHAR(1000), IN `p_item_codes` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = trim(p_search_key);
	-- Delete key
	-- sau do replace tat ca dau ,, -> ,
	SET @update_replace_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = REPLACE ( REPLACE (
						CONCAT(',', search_keywords, ','),
						',",p_search_key,",',
						','
					),
					',,',
					','
				)
	WHERE 	product_itemcode IN (",p_item_codes,")
		AND CONCAT(',',search_keywords,',') LIKE '%,",p_search_key,",%'
	");
	
	
	PREPARE update_replace_run FROM @update_replace_stmt;
	EXECUTE update_replace_run;
	DEALLOCATE PREPARE update_replace_run;	
	-- Replace dau ,, -> ,
	
	-- SET @update_replace_stmt2 = 
	-- 	CONCAT("
	-- UPDATE 	tbl_products 
	-- SET 	search_keywords = REPLACE (
	-- 				CONCAT(',', search_keywords, ','),
	-- 				',,',
	-- 				','
	-- 			)
	-- WHERE 	goods_code IN (",p_goods_code,")
	-- ");
	-- PREPARE update_replace_run2 FROM @update_replace_stmt2;
	-- EXECUTE update_replace_run2;
	-- DEALLOCATE PREPARE update_replace_run2;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productsets_getall_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productsets_getall_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productsets_getall_fontend`(IN `p_goods_code` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectWhereLike = '';
	IF 
		p_goods_code 	<> '' 
	THEN
		SET @selectWhereLike = 
			CONCAT(" AND tbl_product_sets.sets_products LIKE '%", p_goods_code, "%'");
	END IF;
	
	SET @selectStmtStr = CONCAT("SELECT * FROM tbl_product_sets 
								WHERE tbl_product_sets.sets_status = 1
								", @selectWhereLike,"
								ORDER BY tbl_product_sets.created_at DESC
								LIMIT ",indexFrom,",",indexLimit
							);
 
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			SELECT * FROM tbl_product_sets 
				WHERE tbl_product_sets.sets_status = 1 
				", @selectWhereLike,"
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productsets_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productsets_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productsets_save`(`p_mode` VARCHAR(20), `p_sets_code` VARCHAR(50), `p_sets_name_display` VARCHAR(255), `p_sets_url` VARCHAR(255), `p_sets_price_no_tax` FLOAT, `p_sets_total_product_price_no_tax` FLOAT, `p_sets_products` TEXT, `p_sets_status` INT(1), `p_sets_comments` TEXT, `p_sets_prihtml1` TEXT, `p_created_at` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_product_sets(sets_code, sets_name_display, sets_url, sets_price_no_tax, sets_total_product_price_no_tax, sets_products, sets_status, sets_comments, sets_prihtml1, created_at)
		VALUES(p_sets_code, p_sets_name_display, p_sets_url, p_sets_price_no_tax, p_sets_total_product_price_no_tax, p_sets_products, p_sets_status, p_sets_comments, p_sets_prihtml1, p_created_at);
	ELSE
		UPDATE 	tbl_product_sets
		SET
			sets_name_display 	= p_sets_name_display,
			sets_url			= p_sets_url,
			sets_price_no_tax 	= p_sets_price_no_tax,
			sets_total_product_price_no_tax = p_sets_total_product_price_no_tax,
			sets_products = p_sets_products,
			sets_status 	= p_sets_status,
			sets_comments 	= p_sets_comments,
			sets_prihtml1 	= p_sets_prihtml1
		WHERE
			sets_code 	= p_sets_code;
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productSizeGuideCheckUpadteFromTblDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productSizeGuideCheckUpadteFromTblDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productSizeGuideCheckUpadteFromTblDraft`(IN `p_size_guide_seqNo` BIGINT(20))
BEGIN
	-- tbl_products_draft - START
	DECLARE SeqNo_selected bigint(20);
	DECLARE goodscode_selected varchar(20);
	DECLARE category_guide_id_selected bigint(11);
	DECLARE category_guide_name_selected varchar(250);
	DECLARE size_list_selected text;
	DECLARE index_list_selected text;
	DECLARE product_draft_id_selected bigint(20);
	DECLARE SeqNo_old_selected bigint(20);
	DECLARE goodscode_old_selected varchar(20);
	DECLARE category_guide_id_old_selected bigint(11);
	DECLARE category_guide_name_old_selected varchar(250);
	DECLARE size_list_old_selected text;
	DECLARE index_list_old_selected text;
	-- Lay thong tin record de thay doi!
		SELECT 
			SeqNo,
			goodscode,
			category_guide_id,
			category_guide_name,
			size_list,
			index_list,
			product_draft_id,
			SeqNo_old,
			goodscode_old,
			category_guide_id_old,
			category_guide_name_old,
			size_list_old,
			index_list_old
		FROM 	
			tbl_products_draft_size_guide 
		WHERE 
			SeqNo = p_size_guide_seqNo
		LIMIT 1
		INTO 	SeqNo_selected,
			goodscode_selected,
			category_guide_id_selected,
			category_guide_name_selected,
			size_list_selected,
			index_list_selected,
			product_draft_id_selected,
			SeqNo_old_selected,
			goodscode_old_selected,
			category_guide_id_old_selected,
			category_guide_name_old_selected,
			size_list_old_selected,
			index_list_old_selected;
 
/***********************************************************
/**                                                        *
/** Update bang TBL_PRODUCTS_DETAIL                        *
/**                                                        *
/**********************************************************/
	
	IF(SeqNo_old_selected IS NOT NULL AND SeqNo_old_selected != '')	THEN 
		SET @myUpdateTblProductsSizeGuide = ' UPDATE tbl_products_size_guide SET ';
		SET @myUpdateTblProductsSizeGuideColumns = '';
		SET @myUpdateTblProductsSizeGuideCondition = CONCAT(' WHERE SeqNo = ', SeqNo_old_selected , ' ');
		SET @IS_COMMA = '';
		IF goodscode_selected <> goodscode_old_selected THEN
			IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
				SET @IS_COMMA = ' , ';
			END IF;
			SET @myUpdateTblProductsSizeGuideColumns  = CONCAT(@myUpdateTblProductsSizeGuideColumns, @IS_COMMA, ' goodscode = '''  , goodscode_selected  , ''' ');
		END IF;
		IF category_guide_id_selected <> category_guide_id_old_selected THEN
			IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
				SET @IS_COMMA = ' , ';
			END IF;
			SET @myUpdateTblProductsSizeGuideColumns  = CONCAT(@myUpdateTblProductsSizeGuideColumns, @IS_COMMA, ' category_guide_id = '''  , category_guide_id_selected  , ''' ');
		END IF;
		IF category_guide_name_selected <> category_guide_name_old_selected THEN
			IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
				SET @IS_COMMA = ' , ';
			END IF;
			SET @myUpdateTblProductsSizeGuideColumns  = CONCAT(@myUpdateTblProductsSizeGuideColumns, @IS_COMMA, ' category_guide_name = '''  , category_guide_name_selected  , ''' ');
		END IF;
		IF size_list_selected <> size_list_old_selected THEN
			IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
				SET @IS_COMMA = ' , ';
			END IF;
			SET @myUpdateTblProductsSizeGuideColumns  = CONCAT(@myUpdateTblProductsSizeGuideColumns, @IS_COMMA, ' size_list = '''  , size_list_selected  , ''' ');
		END IF;
		IF index_list_selected <> index_list_old_selected THEN
			IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
				SET @IS_COMMA = ' , ';
			END IF;
			SET @myUpdateTblProductsSizeGuideColumns  = CONCAT(@myUpdateTblProductsSizeGuideColumns, @IS_COMMA, ' index_list = '''  , index_list_selected  , ''' ');
		END IF;
		IF(@myUpdateTblProductsSizeGuideColumns IS NOT NULL AND @myUpdateTblProductsSizeGuideColumns != '')	THEN 
			SET @selectStmt = CONCAT(@myUpdateTblProductsSizeGuide, @myUpdateTblProductsSizeGuideColumns, @myUpdateTblProductsSizeGuideCondition);
			PREPARE stmt FROM @selectStmt;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;
		END IF;
	ELSE 
		INSERT INTO tbl_products_size_guide (goodscode, category_guide_id, category_guide_name, size_list, index_list)
		VALUES (goodscode_selected, category_guide_id_selected, category_guide_name_selected, size_list_selected, index_list_selected);
		
	END IF;
	SELECT 	'OK' AS RESULT;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_ad_date_expired` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_ad_date_expired` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_ad_date_expired`(`p_today` VARCHAR(25), `p_date_expired_num` VARCHAR(25))
BEGIN
	SET @selectStmtStr = CONCAT("
		UPDATE tbl_products SET  date_expired = DATE_FORMAT(( DATE_ADD('",p_today,"', INTERVAL ",p_date_expired_num," DAY) ), '%Y/%m/%d'), 
								date_new_start = DATE_FORMAT(( DATE_ADD('",p_today,"', INTERVAL 0 DAY) ), '%Y/%m/%d')
		WHERE tbl_products.new_product = 1 
		AND ( tbl_products.date_new_start IS NULL OR tbl_products.date_new_start = '' ) 
	");
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- -===============================================================================
	
	SET @selectStmtStr2 = CONCAT("
		UPDATE tbl_products SET  date_expired = DATE_FORMAT(( DATE_ADD(tbl_products.date_new_start, INTERVAL ",p_date_expired_num," DAY ) ), '%Y/%m/%d')
		WHERE tbl_products.new_product = 1 
		AND ( tbl_products.date_new_start IS NOT NULL AND tbl_products.date_new_start <> '' ) 
	");
	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	
	
	SELECT 'ok' AS msg;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getByCode`(IN `p_ItemCode_Code` VARCHAR(200))
BEGIN
	SELECT 
		SeqNo,
		RSeqNo,
		product_category_id,
		OrderNumber,
		`Name`,
		IsDisplay,
		IsShowAsMenu,
		create_date,
		category_banner,
		ItemCode,
		`TimeStamp`,
		memo,
		slug_url,
		category_status,
		parent_id,
		show_order,
		ecsite,
		category_group_id,
		name_display_en,
		category_header,
		category_logo,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display
	FROM 	tbl_products_category 
	WHERE 	ItemCode = p_ItemCode_Code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getByGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getByGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getByGroupCode`(IN `p_category_group_Code` VARCHAR(200))
BEGIN
	SELECT 
	name_display,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id,
	category_group_code
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display,
			tbl_products_category_group.category_group_code
		FROM 
			tbl_products_category,
			tbl_products_category_group
		WHERE 
			tbl_products_category.category_group_id = tbl_products_category_group.id
			AND tbl_products_category_group.category_group_code = p_category_group_Code
			-- Modified: 2020/04/11
			-- AND tbl_products_category.ecsite 		= 1
			AND tbl_products_category.IsDisplay 		= 1
			AND tbl_products_category.IsShowAsMenu 	= 1
		ORDER BY OrderNumber ASC
	) AS tbl_category_tmp
		LEFT JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getByGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getByGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getByGroupId`(IN `p_group_category_id` INT)
BEGIN
SELECT 
	name_display,
	SUM(total_product+total_product2) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id,
	category_logo
FROM 	(
	SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display,
			tbl_products_category.category_logo,
			
		       (SELECT  
				COUNT(DISTINCT tbl_products.goods_code, tbl_products_details.color_code)
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				-- AND tbl_products.is_color_show			= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
				AND tbl_products.`product_itemcode`=tbl_products_category.`ItemCode`
			) AS total_product,
			(SELECT  
				COUNT(DISTINCT tbl_products.goods_code, tbl_products_details.color_code)
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
				AND tbl_products.`product_itemcode`=tbl_products_category.`ItemCode`
			) AS total_product2
			
		FROM 
			tbl_products_category
		WHERE 
			tbl_products_category.category_group_id = p_group_category_id
			-- Modified: 2020/04/11
			-- AND tbl_products_category.ecsite 		= 1
			AND tbl_products_category.IsDisplay 		= 1
			AND tbl_products_category.IsShowAsMenu 	= 1
		GROUP BY tbl_products_category.ItemCode
		
	)AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getItemForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getItemForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getItemForMenu`()
BEGIN
/**
 * User:hoaxuan
 * Date:27/06/2018
 * Time:15:41
 * Note: them store nay cho kh Levi, Spread
 */
SELECT 
	DISTINCT(name_display),
	name_display_en,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display, 
			tbl_products_category.name_display_en
		FROM tbl_products_category
		WHERE 
			-- Modified: 2020/04/11
			-- ecsite 		= 1
			IsDisplay 	= 1
			AND IsShowAsMenu = 1
		ORDER BY OrderNumber ASC
	) AS tbl_category_tmp
		LEFT JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getItemForMenuByGroupIdAndBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getItemForMenuByGroupIdAndBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getItemForMenuByGroupIdAndBrandCode`(IN `p_group_category_id` INT, IN `p_brand_code` VARCHAR(200))
BEGIN
SELECT 
	DISTINCT(name_display),
	name_display_en,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display, 
			tbl_products_category.name_display_en
		FROM tbl_products_category
		WHERE 
			tbl_products_category.category_group_id = p_group_category_id
			-- Modified: 2020/04/11
			-- AND ecsite 		= 1
			AND IsDisplay 	= 1
			AND IsShowAsMenu = 1
		ORDER BY OrderNumber ASC
	) AS tbl_category_tmp
		 JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
				AND tbl_products.brand_code 			= p_brand_code
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
				AND tbl_products.brand_code 			= p_brand_code
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getItemForMenuByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getItemForMenuByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getItemForMenuByBrandCode`(IN `p_brand_code` VARCHAR(200))
BEGIN
/**
 * User:hoaxuan
 * Date:27/06/2018
 * Time:15:41
 * Note: them store nay cho kh Levi, Spread
 */
SELECT 
	DISTINCT(name_display),
	name_display_en,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display, 
			tbl_products_category.name_display_en
		FROM tbl_products_category
		WHERE 
			-- Modified: 2020/04/11
			-- ecsite 		= 1
			IsDisplay 	= 1
			AND IsShowAsMenu = 1
		ORDER BY OrderNumber ASC
	) AS tbl_category_tmp
		 JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
				AND (
					tbl_products.brand_code 		= p_brand_code 
					OR p_brand_code 			= 'all'
					OR tbl_products.brand_code_2 		= p_brand_code 					
				)
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
				AND (
					tbl_products.brand_code 		= p_brand_code 
					OR p_brand_code 			= 'all'
					OR tbl_products.brand_code_2 		= p_brand_code 					
				)
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_getProductColorForFilterMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_getProductColorForFilterMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_getProductColorForFilterMenu`(IN `p_category_group_id` VARCHAR(255), IN `p_category_code` VARCHAR(255), IN `p_brand_group_id` VARCHAR(255), IN `p_brand_code` VARCHAR(255), IN `p_is_new_product` TINYINT(1), IN `p_size_code_str` TEXT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT 
		DISTINCT 
			color_code
	");
	
	SET @fromStmt = CONCAT("
	FROM 
		tbl_products_details,
		tbl_products
	");
	
	SET @whereStmt = CONCAT("
	WHERE 
		tbl_products.SeqNo = tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
		AND tbl_products.new_product			= 1 ");
	END IF;
		
		
		
		
		
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_category_group_id,"') 
		");
	END IF;	
	
	
		
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode 		= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.sale_off_product 		= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.new_product 			= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.is_recommended_item 		= 1  ");
	END IF;	
	
	
	
	
	
	
	-- IF 
	-- 	p_brand_group_id 	IS NOT NULL 
	-- 	AND p_brand_group_id 	<> '' 
	-- THEN
	-- 	
	-- END IF;	
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.brand_code 		= '",p_brand_code,"' ");
	END IF;
	
	
	
	IF 
		p_size_code_str IS NOT NULL 
		AND p_size_code_str 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products_details.size_code IN (",p_size_code_str,")");
	END IF;	
	
	
	
	
	SET @orderStmt = CONCAT("
	ORDER BY color_display ");
	
	 
	
	SET @selectStmtStr = CONCAT(@selectStmt, @fromStmt, @whereStmt, @orderStmt );
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectStmtStr);	
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getItemForMenuByBrandGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getItemForMenuByBrandGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getItemForMenuByBrandGroup`(IN `p_brand_group_id` INT)
BEGIN
	SELECT 
		DISTINCT(name_display),
		name_display_en,
		SUM(total_product) AS total_product,
		SeqNo,
		RSeqNo,
		product_category_id,
		OrderNumber,
		tbl_tmp.Name,
		IsDisplay,
		IsShowAsMenu,
		create_date,
		category_banner,
		ItemCode,
		tbl_tmp.TimeStamp,
		memo,
		slug_url,
		category_status,
		parent_id,
		show_order,
		ecsite,
		category_group_id
	FROM 	(
		SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
		FROM  	(
			SELECT
				tbl_products_category.SeqNo,
				tbl_products_category.RSeqNo,
				tbl_products_category.product_category_id,
				tbl_products_category.OrderNumber,
				tbl_products_category.Name,
				tbl_products_category.IsDisplay,
				tbl_products_category.IsShowAsMenu,
				tbl_products_category.create_date,
				tbl_products_category.category_banner,
				tbl_products_category.ItemCode,
				tbl_products_category.TimeStamp,
				tbl_products_category.memo,
				tbl_products_category.slug_url,
				tbl_products_category.category_status,
				tbl_products_category.parent_id,
				tbl_products_category.show_order,
				tbl_products_category.ecsite,
				tbl_products_category.category_group_id,
				(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
					tbl_products_category.Name
				ELSE 
					tbl_products_category.name_display
				END) AS name_display, 
				tbl_products_category.name_display_en
			FROM tbl_products_category
			WHERE 	
				-- Modified: 2020/04/11
				-- ecsite 		= 1
				IsDisplay 	= 1
				AND IsShowAsMenu = 1
			ORDER BY OrderNumber ASC
		) AS tbl_category_tmp
			 JOIN  (
				SELECT  
					tbl_products.goods_code, 
					tbl_products_details.color_code,
					tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 0				
					And tbl_products.brand_code IN 
						(SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = p_brand_group_id)
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
				UNION
				SELECT  
					tbl_products.goods_code, 
					tbl_products_details.color_code,
					tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 1
					AND tbl_products_details.is_main_color		= 1
					AND tbl_products.brand_code IN 
						(SELECT brand_code FROM tbl_brands AS brand_tmp WHERE brand_tmp.group_id = p_brand_group_id)
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			) AS tbl_total_product_tmp
				ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
		GROUP BY tbl_category_tmp.ItemCode
	) AS tbl_tmp
	GROUP BY tbl_tmp.name_display
	ORDER BY tbl_tmp.OrderNumber ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_getProductColorForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_getProductColorForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_getProductColorForMenu`(IN `p_category_group_id` VARCHAR(255), IN `p_category_code` VARCHAR(255), IN `p_brand_group_id` VARCHAR(255), IN `p_brand_code` VARCHAR(255), IN `p_is_new_product` TINYINT(1))
BEGIN
	
	SET @selectStmt = CONCAT("
	SELECT 
		DISTINCT 
			color_id, 
			color_code, 
			color_name, 
			CASE 	WHEN 
					color_display IS NULL 
					OR color_display = '' 
				THEN 	
					color_name
				ELSE  
					color_display
			END AS color_display
	");
	
	SET @fromStmt = CONCAT("
	FROM 
		tbl_products_details,
		tbl_products
	");
	
	SET @whereStmt = CONCAT("
	WHERE 
		tbl_products.SeqNo = tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
		AND tbl_products.new_product			= 1 ");
	END IF;
	
	
		
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_category_group_id,"') 
		");
	END IF;	
	
	
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode 		= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode 		NOT IN ( 
					SELECT 
						ItemCode 
					FROM 
						tbl_products_category 
					WHERE 
						IsShowAsMenu = 1 
		) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.sale_off_product 		= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.new_product 			= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.is_recommended_item 		= 1  ");
	END IF;	
	
	
	
	-- IF 
	-- 	p_brand_group_id 	IS NOT NULL 
	-- 	AND p_brand_group_id 	<> '' 
	-- THEN
	-- 	
	-- END IF;	
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.brand_code 		= '",p_brand_code,"' ");
	END IF;
		
	
	
	
	SET @orderStmt = CONCAT("
	ORDER BY color_display ");
	
	 
	
	SET @selectStmtStr = CONCAT(@selectStmt, @fromStmt, @whereStmt, @orderStmt );
	
	-- INSERT INTO tbl_sys_log(sys_log) values (@selectStmtStr);
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_category_getItemForMenuByBrandGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_category_getItemForMenuByBrandGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_category_getItemForMenuByBrandGroupCode`(IN `p_brand_group_code` VARCHAR(200))
BEGIN
	SELECT 
		DISTINCT(name_display),
		name_display_en,
		SUM(total_product) AS total_product,
		SeqNo,
		RSeqNo,
		product_category_id,
		OrderNumber,
		tbl_tmp.Name,
		IsDisplay,
		IsShowAsMenu,
		create_date,
		category_banner,
		ItemCode,
		tbl_tmp.TimeStamp,
		memo,
		slug_url,
		category_status,
		parent_id,
		show_order,
		ecsite,
		category_group_id
	FROM 	(
		SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
		FROM  	(
			SELECT
				tbl_products_category.SeqNo,
				tbl_products_category.RSeqNo,
				tbl_products_category.product_category_id,
				tbl_products_category.OrderNumber,
				tbl_products_category.Name,
				tbl_products_category.IsDisplay,
				tbl_products_category.IsShowAsMenu,
				tbl_products_category.create_date,
				tbl_products_category.category_banner,
				tbl_products_category.ItemCode,
				tbl_products_category.TimeStamp,
				tbl_products_category.memo,
				tbl_products_category.slug_url,
				tbl_products_category.category_status,
				tbl_products_category.parent_id,
				tbl_products_category.show_order,
				tbl_products_category.ecsite,
				tbl_products_category.category_group_id,
				(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
					tbl_products_category.Name
				ELSE 
					tbl_products_category.name_display
				END) AS name_display, 
				tbl_products_category.name_display_en
			FROM tbl_products_category
			WHERE 	
				-- Modified: 2020/04/11
				-- ecsite 		= 1
				IsDisplay 	= 1
				AND IsShowAsMenu = 1
			ORDER BY OrderNumber ASC
		) AS tbl_category_tmp
			 JOIN  (
				SELECT  
					tbl_products.goods_code, 
					tbl_products_details.color_code,
					tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 0				
					AND tbl_products.brand_code IN 
						(SELECT brand_code 
							FROM tbl_brands AS brand_tmp 
							LEFT JOIN tbl_brands_group AS brand_group ON brand_tmp.group_id = brand_group.id
							WHERE brand_group.group_code = p_brand_group_code)
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
				UNION
				SELECT  
					tbl_products.goods_code, 
					tbl_products_details.color_code,
					tbl_products.product_itemcode
				FROM 
					tbl_products, 
					tbl_products_details 
				WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
					AND tbl_products.product_status 		= 1
					AND tbl_products_details.product_detail_status 	= 0
					AND tbl_products.is_color_show			= 1
					AND tbl_products_details.is_main_color		= 1
					AND tbl_products.brand_code IN 
						(SELECT brand_code 
							FROM tbl_brands AS brand_tmp 
							LEFT JOIN tbl_brands_group AS brand_group ON brand_tmp.group_id = brand_group.id
							WHERE brand_group.group_code = p_brand_group_code)
				GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			) AS tbl_total_product_tmp
				ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
		GROUP BY tbl_category_tmp.ItemCode
	) AS tbl_tmp
	GROUP BY tbl_tmp.name_display
	ORDER BY tbl_tmp.OrderNumber ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_getProductSizeForFilterMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_getProductSizeForFilterMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_getProductSizeForFilterMenu`(IN `p_category_code` VARCHAR(255), IN `p_is_new_product` TINYINT(1), IN `p_color_code_str` TEXT)
BEGIN
	-- SET @selectStmt = CONCAT("
	-- SELECT 
	--	DISTINCT 
	--		size_id, 
	--		size_code, 
	--		size_name, 
	--		CASE 	
	--			WHEN size_display IS NULL OR size_display = '' 
	--				THEN size_name
	--			ELSE  
	--				size_display
	--		END AS size_display
	-- ");
	
	SET @selectStmt = CONCAT("
	SELECT 
		DISTINCT 
			size_code
	");
	
	SET @fromStmt = CONCAT("
	FROM 
		tbl_products_details,
		tbl_products
	");
	SET @whereStmt = CONCAT("
	WHERE 
		tbl_products.SeqNo = tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
		AND tbl_products.new_product			= 1 ");
	END IF;
	/*
	if (p_category_code is not null and p_category_code <> '') then
		IF (p_category_code = 'new') THEN
			SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.new_product		= 1 ");
		else 
			SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.product_itemcode	= '", p_category_code, "' ");
		end if;
	end if;
	*/
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode 		= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode 		NOT IN ( 
					SELECT 
						ItemCode 
					FROM 
						tbl_products_category 
					WHERE 
						IsShowAsMenu = 1 
		) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.sale_off_product 		= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.new_product 			= 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.is_recommended_item 		= 1  ");
	END IF;	
		
			
	IF 
		p_color_code_str 	IS NOT NULL
		AND p_color_code_str 	<> ""
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products_details.color_code IN (",p_color_code_str,")");
	END IF;	
		
	SET @orderStmt = CONCAT("
	ORDER BY size_display ");
	
	 
	
	SET @selectStmtStr = CONCAT(@selectStmt, @fromStmt, @whereStmt, @orderStmt );
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr);
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_getProductSizeForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_getProductSizeForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_getProductSizeForMenu`(IN `p_category_group_id` VARCHAR(255), IN `p_category_code` VARCHAR(255), IN `p_brand_group_id` VARCHAR(255), IN `p_brand_code` VARCHAR(255), IN `p_is_new_product` TINYINT(1))
BEGIN
	SET @selectStmt = CONCAT("
	SELECT 
		DISTINCT 
			tbl_products_details.size_id, 
			tbl_products_details.size_code, 
			tbl_products_details.size_name, 
			CASE 	
				WHEN tbl_products_details.size_display IS NULL OR tbl_products_details.size_display = '' 
					THEN tbl_products_details.size_name
				ELSE  
					tbl_products_details.size_display
			END AS size_display
	");
	SET @fromStmt = CONCAT("
	FROM 
		tbl_products_details
		join tbl_products ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
		left join tbl_size ON tbl_size.size_code = tbl_products_details.size_code
	");
	SET @whereStmt = CONCAT("
	WHERE 
		
		tbl_products_details.size_code = tbl_products_details.size_code
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
	");
	IF (p_is_new_product = '1') THEN
		SET @whereStmt = CONCAT(@whereStmt, "
				AND tbl_products.new_product		= 1 ");
	END IF;
	
	
	
		
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_category_group_id,"') 
		");
	END IF;	
	
	
	
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;	
	
	
	
	-- IF 
	-- 	p_brand_group_id 	IS NOT NULL 
	-- 	AND p_brand_group_id 	<> '' 
	-- THEN
	-- 	
	-- END IF;	
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		SET @whereStmt = 
				CONCAT(@whereStmt, " 
		AND tbl_products.brand_code 		= '",p_brand_code,"' ");
	END IF;
		
	
	
	
	
	SET @orderStmt = CONCAT("
	ORDER BY tbl_size.display_order ASC ");
	
	 
	
	SET @selectStmtStr = CONCAT(@selectStmt, @fromStmt, @whereStmt, @orderStmt );
	
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	
	
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_details_updateranks` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_details_updateranks` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_details_updateranks`(IN `listgoodcolorsize` TEXT)
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_goodcode VARCHAR(50); 
DECLARE d_colorcode VARCHAR(50);
DECLARE d_sizecode VARCHAR(50);
DECLARE d_quan INT;
DECLARE dseqno VARCHAR(20) DEFAULT '';
DECLARE dnum_randk BIGINT DEFAULT 0;
WHILE INSTR(listgoodcolorsize,d_A)>0 DO
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_goodcode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_colorcode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_sizecode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_quan = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		
		SELECT Seqno INTO dseqno FROM tbl_products WHERE goods_code=d_goodcode LIMIT 1;
		SELECT num_rank INTO dnum_randk FROM tbl_products_details WHERE Rseqno=dseqno AND color_code=d_colorcode AND size_code=d_sizecode LIMIT 1;
		UPDATE tbl_products_details SET num_rank=dnum_randk+d_quan WHERE Rseqno=dseqno AND color_code=d_colorcode AND size_code=d_sizecode;
END WHILE;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_hashtag_getByCategoryGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_hashtag_getByCategoryGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_hashtag_getByCategoryGroupId`(IN `p_category_group_id` VARCHAR(200), IN `p_is_show_menu` TINYINT(1), IN `p_select_index_from` INT, IN `p_select_index_to` INT)
BEGIN
	SET @selectStmt = CONCAT("
	SELECT
		ht.*
	FROM 	tbl_products_hashtag ht
		");
		
		
	SET @conditionStmt = CONCAT("
	WHERE 
		status = 1
		AND (
			(NOW() BETWEEN  start_date AND end_date)
			OR unlimited = 1
		)
	");
	IF p_category_group_id 	IS NOT NULL AND p_category_group_id 	<> '' AND p_category_group_id 	<> '0' THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.category_group_id_str like '%;", p_category_group_id, ";%'
	");
	END IF;
	IF p_is_show_menu = 1 THEN
		SET @conditionStmt = CONCAT(@conditionStmt ,"
		AND  ht.is_show_menu = 1
	");
	END IF;
	
	SET @orderStmt = CONCAT("
	ORDER BY show_order, hashtag_code ASC
	");
	
	
	SET @selectLimitStmt = '';
	 IF p_select_index_to <> 0 THEN
	 	SET @selectLimitStmt = 
	 		CONCAT("
	 		LIMIT ",p_select_index_from,",",p_select_index_to, " ");
	 END IF;
	SET @selectStmtStrRun = CONCAT(
		@selectStmt, 
		@conditionStmt,
		@orderStmt,
		@selectLimitStmt
	);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmt2 = CONCAT("
	SELECT
		COUNT(*) as total
	FROM 	tbl_products_hashtag ht
		");
		
	SET @selectStmtStrRun2 = CONCAT(
		@selectStmt2, 
		@conditionStmt
	);
		
	
	PREPARE stmt FROM @selectStmtStrRun2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_products_options_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_products_options_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_products_options_add`(IN `listoptions` TEXT, IN `productseqno` VARCHAR(20))
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_option_name VARCHAR(255);
DECLARE d_option_value VARCHAR(255);
DELETE FROM tbl_products_options WHERE RSeqNo=productseqno;
WHILE INSTR(listoptions,d_A)>0 DO
		SET d_index = INSTR(listoptions,d_A);
		SET d_option_name = SUBSTR(listoptions,1,d_index-1);
		SET listoptions = SUBSTR(listoptions,d_index+1,CHAR_LENGTH(listoptions)-d_index+1);
		SET d_index = INSTR(listoptions,d_A);
		SET d_option_value = SUBSTR(listoptions,1,d_index-1);
	
		SET listoptions = SUBSTR(listoptions,d_index+1,CHAR_LENGTH(listoptions)-d_index+1);
		
		INSERT INTO tbl_products_options(RSeqNo,option_name,option_value)
		VALUES(productseqno,d_option_name,d_option_value);
END WHILE;
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productUpdateSearchKeyByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productUpdateSearchKeyByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productUpdateSearchKeyByBrandCode`(IN `p_search_key` VARCHAR(1000), IN `p_brand_codes` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = TRIM(p_search_key);
	SET @update_key_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = CONCAT(search_keywords ,',",p_search_key,"')
	WHERE 	brand_code IN (",p_brand_codes,")
		AND CONCAT(',',search_keywords,',') NOT LIKE '%,",p_search_key,",%'
	");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@update_key_stmt);
	
	PREPARE update_key_run FROM @update_key_stmt;
	EXECUTE update_key_run;
	DEALLOCATE PREPARE update_key_run;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productUpdateSearchKeyByGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productUpdateSearchKeyByGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productUpdateSearchKeyByGoodsCode`(IN `p_search_key` VARCHAR(1000), IN `p_goods_code` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = TRIM(p_search_key);
	SET @update_key_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = CONCAT(search_keywords ,',",p_search_key,"')
	WHERE 	goods_code IN (",p_goods_code,")
		AND CONCAT(',',search_keywords,',') NOT LIKE '%,",p_search_key,",%'
	");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@update_key_stmt);
	
	PREPARE update_key_run FROM @update_key_stmt;
	EXECUTE update_key_run;
	DEALLOCATE PREPARE update_key_run;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_productUpdateSearchKeyByItemCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_productUpdateSearchKeyByItemCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_productUpdateSearchKeyByItemCode`(IN `p_search_key` VARCHAR(1000), IN `p_item_codes` TEXT)
BEGIN
	SET p_search_key = REPLACE (p_search_key,"\\","\\\\");
	SET p_search_key = REPLACE (p_search_key,"'","\\'");
	SET p_search_key = REPLACE (p_search_key,'"','\\"');
	SET p_search_key = trim(p_search_key);
	SET @update_key_stmt = 
		CONCAT("
	UPDATE 	tbl_products 
	SET 	search_keywords = CONCAT(search_keywords ,',",p_search_key,"')
	WHERE 	product_itemcode IN (",p_item_codes,")
		AND CONCAT(',',search_keywords,',') NOT LIKE '%,",p_search_key,",%'
	");
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@update_key_stmt);
	PREPARE update_key_run FROM @update_key_stmt;
	EXECUTE update_key_run;
	DEALLOCATE PREPARE update_key_run;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_AddRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_AddRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_AddRanking`(IN `p_goodscode` VARCHAR(100), IN `p_color_code` VARCHAR(100))
BEGIN
	DECLARE _seqno varchar(100);
	DECLARE cnt int;
	DECLARE max_rank int;
	set _seqno=(select SeqNo from tbl_products where goods_code=p_goodscode limit 1);
	if(_seqno='') then
		SELECT 'fail' AS msg;
	else
		set cnt=(select count(*) from tbl_products_details where RSeqNo=_seqno and color_code=p_color_code);
		if(cnt=0) then
			SELECT 'fail' AS msg;
		else
			set cnt=(select count(*) from tbl_products_details where RSeqNo=_seqno and color_code=p_color_code and product_ranking>0);
			if(cnt>0) then
				SELECT 'exist' AS msg;
			else
				set max_rank=(select max(product_ranking) from tbl_products_details);
				if(max_rank is null) then
					set max_rank=0;
				end if;
				update tbl_products_details set product_ranking=max_rank+1 where RSeqNo=_seqno and color_code=p_color_code;
				-- lay ra thong tin
				SELECT 'ok' AS msg;
				SELECT tbl_products.`product_id` as p_id,tbl_products.`SeqNo` as p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
				Where tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND tbl_products_details.product_ranking>0 and tbl_products_details.product_ranking is not null
				and tbl_products_details.RSeqNo=_seqno and tbl_products_details.color_code=p_color_code
				group by tbl_products.`goods_code`,tbl_products_details.`color_code`
				ORDER BY tbl_products_details.`product_ranking`,tbl_products.goods_code ;
			end if;
		end if;
		
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_AddRanking_by_goodscode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_AddRanking_by_goodscode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_AddRanking_by_goodscode`(IN `p_goodscode` VARCHAR(100))
BEGIN
	DECLARE _seqno varchar(100);
	DECLARE cnt int;
	DECLARE max_rank int;
	set _seqno = (select SeqNo from tbl_products where goods_code = p_goodscode limit 1);
	if (_seqno = '') then
		SELECT 'fail' AS msg;
	else
		set cnt = (select count(*) from tbl_products_details where RSeqNo = _seqno);
		
		if (cnt=0) then
			SELECT 'fail' AS msg;
		else
			set cnt = (select count(*) from tbl_products_details where RSeqNo=_seqno and product_ranking>0);
			if (cnt>0) then
				SELECT 'exist' AS msg;
			else
				set max_rank = (select max(product_ranking) from tbl_products_details);
				if (max_rank is null) then
					set max_rank = 0;
				end if;
				update 
					tbl_products_details 
				set 
					product_ranking = max_rank + 1
				where RSeqNo = _seqno;
				-- lay ra thong tin
				SELECT 'ok' AS msg;
				SELECT 
					tbl_products.product_id as p_id,
					tbl_products.SeqNo as p_seqno,
					tbl_products.*,
					tbl_products_details.*
				FROM 
					tbl_products,
					tbl_products_details 
				Where 
					tbl_products.SeqNo = tbl_products_details.RSeqNo
					AND tbl_products_details.product_ranking > 0 
					and tbl_products_details.product_ranking is not null
					and tbl_products_details.RSeqNo = _seqno
				group by 
					tbl_products.`goods_code`
				ORDER BY 
					tbl_products_details.`product_ranking`,
					tbl_products_details.is_main_color,
					tbl_products.goods_code;
			end if;
		end if;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_Be_GetProductForAddSetProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_Be_GetProductForAddSetProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_Be_GetProductForAddSetProduct`(`p_shop_code` TEXT, `p_shop_name` TEXT, `p_address` TEXT, `p_address2` TEXT, `p_tel` TEXT, `p_shop_code_without` TEXT, IN `p_index_from` INT, IN `p_limit` INT)
BEGIN
	SET @mySQL = ' 	SELECT
				shop_id,
				shop_code,
				shop_name,
				shop_namekana,
				create_date,
				modified_date,
				shop_status,
				shop_able,
				display_name,
				postcode,
				state,
				city,
				address,
				address2,
				shop_site,
				tel,
				fax,
				note,
				SeqNo,
				RSeqNo,
				TimeStamp
			FROM
				tbl_shop
			WHERE  	
				1=1 ';
	SET @mySqlCondition = ' ';
	SET @mySqlGroupBy = ' ';
	SET @mySqlOder = ' ';
	-- Tinh toan phan trang, neu tham so index, va limit truyen vao = 0 thi SELECT ALL
	SET @mySqlLimit = '';
	IF p_limit <> 0 THEN
		-- NEU p_index_from va p_limit != 0 thi select theo index va limit truyen vao
		IF p_index_from <> 0 THEN
			SET @mySqlLimit  = CONCAT(' LIMIT ', p_index_from, ',', p_limit, '; ');
		ELSEIF p_index_from = 0 THEN
		-- NEU p_index_from  = 0 thi select theo limit truyen vao
			SET @mySqlLimit  = CONCAT(' LIMIT ', p_limit, '; ');
		END IF;
	END IF;
	IF p_shop_code IS NOT NULL AND p_shop_code <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND UPPER(shop_code) like UPPER(''%', p_shop_code , '%'') ');
	END IF;
	IF p_shop_name IS NOT NULL AND p_shop_name <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND UPPER(shop_name) like UPPER(''%', p_shop_name, '%'') ');
	END IF;
	IF p_address IS NOT NULL AND p_address <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND UPPER(address) like UPPER(''%', address, '%'') ');
	END IF;
	IF p_address2 IS NOT NULL AND p_address2 <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND UPPER(address2) like UPPER(''%', p_address2, '%'') ');
	END IF;
	IF p_tel IS NOT NULL AND p_tel <> '' THEN
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND UPPER(tel) like UPPER(''%', p_tel, '%'') ');
	END IF;
	IF p_shop_code_without IS NOT NULL AND p_shop_code_without <> '' THEN
		SET @p_shop_code_without =REPLACE(p_shop_code_without, ',', ''','''); -- replace tat ca dau , -> ','
		SET @mySqlCondition = CONCAT(@mySqlCondition, 
							' AND shop_code not in (
								SELECT  shop_code
								FROM 	tbl_shop 
								WHERE 	product_detail_code IN (''', UPPER(@p_product_detail_code_without), ''')
								) ');
	END IF;
	-- Thuc hien truy van sql lay ket qua search
	SET @selectStmt = CONCAT(@mySQL, @mySqlCondition, @mySqlGroupBy, @mySqlOder, @mySqlLimit);
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- Lay ra so luong record theo dieu dien search
	SET @getCountStatement = '	SELECT 	FOUND_ROWS() AS total_items 
					FROM 	tbl_shop
					WHERE  	1=1 ';
	SET @selectCountStmt = CONCAT(@getCountStatement, @mySqlCondition, @mySqlGroupBy);
	PREPARE countStmt FROM @selectCountStmt;
	EXECUTE countStmt;
	DEALLOCATE PREPARE countStmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_category_getItemForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_category_getItemForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_category_getItemForMenu`()
BEGIN
SELECT 
	name_display,
	name_display_en,
	SUM(total_product) AS total_product,
	SeqNo,
	RSeqNo,
	product_category_id,
	OrderNumber,
	tbl_tmp.Name,
	IsDisplay,
	IsShowAsMenu,
	create_date,
	category_banner,
	ItemCode,
	tbl_tmp.TimeStamp,
	memo,
	slug_url,
	category_status,
	parent_id,
	show_order,
	ecsite,
	category_group_id
FROM 	(
	SELECT tbl_category_tmp.* , COUNT(tbl_total_product_tmp.product_itemcode) AS total_product 
	FROM  	(
		SELECT
			tbl_products_category.SeqNo,
			tbl_products_category.RSeqNo,
			tbl_products_category.product_category_id,
			tbl_products_category.OrderNumber,
			tbl_products_category.Name,
			tbl_products_category.IsDisplay,
			tbl_products_category.IsShowAsMenu,
			tbl_products_category.create_date,
			tbl_products_category.category_banner,
			tbl_products_category.ItemCode,
			tbl_products_category.TimeStamp,
			tbl_products_category.memo,
			tbl_products_category.slug_url,
			tbl_products_category.category_status,
			tbl_products_category.parent_id,
			tbl_products_category.show_order,
			tbl_products_category.ecsite,
			tbl_products_category.category_group_id,
			(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display, 
			tbl_products_category.name_display_en
		FROM tbl_products_category
		WHERE 
			-- Modified: 2020/04/11
			-- ecsite 		= 1
			IsDisplay 	= 1
			AND IsShowAsMenu = 1
		ORDER BY OrderNumber ASC
	) AS tbl_category_tmp
		LEFT JOIN  (
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 0
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
			UNION
			SELECT  
				tbl_products.goods_code, 
				tbl_products_details.color_code,
				tbl_products.product_itemcode
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 	tbl_products.SeqNo 				= tbl_products_details.RSeqNo
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_detail_status 	= 0
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		) AS tbl_total_product_tmp
			ON tbl_total_product_tmp.product_itemcode = tbl_category_tmp.ItemCode
	GROUP BY tbl_category_tmp.ItemCode
) AS tbl_tmp
GROUP BY tbl_tmp.name_display
ORDER BY tbl_tmp.OrderNumber ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_category_getItemForMenuRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_category_getItemForMenuRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_category_getItemForMenuRanking`()
BEGIN
	
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display, 
		tbl_products_category.name_display_en
	FROM 
		tbl_products_category
	WHERE 
		-- Modified: 2020/04/11
		-- ecsite 		= 1
		IsDisplay 	= 1
		AND IsShowAsMenu = 1		
		AND ItemCode IN (
			SELECT 	
				
				tbl_products.product_itemcode 		
			FROM 
				tbl_products, 
				tbl_products_details
			WHERE 
				tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1
				AND tbl_products_details.product_ranking > 0
				AND tbl_products_details.product_ranking IS NOT NULL 
			GROUP BY product_itemcode
		)
	GROUP BY name_display
	ORDER BY OrderNumber ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_getbycode_ranking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_getbycode_ranking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_getbycode_ranking`(IN `p_group_category_id` TEXT)
BEGIN
	SET @selectProductStmt = '';
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
		-- 564108031 20/6/4 -- check multiple item
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectProductStmt = CONCAT("AND 
			(
				tbl_products.product_itemcode IN ('",@itemcode_from_group_category1,"')
				",@check_multiple_item,"
			)");
	END IF;
	
			
	SET @selectStmtStrRun = CONCAT("
	SELECT 
		tbl_products.product_id AS p_id,
		tbl_products.SeqNo 	AS p_seqno,
		tbl_products.*,
		tbl_products_details.*
	FROM 
		tbl_products, 
		tbl_products_details 
	WHERE 
		tbl_products.SeqNo = tbl_products_details.RSeqNo
		", @selectProductStmt,"
		AND tbl_products_details.product_ranking > 0
		AND tbl_products_details.product_ranking IS NOT NULL
	GROUP BY 
		tbl_products.goods_code, tbl_products_details.color_code
	ORDER BY
		tbl_products_details.product_ranking ASC,
		tbl_products_details.is_main_color DESC,
		tbl_products.goods_code ASC");
	-- insert into `tbl_sys_log`(`sys_log`) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getAllProductDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getAllProductDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getAllProductDetail`()
BEGIN
	SELECT 	
			tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status 
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			and tbl_products.goods_code <> 'MN172S31' ;
			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetHotProductByImgAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetHotProductByImgAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetHotProductByImgAll`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_top 	= 1 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code ");
	
	
	
	
	
	-- -===============================================================================
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	
	-- -===============================================================================
		
	
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			", @selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok  ");
	-- -===============================================================================	
	
			
		IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getAllProductDetailFrontend2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getAllProductDetailFrontend2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getAllProductDetailFrontend2`(IN `p_product_goods_code` VARCHAR(255))
BEGIN
	SELECT 	
			tbl_products.SeqNo 			AS product_SeqNo,
			tbl_products.RSeqNo 			AS product_RSeqNo,
			tbl_products.product_id 		AS product_product_id,
			tbl_products.product_name 		AS product_product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_product_name_display,
			tbl_products.product_category_id 	AS product_product_category_id,
			tbl_products.product_itemcode 		AS product_product_itemcode,
			tbl_products.product_itemname 		AS product_product_itemname,
			tbl_products.product_detail_short 	AS product_product_detail_short,
			tbl_products.product_detail 		AS product_product_detail,
			tbl_products.price 			AS product_price,
			tbl_products.create_date 		AS product_create_date,
			tbl_products.hot_product 		AS product_hot_product,
			tbl_products.brand_id 			AS product_brand_id,
			tbl_products.brand_name 		AS product_brand_name,
			tbl_products.goods_code 		AS product_goods_code,
			tbl_products.brand_code 		AS product_brand_code,
			tbl_products.sale_off_product 		AS product_sale_off_product,
			tbl_products.set_id 			AS product_set_id,
			tbl_products.product_setmain 		AS product_product_setmain,
			tbl_products.product_image 		AS product_product_image,
			tbl_products.product_image_details 	AS product_product_image_details,
			tbl_products.new_product 		AS product_new_product,
			tbl_products.product_saleoff_price 	AS product_product_saleoff_price,
			tbl_products.product_status 		AS product_product_status,
			tbl_products.MaterialID 		AS product_MaterialID,
			tbl_products.MaterialName 		AS product_MaterialName,
			tbl_products.hashtag_name 		AS product_hashtag_name,
			tbl_products.slug_url 			AS product_slug_url,
			tbl_products.link_img_instagram 	AS product_link_img_instagram,
			tbl_products.caption_instagram 		AS product_caption_instagram,
			tbl_products.hashtag_instagram 		AS product_hashtag_instagram,
			tbl_products.prihtml 			AS product_prihtml,
			tbl_products.PurchasePriceNoTax 	AS product_PurchasePriceNoTax,
			tbl_products.SaleOffPurchasePriceNoTax 	AS product_SaleOffPurchasePriceNoTax,
			tbl_products.is_sold_out 		AS product_is_sold_out,
			tbl_products.is_pre_order 		AS product_is_pre_order,
			tbl_products.active_date 		AS product_active_date,
			tbl_products_details.SeqNo 		AS pro_detail_SeqNo,
			tbl_products_details.RSeqNo 		AS pro_detail_RSeqNo,
			tbl_products_details.product_detail_id 	AS pro_detail_product_detail_id,
			tbl_products_details.product_id 	AS pro_detail_product_id,
			tbl_products_details.barcode 		AS pro_detail_barcode,
			tbl_products_details.color_id 		AS pro_detail_color_id,
			tbl_products_details.color_code 	AS pro_detail_color_code,
			tbl_products_details.color_name 	AS pro_detail_color_name,
			tbl_products_details.size_id 		AS pro_detail_size_id,
			tbl_products_details.size_code 		AS pro_detail_size_code,
			tbl_products_details.size_name 		AS pro_detail_size_name,
			tbl_products_details.product_detail_price 		AS pro_detail_product_detail_price,
			tbl_products_details.product_detail_saleoff_price 	AS pro_detail_product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax 	AS pro_detail_product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_status 		AS pro_detail_product_detail_status,
			tbl_products_details.product_detail_top 		AS pro_detail_product_detail_top,
			tbl_products_details.product_detail_order 		AS pro_detail_product_detail_order,
			tbl_products_details.num_rank 		AS pro_detail_num_rank,
			tbl_products_details.color_slug_url 	AS pro_detail_color_slug_url,
			tbl_products_details.order_status 	AS pro_detail_order_status 
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo AND
			Tbl_products_details.product_goods_code = p_product_goods_code;
			
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetItemForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetItemForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetItemForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetBestSeller` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetBestSeller` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetBestSeller`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = '';
SET @selectOrderByRank = 
		CONCAT("
			ORDER BY rank 	asc ");
			
SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	SET @selectStmt1 = 
		CONCAT(
		"
		SELECT product_info_1.* ,
			(@rownum := @rownum + 1) + ",indexFrom," AS rank FROM ( ");
	
	-- get select fields from function
	SET @selectStmt2 = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
				
	IF (p_customer_id = '') THEN
		SET @selectStmt2 =  CONCAT(@selectStmt2,",
				'0' AS is_wished ");
	END IF;
	
	
	
	
	
	SET @selectFromStmt = 
		CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 
				tbl_products.SeqNo = tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 ");
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
			
			
	SET @selectGroupStmt =  CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code  ");
			
			
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	
	SET @selectUnionStmt = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt2, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt2, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	-- -===============================================================================			
	SET @selectStmtStr = CONCAT("SELECT * FROM ( ", @selectStmt1, @selectUnionStmt, "
		) AS product_info_1,
			(SELECT @rownum := 0) r
			ORDER BY pro_detail_num_rank 	DESC,
				pro_detail_product_detail_price ASC,
				product_SeqNo 	DESC
		) AS product_info_tmp   ");
		
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_tmp.product_product_id
				AND wish_list_info.color_code	= product_info_tmp.pro_detail_color_code 
			");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,  "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @selectOrderByRank, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",@selectStmtStr, @selectJoinWishListStmt,  "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		 ", @selectOrderByRank, " ) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetItemsNotNewForTopOk` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetItemsNotNewForTopOk` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetItemsNotNewForTopOk`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			<> 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
		
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF(p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetBestSellerByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetBestSellerByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetBestSellerByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
SET @selectOrderByRank = 
		CONCAT("
			ORDER BY rank 	asc  ");
			
SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	SET @selectStmt1 = 
		CONCAT(
		"
		SELECT product_info_1.* ,
			(@rownum := @rownum + 1) + ",indexFrom," AS rank FROM ( ");
	
			
	-- get select fields from function
	SET @selectStmt2 = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
				'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
			FROM 
				tbl_products, 
				tbl_products_details 
			WHERE 
				tbl_products.SeqNo = tbl_products_details.RSeqNo 
				AND tbl_products_details.product_detail_status 	= 0 
				AND tbl_products.product_status 		= 1 ");
				
				
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, "
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)				
				");
				
				
				
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
				AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
				AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
				AND tbl_products.new_product = 1 ");
	END IF;	
			
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
				AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
				AND tbl_products.is_color_show			= 1
				AND tbl_products_details.is_main_color		= 1 ");
			
			
			
	SET @selectGroupStmt =  CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code  ");
			
			
			
	
	SET @selectUnionStmt =  CONCAT("		
			SELECT * FROM ( ",
					@selectStmt2, @fullColorSelectFromStmt, @selectGroupStmt, "
					UNION ", 
					@selectStmt2, @fixedColorSelectFromStmt, @selectGroupStmt,"
			)  AS product_union_info " );
						
	SET @selectStmtStr = CONCAT("SELECT * FROM ( ", @selectStmt1, @selectUnionStmt, "
		) AS product_info_1,
			(SELECT @rownum := 0) r
			ORDER BY pro_detail_num_rank 	DESC,
				pro_detail_product_detail_price ASC,
				product_SeqNo 	DESC
		) AS product_info 
			LEFT JOIN (
				SELECT 
					GoodCode,
					ColorCode,
					CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN SUM(tbl_stock_num.StockNum) ELSE '0' END AS stock_num
				FROM 
					tbl_stock_num  ");
	IF p_shop_list <> "'-1999'" THEN
	SET @selectStmtStr = CONCAT(@selectStmtStr, "
				WHERE 	ShopCode IN (",   p_shop_list ,") ");
	END IF;
	SET @selectStmtStr = CONCAT(@selectStmtStr, "
				GROUP BY GoodCode, ColorCode
			) AS stock_num_info 
				ON stock_num_info.GoodCode = product_info.product_goods_code
				AND stock_num_info.ColorCode = product_info.pro_detail_color_code   ");
		
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code 
			");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			", @selectOrderByRank, "
			",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",
					@selectStmt2, @fullColorSelectFromStmt, @selectGroupStmt, "
					UNION ", 
					@selectStmt2, @fixedColorSelectFromStmt, @selectGroupStmt," ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetHotProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetHotProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetHotProduct`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_top 	= 1 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
			
		IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- Modified: 20190403
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_getlistbyrecommended` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_getlistbyrecommended` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_getlistbyrecommended`(IN `p_good_code` TEXT, IN `p_shoplist` TEXT)
BEGIN
	
	SET @getStockNumberStmt = getStockNumberStmt(
			'tmp_p',
			'goods_code',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shoplist
	);
	
	SET @selectStmt = CONCAT(
	"
	SELECT 
		tmp_p.*,
		", @getStockNumberStmt,"
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			tbl_products_details.color_display,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			tbl_products.product_status = 1
			AND tbl_products_details.product_detail_status = 0
			AND (tbl_products.is_color_show = 0 OR (tbl_products.is_color_show = 1 AND tbl_products_details.is_main_color = 1))
			AND tbl_products.goods_code IN (",p_good_code,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
	");
	
	 -- insert into tbl_sys_log (sys_log) values (concat("selectStmt recommended: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetItemForTop_Seiwa` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetItemForTop_Seiwa` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetItemForTop_Seiwa`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1  
			AND tbl_products_details.product_detail_top     = 1
			");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getListRankByGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getListRankByGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getListRankByGroup`(IN `p_category_code` VARCHAR(10))
BEGIN
	IF(p_category_code <> '') THEN
	Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		CASE WHEN p.product_name_display IS NULL OR p.product_name_display = '' THEN p.product_name ELSE  p.product_name_display END AS product_product_name_display,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url 
	from 
		tbl_products as p , 
		tbl_products_details as pd 
	where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 and p.product_itemcode in (SELECT ItemCode FROM tbl_products_category WHERE category_group_id IN(p_category_code) ) AND p.product_status =1
		Group by p.goods_code,pd.color_code order by pd.num_rank desc,p.goods_code asc,pd.color_code asc LIMIT 10) as tmp_p
		LEFT JOIN
				(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode  ="05"
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode;
	ELSE
	Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		CASE WHEN p.product_name_display IS NULL OR p.product_name_display = '' THEN p.product_name ELSE  p.product_name_display END AS product_product_name_display,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 AND p.product_status =1
		Group by p.goods_code,pd.color_code order by pd.num_rank desc,p.goods_code asc,pd.color_code asc LIMIT 10) as tmp_p
		LEFT JOIN
				(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode  ="05"
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode;
		END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetListNumSortSetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetListNumSortSetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetListNumSortSetting`(IN `p_keyword` TEXT, IN `p_whereCondition` TEXT, IN `p_is_get_product_out_of_stock_not_hide` TINYINT, IN `p_shop_list` TEXT, IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SET @selectWhereStmtStr_1 = '';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, '
			AND (
				tbl_products.is_hide_while_out_of_stock = 0
				OR tbl_products.is_hide_while_out_of_stock IS NULL
			)
		');
	END IF;
	
	IF (p_keyword <> '') THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			AND (
				tbl_products.product_name like '%", p_keyword,"%'
				OR tbl_products.goods_code like '%", p_keyword,"%' 
			) 
		");
	END IF;
	
	IF (p_whereCondition is not null ) THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			",p_whereCondition
		);
	END IF;
	
	
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_products_details',
		'product_goods_code',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	
	
	
	SET @selectStmtStr = CONCAT("
	SELECT 	all_product_tmp.*
	FROM (
		SELECT 
			tbl_products.`product_id` AS p_id,
			tbl_products.`SeqNo` AS p_seqno,
			tbl_products.* ,
			tbl_products_details.product_detail_id,
			tbl_products_details.barcode,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_display,
			tbl_products_details.color_name,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_display,
			tbl_products_details.size_name,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_status,
			tbl_products_details.product_detail_top,
			tbl_products_details.product_detail_order,
			tbl_products_details.num_rank,
			tbl_products_details.color_slug_url,
			tbl_products_details.order_status,
			tbl_products_details.is_main_color,
			tbl_products_details.num_order,
			tbl_products_details.Individual_Color_Name,
			tbl_products_details.product_detail_color_status,
			tbl_products_details.product_ranking,
			
			tbl_products. goods_code AS product_goods_code,
			tbl_products_details. color_code AS pro_detail_color_code,
			", @getStockNumberStmt2, "
		FROM 
			tbl_products
			LEFT JOIN tbl_products_details 
				ON tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` 	
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		Where 
			(
				tbl_products.product_status <> 2 
			)",
			@selectWhereStmtStr_1
			,"
		GROUP BY
			tbl_products.`goods_code`,
			tbl_products_details.`color_code`
		ORDER BY 
			tbl_products_details.`num_order` desc,
			tbl_products.create_date,
			tbl_products.goods_code DESC 
	) AS all_product_tmp	
	");
	SET @selectWhereStmtStr = ' ';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr = '
	WHERE 
		(	
			stock_num IS NULL
			OR stock_num <= 0
		)
		';
	END IF;
	
	-- 370912118: 03: sua lai sap xep
	SET @orderStmt = '
	ORDER BY 
		all_product_tmp.goods_code ASC,
		all_product_tmp.num_order DESC,
		all_product_tmp.create_date
	';
	-- 
	
	SET @selectLimitStmtStr = CONCAT("
		LIMIT ",p_skip,", ",p_limit,"
	");
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectWhereStmtStr, @orderStmt, @selectLimitStmtStr);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",
		@selectStmtStr, @selectWhereStmtStr, @orderStmt, " 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItemsForTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItemsForTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItemsForTop`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetListNumSortSettingByGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetListNumSortSettingByGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetListNumSortSettingByGoodsCode`(IN `p_keyword` TEXT, IN `p_whereCondition` TEXT, IN `p_is_get_product_out_of_stock_not_hide` TINYINT, IN `p_shop_list` TEXT, IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SET @selectWhereStmtStr_1 = '';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, '
			AND (
				tbl_products.is_hide_while_out_of_stock = 0
				OR tbl_products.is_hide_while_out_of_stock IS NULL
			)
		');
	END IF;
	
	IF (p_keyword <> '') THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			AND (
				tbl_products.product_name like '%", p_keyword,"%'
				OR tbl_products.goods_code like '%", p_keyword,"%' 
			) 
		");
	END IF;
	
	IF (p_whereCondition is not null ) THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			",p_whereCondition
		);
	END IF;
	
	
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_products_details',
		'product_goods_code',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	
	
	
	SET @selectStmtStr = CONCAT("
	SELECT 	all_product_tmp.*
	FROM (
		SELECT 
			tbl_products.`product_id` AS p_id,
			tbl_products.`SeqNo` AS p_seqno,
			tbl_products.* ,
			tbl_products_details.product_detail_id,
			tbl_products_details.barcode,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_display,
			tbl_products_details.color_name,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_display,
			tbl_products_details.size_name,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_status,
			tbl_products_details.product_detail_top,
			tbl_products_details.product_detail_order,
			tbl_products_details.num_rank,
			tbl_products_details.color_slug_url,
			tbl_products_details.order_status,
			tbl_products_details.is_main_color,
			tbl_products_details.num_order,
			tbl_products_details.Individual_Color_Name,
			tbl_products_details.product_detail_color_status,
			tbl_products_details.product_ranking,
			
			tbl_products. goods_code AS product_goods_code,
			tbl_products_details. color_code AS pro_detail_color_code,
			", @getStockNumberStmt2, "
		FROM 
			tbl_products
			LEFT JOIN tbl_products_details 
				ON tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` 	
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		Where 
			(
				tbl_products.product_status <> 2 
			)",
			@selectWhereStmtStr_1
			,"
		GROUP BY
			tbl_products.`goods_code`,
			tbl_products_details.`color_code`
		ORDER BY 
			tbl_products_details.`num_order` desc,
			tbl_products.create_date,
			tbl_products.goods_code DESC 
	) AS all_product_tmp	
	");
	SET @selectWhereStmtStr = ' ';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr = '
	WHERE 
		(	
			stock_num IS NULL
			OR stock_num <= 0
		)
		';
	END IF;
	
	-- 370912118: 03: sua lai sap xep
	SET @orderStmt = '
	ORDER BY 
		all_product_tmp.goods_code ASC,
		all_product_tmp.num_order DESC,
		all_product_tmp.create_date
	';
	-- 
	
	SET @selectLimitStmtStr = CONCAT("
		LIMIT ",p_skip,", ",p_limit,"
	");
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectWhereStmtStr, @orderStmt, @selectLimitStmtStr);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",
		@selectStmtStr, @selectWhereStmtStr, @orderStmt, " 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetPickupItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetPickupItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetPickupItem`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_recommended_item			= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetListNumSortSettingByNumber` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetListNumSortSettingByNumber` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetListNumSortSettingByNumber`(IN `p_keyword` TEXT, IN `p_whereCondition` TEXT, IN `p_is_get_product_out_of_stock_not_hide` TINYINT, IN `p_shop_list` TEXT, IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SET @selectWhereStmtStr_1 = '';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, '
			AND (
				tbl_products.is_hide_while_out_of_stock = 0
				OR tbl_products.is_hide_while_out_of_stock IS NULL
			)
		');
	END IF;
	
	IF (p_keyword <> '') THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			AND (
				tbl_products.product_name like '%", p_keyword,"%'
				OR tbl_products.goods_code like '%", p_keyword,"%' 
			) 
		");
	END IF;
	
	IF (p_whereCondition IS NOT NULL ) THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			",p_whereCondition
		);
	END IF;
	
	
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_products_details',
		'product_goods_code',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	-- Modified: 2020/01/06
	-- Sua doan if(sum(tbl_products_details.product_detail_status)=count(tbl_products_details.product_detail_status),1,0) as product_detail_status,
	-- vi can kiem tra product_detail_status cua tat ca cac size
	SET @selectStmtStr = CONCAT("
	SELECT 	all_product_tmp.*
	FROM (
		SELECT 
			tbl_products.`product_id` AS p_id,
			tbl_products.`SeqNo` AS p_seqno,
			tbl_products.* ,
			tbl_products_details.product_detail_id,
			tbl_products_details.barcode,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_display,
			tbl_products_details.color_name,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_display,
			tbl_products_details.size_name,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_saleoff_price,
			if(sum(tbl_products_details.product_detail_status)=count(tbl_products_details.product_detail_status),1,0) as product_detail_status,
			tbl_products_details.product_detail_top,
			tbl_products_details.product_detail_order,
			tbl_products_details.num_rank,
			tbl_products_details.color_slug_url,
			tbl_products_details.order_status,
			tbl_products_details.is_main_color,
			tbl_products_details.num_order,
			tbl_products_details.Individual_Color_Name,
			tbl_products_details.product_detail_color_status,
			tbl_products_details.product_ranking,
			
			tbl_products. goods_code AS product_goods_code,
			tbl_products_details. color_code AS pro_detail_color_code,
			", @getStockNumberStmt2, "
		FROM 
			tbl_products,
			tbl_products_details,
			tbl_brands,
			tbl_products_category
		Where 
			(
				tbl_products.product_status <> 2 
				AND tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` 
				AND tbl_products.brand_code = tbl_brands.brand_code
				AND tbl_products.product_itemcode = tbl_products_category.ItemCode
			)",
			@selectWhereStmtStr_1
			,"
		GROUP BY
			tbl_products.`goods_code`,
			tbl_products_details.`color_code`
		ORDER BY 
			tbl_products_details.`num_order` desc,
			tbl_products.create_date,
			tbl_products.goods_code DESC 
	) AS all_product_tmp	
	");
	-- Modified: 2021/10/29
	-- Son sua ma S21102895 bo so ton trong tinh so tong
	
	SET @selectStmtStr22 = CONCAT("
	SELECT 	all_product_tmp.*
	FROM (
		SELECT 
			tbl_products.`product_id` AS p_id,
			tbl_products.`SeqNo` AS p_seqno,
			tbl_products.* ,
			tbl_products_details.product_detail_id,
			tbl_products_details.barcode,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_display,
			tbl_products_details.color_name,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_display,
			tbl_products_details.size_name,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_saleoff_price,
			if(sum(tbl_products_details.product_detail_status)=count(tbl_products_details.product_detail_status),1,0) as product_detail_status,
			tbl_products_details.product_detail_top,
			tbl_products_details.product_detail_order,
			tbl_products_details.num_rank,
			tbl_products_details.color_slug_url,
			tbl_products_details.order_status,
			tbl_products_details.is_main_color,
			tbl_products_details.num_order,
			tbl_products_details.Individual_Color_Name,
			tbl_products_details.product_detail_color_status,
			tbl_products_details.product_ranking,
			
			tbl_products. goods_code AS product_goods_code,
			tbl_products_details. color_code AS pro_detail_color_code,
			0 AS stock_num
		FROM 
			tbl_products,
			tbl_products_details,
			tbl_brands,
			tbl_products_category
		Where 
			(
				tbl_products.product_status <> 2 
				AND tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` 
				AND tbl_products.brand_code = tbl_brands.brand_code
				AND tbl_products.product_itemcode = tbl_products_category.ItemCode
			)",
			@selectWhereStmtStr_1
			,"
		GROUP BY
			tbl_products.`goods_code`,
			tbl_products_details.`color_code`
		ORDER BY 
			tbl_products_details.`num_order` desc,
			tbl_products.create_date,
			tbl_products.goods_code DESC 
	) AS all_product_tmp	
	");
	
	SET @selectWhereStmtStr = ' ';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr = '
	WHERE 
		(	
			stock_num IS NULL
			OR stock_num <= 0
		)
		';
	END IF;
	
	-- 370912118: 03: sua lai sap xep
	SET @orderStmt = '
	ORDER BY 
		all_product_tmp.num_order DESC,
		all_product_tmp.goods_code ASC,
		all_product_tmp.create_date
	';
	-- 
	
	SET @selectLimitStmtStr = CONCAT("
		LIMIT ",p_skip,", ",p_limit,"
	");
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectWhereStmtStr, @orderStmt, @selectLimitStmtStr);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",
		@selectStmtStr22, @selectWhereStmtStr, @orderStmt, " 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetListNumSortSettingByNumberRS` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetListNumSortSettingByNumberRS` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetListNumSortSettingByNumberRS`(IN `p_keyword` TEXT, IN `p_whereCondition` TEXT, IN `p_is_get_product_out_of_stock_not_hide` TINYINT, IN `p_shop_list` TEXT, IN `p_skip` INT, IN `p_limit` INT, IN `d_start` DATE, IN `d_end` DATE)
BEGIN
	-- DECLARE @time_condition TEXT DEFAULT '';
	SET @selectWhereStmtStr_1 = '';
	SET @time_condition  = '';
	If (d_start <> '') Then
		if (d_end <> '') Then
			SET @time_condition  = CONCAT("AND tbl_order_detail.timestamp >= DATE '",d_start,"' AND tbl_order_detail.timestamp <= DATE '",d_end,"'"); 
		else
			SET @time_condition  = CONCAT("AND tbl_order_detail.timestamp >= DATE '",d_start,"'"); 
		end if;
	end if;
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@time_condition);
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, '
			AND (
				tbl_products.is_hide_while_out_of_stock = 0
				OR tbl_products.is_hide_while_out_of_stock IS NULL
			)
		');
	END IF;
	
	IF (p_keyword <> '') THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			AND (
				tbl_products.product_name like '%", p_keyword,"%'
				OR tbl_products.goods_code like '%", p_keyword,"%' 
			) 
		");
	END IF;
	
	IF (p_whereCondition IS NOT NULL ) THEN 
		SET @selectWhereStmtStr_1 =  CONCAT(@selectWhereStmtStr_1, "
			",p_whereCondition
		);
	END IF;
	
	
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_products_details',
		'product_goods_code',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@start_ );
	-- Modified: 2020/01/06
	-- Sua doan if(sum(tbl_products_details.product_detail_status)=count(tbl_products_details.product_detail_status),1,0) as product_detail_status,
	-- vi can kiem tra product_detail_status cua tat ca cac size
	SET @selectStmtStr = CONCAT("
	SELECT 	all_product_tmp.*
	FROM (
		SELECT 
			tbl_products.`product_id` AS p_id,
			tbl_products.`SeqNo` AS p_seqno,
			tbl_products.* ,
			tbl_products_details.product_detail_id,
			tbl_products_details.barcode,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_display,
			tbl_products_details.color_name,
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_display,
			tbl_products_details.size_name,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products_details.product_detail_saleoff_price,
			if(sum(tbl_products_details.product_detail_status)=count(tbl_products_details.product_detail_status),1,0) as product_detail_status,
			tbl_products_details.product_detail_top,
			tbl_products_details.product_detail_order,
			tbl_products_details.num_rank,
			tbl_products_details.color_slug_url,
			tbl_products_details.order_status,
			tbl_products_details.is_main_color,
			tbl_products_details.num_order,
			tbl_products_details.Individual_Color_Name,
			tbl_products_details.product_detail_color_status,
			tbl_products_details.product_ranking,
			
			tbl_products. goods_code AS product_goods_code,
			tbl_products_details. color_code AS pro_detail_color_code,
			tbl_order_detail.quantity,
			tbl_order_detail.timestamp as time_condition,
			tbl_order_detail.quantity * tbl_products_details.product_detail_price AS total,
			", @getStockNumberStmt2, "
		FROM 
			tbl_products
			LEFT JOIN tbl_products_details 
				ON tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` 	
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			LEFT JOIN tbl_order_detail
				ON tbl_products.goods_code = tbl_order_detail.goods_code
		Where 
			(
				tbl_products.product_status <> 2 
				",@time_condition,"
			)",
			@selectWhereStmtStr_1 
			,"
		GROUP BY
			tbl_products.`goods_code`,
			tbl_products_details.`color_code`
		ORDER BY 
			tbl_products_details.`num_order` desc,
			tbl_products.create_date,
			tbl_products.goods_code DESC 
	) AS all_product_tmp	
	");
	SET @selectWhereStmtStr = ' ';
	
	IF (p_is_get_product_out_of_stock_not_hide = 1) THEN
		SET @selectWhereStmtStr = '
	WHERE 
		(	
			stock_num IS NULL
			OR stock_num <= 0
		)
		';
	END IF;
	
	-- 370912118: 03: sua lai sap xep
	SET @orderStmt = '
	ORDER BY 
		all_product_tmp.num_order DESC,
		all_product_tmp.goods_code ASC,
		all_product_tmp.create_date
	';
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@stoctStmt1);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectStmtStr);
	SET @selectLimitStmtStr = CONCAT("
		LIMIT ",p_skip,", ",p_limit,"
	");
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectWhereStmtStr, @orderStmt, @selectLimitStmtStr);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ",
		@selectStmtStr, @selectWhereStmtStr, @orderStmt, " 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getListRank` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getListRank` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getListRank`(IN `p_category_code` VARCHAR(10))
BEGIN
	IF(p_category_code = 'new') THEN
	Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		CASE WHEN p.product_name_display IS NULL OR p.product_name_display = '' THEN p.product_name ELSE  p.product_name_display END AS product_product_name_display,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url 
	from 
		tbl_products as p , 
		tbl_products_details as pd 
	where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 and p.product_itemcode = p_category_code AND p.product_status =1
		Group by p.goods_code,pd.color_code order by pd.num_rank desc,p.goods_code asc,pd.color_code asc LIMIT 10) as tmp_p
		LEFT JOIN
				(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode  ="05"
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode;
	ELSEIF(p_category_code <> '') THEN
	Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		CASE WHEN p.product_name_display IS NULL OR p.product_name_display = '' THEN p.product_name ELSE  p.product_name_display END AS product_product_name_display,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url 
	from 
		tbl_products as p , 
		tbl_products_details as pd 
	where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 and p.product_itemcode = p_category_code AND p.product_status =1
		Group by p.goods_code,pd.color_code order by pd.num_rank desc,p.goods_code asc,pd.color_code asc LIMIT 10) as tmp_p
		LEFT JOIN
				(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode  ="05"
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode;
	ELSE
	Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		CASE WHEN p.product_name_display IS NULL OR p.product_name_display = '' THEN p.product_name ELSE  p.product_name_display END AS product_product_name_display,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 AND p.product_status =1
		Group by p.goods_code,pd.color_code order by pd.num_rank desc,p.goods_code asc,pd.color_code asc LIMIT 10) as tmp_p
		LEFT JOIN
				(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode  ="05"
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode;
		END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductBySetProductId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductBySetProductId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductBySetProductId`(IN `p_set_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",(SELECT CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN "'-9999'" ELSE set_content_for_search END FROM tbl_set_of_products WHERE set_id = p_set_id),") ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- SET @selectLimitStmt = CONCAT("
	-- 	LIMIT ",indexFrom,",",indexLimit," ");
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		0,
		p_shop_list
	);
		
	
	SET @selectLimitStmt = CONCAT(" ");
	SET @selectStmtStr = CONCAT("
	SELECT product_info.*, 
	",@getStockNumberStmt2,"
	 FROM ( 
		", @selectStmt, "
		", @selectFromStmt,"
		", @selectGroupStmt,"
		", @orderStmt,"
		", @selectLimitStmt, "
	) AS product_info 
	");
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt);
 	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewHotItem_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewHotItem_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewHotItem_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_recommended_item            = 1
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		","
			ORDER BY product_time_stamp DESC
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductBySetProductIdFullSize` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductBySetProductIdFullSize` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductBySetProductIdFullSize`(IN `p_set_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ---------------------------------
	SET @orderStmt = CONCAT(" ORDER BY  FIELD(CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code),",(SELECT 
				CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN 
					"'-9999'" 
				ELSE 
					set_content_for_search 
				END 
			FROM
				tbl_set_of_products 
				WHERE set_id = p_set_id
			),"),product_goods_code 	ASC  
					 ");
	-- ---------------------------------
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList () ;
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN 
		SET @selectStmt = CONCAT(
			@selectStmt, ",
			'0' AS is_wished "
	) ;
	END IF ;
	
	SET @selectFromStmt = CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",
			(SELECT 
				CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN 
					"'-9999'" 
				ELSE 
					set_content_for_search 
				END 
			FROM
				tbl_set_of_products 
				WHERE set_id = p_set_id
			),
			") "
	) ;
	
	SET @selectGroupStmt = CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code "
	) ;
	SET @selectLimitStmt = CONCAT(" ") ;
	
	SET @getStockNumberStmt1 = getStockNumberStmt(
		'all_product_tmp',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'',
		1,
		1,
		1,
		0,
		p_shop_list
	);	
	
	SET @selectStmtStr = CONCAT(
	"SELECT 
		all_product_tmp.*,
		", @getStockNumberStmt1, "
		
	FROM ( ",
		@selectStmt,
		@selectFromStmt,
		@selectGroupStmt,
		@orderStmt,
		@selectLimitStmt,
	"
	) AS all_product_tmp ");
	
	IF (p_customer_id <> '') 
	THEN SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				size_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ", p_customer_id, "
			GROUP BY product_id, color_code, size_code
		) AS wish_list_info
		ON wish_list_info.product_id 	= all_product_tmp.product_product_id
		AND wish_list_info.color_code	= all_product_tmp.pro_detail_color_code
	") ;
	ELSE 
		SET @selectJoinWishListStmt = " " ;
	END IF ;
	SET @selectStmtStr = CONCAT(
		@selectStmtStr,
		@selectJoinWishListStmt
	) ;
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr ;
	EXECUTE stmt ;
	DEALLOCATE PREPARE stmt ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItems` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItems` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItems`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log(sys_log) value (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductBySetProductIdFullSize2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductBySetProductIdFullSize2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductBySetProductIdFullSize2`(IN `p_set_content` VARCHAR(500), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ---------------------------------
	SET @orderStmt = ' ORDER BY product_goods_code 	ASC,pro_detail_color_code, pro_detail_size_code ' ;
	-- ---------------------------------
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList () ;
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN 
		SET @selectStmt = CONCAT(
			@selectStmt, ",
			'0' AS is_wished "
	) ;
	END IF ;
	
	SET @selectFromStmt = CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",p_set_content,")
	");
	
	SET @selectGroupStmt = CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code "
	) ;
	SET @selectLimitStmt = CONCAT(" ") ;
	
	SET @getStockNumberStmt1 = getStockNumberStmt(
		'all_product_tmp',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'',
		1,
		1,
		1,
		0,
		p_shop_list
	);	
	
	SET @selectStmtStr = CONCAT(
	"SELECT 
		all_product_tmp.*,
		", @getStockNumberStmt1, "
		
	FROM ( ",
		@selectStmt,
		@selectFromStmt,
		@selectGroupStmt,
		@orderStmt,
		@selectLimitStmt,
	"
	) AS all_product_tmp ");
	
	IF (p_customer_id <> '') 
	THEN SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				size_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ", p_customer_id, "
			GROUP BY product_id, color_code, size_code
		) AS wish_list_info
		ON wish_list_info.product_id 	= all_product_tmp.product_product_id
		AND wish_list_info.color_code	= all_product_tmp.pro_detail_color_code
	") ;
	ELSE 
		SET @selectJoinWishListStmt = " " ;
	END IF ;
	SET @selectStmtStr = CONCAT(
		@selectStmtStr,
		@selectJoinWishListStmt
	) ;
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr ;
	EXECUTE stmt ;
	DEALLOCATE PREPARE stmt ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductBySetProductOther` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductBySetProductOther` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductBySetProductOther`(IN `p_set_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			(
				SELECT COUNT(*) FROM tbl_wish_list 
				WHERE customer_id	= ",p_customer_id,"
					AND tbl_wish_list.product_id = tbl_products.product_id
					AND tbl_wish_list.color_code = tbl_products_details.color_code
				LIMIT 1
			) AS is_wished");
	ELSE
		SET @selectJoinWishListStmt = "
			'0' AS is_wished";
	END IF;
	
	SET @selectStmt = CONCAT(@selectStmt,",",@selectJoinWishListStmt);
	
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND CONCAT(tbl_products.goods_code,'_',tbl_products_details.color_code) IN (",(SELECT CASE WHEN set_content_for_search IS NULL OR set_content_for_search = '' THEN "'-9999'" ELSE set_content_for_search END FROM tbl_set_of_products_other WHERE set_id = p_set_id),") ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- SET @selectLimitStmt = CONCAT("
	-- 	LIMIT ",indexFrom,",",indexLimit," ");
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		0,
		p_shop_list
	);
		
	
	SET @selectLimitStmt = CONCAT(" ");
	SET @selectStmtStr = CONCAT("
	SELECT product_info.*,
	",@getStockNumberStmt2,"
	 FROM ( 
		", @selectStmt, "
		", @selectFromStmt,"
		", @selectGroupStmt,"
		", @orderStmt,"
		", @selectLimitStmt, "
	) AS product_info 
	");
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr);
 	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItemsForTopByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItemsForTopByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItemsForTopByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			AND tbl_products_details.product_detail_top 	= 1 
			");
	if 
		p_group_category_id is not null 
		and p_group_category_id <> '' 
		AND p_group_category_id <> '0' 
	then
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	end if;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
		INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductPriceByCodeAndColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductPriceByCodeAndColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductPriceByCodeAndColor`(IN `p_goods_code` VARCHAR(100), IN `p_color_code` VARCHAR(100))
BEGIN
	SELECT 
		tbl_products_details.product_detail_price,
		tbl_products_details.product_detail_saleoff_price,
		tbl_products_details.product_detail_price_no_tax,
		tbl_products_details.product_detail_saleoff_price_no_tax,
		tbl_products_details.product_goods_code,
		tbl_products.sale_off_product
	FROM
		tbl_products_details,
		tbl_products
	WHERE 
		tbl_products.SeqNo 				= tbl_products_details.RSeqNo
		and tbl_products.product_status 		= 1
		AND tbl_products_details.product_detail_status 	= 0
		AND tbl_products_details.product_goods_code 	= p_goods_code
		and tbl_products_details.color_code 		= p_color_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItemsForTopOk` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItemsForTopOk` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItemsForTopOk`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			AND tbl_products_details.product_detail_top 	= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	SET @shop_list = '';
	IF p_shop_list <> "'-1999'" THEN
		SET @shop_list = CONCAT("AND ShopCode IN (", p_shop_list ,") ");
	END IF;
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					", @shop_list ," 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetReArrival` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetReArrival` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetReArrival`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_restock_item			= 1  ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
	SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItemsImageAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItemsImageAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItemsImageAll`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code");
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	
	
	
	
	
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			", @selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt, "
		) AS product_info
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRelatedProductForMediaGift` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRelatedProductForMediaGift` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRelatedProductForMediaGift`(`p_media_id` TEXT)
BEGIN
	SET @gift_goods_code_for_search = '';
	SELECT CASE WHEN gift_goods_code_for_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE gift_goods_code_for_search  END INTO @gift_goods_code_for_search
	 FROM tbl_media WHERE media_id = p_media_id LIMIT 1;
	SET @orderby = CONCAT("ORDER BY FIELD(gift_code,", @gift_goods_code_for_search,")");
	SET @selectStmtStrRun = CONCAT("
		SELECT * FROM `tbl_gift` WHERE tbl_gift.gift_code IN ( 
		", @gift_goods_code_for_search, ")",@orderby ,"
		");
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_GetTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_GetTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_GetTop`(IN `p_customer_id` BIGINT(20))
BEGIN
	-- lay san pham noi bat --
	Select p.product_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_description_short,
		p.product_description,
		p.product_saleoff_price,
		p.product_price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd 
		where p.product_code = pd.product_code
		and pd.product_detail_top = 1
		and pd.product_detail_status=0 
		and p.product_status =1
		Group by p.product_code,pd.color_code order by pd.product_detail_order LIMIT 16;
	-- lay san pham ban chay --
	Select p.product_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_description_short,
		p.product_description,
		p.product_saleoff_price,
		p.product_price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd 
		where p.product_code = pd.product_code
		and pd.product_detail_status=0 
		and p.product_status =1
		Group by p.product_code,pd.color_code order by pd.num_rank desc,
		pd.product_detail_order asc LIMIT 7;
	-- lay set noi bat --
	Select * from
	(Select sp.set_code,
	       sp.set_name,
	       sp.set_image,
	       sp.set_status,
	       spd.set_detail_code,
		spd.product_code,
		spd.product_name,
		spd.color_code,
		spd.color_name,
		spd.is_main
	from tbl_set_product as sp,tbl_set_product_detail as spd
	where sp.set_code = spd.set_code
	and sp.set_status = 1
	and spd.is_main = 1 limit 16) as set_top 
	Left join 
	(Select p.product_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_description_short,
		p.product_description,
		p.product_saleoff_price,
		p.product_price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd 
		where p.product_code = pd.product_code
		and pd.product_detail_status=0 
		and p.product_status =1
		Group by p.product_code,pd.color_code) as product
		ON set_top.product_code = product.product_code 
		and set_top.color_code = product.color_code;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItems_brand_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItems_brand_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItems_brand_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				
				tbl_brands.brand_code 		= '",p_search_key_word,"'
			) 
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItems_cate_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItems_cate_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItems_cate_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			LEFT JOIN tbl_products_category_group
				ON tbl_products_category_group.id =  tbl_products_category.category_group_id 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products_category.category_group_id  = '",p_search_key_word,"'
				
			) 
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.new_product			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
		
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.new_product 			= 1 ");
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewProductFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewProductFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewProductFilter`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_size_codes` TEXT, IN `p_color_codes` TEXT, IN `p_brand_codes` TEXT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product 			= 1 
		");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
	
	IF p_size_codes IS NOT NULL  AND p_size_codes 	<> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code IN (",p_size_codes,")");
	
	END IF;
	
	IF p_color_codes IS NOT NULL  AND p_color_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code  IN (",p_color_codes,")");
	
	END IF;
	
	IF p_brand_codes IS NOT NULL  AND p_brand_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code  IN (",p_brand_codes,")");
	
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetNewProductFilter_Foryou` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetNewProductFilter_Foryou` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetNewProductFilter_Foryou`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_size_codes` TEXT, IN `p_color_codes` TEXT, IN `p_brand_codes` TEXT, IN `p_category_group_id` TEXT, IN `p_search_price` TEXT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product 			= 1 
		");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
	
	IF p_size_codes IS NOT NULL  AND p_size_codes 	<> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code IN (",p_size_codes,")");
	
	END IF;
	
	IF p_color_codes IS NOT NULL  AND p_color_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code  IN (",p_color_codes,")");
	
	END IF;
	
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
		AND p_category_group_id 	<> 'all'
		AND p_category_group_id 	<> '0'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_category_group_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND ( tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_category_group_id,"')
			",@check_multiple_item,"
		)
		");
	END IF;
	
	IF 
		p_search_price IS NOT NULL 
		AND p_search_price  <> ''
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
		AND ", p_search_price );
	
	
	END IF;
	
	IF p_brand_codes IS NOT NULL  AND p_brand_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code  IN (",p_brand_codes,")");
	
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_category_group_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetPreOrderProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetPreOrderProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetPreOrderProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_pre_order = 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_option_groups_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_option_groups_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_option_groups_save`(`p_mode` VARCHAR(20), `p_pro_option_group_id` INT, `p_pro_option_group_code` VARCHAR(255), `p_pro_option_group_name` VARCHAR(255), `p_pro_option_group_type` TINYINT, `p_is_display_as_menu` TINYINT, `p_name_display_as_menu` VARCHAR(255), `p_pro_option_group_status` TINYINT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_product_option_groups(
			pro_option_group_code,
			pro_option_group_name,
			pro_option_group_type,
			is_display_as_menu,
			name_display_as_menu,
			pro_option_group_status)
		VALUES(
			p_pro_option_group_code,
			p_pro_option_group_name,
			p_pro_option_group_type,
			p_is_display_as_menu,
			p_name_display_as_menu,
			p_pro_option_group_status);
		SELECT MAX(pro_option_group_id) FROM tbl_product_option_groups;
	ELSE
		UPDATE tbl_product_option_groups
		SET
			pro_option_group_code	= p_pro_option_group_code,
			pro_option_group_name	= p_pro_option_group_name,
			pro_option_group_type	= p_pro_option_group_type,
			is_display_as_menu	= p_is_display_as_menu,
			name_display_as_menu	= p_name_display_as_menu,
			pro_option_group_status	= p_pro_option_group_status
		WHERE
			pro_option_group_id 	= p_pro_option_group_id;
		SELECT p_pro_option_group_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCateItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCateItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCateItem`(IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_item_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	-- =======================================================
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF p_item_code = 'sale' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF (p_item_code = 'new' OR p_item_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_item_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_item_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF (p_item_code = 'restock-items' OR p_item_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCodeAndCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCodeAndCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCodeAndCategoryCode`(IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code_2 IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	
	
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
				
			)
			
			 ");
	END IF;
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCodeLikeSeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCodeLikeSeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCodeLikeSeason`(IN `p_brand_code` VARCHAR(20), IN `p_season_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_rate_vip` FLOAT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	
	-- -===============================================================================	
	SET @orderStmt = getOrderStmtForProductListFamilySale(p_sort, '');
	
	-- -===============================================================================	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- -===============================================================================	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductListFamilySale(p_rate_vip);
	
	-- -===============================================================================	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	if 
		p_brand_code IS NOT NULL 
		and p_brand_code = 'all'
	then
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	-- -===============================================================================	
	-- Add season code
	IF 
		p_season_code 		IS NOT NULL 
		AND p_season_code 	<> '' 
		AND p_season_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
					AND 
						( tbl_products.season_code like '%",p_season_code,"' 
						OR
						tbl_products.season_name like '%",p_season_code,"' 
						)
				");
	END IF;
	
	-- -===============================================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
		
	SET @selectGroup2Stmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	SET @selectStmt2Str = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroup2Stmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroup2Stmt,"
		) AS product_info  
	) AS product_info_ok ");
	
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	-- -===============================================================================	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, " ",@selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- -===============================================================================	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- -===============================================================================	
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
	
	-- -===============================================================================	
	-- lay tat ca mau size cua danh sach san pham
	SET @selectStmt2StrRun = CONCAT(@selectStmt2Str, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmt2StrRun);
	PREPARE stmt FROM @selectStmt2StrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCode_Filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCode_Filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCode_Filter`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_item_code` VARCHAR(20), IN `p_size_code` VARCHAR(20), IN `p_color_code` VARCHAR(20))
BEGIN
/**
 * User:hoaxuan
 * Note: loc them san pham theo brand, item, color, size: dung cho harmony, fashion
 */	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
		SET @selectLimitStmt = 
			CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
	-- insert into tbl_sys_log (sys_log) values (concat('p_sort: ',p_sort, '; @orderStmt: ', @orderStmt) );
	-- ---------------------------------
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	-- -=============================================================================== 
	IF p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code 			= '",p_brand_code,"' ");
	END IF;
	-- -=============================================================================== 
	IF  p_item_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 		= '",p_item_code,"' ");
	END IF;
		
	IF  p_size_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	IF  p_color_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	-- -=============================================================================== 
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- -===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCode_Manifest_RELUX` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCode_Manifest_RELUX` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCode_Manifest_RELUX`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
        SET @orderStmt = getOrderStmtForProductList(p_sort, 'MANIFEST');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.new_product                    = 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandCode_Manifest_RELUX_nonew` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandCode_Manifest_RELUX_nonew` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandCode_Manifest_RELUX_nonew`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
        SET @orderStmt = getOrderStmtForProductList(p_sort, 'MANIFEST');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroup`(IN `p_brand_group_id` INT, IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 	VARCHAR(200) DEFAULT NULL;	
	DECLARE brand_name_tmp 	VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 			
			");
	
	-- =======================================================
	IF 
		p_brand_group_id 	IS NOT NULL 
		AND p_brand_group_id 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)");
	END IF;
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- ======================1=====================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- ======================2=====================
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ======================3=====================
	SELECT * FROM tbl_brands_group WHERE id = p_brand_group_id;
	
	-- ======================4=====================
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroupCateItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroupCateItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroupCateItem`(IN `p_brand_group_id` INT, IN `p_category_code` VARCHAR(200), IN `p_item_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;	
	
	-- -===============================================================================
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	-- =======================================================
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");			
	
	-- =======================================================
	IF 
		p_brand_group_id 	IS NOT NULL 
		AND p_brand_group_id 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as brand_tmp where brand_tmp.group_id = '",p_brand_group_id,"')
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF p_item_code = 'sale' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF (p_item_code = 'new' OR p_item_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_item_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_item_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF (p_item_code = 'restock-items' OR p_item_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		",
		@orderStmt, "
		",@selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
	
	SELECT * FROM tbl_brands_group WHERE id = p_brand_group_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByBrandGroupCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByBrandGroupCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByBrandGroupCode`(IN `p_brand_group_code` VARCHAR(200), IN `p_brand_code` VARCHAR(20), IN `p_category_code` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE item_name_tmp 	VARCHAR(200) DEFAULT NULL;	
	DECLARE brand_name_tmp 	VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;	
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	-- -===============================================================================
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
							
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
					
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details			
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 			
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 			
			");
	
	-- =======================================================
	IF 
		p_brand_group_code 	IS NOT NULL 
		AND p_brand_group_code 	<> '-1000' 
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.brand_code IN (
			SELECT brand_code 
			FROM tbl_brands as brand_tmp 
			left join tbl_brands_group as brand_group on brand_tmp.group_id = brand_group.id
			where brand_group.group_code = '",p_brand_group_code,"'
			)
		");			
	END IF;
	
	-- =======================================================
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	-- =======================================================
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 	
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)");
	END IF;
	
	-- =======================================================
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		 ",
		@orderStmt, "
		",@selectLimitStmt);
	
	-- ======================1=====================
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- ======================2=====================
	SET @selectStmtStr2 = CONCAT("
	SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- ======================3=====================
	SELECT * FROM tbl_brands_group WHERE group_code = p_brand_group_code;
	
	-- ======================4=====================
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByCategorySeasonSizeAndColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByCategorySeasonSizeAndColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByCategorySeasonSizeAndColor`(IN `p_category_code` VARCHAR(200), IN `p_season_code` VARCHAR(200), IN `p_size_code` TEXT, IN `p_color_code` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 			= '",p_category_code,"' ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	-- Add season code
	IF 
		p_season_code 		IS NOT NULL 
		AND p_season_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.season_code 			= '",p_season_code,"' ");
	END IF;
	
	-- Size code	
	IF 
		p_size_code 		IS NOT NULL 
		AND p_size_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	-- Color code
	IF 
		p_color_code 		IS NOT NULL 
		AND p_color_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	
	-- Set full color or only one main color.
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	-- Group by
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	goodcode_list_manual
		FROM 	tbl_products_category_group 
		WHERE 	id = p_group_category_id
		INTO 	@goods_code_from_group_category;
		
		SET @condition_goods_code = '';
		IF 	@goods_code_from_group_category != '' 
			AND @goods_code_from_group_category IS NOT NULL
		THEN
			SET @condition_goods_code = CONCAT("
			OR tbl_products.goods_code IN ('",REPLACE(@goods_code_from_group_category, '\r\n', "','"),"')
			");
		END IF;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR "','")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category1;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category1;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @condition_item_code = '';
		IF 	@itemcode_from_group_category != '' 
			AND @itemcode_from_group_category IS NOT NULL
		THEN
			SET @condition_item_code = CONCAT("
				AND (
					tbl_products.product_itemcode IN ('",@itemcode_from_group_category,"')
					",@check_multiple_item,"
					",@condition_goods_code,"
				)
			");
		END IF;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt,@condition_item_code);
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByGroupCategoryIdFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByGroupCategoryIdFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByGroupCategoryIdFilter`(IN `p_group_category_id` VARCHAR(20), IN `p_category_code` VARCHAR(250), IN `p_price_start` INT, IN `p_price_end` INT, IN `p_search_keyword` VARCHAR(50), IN `p_search_brand` VARCHAR(250), IN `p_search_status` VARCHAR(50), IN `p_search_stock` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE p_add_and_condition_str TEXT;
	SET p_add_and_condition_str = '';	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET p_add_and_condition_str = getSearchQuery(p_category_code,p_price_start,p_price_end,p_search_keyword,p_search_brand,p_search_status);
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			", p_add_and_condition_str, "
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND ( tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
		)
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_search_stock IS NOT NULL AND p_search_stock = '0' THEN
		SET @conditionRestockItemsStmt = ' WHERE ((product_is_hide_while_out_of_stock = 1 AND stock_num > 0) OR stock_num >0)';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByHastag_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByHastag_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByHastag_fontend`(IN `p_keyword` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only
		INTO @dprihtml,@dhashtagid,@dhashtagtitle,@banner,@is_members_only 
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
		
		
	
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC, 
					pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC  ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@dhashtagid, '\r\n', ','), "') ");
			
	END IF; 
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dprihtml as prihtml,
			@dhashtagtitle as hashtagtitle,
			@dhashtagid,
			@banner as banner, 
			@is_members_only as is_members_only
			
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		*
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByHastag_fontendEIR` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByHastag_fontendEIR` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByHastag_fontendEIR`(IN `p_keyword` TEXT, IN `p_sort` VARCHAR(50), IN `p_check_stock` VARCHAR(1), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only
		INTO @dprihtml,@dhashtagid,@dhashtagtitle,@banner,@is_members_only 
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
		
		
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dprihtml as prihtml,
			@dhashtagtitle as hashtagtitle,
			@dhashtagid,
			@banner as banner, 
			@is_members_only as is_members_only
			
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	-- ======================1=====================	
	IF (p_check_stock='1') THEN
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
				AND (stock_num > 0)
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	ELSE
		SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
			 ",
			@orderStmt, "
			",@selectLimitStmt);
	END IF;	
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ======================2=====================
	IF (p_check_stock='1') THEN
		SET @selectStmtStr2 = CONCAT("
			SELECT 	COUNT(*) AS total_items FROM ( 
					", @selectStmtStr, "
					WHERE 
						(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
						OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
						AND (stock_num > 0) 
				) AS TBL_TMP ");
	ELSE
		SET @selectStmtStr2 = CONCAT("
			SELECT 	COUNT(*) AS total_items FROM ( 
					", @selectStmtStr, "
					WHERE 
						(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
						OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
				) AS TBL_TMP ");
	END IF;
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only ,
		create_date,
		is_show_link_destination,
		link_destination
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND STATUS=1 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByHastag_fontend_Preview` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByHastag_fontend_Preview` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByHastag_fontend_Preview`(IN `p_keyword` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only,
		`status`
		INTO @dprihtml,@dhashtagid,@dhashtagtitle,@banner,@is_members_only,@status
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
		
		
	
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@dhashtagid, '\r\n', ','), "') ");
			
	END IF; 
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dprihtml as prihtml,
			@dhashtagtitle as hashtagtitle,
			@dhashtagid as keyword,
			@banner as banner, 
			@is_members_only as is_members_only,
			@status as status
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		prihtml,
		keyword,
		hashtag_title,
		banner,
		is_members_only ,
		create_date,
		is_show_link_destination,
		link_destination,
		`status`
	FROM 
		tbl_products_hashtag 
	WHERE 
		slug=p_keyword 
		AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByListCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByListCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByListCategoryCode`(IN `p_category_code` TEXT, IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF p_category_code 	IS NOT NULL AND p_category_code = 'new' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSE
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category WHERE category_group_id IN('",p_category_code,"') ) ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT *
	FROM tbl_products_category_group
	WHERE id = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_ranking_multisearch_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_ranking_multisearch_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_ranking_multisearch_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
       SET @selectStmt2 = 'SELECT p.`product_id` AS p_id,p.`SeqNo` AS p_seqno,p.*, pt.* FROM tbl_products p, tbl_products_details pt
		WHERE p.`SeqNo` = pt.`RSeqNo` AND (p.product_status <> 2 OR p.product_status IS NULL) AND ';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	-- SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt, p_keyword," group by p.`goods_code`,pt.`color_code` 
		ORDER BY pt.`num_order` desc,p.create_date,p.goods_code DESC ");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT COUNT(*) AS total_items FROM (SELECT p.`SeqNo`  FROM tbl_products p, tbl_products_details pt 
		WHERE p.`SeqNo` = pt.`RSeqNo` AND (p.product_status <> 2 OR p.product_status IS NULL) AND ';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	-- SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt, p_keyword,"  group by p.`goods_code`,pt.`color_code`) as total");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByListInCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByListInCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByListInCategory`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT goodcode_list_manual INTO @list_good
	FROM 
		tbl_products_category_group 
	WHERE 
		tbl_products_category_group.id 	= p_group_category_id;
		
		
	
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@list_good, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_SaveQuickSetting` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_SaveQuickSetting` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_SaveQuickSetting`(IN `p_seqno` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_num_order` BIGINT, IN `p_check_top` TINYINT, IN `p_product_top_order` BIGINT, IN `p_is_main_color` TINYINT, IN `p_is_cancel` TINYINT, IN `p_is_hide_while_out_of_stock` TINYINT)
BEGIN	
	-- Modified: 2020/03/18. 497348700 #Aspiration｜アスピレーション(Massimo)
	if p_is_main_color != -1 then
		UPDATE 	tbl_products_details
		SET
			is_main_color 		= 0
		WHERE
			RSeqNo 		= p_seqno;
		UPDATE 	tbl_products
		SET 	is_color_show = p_is_main_color
		WHERE	SeqNo = p_seqno;		
		
	end if;
	
	-- sau do set main color cho mau vua chon
	-- Modified: 2020/01/16. Update product_detail_color_status	
	-- Modified: 2020/02/20. If p_is_cancel=-1 then don't update
	UPDATE 	tbl_products_details
	SET
		num_order 		= p_num_order,
		product_detail_top 	= p_check_top,
		product_detail_order 	= p_product_top_order,
		is_main_color 		= IF(p_is_main_color=-1,is_main_color,p_is_main_color),
		product_detail_status 	= if(p_is_cancel=-1,product_detail_status,p_is_cancel),
		product_detail_color_status = IF(p_is_cancel=-1,product_detail_color_status,p_is_cancel)		
	WHERE
		RSeqNo 		= p_seqno 
		and color_code 	= p_color_code;
			
	-- ===============================================================
	UPDATE 	tbl_products
	SET 	is_hide_while_out_of_stock = p_is_hide_while_out_of_stock
	where	SeqNo = p_seqno;
	
	-- Modified: 2020/09/15. 743068961 | S20091539 ノースブレイン
	UPDATE tbl_stock_num 
	INNER JOIN tbl_products_details
		ON tbl_stock_num.GoodCode = tbl_products_details.product_goods_code
			AND tbl_stock_num.ColorCode = tbl_products_details.color_code
			AND tbl_stock_num.SizeCode = tbl_products_details.size_code
			AND tbl_products_details.RSeqNo = p_seqno
			AND tbl_products_details.color_code = p_color_code
		SET 	tbl_stock_num.r_product_detail_status = IF(p_is_cancel=-1,r_product_detail_status,p_is_cancel);
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByListProSeqNo` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByListProSeqNo` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByListProSeqNo`(IN `p_SeqNo_str` VARCHAR(1000), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.SeqNo				IN (",p_SeqNo_str,") ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
 					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_update_order_status` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_update_order_status` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_update_order_status`()
BEGIN
		update tbl_products t1 join
		       tbl_products_details t2 on t1.SeqNo=t2.RSeqNo
		set t2.order_status = 3
		where t1.sale_off_product = 1;
		update tbl_products t1 join
		       tbl_products_details t2 on t1.SeqNo=t2.RSeqNo
		set t2.order_status = 2
		where t1.new_product = 1 and t1.sale_off_product = 0;
		update tbl_products t1 join
		       tbl_products_details t2 on t1.SeqNo=t2.RSeqNo
		set t2.order_status = 1
		where t1.new_product = 0 and t1.sale_off_product = 0;
		update tbl_products t1 join
		       tbl_products_details t2 on t1.SeqNo=t2.RSeqNo left join (select sum(StockNum) as StockNum,GoodCode,ColorCode from tbl_stock_num where ShopCode='05' group by GoodCode,ColorCode) as st
		on t1.goods_code=st.GoodCode and t2.color_code = st.ColorCode
		set t2.order_status=0  
		where st.StockNum<=0 or st.StockNum is null;
		-- select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_update_order_status_by_gc` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_update_order_status_by_gc` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_update_order_status_by_gc`(IN `p_goods_code` TEXT)
BEGIN
		UPDATE tbl_products t1 JOIN
		       tbl_products_details t2 ON t1.SeqNo=t2.RSeqNo
		SET t2.order_status = 3
		WHERE t1.goods_code = p_goods_code AND t1.sale_off_product = 1;
		UPDATE tbl_products t1 JOIN
		       tbl_products_details t2 ON t1.SeqNo=t2.RSeqNo
		SET t2.order_status = 2
		WHERE t1.goods_code = p_goods_code AND t1.new_product = 1 AND t1.sale_off_product = 0;
		UPDATE tbl_products t1 JOIN
		       tbl_products_details t2 ON t1.SeqNo=t2.RSeqNo
		SET t2.order_status = 1
		WHERE t1.goods_code = p_goods_code AND t1.new_product = 0 AND t1.sale_off_product = 0;
		UPDATE tbl_products t1 JOIN
		       tbl_products_details t2 ON t1.SeqNo=t2.RSeqNo LEFT JOIN (SELECT SUM(StockNum) AS StockNum,GoodCode,ColorCode FROM tbl_stock_num WHERE ShopCode='05' GROUP BY GoodCode,ColorCode) AS st
		ON t1.goods_code=st.GoodCode AND t2.color_code = st.ColorCode
		SET t2.order_status=0  
		WHERE t1.goods_code = p_goods_code AND st.StockNum<=0 OR st.StockNum IS NULL;
		-- select 'ok' as msg;		
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByNews_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByNews_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByNews_fontend`(IN `p_news_id` BIGINT(8), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		news_contents,
		keyword,
		news_title,
		news_image
		INTO @dnews_contents,@productcodes,@dhnews_title,@news_image
	FROM 
		tbl_news
	WHERE 
		news_id = p_news_id;
		
	if @productcodes is null then
		set @productcodes = '';
	end if;
	
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@productcodes, '\r\n', ','), "') ");
			
	END IF; 
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dnews_contents as news_contents,
			@dnews_title as news_title,
			@productcodes,
			@news_image as banner			
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@productcodes, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		*
	FROM 
		tbl_news
	WHERE 
		news_id = p_news_id;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Report_getProductListByMailRemind` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Report_getProductListByMailRemind` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Report_getProductListByMailRemind`(IN `p_search_key` TEXT, IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_attrName` VARCHAR(255), IN `p_sort` VARCHAR(255))
BEGIN
	
		
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_2(
		'tbl_products',
		'tbl_products_details',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		1,
		0,
		p_shop_list
	);
		
		
	-- get select fields from function
	SET @selectCountStmt = CONCAT("
	SELECT 
		tbl_products.product_id");
		
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_products_details.*,
		tbl_mail_remind_order.* ,
		tbl_products.*,
		COUNT(*) AS WISH_TOTAL,
		", @getStockNumberStmt, "
	");
	
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_mail_remind_order
			JOIN tbl_products
				ON tbl_mail_remind_order.product_no 	= tbl_products.goods_code
			LEFT JOIN tbl_products_details
				ON tbl_products.SeqNo 		=  tbl_products_details.RSeqNo
	");
	
	SET @whereStmt = "  
		
			
	WHERE 
		tbl_mail_remind_order.color_code 	= tbl_products_details.color_code 
		AND tbl_mail_remind_order.size_code 	= tbl_products_details.size_code
		AND tbl_mail_remind_order.is_sent_email_remind = 0
		";
	IF p_search_key 	IS NOT NULL AND p_search_key 	<> ''  THEN 
		SET @whereStmt = CONCAT(@whereStmt, "
		AND (
			tbl_products.goods_code LIKE '%",p_search_key,"%'
			OR tbl_products.product_name LIKE '%",p_search_key,"%'
		)
		");
	END IF;
	
	SET @groupByStmt = " 
	GROUP BY tbl_mail_remind_order.product_no, tbl_mail_remind_order.color_code, tbl_mail_remind_order.size_code
	";
	
	SET @orderStmt = CONCAT(" 
	ORDER BY ", p_attrName ," ", p_sort ,"
	");
	
	SET @selectLimitStmt = CONCAT(" ");
	IF indexFrom <> -1 AND indexLimit <> -1 THEN
		SET @selectLimitStmt = CONCAT(" 
		LIMIT ",indexFrom,",",indexLimit, " ");
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmt, @selectFromStmt, @whereStmt, @groupByStmt, @orderStmt, @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectCountStmt, @selectFromStmt, @whereStmt, @groupByStmt, "
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByNews_fontend_Preview` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByNews_fontend_Preview` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByNews_fontend_Preview`(IN `p_news_id` BIGINT(8), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	SELECT 
		news_contents,
		keyword,
		news_title,
		news_image,
		`status`,
		news_date,
		create_date
		INTO @dnews_contents,@productcodes,@dhnews_title,@news_image,@status,@news_date,@create_date
	FROM 
		tbl_news
	WHERE 
		news_id = p_news_id;
		
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	CAST(product_active_date AS DATE) 	DESC ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(@productcodes, '\r\n', ','), "') ");
			
	END IF; 
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
			
			
	SET @selectStmt = 
		CONCAT(@selectStmt, "
			
			,
			@dnews_contents as news_contents,
			@dnews_title as news_title,
			@productcodes,
			@news_image as banner,
			@status as status,
			@news_date as news_date,
			@create_date as news_create_date	
			");
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code in ('",REPLACE(@productcodes, '\r\n', ''','''),"') 
			AND tbl_products.goods_code <>''");
				
				
				
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
		
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
		*
	FROM 
		tbl_news
	WHERE 
		news_id = p_news_id;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByOptionVal` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByOptionVal` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByOptionVal`(IN `p_option_value_from` VARCHAR(255), IN `p_option_value_to` VARCHAR(255), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.SeqNo				IN (
				SELECT 	RSeqNo
				FROM 	tbl_products_options
				WHERE 	(
						UPPER(option_name) = UPPER('ヒール高') 
						OR UPPER(option_name) = UPPER('ヒール') 
						OR UPPER(option_name) = UPPER('HEEL HEIGHT') 
					)
					AND ( 
						SUBSTRING(option_value, 1, LENGTH(option_value)-2) >= ", p_option_value_from, "
						AND SUBSTRING(option_value, 1, LENGTH(option_value)-2) < ", p_option_value_to, "
					)
			) ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
		
		
		
		
		
		
		
		
		
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
				
				
				
				
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
 					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Report_getProductListByWishList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Report_getProductListByWishList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Report_getProductListByWishList`(IN `p_search_key` TEXT, IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_attrName` VARCHAR(255), IN `p_sort` VARCHAR(255))
BEGIN
	
		
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_2(
		'tbl_products',
		'tbl_products_details',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
		
		
	-- get select fields from function
	SET @selectCountStmt = CONCAT("
	SELECT 
		tbl_products.product_id");
		
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_products_details.*,
		tbl_wish_list.* ,
		tbl_products.*,
		COUNT(*) AS WISH_TOTAL,
		", @getStockNumberStmt, "
	");
	
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_wish_list
			JOIN tbl_products
				ON tbl_wish_list.product_id 	= tbl_products.product_id 
			LEFT JOIN tbl_products_details
				ON tbl_products.SeqNo 		=  tbl_products_details.RSeqNo
	
	");
	
	SET @whereStmt = "  
		WHERE 
		tbl_wish_list.color_code 	= tbl_products_details.color_code 
		AND (
			tbl_wish_list.size_code IS NULL 
			OR tbl_wish_list.size_code = tbl_products_details.size_code
		)";
	IF p_search_key 	IS NOT NULL AND p_search_key 	<> ''  THEN 
		SET @whereStmt = CONCAT(@whereStmt, "
		AND (
			tbl_products.goods_code LIKE '%",p_search_key,"%'
			OR tbl_products.product_name LIKE '%",p_search_key,"%'
		)
		");
	END IF;
	
	SET @groupByStmt = " 
	GROUP BY tbl_wish_list.product_id, tbl_wish_list.color_code, tbl_wish_list.size_code
	";
	
	SET @orderStmt = CONCAT(" 
	ORDER BY ", p_attrName ," ", p_sort ,"
	");
	
	SET @selectLimitStmt = CONCAT(" ");
	IF indexFrom <> -1 AND indexLimit <> -1 THEN
		SET @selectLimitStmt = CONCAT(" 
		LIMIT ",indexFrom,",",indexLimit, " ");
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmt, @selectFromStmt, @whereStmt, @groupByStmt, @orderStmt, @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectCountStmt, @selectFromStmt, @whereStmt, @groupByStmt, "
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByProductCodes` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByProductCodes` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByProductCodes`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT)
BEGIN
SET @orderStmt = getOrderStmtForProductList(p_sort, '');
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code 			IN (",p_product_codes,")
			AND tbl_products.goods_code 			<> ''");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	
	
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Report_getProductListByWishListCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Report_getProductListByWishListCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Report_getProductListByWishListCustomer`(IN `p_search_key` TEXT, IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_attrName` VARCHAR(255), IN `p_sort` VARCHAR(255))
BEGIN
	
		
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt_2(
		'tbl_products',
		'tbl_products_details',
		'goods_code',
		'color_code',
		'size_code',
		'is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
		
		
	-- get select fields from function
	SET @selectCountStmt = CONCAT("
	SELECT 
		tbl_products.product_id");
		
	SET @selectStmt = CONCAT("
	SELECT 
		tbl_customers.*,
		tbl_products_details.*,
		tbl_wish_list.* ,
		DATE (tbl_wish_list.mailing_date) AS 'mailing_sent_date',
		TIME (tbl_wish_list.mailing_date) AS 'mailing_sent_time',
		tbl_products.*,
		COUNT(*) AS WISH_TOTAL,
		", @getStockNumberStmt, "
	");
	
	SET @selectFromStmt = CONCAT("
	FROM 
		tbl_wish_list
			JOIN tbl_products
				ON tbl_wish_list.product_id 	= tbl_products.product_id 
			LEFT JOIN tbl_products_details
				ON tbl_products.SeqNo 		=  tbl_products_details.RSeqNo
			left JOIN tbl_customers
				ON tbl_wish_list.customer_id 	= tbl_customers.customer_id 
	
	");
	
	SET @whereStmt = "  
		WHERE 
		tbl_wish_list.color_code 	= tbl_products_details.color_code 
		AND (
			tbl_wish_list.size_code IS NULL 
			OR tbl_wish_list.size_code = tbl_products_details.size_code
		)
		AND  tbl_customers.customer_id!='' AND tbl_customers.email!=''
		";
	IF p_search_key 	IS NOT NULL AND p_search_key 	<> ''  THEN 
		SET @whereStmt = CONCAT(@whereStmt, "
		AND (
			tbl_products.goods_code LIKE '%",p_search_key,"%'
			OR tbl_products.product_name LIKE '%",p_search_key,"%'
			OR CONCAT(tbl_customers.first_name,tbl_customers.last_name) LIKE '%",p_search_key,"%'
			OR tbl_customers.email LIKE '%",p_search_key,"%'
		)
		");
	END IF;
	
	SET @groupByStmt = " 
	GROUP BY tbl_customers.customer_id, tbl_wish_list.product_id, tbl_wish_list.color_code, tbl_wish_list.size_code
	";
	
	SET @orderStmt = CONCAT(" 
	ORDER BY ", p_attrName ," ", p_sort ,"
	");
	
	SET @selectLimitStmt = CONCAT(" ");
	IF indexFrom <> -1 AND indexLimit <> -1 THEN
		SET @selectLimitStmt = CONCAT(" 
		LIMIT ",indexFrom,",",indexLimit, " ");
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmt, @selectFromStmt, @whereStmt, @groupByStmt, @orderStmt, @selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectCountStmt, @selectFromStmt, @whereStmt, @groupByStmt, "
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByProductCodes_NotSetOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByProductCodes_NotSetOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByProductCodes_NotSetOrder`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT)
BEGIN
SET @orderStmt = CONCAT("ORDER BY FIND_IN_SET(CONCAT_WS('_',product_goods_code,pro_detail_color_code), \"", REPLACE(p_product_codes, '\'\,\'', ','), "\") ");
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_product_codes,")
			AND tbl_products.goods_code 			<> ''");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	-- sua cach lay so ton
	-- -===============================================================================
	/*
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	*/
	-- -===============================================================================
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, ",
			(
				SELECT 					
					(CASE WHEN (SUM(tbl_stock_num.StockNum) > 0) THEN 
						SUM(tbl_stock_num.StockNum) 
					ELSE 
						0 
					END) AS stock_num_tmp
				FROM tbl_stock_num
				WHERE 	tbl_stock_num.GoodCode = tbl_products.goods_code
					AND tbl_stock_num.`ColorCode` = tbl_products_details.`color_code`
					AND tbl_stock_num.`SizeCode` = tbl_products_details.`size_code`
					AND tbl_stock_num.StockNum <> 0 
					AND tbl_stock_num.r_product_detail_status = 0 
					AND ShopCode IN (", p_shop_list ,") 
			) AS stock_num", @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");	
	
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByProductCodes_seiwa` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByProductCodes_seiwa` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByProductCodes_seiwa`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_product_codes` TEXT, IN `procut_list` TEXT)
BEGIN
SET @orderStmt = CONCAT("
			ORDER BY FIND_IN_SET(product_goods_code, '", REPLACE(procut_list, '\r\n', ','), "') ");
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.goods_code 			IN (",p_product_codes,")
			AND tbl_products.goods_code 			<> ''");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("	GROUP BY tbl_products.goods_code, tbl_products_details.color_code
		
				
		 ");
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	
	
	
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_frontEnd_getByGoodsColorCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_frontEnd_getByGoodsColorCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_frontEnd_getByGoodsColorCode`(IN `p_goods_code` VARCHAR(20), IN `p_color_code` VARCHAR(20), IN `p_status` VARCHAR(20), IN `p_number_star` INT, IN `p_sort` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @sort = ' ORDER BY review_numstar DESC';
	IF p_sort = 'newest' THEN
 		SET @sort = ' ORDER BY date_create DESC'; 	
 	END IF;
 	IF p_sort = 'top' THEN
 		SET @sort = ' ORDER BY review_numstar DESC';	
 	END IF;
SET @select1 =  CONCAT('SELECT * FROM tbl_review
	  	WHERE ispublic <> 3 and goods_code =''',p_goods_code,''' and color_code =''' ,p_color_code,'');
IF p_status = 1 THEN
  	  SET @select1 =  CONCAT(@select1,''' AND ispublic = ''',p_status,'\'',@sort);
ELSE
	 SET @select1 =  CONCAT(@select1,''' AND (review_numstar >= ''',p_number_star,'\' OR ispublic = 1)',@sort);
END IF;
SET @select_tmp = @select1;
SET @selectLimitStmt = 
	CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
SET @select1 = CONCAT(@select1,@selectLimitStmt);
PREPARE stmt1 FROM @select1;
	EXECUTE stmt1;
	DEALLOCATE PREPARE stmt1;
	SET @select2 = CONCAT('SELECT COUNT(*) as number_review, SUM(review_numstar) as total_review FROM(',@select_tmp,') as tbl_total');
PREPARE stmt2 FROM @select2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductByShopCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductByShopCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductByShopCode`(IN `p_shop_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_filter` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.shop_list LIKE '% ",p_shop_code," %'");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF(p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- Get category info
	
	SELECT 
		tbl_shop.shop_id,
		tbl_shop.shop_code,
		tbl_shop.shop_name,
		tbl_shop.shop_namekana,
		tbl_shop.create_date,
		tbl_shop.modified_date,
		tbl_shop.shop_status,
		tbl_shop.shop_able,
		tbl_shop.display_name,
		tbl_shop.postcode,
		tbl_shop.state,
		tbl_shop.city,
		tbl_shop.address,
		tbl_shop.address2,
		tbl_shop.shop_site,
		tbl_shop.tel,
		tbl_shop.fax,
		tbl_shop.note,
		tbl_shop.SeqNo,
		tbl_shop.RSeqNo,
		tbl_shop.TIMESTAMP,
		tbl_shop.shop_logo,
		tbl_shop.shop_header,
		(CASE WHEN display_name IS NULL OR display_name = '' THEN
			shop_name
		ELSE 
			display_name
		END) AS shop_display_name
	FROM
		tbl_shop 
	WHERE
		shop_code = p_shop_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductFilter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductFilter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductFilter`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_size_codes` TEXT, IN `p_color_codes` TEXT, IN `p_brand_codes` TEXT, IN `p_category_group_id` TEXT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND 
			(
				tbl_products.product_itemcode 	= '",p_category_code,"' 
				OR tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
			)
			");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
	
	IF p_size_codes IS NOT NULL  AND p_size_codes 	<> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code IN (",p_size_codes,")");
	
	END IF;
	
	IF p_color_codes IS NOT NULL  AND p_color_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code  IN (",p_color_codes,")");
	
	END IF;
	
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
		AND tbl_products.product_itemcode IN ( SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id IN (",p_category_group_id,") ) 
		");
	END IF;		
	
	
	
	IF p_brand_codes IS NOT NULL  AND p_brand_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code  IN (",p_brand_codes,")");
	
	END IF;
		
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductFilter_ByPrice` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductFilter_ByPrice` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductFilter_ByPrice`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_product_detail_price_from` FLOAT, IN `p_product_detail_price_to` FLOAT, IN `p_is_check_price_no_tax` TINYINT(1), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF (p_is_check_price_no_tax = 1) THEN 
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(
				tbl_products.sale_off_product=1,
					tbl_products_details.product_detail_saleoff_price_no_tax > ",p_product_detail_price_from," 
					AND tbl_products_details.product_detail_saleoff_price_no_tax <= ",p_product_detail_price_to,",
					tbl_products_details.product_detail_price_no_tax > ",p_product_detail_price_from," 
					AND tbl_products_details.product_detail_price_no_tax <= ",p_product_detail_price_to,"
				)");
	ELSE
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND if(
				tbl_products.sale_off_product=1,
					tbl_products_details.product_detail_saleoff_price > ",p_product_detail_price_from," 
					AND tbl_products_details.product_detail_saleoff_price <= ",p_product_detail_price_to,",
					tbl_products_details.product_detail_price > ",p_product_detail_price_from," 
					AND tbl_products_details.product_detail_price <= ",p_product_detail_price_to,"
				)");
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = ' WHERE (stock_num >0 AND product_is_sold_out = 1)';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt, @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,  @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductFilter_Foryou` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductFilter_Foryou` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductFilter_Foryou`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `p_size_codes` TEXT, IN `p_color_codes` TEXT, IN `p_brand_codes` TEXT, IN `p_category_group_id` TEXT, IN `p_search_price` TEXT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND 
			(
				tbl_products.product_itemcode 	= '",p_category_code,"' 
				OR tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
			)
			");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	END IF;
	
	
	
	
	
	IF p_size_codes IS NOT NULL  AND p_size_codes 	<> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code IN (",p_size_codes,")");
	
	END IF;
	
	IF p_color_codes IS NOT NULL  AND p_color_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code  IN (",p_color_codes,")");
	
	END IF;
	
	IF 
		p_category_group_id 	IS NOT NULL 
		AND p_category_group_id 	<> '' 
		AND p_category_group_id 	<> 'all'
		AND p_category_group_id 	<> '0'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_category_group_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND ( tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_category_group_id,"')
			",@check_multiple_item,"
		)
		");
	END IF;
	
	
	IF 
		p_search_price IS NOT NULL 
		AND p_search_price  <> ''
	THEN
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
		AND ", p_search_price );
	
	
	END IF;
	IF p_brand_codes IS NOT NULL  AND p_brand_codes <> '' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code  IN (",p_brand_codes,")");
	
	END IF;
		
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_category_group_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductPreOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductPreOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductPreOrder`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_pre_order 			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr_run = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr_run);
	
	PREPARE stmt FROM @selectStmtStr_run;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_getAllPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_getAllPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_getAllPaging`(`p_skip` INT, `p_limit` INT, IN `p_status` VARCHAR(10), IN `p_datestart` VARCHAR(50), IN `p_dateend` VARCHAR(50), IN `p_keyword` VARCHAR(250))
BEGIN
	SET @selectStmt = 'select * from tbl_review ';
	SET @orderStmt = ' order by date_create desc ';
	SET @limitStmt = CONCAT('LIMIT ',p_skip,',',p_limit);
	SET @whereStml = ' WHERE ispublic <> 3 ';
	IF p_status <> '' THEN
		SET @whereStml = CONCAT(@whereStml," AND ispublic='",p_status,"'");
	END IF;
	IF p_datestart <> '' && p_dateend <> '' THEN
		SET @whereStml = CONCAT(@whereStml," AND date_create >='",p_datestart,"' AND date_create <='",p_dateend,"'");
	END IF;
	IF p_keyword <> '' THEN
		SET @whereStml = CONCAT(@whereStml," AND  (goods_code like '%", p_keyword,"%' OR product_name like '%", p_keyword,"%' OR customer_code like '%", p_keyword,"%' OR customer_name like '%", p_keyword,"%'  OR product_name like '%", p_keyword,"%')");
	END IF;
	
	SET @selectStmt = CONCAT(@selectStmt,@whereStml,@orderStmt,@limitStmt);
	-- INSERT into tbl_sys_log(tbl_sys_log.sys_action) VALUE(@selectStmt);
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;   
	
	SET @selectTotal = CONCAT('select count(*) as total_items from tbl_review',@whereStml);
	PREPARE stmt1 FROM @selectTotal;
	EXECUTE stmt1;
	DEALLOCATE PREPARE stmt1;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductRanking` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductRanking` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductRanking`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:02/01/2019
 * Note: lay san pham ranking hien thi ngoai font end
 */
	-- ---------------------------------
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_ranking ASC, product_goods_code ASC ';
	END IF;
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- ---------------------------------
	SET @selectStmt = getListColumnForSelectingProductList();
	
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	-- --------------------------------------------------
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products_details.product_ranking > 0
			AND tbl_products_details.product_ranking is not null ");
	
	-- --------------------------------------------------
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
	-- --------------------------------------------------
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info.product_product_id
				AND wish_list_info.color_code	= product_info.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);	
	-- --------------------------------------------------
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT("
	SELECT * FROM(
	SELECT 
		product_info.* ,",
		@getStockNumberStmt,"
	FROM (
		",@selectStmt, 
		@selectFromStmt, 
		@selectGroupStmt, "
		) as product_info ",
		@selectJoinWishListStmt,") AS product_all ",@conditionRestockItemsStmt, 
		@orderStmt, 
		@selectLimitStmt
	);
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- --------------------------------------------------
	SET @selectStmtStr2 = CONCAT("
		SELECT COUNT(*) AS total_items 
		FROM ( 
			select * from (",
			@selectStmt, @selectFromStmt, @selectGroupStmt, "
			) as product_info ",
			@selectJoinWishListStmt, 
			"",
			@orderStmt, " ) AS TBL_TMP ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_insup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_insup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_insup`(`p_id` BIGINT(20), `p_goods_code` VARCHAR(20), `p_color_code` VARCHAR(20), `p_color_name` VARCHAR(250), `p_size_name` VARCHAR(250), `p_order_detail_id` INT(11), `p_order_id` INT(11), `p_customer_code` VARCHAR(20), `p_customer_name` VARCHAR(250), `p_review_comment` TEXT, `p_review_numstar` INT(2), `p_review_images` TEXT, `p_status` INT(2), `p_ispublic` INT(2), `p_product_name` VARCHAR(250), `p_product_id` BIGINT(20), `p_product_image` VARCHAR(250), `p_order_code` VARCHAR(20), `p_mode` VARCHAR(10))
BEGIN
	IF(p_mode = 'C') THEN
    INSERT INTO tbl_review(goods_code,color_code,color_name,size_name,order_detail_id,order_id,customer_code,
    customer_name,review_comment,review_numstar,review_images,status,ispublic,product_name,product_id,product_image,order_code)
VALUES(p_goods_code,p_color_code,p_color_name,p_size_name,p_order_detail_id,p_order_id,p_customer_code,p_customer_name,p_review_comment,p_review_numstar,p_review_images,p_status ,p_ispublic,p_product_name,p_product_id,p_product_image,p_order_code);
  ELSE
    UPDATE tbl_review
    SET tbl_review.review_comment=p_review_comment,
		tbl_review.review_numstar=p_review_numstar,
		tbl_review.review_images=p_review_images,
		tbl_review.status=p_status,
		tbl_review.ispublic=p_ispublic 
    WHERE
      tbl_review.id = p_id;
  END IF;
  SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductRankingByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductRankingByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductRankingByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	
	DECLARE item_name_tmp   	VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	SET @orderStmt = '';
	IF p_sort	= 'priceAscend' THEN
		SET @orderStmt = '
			ORDER BY  	price_for_sort 	ASC ';
	ELSEIF p_sort	= 'priceDescend' THEN
		SET @orderStmt = ' 
			ORDER BY  	price_for_sort 	DESC ';
	ELSEIF p_sort	= 'popular' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_rank 	DESC, 
					product_goods_code 	ASC,
					pro_detail_color_code ASC ';
	ELSEIF p_sort 	= 'new' OR p_sort = 'ranking' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_num_order DESC, CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC  ';
	ELSEIF p_sort	= '' THEN
		SET @orderStmt = ' 
			ORDER BY  	pro_detail_ranking ASC, product_goods_code 	ASC ';
	END IF;
	
	
	
	
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products_details.product_ranking > 0
			AND tbl_products_details.product_ranking is not null ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out = 1  ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @selectFromStmt, @selectGroupStmt, " 
			) AS all_product 
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	IF p_category_code IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'ranking') THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		
	INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStrRun);	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP ");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetProductRankingByCategoryGroupId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetProductRankingByCategoryGroupId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetProductRankingByCategoryGroupId`(IN `p_group_category_id` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' 
			ORDER BY  	pro_detail_ranking ASC, product_goods_code 	ASC ';
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products_details.product_ranking > 0
			AND tbl_products_details.product_ranking is not null ");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 	
		AND p_group_category_id 	<> '0' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id  = '",p_group_category_id,"')
			
			 ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @selectFromStmt, @selectGroupStmt, " 
			) AS all_product 
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_review_setting_insup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_review_setting_insup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_review_setting_insup`(`p_id` BIGINT(20), `p_show_front` INT, `p_allow_attack` INT, `p_send_email_to_admin` INT, `p_allow_public` INT, `p_number_star_public` INT, `p_send_email_to_customer` INT, `p_send_email_date` INT, `p_send_email_time` VARCHAR(10), `p_send_email_title` VARCHAR(250), `p_send_email_body` TEXT, `p_admin_email` VARCHAR(250))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_review_setting LIMIT 0,1)) THEN
	UPDATE tbl_review_setting SET show_front = p_show_front,
		allow_attack = p_allow_attack,
		send_email_to_admin = p_send_email_to_admin,
		allow_public = p_allow_public,
		number_star_public = p_number_star_public,
		send_email_to_customer = p_send_email_to_customer,
		send_email_date = p_send_email_date,
		send_email_time = p_send_email_time,
		send_email_title = p_send_email_title,
		send_email_body = p_send_email_body,
		admin_email = p_admin_email
		WHERE id = p_id;
			ELSE
		INSERT INTO  tbl_review_setting(show_front,allow_attack,send_email_to_admin,allow_public,number_star_public,send_email_to_customer,
		send_email_date,send_email_time,send_email_title,send_email_body,admin_email) VALUES(p_show_front,p_allow_attack,p_send_email_to_admin,p_allow_public,p_number_star_public,p_send_email_to_customer,p_send_email_date,p_send_email_time,
		p_send_email_title,p_send_email_body,p_admin_email);
	END IF;  
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRecommendItems` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRecommendItems` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRecommendItems`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:06/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, get RecommendItems
 */
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL or product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_recommended_item 		= 1 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveBanner` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveBanner` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveBanner`(`p_mode` VARCHAR(20), `p_banner_id` BIGINT(11), `p_banner_name` TEXT, `p_banner_status` TINYINT(4), `p_banner_showtop` TINYINT(4), `p_banner_link` TEXT, `p_is_youtube_iframe` TINYINT(1), `p_item_code` VARCHAR(255), `p_order_num` INT, `p_banner_description` VARCHAR(2000), `p_is_open_in_new_tab` TINYINT(1), `p_start_date` DATETIME, `p_end_date` DATETIME, `p_unlimited` TINYINT(1), `p_display_video` INT(1))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_banner(banner_name,banner_status,banner_showtop,banner_link,is_youtube_iframe,item_code,order_num,banner_description,is_open_in_new_tab, start_date, end_date, unlimited, display_video)
		VALUES(p_banner_name,p_banner_status,p_banner_showtop,p_banner_link,p_is_youtube_iframe,p_item_code,p_order_num,p_banner_description,p_is_open_in_new_tab, p_start_date, p_end_date, p_unlimited, p_display_video);
	ELSE
		UPDATE  tbl_banner
		SET
			banner_name 		= p_banner_name,
			banner_status 		= p_banner_status,
			banner_showtop 		= p_banner_showtop,
			item_code 		= p_item_code,
			banner_link 		= p_banner_link,
			is_youtube_iframe 	= p_is_youtube_iframe,
			tbl_banner.order_num 	= p_order_num,
			banner_description 	= p_banner_description,
			is_open_in_new_tab	= p_is_open_in_new_tab,
			start_date 		= p_start_date,
			end_date 		= p_end_date,
			unlimited 		= p_unlimited,
			display_video		= p_display_video
		WHERE
			banner_id = p_banner_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_banner_id AS banner_id;
	ELSE
		SELECT MAX(banner_id) AS banner_id FROM tbl_banner;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRecommendItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRecommendItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRecommendItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:06/07/2018
 * Time:13:22
 * Note: them store nay cho kh Spread, get RecommendItems
 */
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_recommended_item 		= 1 
		");
	IF 
		p_group_category_id IS NOT NULL 
		AND p_group_category_id <> '' 
		AND p_group_category_id <> '0' 
	THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveBrand`(`p_mode` VARCHAR(20), `p_brand_id` INT, `p_brand_code` VARCHAR(255), `p_brand_name` VARCHAR(255), `p_brand_name_display` VARCHAR(255), `p_brand_title_sale_off` VARCHAR(255), `p_is_show_as_menu` TINYINT, `p_brand_menu_type` TINYINT, `p_brand_memo` TEXT, `p_group_id` INT(11), `p_show_order` INT(11), `p_brand_status` TINYINT, `p_brand_header` TEXT, `p_brand_katagana` VARCHAR(255), `p_is_show_top_page` TINYINT, `p_is_show_pickup` TINYINT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_brands 	(brand_code,brand_name, brand_name_display, brand_title_sale_off,is_show_as_menu,brand_menu_type,brand_memo, 
						group_id, show_order,brand_status, brand_header,brand_katagana,is_show_top_page,is_show_pickup)
		VALUES			(p_brand_code,p_brand_name, p_brand_name_display, p_brand_title_sale_off,p_is_show_as_menu,p_brand_menu_type,p_brand_memo, 
						p_group_id, p_show_order,p_brand_status, p_brand_header,p_brand_katagana,p_is_show_top_page,p_is_show_pickup);
	ELSE
		UPDATE tbl_brands
		SET
			brand_code 		= p_brand_code,
			brand_name 		= p_brand_name,
			brand_name_display 	= p_brand_name_display,
			brand_title_sale_off 	= p_brand_title_sale_off,
			is_show_as_menu 	= p_is_show_as_menu,
			group_id 		= p_group_id,
			show_order		= p_show_order,
			brand_status		= p_brand_status,
			brand_header		= p_brand_header,
			brand_katagana 		= p_brand_katagana,
			is_show_top_page	= p_is_show_top_page,
			is_show_pickup		= p_is_show_pickup
		WHERE
			tbl_brands.brand_id = p_brand_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRecommendItems_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRecommendItems_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRecommendItems_mida`(IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.is_recommended_item 		= 1 ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt =  CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
			",@conditionRestockItemsStmt,"
			", @orderStmt, "
			", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUE (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getRecoveryProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getRecoveryProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getRecoveryProduct`(IN `p_rcovery` TEXT, IN `p_customer_id` BIGINT(20), IN `p_current_product_SeqNo` VARCHAR(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = "
			ORDER BY 	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ";
	SET @selectLimitStmt = 
		CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	SET @selectStmt =CONCAT(@selectStmt,",tbl_products_details.is_main_color  as is_main_color");
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
	FROM 
		tbl_products 
			JOIN tbl_products_details
				ON  tbl_products_details.RSeqNo 		= tbl_products.SeqNo
				AND tbl_products_details.product_detail_status 	= 0
	WHERE 	
		tbl_products.goods_code IN (",p_rcovery,")
		AND tbl_products.product_status  = '1'
		AND tbl_products.SeqNo 		 <> '",p_current_product_SeqNo,"' ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 1
		AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY product_goods_code ,pro_detail_color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF p_customer_id <> 0 THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code  ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveBrandJamSync_Grouptanaka` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveBrandJamSync_Grouptanaka` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveBrandJamSync_Grouptanaka`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_brand_code` VARCHAR(50), IN `p_brand_name` VARCHAR(100), IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_brands(SeqNo,RSeqNo,create_date,brand_code,brand_name,TimeStamp,ecsite,brand_name_display,`is_show_as_menu`)
		VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
          
          SELECT COUNT(`group_code`) INTO @count FROM `tbl_brands_group` WHERE `group_name`=p_brand_name;
          IF (@count = 0) THEN		
		INSERT INTO `tbl_brands_group`(`group_code`,`group_name`,`group_status`,`show_order`)
		VALUES(p_brand_code,p_brand_name,0,0);		 
          END IF;
          UPDATE tbl_brands SET `group_id`=(SELECT `id` FROM `tbl_brands_group` WHERE `group_name`=p_brand_name LIMIT 1)
		WHERE `group_id`=0 OR `group_id` IS NULL;
          		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCategory`(IN `p_mode` VARCHAR(10), IN `p_product_category_id` INT, IN `p_OrderNumber` INT, IN `p_Name` VARCHAR(255), IN `p_name_display` VARCHAR(255), IN `p_name_display_en` VARCHAR(255), IN `p_IsDisplay` TINYINT, IN `p_IsShowAsMenu` TINYINT, IN `p_DisplayBannerOnTop` TINYINT, IN `p_ItemCode` VARCHAR(20), IN `p_memo` TEXT, IN `p_slug_url` TEXT, IN `p_category_group_id` INT(11), IN `p_category_header` TEXT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_products_category(
						OrderNumber,
						Name,
						name_display,
						name_display_en,
						IsDisplay,
						IsShowAsMenu,
						DisplayBannerOnTop,
						create_date,
						ItemCode,
						memo,
						slug_url,
						category_group_id,
						category_header)
		VALUES(
			p_OrderNumber,
			p_Name,
			p_name_display,
			p_name_display_en,
			p_IsDisplay,
			p_IsShowAsMenu,
			p_DisplayBannerOnTop,
			NOW(),
			p_ItemCode,
			p_memo,
			p_slug_url,
			p_category_group_id,
			p_category_header);
	ELSE
		UPDATE tbl_products_category
		SET
			tbl_products_category.OrderNumber 	= p_OrderNumber
		,	tbl_products_category.Name 		= p_Name
		,	tbl_products_category.name_display	= p_name_display
		,	tbl_products_category.name_display_en	= p_name_display_en
		,	tbl_products_category.IsDisplay 	= p_IsDisplay
		,	tbl_products_category.IsShowAsMenu 	= p_IsShowAsMenu
		,	tbl_products_category.DisplayBannerOnTop= p_DisplayBannerOnTop
		,	tbl_products_category.ItemCode 		= p_ItemCode
		,	tbl_products_category.memo 		= p_memo
		,	tbl_products_category.slug_url 		= p_slug_url
		,	tbl_products_category.category_group_id = p_category_group_id
		,	tbl_products_category.category_header 	= p_category_header
		,	tbl_products_category.modified_date 	= NOW()
		WHERE
			tbl_products_category.product_category_id = p_product_category_id;
	END IF;
	SELECT 'ok' AS msg;
	IF(p_mode<>'C') THEN
		SELECT p_product_category_id 	AS product_category_id;
	ELSE
		SELECT MAX(product_category_id) AS product_category_id FROM tbl_products_category;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getRelatedProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getRelatedProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getRelatedProduct`(IN `p_category_id` BIGINT, IN `p_customer_id` BIGINT(20), IN `p_current_product_SeqNo` VARCHAR(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = "
			ORDER BY 	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ";
	SET @selectLimitStmt = 
		CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
	FROM 
		tbl_products 
			JOIN tbl_products_details
				ON  tbl_products_details.RSeqNo 		= tbl_products.SeqNo
				AND tbl_products_details.product_detail_status 	= 0
	WHERE 	
		tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
		AND tbl_products.product_category_id = '",p_category_id,"'
		AND tbl_products.product_status  = '1'
		AND tbl_products.SeqNo 		 <> '",p_current_product_SeqNo,"' ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 1
		AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
	GROUP BY product_SeqNo ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code  ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCategoryGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCategoryGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCategoryGuide`(IN `p_category_guide_id` BIGINT(11), IN `p_product_category_id` INT, IN `p_category_guide_name` VARCHAR(250))
BEGIN
	IF(EXISTS(SELECT * FROM tbl_category_guide WHERE tbl_category_guide.product_category_id = p_product_category_id AND tbl_category_guide.category_guide_id = p_category_guide_id)) THEN
		
		UPDATE tbl_category_guide
		SET
			tbl_category_guide.category_guide_name = p_category_guide_name,
			tbl_category_guide.product_category_id = p_product_category_id
		
		WHERE
			tbl_category_guide.category_guide_id = p_category_guide_id;
	ELSE
		INSERT INTO tbl_category_guide(product_category_id,category_guide_name)
		VALUES(p_product_category_id,p_category_guide_name);
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveContractConditionJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveContractConditionJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveContractConditionJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN	
	IF(p_mode = 'C') THEN	  
          SET @insertStmt = CONCAT('INSERT INTO `tbl_contractcondition`(
		  `SeqNo`,
		  `RSeqNo`,
		  `CreatedDate`,
		  `ModifiedDate`,
		  `ContracConditionCode`,
		  `ContracConditionName`,
		  `ContractType`,
		  `IsRentalTime_Basic`,
		  `IsRentalTime_Option`,
		  `IsRentalTime_Not`,
		  `TimeStamp`,
		  `RentalTime1`,
		  `RentalTime2`,
		  `IsRentalTime_Period`,
		  `IsRentalTime_After1Month`,
		  `RentalDate1`,
		  `RentalDate2`,
		  `IsRentalFee_Detail`,
		  `IsRentalFee_Free`,
		  `IsRentalFee_DetailDiscount`,
		  `RentalFee`,
		  `RentalDiscountRate`,
		  `IsExtend_Basic`,
		  `IsExtend_Option`,
		  `IsExtend_Period`,
		  `IsExtend_Free`,
		  `ExtendRate1`,
		  `ExtendRate2`,
		  `ExtendNum1`,
		  `ExtendNum2`,
		  `ExtendNum3`,
		  `IsExtend_Free2`,
		  `IsExtend_Option2`,
		  `ExtendUnitFee`,
		  `IsShortDiscount_Basic`,
		  `IsShortDiscount_Option`,
		  `IsShortDiscount_Not`,
		  `DiscountRate1`,
		  `DiscountRate2`,
		  `IsPaymentTime_Basic`,
		  `IsPaymentTime_Option`,
		  `PaymentTime`,
		  `IsPrePayment`,
		  `IsAftPayment`,
		  `IsNotPayment`,
		  `IsClean_Basic`,
		  `IsClean_Option`,
		  `CleanFee`,
		  `IsCleanPay_Basic`,
		  `IsCleanPay_Option`,
		  `CleanPayTime`,
		  `IsDeliveryFee_Input`,
		  `IsDeliveryFee_Fixed`,
		  `IsDeliveryFee_Not`,
		  `DeliveryFee`,
		  `IsDeliveryFee_Input2`,
		  `IsLateInterest_Basic`,
		  `IsLateInterest_Option`,
		  `LateInterestNum`,
		  `LateInterestRate`,
		  `IsLateInterest_Not`,
		  `IsLateInterest_Input`,
		  `IsUsePoint`,
		  `IsShowSaleList`,
		  `IsStatisticSale`,
		  `IsCommission_Other`,
		  `IsCommission_Rental`,
		  `IsCommission_RentalExtend`,
		  `IsCommission_Not`,
		  `CommissionRate`,
		  `CommissionFee`,
		  `IsClean_Not`,
		  `IsCommission_Contract`
		) VALUES ',atData);
	  -- insert into `tbl_sys_log`(`sys_log`) values(@insertStmt);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRelatedProductForHashtag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRelatedProductForHashtag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRelatedProductForHashtag`(IN `p_keyword` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = CONCAT("	 
		ORDER BY 	CAST(product_active_date AS DATE) 	DESC,
				product_goods_code 	ASC ");
					
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND tbl_products.goods_code 			IN (",p_keyword,") ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
 	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCustomer`(`p_mode` VARCHAR(20), `p_customer_id` BIGINT(20), `p_email` VARCHAR(200), `p_email_encode` VARCHAR(50), `p_passwords` VARCHAR(50), `p_customer_name` VARCHAR(200), `p_create_date` VARCHAR(40), `p_modified_date` VARCHAR(40), `p_customer_status` INT(4), `p_first_name` VARCHAR(200), `p_last_name` VARCHAR(200), `p_birthday` VARCHAR(50), `p_postcode` VARCHAR(50), `p_state` VARCHAR(50), `p_address` VARCHAR(500), `p_address2` VARCHAR(500), `p_emailmagazine` INT(4), `p_phone` VARCHAR(50), `p_city` VARCHAR(50), `p_cusfromapplejam` VARCHAR(50), `p_town` VARCHAR(255), `p_customer_code` VARCHAR(13), `p_customer_barcode` VARCHAR(20), `p_customer_rank` VARCHAR(20), `p_seqno` VARCHAR(20), `p_nickname` VARCHAR(200), `p_hospital` VARCHAR(255), `p_question` VARCHAR(10), `p_identification` VARCHAR(200), `p_cellphone` VARCHAR(50), `p_gender` VARCHAR(10), `p_customer_job` VARCHAR(200), `p_customer_jobother` VARCHAR(200), `p_home` VARCHAR(10), `p_shopcode` VARCHAR(10), `p_shopname` VARCHAR(40))
BEGIN
		
IF(EXISTS(SELECT * FROM tbl_customers WHERE tbl_customers.email=p_email)) THEN
	set p_mode = 'U';
end if;
	IF(p_mode = 'C') THEN		
		if p_customer_rank="" THEN
			SELECT `Rank_Code` INTO p_customer_rank FROM `tbl_customer_rankup` WHERE `Default_Type`=1 LIMIT 1;
			
		end if;
		
		INSERT INTO tbl_customers(customer_name,create_date,modified_date,customer_status,first_name,last_name,email,birthday,passwords,address,phone,city,cus_from_applejam,town,email_encode,
		postcode, state, address2, emailmagazine,customer_code,SeqNo, TimeStamp, `barcode`, `rank`, `customer_nickname`,`customer_hospital`,`question`
		, `customer_identification`, `cellphone`, gender,`customer_job`,`customer_jobother`,`ishomeaddress`,`shopcode`,`shopname`
		)
		VALUES(p_customer_name,date(now()),p_modified_date,p_customer_status,p_first_name,p_last_name,p_email,p_birthday,p_passwords,p_address,p_phone,p_city,p_cusfromapplejam,p_town,p_email_encode,
		p_postcode, p_state,p_address2,p_emailmagazine,p_customer_code,p_seqno, now(), p_customer_barcode,
		p_customer_rank, p_nickname, p_hospital, p_question
		, p_identification, p_cellphone, p_gender, p_customer_job
		,p_customer_jobother, p_home,p_shopcode,p_shopname
		);
	ELSE
		UPDATE tbl_customers
		SET
			tbl_customers.customer_name = p_customer_name,			
			tbl_customers.modified_date = p_modified_date,
			tbl_customers.first_name = p_first_name,
			tbl_customers.last_name = p_last_name,
			tbl_customers.birthday = p_birthday,
			tbl_customers.address = p_address,
			tbl_customers.phone = p_phone,
			tbl_customers.city = p_city,			
			tbl_customers.passwords = p_passwords,
			tbl_customers.customer_status = p_customer_status,
			tbl_customers.postcode = p_postcode,
			tbl_customers.state = p_state,
			tbl_customers.address2 = p_address2,
			tbl_customers.emailmagazine = p_emailmagazine,			
			tbl_customers.town = p_town,
			tbl_customers.email = p_email,
			tbl_customers.email_encode = p_email_encode,
			
			
			tbl_customers.TimeStamp = now(),
			tbl_customers.`customer_nickname` = p_nickname,
			
			tbl_customers.cellphone = p_cellphone,
			tbl_customers.gender = p_gender,
			
			tbl_customers.customer_job = p_customer_job,
			tbl_customers.customer_jobother = p_customer_jobother,
			tbl_customers.`ishomeaddress` = p_home,
			
			tbl_customers.`shopcode` = p_shopcode,
			tbl_customers.`shopname` = p_shopname
						
	
		WHERE
			tbl_customers.customer_id = p_customer_id;
	END IF;
	SELECT 1 AS success;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRelatedProductForHashtag_Filter` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRelatedProductForHashtag_Filter` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRelatedProductForHashtag_Filter`(IN `p_keyword` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_sort` VARCHAR(50), IN `p_brand_code` VARCHAR(20), IN `p_item_code` VARCHAR(20), IN `p_size_code` VARCHAR(20), IN `p_color_code` VARCHAR(20))
BEGIN
	-- hoa xuan them cho kh fashion, them phan loc theo brand, item, size, color
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	
	-- =============================================================================== 						
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
		
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
			
	-- ===============================================================================
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1
			AND tbl_products.goods_code 			IN (",p_keyword,") ");
			
	-- =============================================================================== 
	IF p_brand_code 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code 			= '",p_brand_code,"' ");
	END IF;
	-- =============================================================================== 
	IF  p_item_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode 		= '",p_item_code,"' ");
	END IF;
		
	IF  p_size_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.size_code 		= '",p_size_code,"' ");
	END IF;
	
	IF  p_color_code 	<> '' 
	THEN 
		SET @selectFromStmt = CONCAT(@selectFromStmt, " 
			AND tbl_products_details.color_code 		= '",p_color_code,"' ");
	END IF;
	
	-- =============================================================================== 
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- ===============================================================================	
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	-- ===============================================================================
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRelatedProductForMedia` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRelatedProductForMedia` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRelatedProductForMedia`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	SET @orderStmt = CONCAT(" ORDER BY  FIELD(product_goods_code,",(SELECT CASE WHEN related_goods_code_for_search IS NULL or related_goods_code_for_search = '' THEN "''" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id ),"),	
				CAST(product_active_date AS DATE) 	DESC,
				product_goods_code 	ASC  
					 ");
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1					
			AND tbl_products.goods_code IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL OR related_goods_code_for_search = '' THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),")
			AND tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveCustomerSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveCustomerSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveCustomerSync`(`p_mode` VARCHAR(20), `p_SeqNo` VARCHAR(20), `p_RSeqNo` VARCHAR(20), `p_create_date` VARCHAR(20), `p_modified_date` VARCHAR(20), `p_TimeStamp` VARCHAR(225), `p_customer_code` VARCHAR(50), `p_first_name` VARCHAR(200), `p_last_name` VARCHAR(200), `p_email` VARCHAR(200), `p_birthday` VARCHAR(50), `p_phone` VARCHAR(50), `p_postcode` VARCHAR(50), `p_state` VARCHAR(50), `p_city` VARCHAR(50), `p_address` VARCHAR(500), `p_address2` VARCHAR(500), `p_points` VARCHAR(20), `p_note` TEXT, `p_email_encode` VARCHAR(50))
BEGIN
	
	IF(p_mode = 'C') THEN
		IF( NOT EXISTS(SELECT SeqNo FROM tbl_customers WHERE tbl_customers.SeqNo=p_SeqNo)) THEN
		        INSERT INTO tbl_customers(create_date,modified_date,customer_status,first_name,last_name,email,birthday,address,phone,email_encode,
			postcode, state, address2, emailmagazine, note, points, city
			,SeqNo, RSeqNo, TimeStamp, customer_code
			)
			VALUES(p_create_date,p_modified_date,'1',p_first_name,p_last_name,p_email,p_birthday,p_address,p_phone,p_email_encode,
			p_postcode, p_state,p_address2,'1', p_note, p_points, p_city
			,p_SeqNo, p_RSeqNo, p_TimeStamp, p_customer_code
			);
		else
			UPDATE tbl_customers
			SET
				tbl_customers.customer_code = p_customer_code,			
				tbl_customers.modified_date = p_modified_date,
				tbl_customers.TimeStamp = p_TimeStamp,
				tbl_customers.first_name = p_first_name,
				tbl_customers.last_name = p_last_name,
				tbl_customers.email = p_email,
				tbl_customers.birthday = p_birthday,				
				tbl_customers.phone = p_phone,					
				tbl_customers.postcode = p_postcode,
				tbl_customers.state = p_state,
				tbl_customers.city = p_city,		
				tbl_customers.address = p_address,
				tbl_customers.address2 = p_address2,
				tbl_customers.points = p_points,			
				tbl_customers.note = p_note
				
		
			WHERE
				tbl_customers.SeqNo=p_SeqNo;
			
		END IF;
	
			
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRelatedProductForMediaByGoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRelatedProductForMediaByGoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRelatedProductForMediaByGoodColor`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1			
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),") ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveGift` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveGift` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveGift`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_gift_id` BIGINT, IN `p_gift_code` VARCHAR(50), IN `p_gift_name` VARCHAR(255), IN `p_product_quantity` BIGINT, IN `p_unit` VARCHAR(20), IN `p_gift_description` TEXT, IN `p_is_gift_description_template` TINYINT, IN `p_gift_bag_code` VARCHAR(50), IN `p_gift_bag_price` FLOAT, IN `p_delivery_type` TINYINT, IN `p_delivery_cost` FLOAT, IN `p_gift_status` TINYINT, IN `p_show_order` INT)
BEGIN
	IF (p_is_gift_description_template = 1 OR p_is_gift_description_template = '1') THEN
		UPDATE 	tbl_gift
		SET
			is_gift_description_template = 0;
	END IF;
	IF (p_mode='C') THEN
		INSERT INTO tbl_gift (
			gift_code,
			gift_name,
			product_quantity,
			unit,
			gift_description,
			is_gift_description_template,
			gift_bag_code,
			gift_bag_price,
			delivery_type,
			delivery_cost,
			gift_status,
			create_date,
			modify_date,
			show_order
		)VALUES(
			
			p_gift_code,
			p_gift_name,
			p_product_quantity,
			p_unit,
			p_gift_description,
			p_is_gift_description_template,
			p_gift_bag_code,
			p_gift_bag_price,
			p_delivery_type,
			p_delivery_cost,
			p_gift_status,
			NOW(),
			NOW(),
			p_show_order
		);
	ELSE
		UPDATE 	tbl_gift
		SET
			gift_code 		= p_gift_code,
			gift_name 		= p_gift_name,
			product_quantity 	= p_product_quantity,
			unit 			= p_unit,
			gift_description 	= p_gift_description,
			is_gift_description_template = p_is_gift_description_template,
			gift_bag_code 		= p_gift_bag_code,
			gift_bag_price 		= p_gift_bag_price,
			delivery_type 		= p_delivery_type,
			delivery_cost 		= p_delivery_cost,
			gift_status 		= p_gift_status,
			modify_date		= NOW(),
			show_order		= p_show_order
		WHERE
			gift_id = p_gift_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_gift_id AS gift_id;
	ELSE
		SELECT MAX(gift_id) AS gift_id FROM tbl_gift;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_getRelatedProduct_ByCateAndBrand` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_getRelatedProduct_ByCateAndBrand` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_getRelatedProduct_ByCateAndBrand`(IN `p_category_id` BIGINT, IN `p_brand_id` BIGINT, IN `p_customer_id` BIGINT(20), IN `p_current_product_SeqNo` VARCHAR(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
SET @orderStmt = "
			ORDER BY 	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC ";
	SET @selectLimitStmt = 
		CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
	FROM 
		tbl_products 
			JOIN tbl_products_details
				ON  tbl_products_details.RSeqNo 		= tbl_products.SeqNo
				AND tbl_products_details.product_detail_status 	= 0
	WHERE 	
		tbl_products.product_category_id = '",p_category_id,"'
		AND tbl_products.brand_id =  '",p_brand_id,"'
		AND tbl_products.product_status  = '1'
		AND tbl_products.SeqNo 		 <> '",p_current_product_SeqNo,"' ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.is_color_show			= 1
		AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
	GROUP BY product_SeqNo ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
		LEFT JOIN (
			SELECT 	
				product_id,
				color_code,
				COUNT(*) AS is_wished
			FROM 	
				tbl_wish_list 
			WHERE 
				customer_id	= ",p_customer_id,"
			GROUP BY product_id, color_code
		
		) AS wish_list_info
			ON wish_list_info.product_id 	= product_info_ok.product_product_id
			AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code  ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveGiftDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveGiftDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveGiftDetail`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_gift_detail_id` BIGINT, IN `p_gift_id` BIGINT, IN `p_gift_code` VARCHAR(50), IN `p_goods_code` VARCHAR(50), IN `p_color_codes` VARCHAR(2000), IN `p_size_codes` VARCHAR(2000), IN `p_price_notax` FLOAT, IN `p_wrapping_bag_code` VARCHAR(50), IN `p_wrapping_bag_price` FLOAT, IN `p_total_price_goods_wrapping` FLOAT, IN `p_line_no` TINYINT)
BEGIN
	IF (p_mode='C') THEN
		INSERT INTO tbl_gift_detail (
			gift_id,
			gift_code,
			goods_code,
			color_codes,
			size_codes,
			price_notax,
			wrapping_bag_code,
			wrapping_bag_price,
			total_price_goods_wrapping,
			line_no,
			create_date,
			modify_date
		)VALUES(
			p_gift_id,
			p_gift_code,
			p_goods_code,
			p_color_codes,
			p_size_codes,
			p_price_notax,
			p_wrapping_bag_code,
			p_wrapping_bag_price,
			p_total_price_goods_wrapping,
			p_line_no,
			NOW(),
			NOW()
		);
	ELSE
		UPDATE 	tbl_gift_detail
		SET
			gift_id = p_gift_id,
			gift_code = p_gift_code,
			goods_code = p_goods_code,
			color_codes = p_color_codes,
			size_codes = p_size_codes,
			price_notax = p_price_notax,
			wrapping_bag_code = p_wrapping_bag_code,
			wrapping_bag_price = p_wrapping_bag_price,
			total_price_goods_wrapping = p_total_price_goods_wrapping,
			line_no = p_line_no,
			modify_date = NOW()
		WHERE
			gift_detail_id = p_gift_detail_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode <> 'C') THEN
		SELECT p_gift_detail_id AS gift_detail_id;
	ELSE
		SELECT MAX(gift_detail_id) AS gift_detail_id FROM tbl_gift_detail;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveGiftProductDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveGiftProductDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveGiftProductDetail`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_gift_product_id` BIGINT, IN `p_gift_id` BIGINT, IN `p_gift_code` VARCHAR(50), IN `p_gift_detail_id` BIGINT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(50), IN `p_size_code` VARCHAR(50), IN `p_line_no` TINYINT)
BEGIN
	IF (p_mode='C') THEN
		INSERT INTO tbl_gift_product_detail (
			gift_id,
			gift_code,
			gift_detail_id,
			goods_code,
			color_code,
			size_code,
			line_no
		)VALUES(
			p_gift_id,
			p_gift_code,
			p_gift_detail_id,
			p_goods_code,
			p_color_code,
			p_size_code,
			p_line_no
		);
	ELSE
		UPDATE 	tbl_gift_product_detail
		SET
			gift_id = p_gift_id,
			gift_code = p_gift_code,
			gift_detail_id = p_gift_detail_id,
			goods_code = p_goods_code,
			color_code = p_color_code,
			size_code = p_size_code,
			line_no = p_line_no
		WHERE
			gift_product_id = p_gift_product_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode <> 'C') THEN
		SELECT p_gift_product_id AS gift_product_id;
	ELSE
		SELECT MAX(gift_product_id) AS gift_product_id FROM tbl_gift_product_detail;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetRestockProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetRestockProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetRestockProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_sold_out 			= 1 
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id  = '",p_group_category_id,"')
			
			 ");
	END IF;
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '';
	SET @conditionRestockItemsStmt = " 
		WHERE stock_num > 0 
	";
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT COUNT(*) AS total_items FROM (
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKeyword` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKeyword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKeyword`(`p_mode` VARCHAR(20), `p_keyword_id` INT, `p_keyword_code` VARCHAR(255), `p_keyword_name` VARCHAR(255), `p_show_order` INT(11), `p_keyword_status` TINYINT, `p_keyword_content` TEXT, `p_is_keyword` TINYINT, `p_keyword_english` VARCHAR(255), `p_keyword_image` TEXT, `p_keyword_image_mobile` TEXT, `p_keyword_content_html` TEXT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO `tbl_keyword` (`keyword_code`,`keyword_name`,`show_order`,`keyword_status`,`keyword_content`,`is_keyword`,`TimeStamp`,`keyword_english`,`keyword_image`,`keyword_image_mobile`,`keyword_content_html`)
		VALUES			(p_keyword_code,p_keyword_name, p_show_order,p_keyword_status,p_keyword_content,p_is_keyword,CURRENT_TIMESTAMP(),p_keyword_english,p_keyword_image,p_keyword_image_mobile,p_keyword_content_html);
	ELSE
		UPDATE `tbl_keyword`
		SET
			tbl_keyword.`keyword_code` 	= p_keyword_code
		,	tbl_keyword.`keyword_name` 	= p_keyword_name		
		,	tbl_keyword.show_order		= p_show_order
		,	tbl_keyword.`keyword_status`	= p_keyword_status
		,	tbl_keyword.`keyword_content`	= p_keyword_content
		,	tbl_keyword.`is_keyword`	= p_is_keyword
		,	tbl_keyword.`TimeStamp`		= CURRENT_TIMESTAMP()
		,	tbl_keyword.`keyword_english`	= p_keyword_english
		,	tbl_keyword.`keyword_image`	= p_keyword_image
		,	tbl_keyword.`keyword_image_mobile`	= p_keyword_image_mobile
		,	tbl_keyword.`keyword_content_html`	= p_keyword_content_html
		WHERE
			`tbl_keyword`.`keyword_id` = p_keyword_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_keyword_id AS keyword_id;
	ELSE
		SELECT MAX(keyword_id) AS keyword_id FROM tbl_keyword;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetSaleProductByCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetSaleProductByCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetSaleProductByCategoryId`(IN `p_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product = 1
			
			");
	
	IF 
		p_category_id 	IS NOT NULL 
		AND p_category_id 	<> '' 
		AND p_category_id 	<> 'all'
		AND p_category_id 	<> '0'
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode = '",p_category_id, "'"
		);
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr);	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKeyword_realmccoys` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKeyword_realmccoys` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKeyword_realmccoys`(`p_mode` VARCHAR(20), `p_keyword_id` INT, `p_keyword_code` VARCHAR(255), `p_keyword_name` VARCHAR(255), `p_show_order` INT(11), `p_keyword_status` TINYINT, `p_keyword_content` TEXT, `p_is_keyword` TINYINT, `p_keyword_english` VARCHAR(255), `p_keyword_image` TEXT, `p_keyword_image_mobile` TEXT, `p_keyword_content_html` TEXT, `p_keyword_role` TINYINT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO `tbl_keyword` (`keyword_code`,`keyword_name`,`show_order`,`keyword_status`,`keyword_content`,`is_keyword`,`TimeStamp`,`keyword_english`,`keyword_image`,`keyword_image_mobile`,`keyword_content_html`,`keyword_role`)
		VALUES			(p_keyword_code,p_keyword_name, p_show_order,p_keyword_status,p_keyword_content,p_is_keyword,CURRENT_TIMESTAMP(),p_keyword_english,p_keyword_image,p_keyword_image_mobile,p_keyword_content_html,p_keyword_role);
	ELSE
		UPDATE `tbl_keyword`
		SET
			tbl_keyword.`keyword_code` 	= p_keyword_code
		,	tbl_keyword.`keyword_name` 	= p_keyword_name		
		,	tbl_keyword.show_order		= p_show_order
		,	tbl_keyword.`keyword_status`	= p_keyword_status
		,	tbl_keyword.`keyword_content`	= p_keyword_content
		,	tbl_keyword.`is_keyword`	= p_is_keyword
		,	tbl_keyword.`TimeStamp`		= CURRENT_TIMESTAMP()
		,	tbl_keyword.`keyword_english`	= p_keyword_english
		,	tbl_keyword.`keyword_image`	= p_keyword_image
		,	tbl_keyword.`keyword_image_mobile`	= p_keyword_image_mobile
		,	tbl_keyword.`keyword_content_html`	= p_keyword_content_html
		,       tbl_keyword.`keyword_role`      = p_keyword_role     
		WHERE
			`tbl_keyword`.`keyword_id` = p_keyword_id;
	END IF;
	SELECT 'ok' AS msg;
	IF (p_mode<>'C') THEN
		SELECT p_keyword_id AS keyword_id;
	ELSE
		SELECT MAX(keyword_id) AS keyword_id FROM tbl_keyword;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_GetSaleProductByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_GetSaleProductByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_GetSaleProductByGroupCategoryId`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.sale_off_product = 1
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
		AND p_group_category_id 	<> '0'
	THEN
	
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	END IF;
	
	
	
	
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKonbiniPayNofinication` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKonbiniPayNofinication` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKonbiniPayNofinication`(`p_order_id` INT(11), `p_itakusya_no` INT(5), `p_kokyaku_no` VARCHAR(15), `p_kakunin_no` INT(6), `p_kokyaku_name` VARCHAR(24), `p_seikyu_kingaku` INT(11), `p_syunou_status` INT(2), `p_touroku_date_time` DATETIME, `p_kigen_date` INT(8), `p_seikyu_channel_cd` VARCHAR(4), `p_syomei_cd` VARCHAR(32), `p_uketsuke_no` VARCHAR(13), `p_uketsuke_no_s` VARCHAR(13), `p_uketsuke_no_w` INT(11), `p_kokyaku_tel_no` VARCHAR(13), `p_kakunin_no_w` INT(6), `p_haraikomihyou_url` TEXT, `p_syunoukikan_no` INT(5), `p_free_info` TEXT)
BEGIN
	INSERT INTO tbl_konbini_pay_notification(
				order_id,
				itakusya_no,
				kokyaku_no,
				kakunin_no,
				kokyaku_name,
				seikyu_kingaku,
				syunou_status,
				touroku_date_time,
				kigen_date,
				seikyu_channel_cd,
				syomei_cd,
				uketsuke_no,
				uketsuke_no_s,
				uketsuke_no_w,
				kokyaku_tel_no,
				kakunin_no_w,
				haraikomihyou_url,
				syunoukikan_no,
				free_info)
	VALUES (
		p_order_id,
		p_itakusya_no,
		p_kokyaku_no,
		p_kakunin_no,
		p_kokyaku_name,
		p_seikyu_kingaku,
		p_syunou_status,
		p_touroku_date_time,
		p_kigen_date,
		p_seikyu_channel_cd,
		p_syomei_cd,
		p_uketsuke_no,
		p_uketsuke_no_s,
		p_uketsuke_no_w,
		p_kokyaku_tel_no,
		p_kakunin_no_w,
		p_haraikomihyou_url,
		p_syunoukikan_no,
		p_free_info
	);
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_HotItemBrandCode_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_HotItemBrandCode_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_HotItemBrandCode_mida`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	
	SET @brand_code_list = "'";
	SELECT 	GROUP_CONCAT(brand_code SEPARATOR "','")
	FROM 	tbl_brands 
	WHERE 	brand_status = '1'
	INTO 	@brand_code;
	
	IF @brand_code IS NOT NULL AND @brand_code <> ''
	THEN
		SET @brand_code_list = CONCAT(@brand_code_list, @brand_code);
	END IF;
	
	SET @brand_code_list = CONCAT(@brand_code_list, "'");
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.is_recommended_item            =1
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",@brand_code_list,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_Product_HotItem_mida` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_Product_HotItem_mida` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_Product_HotItem_mida`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_stock` VARCHAR(50), IN `p_search_key_word` VARCHAR(20), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_new` VARCHAR(20))
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'MIDA');
	
	IF (p_sort = '' AND p_new = 'mida-new')
	THEN
		SET @orderStmt = CONCAT("ORDER BY  	product_new_product DESC, 
					pro_detail_num_order DESC, 
					CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 			ASC,
					pro_detail_product_detail_order 	ASC");
	END IF;
	
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET search_keyword_master = '';
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
			
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products.product_itemcode 		= tbl_products_category.ItemCode
			AND tbl_products_details.product_detail_status 	= 0 
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.is_recommended_item            =1
			
			");
	
	IF 
		p_group_category_id 	IS NOT NULL 
		AND p_group_category_id 	<> '' 
		AND p_group_category_id 	<> 'all'
	THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_group_category_id
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
			",@check_multiple_item,"
			)
		");
	END IF;
	
	
	
	
	IF (p_new IS NOT NULL  AND  p_new = 'new' ) THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	IF p_stock IS NOT NULL AND p_stock = '1' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	-- --------------------------------------------------
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = CONCAT(@conditionRestockItemsStmt,'
				AND (product_is_restock_item = 1 
				AND (product_is_restock_item_always = 1 OR( 
				DATE(NOW()) BETWEEN DATE(product_restock_from) AND DATE(product_restock_to))))');
	END IF;
	-- --------------------------------------------------
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_product_multi_search_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_product_multi_search_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_product_multi_search_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_check` INT)
BEGIN
	-- Modified: 2019/10/28, S19102874 有限会社hapuna＆Co．ハプナ
	-- Them phan lay gia tu tbl_products_details
	IF p_check = 0 THEN
		SET @selectStmt2 = 'SELECT 
					p.product_id,
					p.product_name,
					p.goods_code,
					p.price,
					p.product_status,
					p.product_image,
					p.product_image_server,
					p.product_image_details,
					p.SectionName,
					(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=p.`SeqNo` GROUP BY RSeqNo) AS `product_detail_price`,
					(SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`= p.`SeqNo` GROUP BY RSeqNo) AS `barcode`
				    FROM 
					tbl_products p 
				    WHERE ';
		SET @selectStmt = '';
	ELSE
		SET @selectStmt2 = 'SELECT 
					p.product_id,
					p.product_name,
					p.goods_code,
					p.price,
					p.product_status,
					p.product_image,
					p.product_image_server,
					p.product_image_details,
					p.SectionName,
					(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=p.`SeqNo` GROUP BY RSeqNo) AS `product_detail_price`,
					(SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`= p.`SeqNo` GROUP BY RSeqNo) AS `barcode`
				FROM 
					tbl_products p
						LEFT JOIN tbl_products_details pt 
							ON p.SeqNo=pt.rseqno 
						LEFT JOIN tbl_brands 
							ON p.brand_code = tbl_brands.brand_code
						LEFT JOIN tbl_products_category
							ON p.product_itemcode = tbl_products_category.ItemCode
						LEFT JOIN tbl_set_seasons
							ON p.season_code = tbl_set_seasons.set_season_code
						
					
				WHERE 
					1=1
					AND 
					
					';
		SET @selectStmt = ' GROUP BY p.product_id ';
	END IF;
	
	IF p_keyword <> '' THEN
		IF p_check=0 THEN
			SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword);
		ELSE
			SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword,@selectStmt);
		END IF;
	END IF;
	
	
	
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectStmt2);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	
	
		
	IF p_check=0 THEN
		SET @selectStmt2 = 'SELECT count(*) AS total_items FROM tbl_products p WHERE ';
		SET @selectStmt = '';
	ELSE
		SET @selectStmt2 = 'SELECT count(*) as total_items FROM(
				
				SELECT 
					p.product_id,
					p.product_name,
					p.goods_code,
					p.price,
					p.product_status,
					p.product_image ,
					p.product_image_server
				FROM 
					tbl_products p
						LEFT JOIN tbl_products_details pt 
							ON p.SeqNo=pt.rseqno 
						LEFT JOIN tbl_brands 
							ON p.brand_code = tbl_brands.brand_code
						LEFT JOIN tbl_products_category
							ON p.product_itemcode = tbl_products_category.ItemCode
						LEFT JOIN tbl_set_seasons
							ON p.season_code = tbl_set_seasons.set_season_code
					
				WHERE 
					1=1
					AND  ';
		SET @selectStmt = ' group by p.product_id ) AS abc ';
	END IF;
	
	
	
	
	IF p_keyword <> '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword);
	END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKonbiniPayRequest` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKonbiniPayRequest` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKonbiniPayRequest`(`p_order_id` INT(11), `p_muf_code` INT(5), `p_customer_code` VARCHAR(15), `p_authorization_number` INT(6), `p_total_amount` DECIMAL(10,2), `p_basic_amount` DECIMAL(10,2), `p_arrears_amount` DECIMAL(10,2), `p_taxation_amount` DECIMAL(10,2), `p_billing_content_kana` VARCHAR(50), `p_billing_content_kanji` VARCHAR(50), `p_customer_name_kana` VARCHAR(50), `p_expiration_date` DATETIME, `p_transition_normal_url` TEXT, `p_transition_abnormal_url` TEXT, `p_free_text` VARCHAR(200), `p_payment_type` VARCHAR(4), `p_customer_phone` VARCHAR(20), `p_customer_name_kanji` VARCHAR(50), `p_infomation` VARCHAR(50), `p_success_url` TEXT, `p_error_url` TEXT, `p_detailed_print_content_kana` VARCHAR(50), `p_detailed_print_content_kanji` VARCHAR(50), `p_detailed_display_content_kana_1` VARCHAR(255), `p_detailed_display_content_kanji_1` VARCHAR(255), `p_detailed_display_content_kana_2` VARCHAR(5255), `p_detailed_display_content_kanji_2` VARCHAR(255), `p_destination_url_mobile` TEXT, `p_free_infomation` TEXT, `p_forwarding_mail_address` VARCHAR(100))
BEGIN
	INSERT INTO tbl_konbini_pay_request(
				order_id,
				muf_code,
				customer_code,
				authorization_number,
				total_amount,
				basic_amount,
				arrears_amount,
				taxation_amount,
				billing_content_kana,
				billing_content_kanji,
				customer_name_kana,
				expiration_date,
				transition_normal_url,
				transition_abnormal_url,
				free_text,
				payment_type,
				customer_phone,
				customer_name_kanji,
				infomation,
				success_url,
				error_url,
				detailed_print_content_kana,
				detailed_print_content_kanji,
				detailed_display_content_kana_1,
				detailed_display_content_kanji_1,
				detailed_display_content_kana_2,
				detailed_display_content_kanji_2,
				destination_url_mobile,
				free_infomation,
				forwarding_mail_address)
	VALUES(
		p_order_id,
		p_muf_code,
		p_customer_code,
		p_authorization_number,
		p_total_amount,
		p_basic_amount,
		p_arrears_amount,
		p_taxation_amount,
		p_billing_content_kana,
		p_billing_content_kanji,
		p_customer_name_kana,
		p_expiration_date,
		p_transition_normal_url,
		p_transition_abnormal_url,
		p_free_text,
		p_payment_type,
		p_customer_phone,
		p_customer_name_kanji,
		p_infomation,
		p_success_url,
		p_error_url,
		p_detailed_print_content_kana,
		p_detailed_print_content_kanji,
		p_detailed_display_content_kana_1,
		p_detailed_display_content_kanji_1,
		p_detailed_display_content_kana_2,
		p_detailed_display_content_kanji_2,
		p_destination_url_mobile,
		p_free_infomation,
		p_forwarding_mail_address
	);
	SELECT MAX(id) FROM tbl_konbini_pay_request;
	SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_rental_add` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_rental_add` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_rental_add`(`dodercode` VARCHAR(255), `dtotal_amount` DECIMAL(10,2), `dstatus` INT, `dshipped_on` VARCHAR(10), `dcomments` TEXT, `dcustomer_name` VARCHAR(100), `dcustomer_email` VARCHAR(50), `dshipping_postcode` VARCHAR(255), `dshipping_state` VARCHAR(50), `dshipping_city` VARCHAR(50), `dshipping_address` VARCHAR(255), `dshipping_address2` VARCHAR(500), `dshipping_phone` VARCHAR(50), `dshipping_customer_name` VARCHAR(200), `dshipping_customer_namekana` VARCHAR(200), `dpayment_method` VARCHAR(50), `dtotal_quantity` BIGINT, `dusepoint` BIGINT, `dcustomer_code` VARCHAR(20), `dcost` DECIMAL(10,2), `dfee` DECIMAL(10,2), `dshipping_date` VARCHAR(50), `dshipping_time` VARCHAR(50), `dcustomer_namekana` VARCHAR(255), `dncustomer_phone` VARCHAR(20), `dcouponmoney` DECIMAL(10,2), `dcouponinfo` TEXT, `dThisTimeIssuedPoint` INT, `dThisTimeUsePoint` INT, `dThisTimeUseMoney` DECIMAL(10,2), `dpay_id` TEXT, `dis_pre_order` INT, `dis_login` INT, `dsection_code` VARCHAR(20), `dsection_name` VARCHAR(40), `dlending_date` VARCHAR(50), `dreturn_date` VARCHAR(50), `dExtendedDays` INT, `dExtensionFee` DECIMAL(10,2), `dBasicRentalFee` DECIMAL(10,2), `dDeliveryFee` VARCHAR(20), `dContracConditionCode` VARCHAR(20), `dContracConditionName` VARCHAR(40))
BEGIN
DECLARE iPointMoneyType DOUBLE DEFAULT 0;
DECLARE iMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPointForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iPercentForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iMinMoneyForCalIssuePoint DOUBLE DEFAULT 0;
DECLARE iUnitUsePoint DOUBLE DEFAULT 0;
DECLARE oUnitUsePoint DOUBLE DEFAULT 1;
DECLARE iUsePoint_Point DOUBLE DEFAULT 0;
DECLARE iUsePoint_Money DOUBLE DEFAULT 0;
DECLARE iUsePointMoneyType DOUBLE DEFAULT 0;
DECLARE	itracking_name VARCHAR(255) DEFAULT '';
DECLARE iusecoupon TINYINT(4) DEFAULT 1;
DECLARE iissuepointbycoupon TINYINT(4) DEFAULT 1;
DECLARE iEC_UseInvoiceSetting TINYINT(4) DEFAULT 0;
DECLARE iEC_InvoicePrefix VARCHAR(4) DEFAULT '';
SELECT PointMoneyType,MoneyForCalIssuePoint,PointForCalIssuePoint,PercentForCalIssuePoint,MinMoneyForCalIssuePoint,UnitUsePoint,UsePoint_Point,UsePoint_Money,UsePointMoneyType
INTO iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,iMinMoneyForCalIssuePoint,iUnitUsePoint,iUsePoint_Point,iUsePoint_Money,iUsePointMoneyType
FROM tbl_prepointsettings LIMIT 1;
SELECT `tracking_name` INTO itracking_name FROM `tbl_tracking_url` ORDER BY  tracking_parcel DESC,tracking_use DESC,id ASC LIMIT 1;
IF (iUnitUsePoint > 0) THEN
 SET oUnitUsePoint=iUnitUsePoint;
END IF;
SELECT usecoupon,issuepointbycoupon INTO iusecoupon,iissuepointbycoupon FROM `tbl_settings` LIMIT 1;
SELECT IFNULL(EC_UseInvoiceSetting,0),EC_InvoicePrefix INTO iEC_UseInvoiceSetting, iEC_InvoicePrefix FROM tbl_website,tbl_settings WHERE tbl_website.website_code = tbl_settings.site_default LIMIT 1;
IF iEC_UseInvoiceSetting < 1 THEN 
	SET iEC_InvoicePrefix='';
END IF;
INSERT INTO tbl_rental(point_target,point_issuemoney,point_issueunit,
point_issuepercent,point_limit,point_useunit,point_userate,point_useunitpoint,
point_useunitmoney,point_usetarget,order_code,total_amount,created_on,shipped_on,
`status`,comments,customer_name,customer_email,shipping_postcode,shipping_state,
shipping_city,shipping_address,shipping_address2,shipping_phone,shipping_customer_name,
shipping_customer_namekana,payment_method,total_quantity,usepoint,customer_code,
shipping_cost,shipping_fee,shipping_date,shipping_time,customer_namekana,customer_phone,usecoupon,
issuepointbycoupon,couponmoney,couponinfo,thistimeissuedpoint,thistimeusepoint,thistimeusemoney,pay_id,preorder,
islogin,delivery_company,section_code,ec_prefix,section_name,lending_date,return_date,ExtendedDays,ExtensionFee,BasicRentalFee,DeliveryFee,
ContracConditionCode,ContracConditionName)
VALUES(iPointMoneyType,iMoneyForCalIssuePoint,iPointForCalIssuePoint,iPercentForCalIssuePoint,
iMinMoneyForCalIssuePoint,oUnitUsePoint,oUnitUsePoint,iUsePoint_Point,iUsePoint_Money,
iUsePointMoneyType,dodercode,dtotal_amount,NOW(),dshipped_on,dstatus,dcomments,
dcustomer_name,dcustomer_email,dshipping_postcode,dshipping_state,dshipping_city,
dshipping_address,dshipping_address2,dshipping_phone,dshipping_customer_name,
dshipping_customer_namekana,dpayment_method,dtotal_quantity,dusepoint,dcustomer_code,
dcost,dfee,dshipping_date,dshipping_time,dcustomer_namekana,dncustomer_phone,iusecoupon,
iissuepointbycoupon,dcouponmoney,dcouponinfo,dThisTimeIssuedPoint,dThisTimeUsePoint,dThisTimeUseMoney,dpay_id,dis_pre_order,
dis_login,itracking_name,dsection_code,iEC_InvoicePrefix,dsection_name,dlending_date,dreturn_date,dExtendedDays,dExtensionFee,dBasicRentalFee,dDeliveryFee,
dContracConditionCode,dContracConditionName);
SELECT LAST_INSERT_ID() AS msg;  
  END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveKonbiniPayRespone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveKonbiniPayRespone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveKonbiniPayRespone`(`p_order_id` INT(11), `p_itakusya_no` INT(5), `p_kokyaku_no` VARCHAR(15), `p_kakunin_no` INT(6), `p_cn_cd` INT(17), `p_kokyaku_name` VARCHAR(24), `p_syunou_kingaku` INT(11), `p_syunou_status` INT(2), `p_syunou_date_time` DATETIME, `p_syunou_nyuryoku_kbn` INT(2), `p_syunou_channel_kbn` INT(2), `p_syunou_channel_cd` INT(4), `p_cvstenpo_cd` VARCHAR(7), `p_syomei_cd` VARCHAR(32))
BEGIN
	INSERT INTO tbl_konbini_pay_respone(
				order_id,
				itakusya_no,
				kokyaku_no,
				kakunin_no,
				cn_cd,
				kokyaku_name,
				syunou_kingaku,
				syunou_status,
				syunou_date_time,
				syunou_nyuryoku_kbn,
				syunou_channel_kbn,
				syunou_channel_cd,
				cvstenpo_cd,
				syomei_cd)
	VALUES (
		p_order_id,
		p_itakusya_no,
		p_kokyaku_no,
		p_kakunin_no,
		p_cn_cd,
		p_kokyaku_name,
		p_syunou_kingaku,
		p_syunou_status,
		p_syunou_date_time,
		p_syunou_nyuryoku_kbn,
		p_syunou_channel_kbn,
		p_syunou_channel_cd,
		p_cvstenpo_cd,
		p_syomei_cd
	);
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMailRemindOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMailRemindOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMailRemindOrder`(IN `p_product_id` INT(11), IN `p_product_no` VARCHAR(200), IN `p_product_name` VARCHAR(200), IN `p_color_code` VARCHAR(200), IN `p_color_name` VARCHAR(200), IN `p_size_code` VARCHAR(200), IN `p_size_name` VARCHAR(200), IN `p_customer_id` VARCHAR(200), IN `p_customer_name` VARCHAR(200), IN `p_customer_email` VARCHAR(200), IN `p_mail_title_1` TEXT, IN `p_mail_content_1` TEXT, IN `p_mail_title_2` TEXT, IN `p_mail_content_2` TEXT, IN `p_mail_from` VARCHAR(200), IN `p_mail_from_address` VARCHAR(200), IN `p_customer_message` TEXT)
BEGIN
	DECLARE total_records INT DEFAULT 0;
	SELECT COUNT(*) INTO total_records
	    FROM tbl_mail_remind_order 
	    WHERE customer_email = p_customer_email 
			AND product_no = p_product_no
			AND color_code = p_color_code
			AND size_code = p_size_code
			AND is_sent_email_remind = 0;
	IF total_records = 0 THEN
		INSERT INTO tbl_mail_remind_order (
			product_id,
			product_no,
			product_name,
			color_code,
			color_name,
			size_code,
			size_name,
			customer_id,
			customer_name,
			customer_email,
			mail_title_1,
			mail_content_1,
			mail_title_2,
			mail_content_2,
			mail_from,
			mail_from_address,
			create_date,
			is_sent_email_remind,
			customer_message
		) VALUES (
			p_product_id,
			p_product_no,
			p_product_name,
			p_color_code,
			p_color_name,
			p_size_code,
			p_size_name,
			p_customer_id,
			p_customer_name,
			p_customer_email,
			p_mail_title_1,
			p_mail_content_1,
			p_mail_title_2,
			p_mail_content_2,
			p_mail_from,
			p_mail_from_address,
			now(),
			0,
			p_customer_message
		);
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMailRemindOrderTmp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMailRemindOrderTmp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMailRemindOrderTmp`(IN `p_guide_pc` TEXT, IN `p_guide_mobile` TEXT, IN `p_mail_from` VARCHAR(200), IN `p_mail_address` VARCHAR(200), IN `p_mail_title_1` VARCHAR(250), IN `p_mail_content_1` TEXT, IN `p_mail_title_2` VARCHAR(250), IN `p_mail_content_2` TEXT, IN `p_is_send_mail_notify` TINYINT, IN `p_time_dont_send_mail_from` TEXT, IN `p_time_dont_send_mail_to` TEXT)
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) INTO total_records FROM tbl_mail_remind_order_tmp WHERE mail_tmp_id = 1;
	-- if total record = 0 create a new record
	IF(total_records = 0) THEN
		INSERT INTO tbl_mail_remind_order_tmp(
				mail_tmp_id,
				guide_pc,
				guide_mobile,
				mail_from,
				mail_address, 
				mail_title_1, 
				mail_content_1, 
				mail_title_2, 
				mail_content_2,
				is_send_mail_notify,
				time_dont_send_mail_from,
				time_dont_send_mail_to
			) VALUES (
				1, 
				p_guide_pc,
				p_guide_mobile,
				p_mail_from,
				p_mail_address, 
				p_mail_title_1, 
				p_mail_content_1, 
				p_mail_title_2, 
				p_mail_content_2,
				p_is_send_mail_notify,
				p_time_dont_send_mail_from,
				concat(p_time_dont_send_mail_to,':59')
			);
	ELSE
		UPDATE 	tbl_mail_remind_order_tmp
		SET
			guide_pc 		= p_guide_pc,
			guide_mobile 		= p_guide_mobile,
			mail_from 		= p_mail_from,
			mail_address 		= p_mail_address,
			mail_title_1 		= p_mail_title_1,
			mail_content_1		= p_mail_content_1,
			mail_title_2		= p_mail_title_2,
			mail_content_2		= p_mail_content_2,
			is_send_mail_notify 	= p_is_send_mail_notify,
			time_dont_send_mail_from= p_time_dont_send_mail_from,
			time_dont_send_mail_to	= CONCAT(p_time_dont_send_mail_to,':59')
		WHERE 	mail_tmp_id = 1;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMailRemindWishListTmp` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMailRemindWishListTmp` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMailRemindWishListTmp`(IN `p_is_auto_send` TINYINT(1), IN `p_time_auto_send_mail` INT, IN `p_mail_subject` TEXT, IN `p_mail_content` TEXT, IN `p_mail_backup_address` VARCHAR(500))
BEGIN
	-- get total record of tbl_settings
	DECLARE total_records bigINT(20) DEFAULT 0;
	SELECT count(*) INTO total_records FROM tbl_mail_remind_wish_list_tmp WHERE id = 1;
	-- if total record = 0 create a new record
	IF (total_records = 0) THEN
		INSERT INTO tbl_mail_remind_wish_list_tmp(
				id,
				is_auto_send,
				time_auto_send_mail,
				mail_subject,
				mail_content, 
				mail_backup_address, 
				create_date, 
				update_date
			) VALUES (
				1,
				p_is_auto_send,
				p_time_auto_send_mail,
				p_mail_subject,
				p_mail_content, 
				p_mail_backup_address, 
				now(), 
				NOW()
			);
	ELSE
		UPDATE 	tbl_mail_remind_wish_list_tmp
		SET
			is_auto_send 		= p_is_auto_send,
			time_auto_send_mail 	= p_time_auto_send_mail,
			mail_subject 		= p_mail_subject,
			mail_content 		= p_mail_content,
			mail_backup_address 	= p_mail_backup_address,
			update_date		= NOW()			
		WHERE 	id = 1;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveMaterialJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveMaterialJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveMaterialJamSync`(IN `p_seqno` VARCHAR(20), IN `p_rseqno` VARCHAR(20), IN `p_color_code` VARCHAR(20), IN `p_material_name` VARCHAR(50), IN `p_mixedrate` DOUBLE, IN `p_material_code` VARCHAR(10), IN `p_area` VARCHAR(50), IN `p_fabric` VARCHAR(80), IN `p_area2` VARCHAR(20), IN `p_timestamp` VARCHAR(255))
BEGIN
	/*IF(EXISTS(SELECT * FROM tbl_products_material WHERE tbl_products_material.RSeqNo = p_rseqno and tbl_products_material.color_code = p_color_code and tbl_products_material.MaterialName = p_material_name)) THEN
		
		Update tbl_products_material Set tbl_products_material.MaterialName = p_material_name,tbl_products_material.MixedRate=p_mixedrate,tbl_products_material.MaterialCode=p_material_code
			WHERE tbl_products_material.RSeqNo = p_rseqno and tbl_products_material.color_code = p_color_code and tbl_products_material.MaterialName = p_material_name;
		SELECT 'ok' AS msg;
	ELSE*/
		delete FROM tbl_products_material WHERE tbl_products_material.RSeqNo = p_rseqno and tbl_products_material.color_code = p_color_code
		and tbl_products_material.MaterialName = p_material_name
		and tbl_products_material.Area = p_area
		and tbl_products_material.MixedRate = p_mixedrate
		and tbl_products_material.MaterialCode = p_material_code
		;
		INSERT INTO tbl_products_material(SeqNo,RSeqNo,MaterialCode,MaterialName,Area,MixedRate,Fabric,Area2,TimeStampSync,color_code)
		VALUES (p_seqno,p_rseqno,p_material_code,p_material_name,p_area,p_mixedrate,p_fabric,p_area2,p_timestamp,p_color_code);
		SELECT 'ok' AS msg;
	-- END IF;
 END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveOrder`(IN `dorder_id` INT, IN `dstatus` INT, IN `dshipped_on` VARCHAR(20), IN `ddelivery_id` VARCHAR(50), IN `ddelivery_company` VARCHAR(50), IN `dinvoice_code` VARCHAR(50), IN `dcomments` TEXT, IN `dother_pay_money` FLOAT, IN `ddebt_money_pay_date` VARCHAR(50), IN `dcomments2` TEXT)
BEGIN
if dstatus=3 then
	update tbl_orders set status=dstatus,
	shipped_on=dshipped_on,
	delivery_id=ddelivery_id,
	delivery_company=ddelivery_company,
	invoice_code=dinvoice_code,
	comments=dcomments,
	total_amount=0,
	total_quantity=0,
	shipping_cost=0,
	shipping_fee=0,
	other_pay_money=dother_pay_money,
	debt_money_pay_date=ddebt_money_pay_date,	
	thistimeusepoint=0,
	thistimeissuedpoint=0,
	thistimeusemoney=0,
	couponmoney=0,
	comments2=dcomments2		
	where order_id=dorder_id;
	update tbl_order_detail set unit_cost=0,
	quantity=0
	where order_id=dorder_id;
else 
	update tbl_orders set status=dstatus,
	shipped_on=dshipped_on,
	delivery_id=ddelivery_id,
	delivery_company=ddelivery_company,
	invoice_code=dinvoice_code,
	comments=dcomments,
	other_pay_money=dother_pay_money,
	debt_money_pay_date=ddebt_money_pay_date,
	comments2=dcomments2
	where order_id=dorder_id;
end if;
select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_savePreferencesJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_savePreferencesJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_savePreferencesJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	  -- Modified: 2020/04/10. Xoa het di vi taxrate se duoc dong bo lai tat
	  DELETE FROM `tbl_taxrates`;
	  delete from tbl_preferences;
          SET @insertStmt = CONCAT('INSERT INTO `tbl_preferences`(
		  `MoneyRoundType`,
		  `TaxRoundType`,
		  `PriceRoundType`,
		  `DigitsAfterCommaForPriceR`,
		  `IsInTaxCalculate`,
		  `IsRoundByGoodsSupplier`,
		  `CustomerPaymentType`,
		  `CustomerTaxType`,
		  `CustomerTaxRoundType`,
		  `CustomerInvoiceFormat`,
		  `CustomerBillFormat`,
		  `CustomerTransferType`,
		  `CustomerInvoicePriceType`
		) VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	  SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_savePrepointSettingsJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_savePrepointSettingsJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_savePrepointSettingsJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_prepointsettings(SeqNo,RSeqNo,PointMoneyType,MoneyForCalIssuePoint,PointForCalIssuePoint,
MinMoneyForCalIssuePoint,UnitUsePoint,
UsePoint_Point,UsePoint_Money,UsePointMoneyType,ValidPointTime,
ValidPointTimeUnit,PercentForCalIssuePoint,IsPointForSpecialGoods,IsPointForUsePoint,IsNoPointForVoucherUse,
IsNoPointForSaleOffType,UsePointStartdate,PurMoneyForCalIssuePoint,PurPointForCalIssuePoint,PurPercentForCalIssuePoint,PurMinMoneyForCalIssuePoint,
PurPointMoneyType,RankRate_A,RankRate_B,RankRate_C,RankRate_D,RankRate_E)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDetail`(IN `p_seqno` VARCHAR(50), IN `p_product_detail_id` VARCHAR(20), IN `p_product_detail_price_no_tax` FLOAT, IN `p_product_detail_price` FLOAT, IN `p_product_detail_saleoff_price_no_tax` FLOAT, IN `p_product_detail_saleoff_price` FLOAT, IN `p_product_detail_status` TINYINT(4), IN `p_product_detail_slug_url` TEXT, IN `p_goods_code` TEXT, IN `p_product_detail_price2` FLOAT, IN `p_product_detail_saleoff_price2` FLOAT, IN `p_individual_size_name` TEXT)
BEGIN
	-- Modified: 2019/09/05, 309703619 #ECカート基本形
	-- Them p_product_detail_price2 va p_product_detail_saleoff_price2
	IF (EXISTS(SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = p_seqno AND tbl_products_details.SeqNo = p_product_detail_id)) THEN
		UPDATE tbl_products_details
		SET
			product_detail_price_no_tax 	= p_product_detail_price_no_tax,
			product_detail_price 		= p_product_detail_price,
			product_detail_saleoff_price_no_tax = p_product_detail_saleoff_price_no_tax,
			product_detail_saleoff_price 	= p_product_detail_saleoff_price,
			product_detail_status 		= p_product_detail_status,
			color_slug_url 			= p_product_detail_slug_url,
			product_goods_code 			= p_goods_code,
			product_detail_price2 		= p_product_detail_price2,
			product_detail_saleoff_price2 	= p_product_detail_saleoff_price2,
			Individual_Size_Name		= p_individual_size_name
		WHERE
			RSeqNo 		= p_seqno
			AND SeqNo 	= p_product_detail_id;
		
		-- Modified: 2020/11/06. Sua lai store de cai thien toc do
		/*UPDATE tbl_stock_num 
			INNER JOIN tbl_products_details
				ON tbl_stock_num.GoodCode = tbl_products_details.product_goods_code
					AND tbl_stock_num.ColorCode = tbl_products_details.color_code
					AND tbl_stock_num.SizeCode = tbl_products_details.size_code
					AND tbl_products_details.RSeqNo = p_seqno
					AND tbl_products_details.SeqNo = p_product_detail_id
		SET 	tbl_stock_num.r_product_detail_status = p_product_detail_status;*/
		SELECT product_goods_code,color_code,size_code INTO @product_goods_code,@color_code,@size_code
			FROM tbl_products_details
			WHERE RSeqNo = p_seqno AND SeqNo = p_product_detail_id LIMIT 1;
		IF @product_goods_code IS NOT NULL AND @product_goods_code <> '' THEN
			UPDATE tbl_stock_num 
				SET r_product_detail_status = p_product_detail_status
				WHERE GoodCode = @product_goods_code
				AND ColorCode = @color_code
				AND SizeCode = @size_code;			
		END IF;
		
		SELECT 'ok' AS msg;
	ELSE
		SELECT 'NG' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDetailCheckTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDetailCheckTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDetailCheckTop`(IN `p_seqno` VARCHAR(50), IN `p_color_code` VARCHAR(20), IN `p_product_detail_top` TINYINT(4), IN `p_product_detail_order` INT(11), IN `p_is_color_main` TINYINT(1), IN `product_detail_individual_color_name` TEXT, IN `p_is_color_cancel` TINYINT(4), IN `p_is_last_one` TINYINT(1))
BEGIN
	
	IF(EXISTS(SELECT * FROM tbl_products_details WHERE tbl_products_details.RSeqNo = p_seqno AND tbl_products_details.color_code = p_color_code)) THEN
		UPDATE tbl_products_details
		SET
			tbl_products_details.product_detail_top = p_product_detail_top,
			tbl_products_details.product_detail_order = p_product_detail_order,
			tbl_products_details.is_main_color = p_is_color_main,
			tbl_products_details.Individual_Color_Name = product_detail_individual_color_name,
			tbl_products_details.product_detail_color_status=p_is_color_cancel,
			tbl_products_details.is_last_one = p_is_last_one
		WHERE
			tbl_products_details.RSeqNo = p_seqno
		AND	tbl_products_details.color_code = p_color_code;
		SELECT 'ok' AS msg;
	ELSE
		SELECT 'NG' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProduct`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_product_id` BIGINT, IN `p_product_name` VARCHAR(100) CHARSET utf8, IN `p_product_name_display` VARCHAR(100) CHARSET utf8, IN `p_product_category_id` INT, IN `p_brand_id` INT, IN `p_brand_code_2` VARCHAR(50), IN `p_product_detail` LONGTEXT CHARSET utf8, IN `p_product_detail_short` LONGTEXT CHARSET utf8, IN `p_price` FLOAT, IN `p_hot_product` TINYINT, IN `p_set_id` INT, IN `p_product_setmain` TINYINT, IN `p_brand_name` VARCHAR(100) CHARSET utf8, IN `p_new_product` TINYINT, IN `p_sale_off_product` TINYINT, IN `p_is_flash_sale` TINYINT, IN `p_flash_sale_from` TIMESTAMP, IN `p_flash_sale_to` TIMESTAMP, IN `p_is_restock_item` TINYINT, IN `p_is_restock_item_always` TINYINT, IN `p_restock_from` TIMESTAMP, IN `p_restock_to` TIMESTAMP, IN `p_product_status` TINYINT, IN `p_product_saleoff_price` FLOAT, IN `p_goods_code` VARCHAR(50), IN `p_slug_url` TEXT, IN `p_prihtml` TEXT, IN `p_is_sold_out` TINYINT, IN `p_is_recommended_item` TINYINT, IN `p_is_pre_order` TINYINT, IN `p_is_show_option` TINYINT, IN `p_prihtml1` TEXT, IN `p_is_fixed_all_option_name` TINYINT, IN `p_is_color_show` TINYINT, IN `p_is_contact` TINYINT, IN `p_is_comming_soon` TINYINT, IN `p_memo` TEXT, IN `p_option_title` TEXT, IN `p_is_coupon_unavailable` TINYINT, IN `p_product_recovery` TEXT, IN `p_search_keywords` TEXT, IN `p_delivery_days_add` INT, IN `p_is_package` TINYINT, IN `p_packet_limit` INT, IN `p_no_wrapping` INT, IN `p_is_main_image` TINYINT, IN `p_no_display_list` TINYINT, IN `p_is_hide_while_out_of_stock` TINYINT, IN `p_is_popularity` TINYINT, IN `p_is_classic` TINYINT, IN `p_is_magazine` TINYINT, IN `p_is_show_link_destination` TINYINT, IN `p_link_destination` VARCHAR(255), IN `p_shop_list` TEXT, IN `p_stone` TEXT, IN `p_materials` TEXT, IN `p_one_of_kind` TINYINT, IN `p_exclusive` TINYINT, IN `p_order_made` TINYINT, IN `p_tips` VARCHAR(500), IN `p_pointrate` FLOAT, IN `p_date_expired` VARCHAR(40), IN `p_is_myess` TINYINT, IN `p_unbundled_product` TINYINT, IN `p_is_not_sold_out` TINYINT, IN `p_is_free_ship` TINYINT, IN `p_free_ship_from` TIMESTAMP, IN `p_free_ship_to` TIMESTAMP, IN `p_aterial_code` VARCHAR(255), IN `p_design_code` VARCHAR(255), IN `p_heelheight_code` VARCHAR(255), IN `p_lifestyle_code` VARCHAR(255), IN `p_footwidthshape_code` VARCHAR(255), IN `p_feature_code` VARCHAR(255), IN `p_date_new_start` VARCHAR(50), IN `p_family_sale_type` TINYINT, IN `p_sale_rate` FLOAT, IN `p_gender_men` TINYINT, IN `p_gender_women` TINYINT, IN `p_gender_unisex` TINYINT, IN `p_sold_out_text` TINYINT, IN `p_check_point_setting` TINYINT, IN `p_googles_description` TEXT, IN `p_googles_product_category_code` VARCHAR(20), IN `p_googles_product_type` TEXT, IN `p_googles_condition` VARCHAR(20), IN `p_googles_age_group` VARCHAR(20), IN `p_googles_color` TEXT, IN `p_googles_pattern` TEXT)
BEGIN
	-- hoa xuan them p_unbundled_product cho kh Yellowdivision - #492526335
	IF (p_mode='C') THEN
		INSERT INTO tbl_products (
			product_name,
			product_name_display,
			product_category_id,
			brand_id,
			brand_code_2,
			product_detail,
			product_detail_short,
			PurchasePriceNoTax,
			hot_product,
			create_date,
			set_id,
			product_setmain,
			brand_name,
			new_product,
			sale_off_product,
			is_flash_sale,
			flash_sale_from,
			flash_sale_to,
			
			is_restock_item,
			is_restock_item_always,
			restock_from,
			restock_to,
			
			
			product_status,
			SaleOffPurchasePriceNoTax,
			goods_code,
			slug_url,
			prihtml,
			is_sold_out,
			is_recommended_item,
			is_pre_order,
			is_show_option,
			prihtml1,
			is_fixed_all_option_name,
			is_color_show,
			is_contact,
			is_comming_soon,
			memo,
			option_title,
			is_hide_while_out_of_stock,
			is_popularity,
			is_classic,
			is_show_link_destination,
			link_destination,
			shop_list,
			stone,
			materials,
			one_of_kind,
			exclusive,
			order_made,
			tips,
			pointrate,
			`TimeStamp`,
			date_expired,
			is_myess,
			unbundled_product,
			is_not_sold_out,
			is_free_ship,
			free_ship_from,
			free_ship_to,
			aterial_code,
			design_code,
			heelheight_code,
			lifestyle_code,
			footwidthshape_code,
			feature_code,
			date_new_start,
			family_sale_type,
			sale_rate,
			gender_men,
			gender_women,
			gender_unisex,
			sold_out_text,
			check_point_setting,
			googles_description,
			googles_product_category_code,
			googles_product_type,
			googles_condition,
			googles_age_group,
			googles_color,
			googles_pattern
		)VALUES(
			p_product_name,
			p_product_name_display,
			p_product_category_id,
			p_brand_id,
			p_brand_code_2,
			p_product_detail,
			p_product_detail_short,
			p_price,
			p_hot_product,
			NOW(),
			p_set_id,
			p_product_setmain,
			p_brand_name,
			p_new_product,
			p_sale_off_product,
			p_is_flash_sale,
			p_flash_sale_from,
			p_flash_sale_to,
			
			p_is_restock_item,
			p_is_restock_item_always,
			p_restock_from,
			p_restock_to,
			
			
			p_product_status,
			p_product_saleoff_price,
			p_goods_code,
			p_slug_url,
			p_prihtml,
			p_is_sold_out,
			p_is_recommended_item,
			p_is_pre_order,
			p_is_show_option,
			p_prihtml1,
			p_is_fixed_all_option_name,
			p_is_color_show,
			p_is_contact,
			p_is_comming_soon,
			p_memo,
			p_option_title,
			p_is_hide_while_out_of_stock,
			p_is_popularity,
			p_is_classic,
			p_is_show_link_destination,
			p_link_destination,
			p_shop_list,
			p_stone,
			p_materials,
			p_one_of_kind,
			p_p_exclusive,
			p_order_made,
			p_tips,
			p_pointrate,
			NOW(),
			p_date_expired,
			p_is_myess,
			p_unbundled_product,
			p_is_not_sold_out,
			p_is_free_ship,
			p_free_ship_from,
			p_free_ship_to,
			p_aterial_code,
			p_design_code,
			p_heelheight_code,
			p_lifestyle_code,
			p_footwidthshape_code,
			p_feature_code,
			p_date_new_start,
			p_family_sale_type,
			p_sale_rate,
			p_gender_men,
			p_gender_women,
			p_gender_unisex,
			p_sold_out_text,
			p_check_point_setting,
			p_googles_description,
			p_googles_product_category_code,
			p_googles_product_type,
			p_googles_condition,
			p_googles_age_group,
			p_googles_color,
			p_googles_pattern
		);
	ELSE
		UPDATE tbl_products
		SET
			product_name 		= p_product_name,
			product_name_display	= p_product_name_display,
			product_category_id 	= p_product_category_id,
			brand_id 		= p_brand_id,
			brand_code_2 		= p_brand_code_2,
			product_detail 		= p_product_detail,
			product_detail_short 	= p_product_detail_short,
			PurchasePriceNoTax 	= p_price,
			hot_product 		= p_hot_product,
			set_id 			= p_set_id,
			product_setmain 	= p_product_setmain,
			brand_name 		= p_brand_name,
			new_product 		= p_new_product,
			sale_off_product 	= p_sale_off_product,
			is_flash_sale 		= p_is_flash_sale,
			flash_sale_from 	= p_flash_sale_from,
			flash_sale_to 		= p_flash_sale_to,	
			
			is_restock_item 	= p_is_restock_item,
			is_restock_item_always 	= p_is_restock_item_always,
			restock_from 		= p_restock_from,
			restock_to 		= p_restock_to,
			
			
			product_status 		= p_product_status,
			SaleOffPurchasePriceNoTax = p_product_saleoff_price,
			slug_url 		= p_slug_url,
			prihtml 		= p_prihtml,
			is_sold_out 		= p_is_sold_out,
			is_recommended_item	= p_is_recommended_item,
			is_pre_order		= p_is_pre_order,
			is_show_option		= p_is_show_option,
			prihtml1 		= p_prihtml1,
			is_fixed_all_option_name= p_is_fixed_all_option_name,
			is_color_show           = p_is_color_show,
			is_contact           	= p_is_contact,
			is_comming_soon         = p_is_comming_soon,
			memo           		= p_memo,
			option_title           	= p_option_title,
			is_coupon_unavailable	= p_is_coupon_unavailable,
			product_recovery	= p_product_recovery,
			search_keywords		= p_search_keywords,
			
			delivery_days_add	= p_delivery_days_add,
			is_package		= p_is_package,
			packet_limit		= p_packet_limit,
			no_wrapping     	= p_no_wrapping,
			is_main_image     	= p_is_main_image,
			no_display_list		= p_no_display_list,
			is_hide_while_out_of_stock = p_is_hide_while_out_of_stock,
			is_popularity		= p_is_popularity,
			is_classic 		= p_is_classic,
			is_magazine 		= p_is_magazine,
			is_show_link_destination = p_is_show_link_destination,
			link_destination 	= p_link_destination,
			shop_list 		= p_shop_list,
			stone 			= p_stone,
			materials 		= p_materials,
			one_of_kind		= p_one_of_kind,
			exclusive		= p_exclusive,
			order_made		= p_order_made,
			tips			= p_tips,
			pointrate		= p_pointrate,
			`TimeStamp`		= NOW(),
			date_expired		= p_date_expired,
			is_myess		= p_is_myess,
			unbundled_product	= p_unbundled_product,
			is_not_sold_out 	= p_is_not_sold_out,
			is_free_ship 		= p_is_free_ship,
			free_ship_from 		= p_free_ship_from,
			free_ship_to 		= p_free_ship_to,
			aterial_code		= p_aterial_code,
			design_code			= p_design_code,
			heelheight_code		= p_heelheight_code,
			lifestyle_code		= p_lifestyle_code,
			footwidthshape_code = p_footwidthshape_code,
			feature_code		= p_feature_code,
			date_new_start 		= p_date_new_start,
			family_sale_type	= p_family_sale_type,
			sale_rate		= p_sale_rate,
			gender_men		= p_gender_men,
			gender_women		= p_gender_women,
			gender_unisex		= p_gender_unisex,
			sold_out_text		= p_sold_out_text,
			check_point_setting     = p_check_point_setting,
			googles_description     = p_googles_description,
			googles_product_category_code     = p_googles_product_category_code,
			googles_product_type    = p_googles_product_type,
			googles_condition     	= p_googles_condition,
			googles_age_group     	= p_googles_age_group,
			googles_color     	= p_googles_color,
			googles_pattern     	= p_googles_pattern
		WHERE
			tbl_products.product_id = p_product_id;
			
	END IF;
	
	SELECT 'ok' AS msg;
	
	IF(p_mode<>'C') THEN
		SELECT p_product_id AS product_id;
		SELECT tbl_products.product_image_details,tbl_products.goods_code,tbl_products.SeqNo FROM tbl_products WHERE tbl_products.product_id = p_product_id;
	ELSE
		SELECT MAX(product_id) AS product_id,tbl_products.product_image_details FROM tbl_products;
		SELECT tbl_products.product_image_details,tbl_products.goods_code,tbl_products.SeqNo FROM tbl_products WHERE tbl_products.product_id = (SELECT MAX(product_id) AS product_id FROM tbl_products);
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDetailJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDetailJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDetailJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8, IN `p_products_seqno` VARCHAR(20), IN `p_ex` VARCHAR(1) CHARSET utf8, IN `p_products_details_seqno` VARCHAR(20))
BEGIN	
	IF(p_mode = 'C') THEN
	
          -- Modified: 2020/04/17. 532867407 | アルテックス　ＷＥＢオーダーの機能修正２つ
          SET @insertStmt = CONCAT('INSERT INTO tbl_products_details(SeqNo,RSeqNo,color_code,color_name,size_code,size_name,barcode,
		color_slug_url
		)
		VALUES ',atData);
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
          
          SET @insertStmt = CONCAT("SELECT IFNULL(`price_no_tax`,0),IFNULL(`price`,0),IFNULL(`product_saleoff_price_no_tax`,0),IFNULL(`product_saleoff_price`,0) 
		INTO @price_no_tax,@price,@saleoff_price_no_tax,@saleoff_price FROM `tbl_products` WHERE `SeqNo`='",p_products_seqno,"'");
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt; 
          
          SET @insertStmt = CONCAT("UPDATE `tbl_products_details` SET `product_detail_price_no_tax`=@price_no_tax,`product_detail_price`=@price,  
		`product_detail_saleoff_price_no_tax`=@saleoff_price_no_tax,`product_detail_saleoff_price`=@saleoff_price WHERE `RSeqNo`='",p_products_seqno,"' 
		 AND `product_detail_price_no_tax`=0 AND `product_detail_price`=0 AND `product_detail_saleoff_price_no_tax`=0 AND `product_detail_saleoff_price`=0");
	  PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;                            	  
	  
	  -- update tbl_products_details set color_slug_url=color_code where RSeqNo=vtSeqNo;
	  
	  -- Modified: 2020/11/11. 737462131 | BtoB + BtoC 基本形　久遠様より依頼・商品マスターにEXに☑してある商品を管理画面に飛ばして際に非表示にする
	  -- 1. Set product_detail_status cho dung detail duoc save
	  -- Modified: 2020/12/24. Tam dong phan nay cho yeu cau sua them
	  -- Modified: 2021/01/04. Chi update cac chi tiet chua bi CANCEL (Khong ghi de cac chi tiet da bi CANCEL o Web)
	  UPDATE 	tbl_products_details
		SET			
			product_detail_status 	= IF(p_ex="1",1,0)	
		WHERE
			SeqNo = p_products_details_seqno and product_detail_status = 0;	  
	  -- 2. Get @GoodsCode,@ColorCode,@SizeCode cua detail duoc save
	  SELECT product_goods_code,color_code,size_code INTO @GoodsCode,@ColorCode,@SizeCode
		FROM tbl_products_details 
		WHERE SeqNo = p_products_details_seqno LIMIT 1;
	  -- 3. Set product_detail_color_status cho dung detail duoc save
	  IF (SELECT COUNT(*) FROM tbl_products_details 
			WHERE RSeqNo = p_products_seqno AND color_code = @ColorCode
			AND product_detail_status = 0) = 0 THEN
		UPDATE 	tbl_products_details
		SET						
			product_detail_color_status = 1		
		WHERE
			RSeqNo = p_products_seqno AND color_code = @ColorCode;
	  ELSE
		UPDATE 	tbl_products_details
		SET						
			product_detail_color_status = 0		
		WHERE
			RSeqNo = p_products_seqno AND color_code = @ColorCode;
	  END IF;
				
	  UPDATE tbl_stock_num
		SET r_product_detail_status = IF(p_ex="1",1,0)
		WHERE 	GoodCode = @GoodsCode
			AND ColorCode = @ColorCode
			AND SizeCode = @SizeCode;					
	  
	  SELECT 'ok' AS msg;	
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDraftDetailCheckTop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDraftDetailCheckTop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDraftDetailCheckTop`(IN `p_product_SeqNo` VARCHAR(50), IN `p_color_code` VARCHAR(20), IN `p_product_draft_id` BIGINT(20), IN `p_product_detail_top` TINYINT(4), IN `p_product_detail_order` INT(11))
BEGIN
	
	IF(EXISTS(
		SELECT * FROM tbl_products_draft_details 
		WHERE 
			tbl_products_draft_details.RSeqNo 		= p_product_SeqNo 
			AND tbl_products_draft_details.color_code 	= p_color_code
			AND tbl_products_draft_details.product_draft_id = p_product_draft_id
	)) THEN
		UPDATE 	tbl_products_draft_details
		SET
			tbl_products_draft_details.product_detail_top 	= p_product_detail_top,
			tbl_products_draft_details.product_detail_order = p_product_detail_order
		WHERE
			tbl_products_draft_details.RSeqNo 		= p_product_SeqNo 
			AND tbl_products_draft_details.color_code 	= p_color_code
			AND tbl_products_draft_details.product_draft_id = p_product_draft_id;
		SELECT 'ok' AS msg;
	ELSE
		SELECT 'NG' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDraftSizeGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDraftSizeGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDraftSizeGuide`(IN `p_seqno` TEXT, IN `p_seqno_old` TEXT, IN `p_goodcode` VARCHAR(20), IN `p_category_guide_id` TEXT, IN `p_category_guide_name` VARCHAR(250), IN `p_size_list` VARCHAR(250), IN `p_index_list` VARCHAR(250), IN `p_product_draft_id` TEXT)
BEGIN
	IF(EXISTS(SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.SeqNo = p_seqno_old)) THEN
		IF(EXISTS(SELECT * FROM tbl_products_draft_size_guide WHERE tbl_products_draft_size_guide.SeqNo = p_seqno)) THEN
			UPDATE tbl_products_draft_size_guide
			SET
				tbl_products_draft_size_guide.goodscode 		= p_goodcode,
				tbl_products_draft_size_guide.category_guide_id 	= p_category_guide_id,
				tbl_products_draft_size_guide.category_guide_name 	= p_category_guide_name,
				tbl_products_draft_size_guide.size_list 		= p_size_list,
				tbl_products_draft_size_guide.index_list 		= p_index_list
			WHERE
				tbl_products_draft_size_guide.SeqNo = p_seqno;
		ELSE
			INSERT INTO tbl_products_draft_size_guide(
					goodscode,
					category_guide_id,
					category_guide_name,
					size_list,
					index_list,
					seqno_old,
					product_draft_id,
					goodscode_old,
					category_guide_id_old,
					category_guide_name_old,
					size_list_old,
					index_list_old
			)
			VALUES(p_goodcode, 
				p_category_guide_id, 
				p_category_guide_name,
				p_size_list,
				p_index_list,
				p_seqno_old,
				p_product_draft_id,
				(SELECT goodscode FROM tbl_products_size_guide WHERE SeqNo = p_seqno_old),
				(SELECT category_guide_id FROM tbl_products_size_guide WHERE SeqNo = p_seqno_old),
				(SELECT category_guide_name FROM tbl_products_size_guide WHERE SeqNo = p_seqno_old),
				(SELECT size_list FROM tbl_products_size_guide WHERE SeqNo = p_seqno_old),
				(SELECT index_list FROM tbl_products_size_guide WHERE SeqNo = p_seqno_old)
			);
			SELECT 'ok' AS msg;
		END IF;
	ELSE
		INSERT INTO tbl_products_draft_size_guide(
				goodscode,
				category_guide_id,
				category_guide_name,
				size_list,
				index_list,
				seqno_old,
				product_draft_id)
		VALUES(p_goodcode, 
			p_category_guide_id, 
			p_category_guide_name,
			p_size_list,
			p_index_list,
			'0',
			p_product_draft_id);
	END IF;
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductDraftDetail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductDraftDetail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductDraftDetail`(IN `p_seqno` VARCHAR(50), IN `p_product_SeqNo` VARCHAR(20), IN `p_product_detail_price` FLOAT, IN `p_product_detail_price_no_tax` FLOAT, IN `p_product_detail_saleoff_price` FLOAT, IN `p_product_detail_saleoff_price_no_tax` FLOAT, IN `p_product_detail_status` TINYINT(4), IN `p_color_slug_url` TEXT, IN `p_product_draft_id` BIGINT(20), IN `p_product_detail_price2` FLOAT, IN `p_product_detail_saleoff_price2` FLOAT)
BEGIN
	-- Modified: 2019/09/05, 309703619 #ECカート基本形
	-- Them p_product_detail_price2 va p_product_detail_saleoff_price2
	-- Kiem tra xem neu da ton tai record roi thi thuc hien update de giu thong tin cu (_old)
	IF(
		EXISTS(
			SELECT * FROM tbl_products_draft_details 
			WHERE 
				RSeqNo 			= p_product_SeqNo
				AND SeqNo 		= p_SeqNo
				AND product_draft_id 	= p_product_draft_id
		)
	) THEN
		UPDATE tbl_products_draft_details
		SET
			SeqNo 				= p_SeqNo,
			RSeqNo 				= p_product_SeqNo,
			product_detail_price 		= p_product_detail_price,
			product_detail_price_no_tax 	= p_product_detail_price_no_tax,
			product_detail_saleoff_price 	= p_product_detail_saleoff_price,
			product_detail_saleoff_price_no_tax = p_product_detail_saleoff_price_no_tax,
			product_detail_status 		= p_product_detail_status,
			color_slug_url 			= p_color_slug_url,
			product_detail_price2 		= p_product_detail_price2,
			product_detail_saleoff_price2 	= p_product_detail_saleoff_price2
		WHERE
			RSeqNo 			= p_product_SeqNo
			AND SeqNo 		= p_SeqNo
			AND product_draft_id 	= p_product_draft_id;
		SELECT 'ok' AS msg;
	ELSE
		INSERT INTO tbl_products_draft_details
			(SeqNo,
			RSeqNo,
			product_draft_id,
			product_id,
			product_detail_id,
			barcode,
			color_id,
			color_code,
			color_name,
			size_id,
			size_code,
			size_name,
			
			
			product_detail_price,
			product_detail_price_no_tax,
			
			
			
			product_detail_saleoff_price,
			product_detail_saleoff_price_no_tax,
			
			
			
			product_detail_status,
			product_detail_top,
			product_detail_order,
			num_rank,
			color_slug_url,
			order_status,
			barcode_old,
			color_id_old,
			color_code_old,
			color_name_old,
			size_id_old,
			size_code_old,
			size_name_old,
			
			
			product_detail_price_old,
			product_detail_price_no_tax_old,
			
			
			product_detail_saleoff_price_old,
			product_detail_saleoff_price_no_tax_old,
			
			
			
			product_detail_status_old,
			product_detail_top_old,
			product_detail_order_old,
			num_rank_old,
			color_slug_url_old,
			order_status_old,
			product_detail_price2,
			product_detail_saleoff_price2,
			product_detail_price2_old,
			product_detail_saleoff_price2_old
		) VALUES (
			(SELECT SeqNo 				FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT RSeqNo 				FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			p_product_draft_id,
			(SELECT product_id 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_id 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT barcode 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_id 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_code 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_name 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_id 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_code 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_name 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			
			p_product_detail_price,
			p_product_detail_price_no_tax,
			
			p_product_detail_saleoff_price,
			p_product_detail_saleoff_price_no_tax,
			
			
			p_product_detail_status,  
			(SELECT product_detail_top 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_order 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT num_rank 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			p_color_slug_url, 
			(SELECT order_status 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT barcode 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_id 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_code 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_name 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_id 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_code 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT size_name 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_price 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_price_no_tax 	FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			
			(SELECT product_detail_saleoff_price 	FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_saleoff_price_no_tax FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			
			(SELECT product_detail_status 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_top 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT product_detail_order 		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT num_rank 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT color_slug_url 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT order_status 			FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			p_product_detail_price2,
			p_product_detail_saleoff_price2,
			(SELECT `product_detail_price2`		FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo),
			(SELECT `product_detail_saleoff_price2`	FROM tbl_products_details WHERE RSeqNo = p_product_SeqNo AND SeqNo = p_SeqNo)
		);
		SELECT 'ok' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductGroupItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductGroupItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductGroupItem`(IN `p_product_group_code` VARCHAR(50), IN `p_barcode` VARCHAR(20), IN `p_product_goods_code` VARCHAR(50), IN `p_product_name_display` VARCHAR(255), IN `p_product_name` VARCHAR(200), IN `p_size_code` VARCHAR(10), IN `p_size_display` TEXT, IN `p_size_name` TEXT)
BEGIN
/*	IF(p_mode = 'C') THEN	*/
		INSERT INTO tbl_products_group_item(
			product_group_code,
			product_barcode,
			product_goods_code,
			product_name_display,
			product_name,
			size_code,
			size_display,
			size_name)
		VALUES(
			p_product_group_code,
			p_barcode,
			p_product_goods_code,
			p_product_name_display,
			p_product_name,
			p_size_code,
			p_size_display,
			p_size_name);
/*	ELSE
		UPDATE tbl_products_group_item
		SET
			product_group_code 	= p_product_group_code
		,	product_barcode 	= p_barcode
		,	product_goods_code	= p_product_goods_code
		,	product_name_display	= p_product_name_display
		,	product_name 		= p_product_name
		,	size_code 		= p_size_code
		,	size_display 		= p_size_display
		,	size_name 		= p_size_name
		WHERE
			product_group_code = p_product_group_code;
	END IF; */
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductGroupItemRelated` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductGroupItemRelated` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductGroupItemRelated`(IN `p_product_group_code` VARCHAR(50), IN `p_barcode` VARCHAR(20), IN `p_product_goods_code` VARCHAR(50), IN `p_product_name_display` VARCHAR(255), IN `p_product_name` VARCHAR(200), IN `p_size_code` VARCHAR(10), IN `p_size_display` TEXT, IN `p_size_name` TEXT)
BEGIN
/*	IF(p_mode = 'C') THEN	*/
		INSERT INTO tbl_products_group_item_related(
			product_group_code,
			product_barcode,
			product_goods_code,
			product_name_display,
			product_name,
			size_code,
			size_display,
			size_name)
		VALUES(
			p_product_group_code,
			p_barcode,
			p_product_goods_code,
			p_product_name_display,
			p_product_name,
			p_size_code,
			p_size_display,
			p_size_name);
/*	ELSE
		UPDATE tbl_products_group_item_related
		SET
			product_group_code 	= p_product_group_code
		,	product_barcode 	= p_barcode
		,	product_goods_code	= p_product_goods_code
		,	product_name_display	= p_product_name_display
		,	product_name 		= p_product_name
		,	size_code 		= p_size_code
		,	size_display 		= p_size_display
		,	size_name 		= p_size_name
		WHERE
			product_group_code = p_product_group_code;
	END IF; */
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8, IN `p_goods_code` VARCHAR(100) CHARSET utf8, IN `p_company` VARCHAR(100) CHARSET utf8)
BEGIN	
	DECLARE _count LONG DEFAULT 0;
	DECLARE _goods_code VARCHAR(100) DEFAULT '';
	IF (p_mode = 'C') THEN
		IF (p_company='cord3') THEN
			SELECT COUNT(*) INTO _count FROM tbl_products WHERE goods_code=p_goods_code;
			IF (_count=0) THEN
				SELECT `goods_code` INTO _goods_code FROM `tbl_products` WHERE new_product=1 ORDER BY `create_date`,`goods_code` LIMIT 1;
				IF (_goods_code<>'') THEN
					UPDATE `tbl_products` SET new_product=0 WHERE `goods_code`=_goods_code;
				END IF;	
			END IF;			
		END IF;
		
		SET @insertStmt = CONCAT('
		INSERT INTO tbl_products(
			SeqNo,
			create_date,
			goods_code,
			product_name,
			brand_code,
			brand_name,
			product_itemcode,
			product_itemname,
			season_code,
			season_name,
			price_no_tax,
			price,
			product_saleoff_price_no_tax,
			product_saleoff_price,
			country_code,
			country_name,
			PurchasePriceNoTax,
			PurchasePriceYesTax,
			SaleOffPurchasePriceNoTax,
			SaleOffPurchasePriceYesTax,
			product_detail,
			product_name_display,
			StoreCommentO,
			GoodsNameDisplay,
			slug_url,
			SectionCode,
			SectionName,
			`Memo3`,`Memo4`,
			search_keywords,
			onsale,
			new_product,
			product_status,ShapeCode2,ShapeName2
		) VALUES ', atData);
		-- INSERT INTO `tbl_sys_log`(`sys_log`) VALUES(@insertStmt);
		PREPARE stmt FROM @insertStmt;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
		SELECT 'ok' AS msg;
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductMaterialSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductMaterialSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductMaterialSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atSeqNo` TEXT CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode='C') THEN
	  SET @delStmt = CONCAT('DELETE FROM tbl_products_material WHERE tbl_products_material.SeqNo IN (',atSeqNo,')');
          PREPARE stmt FROM @delStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
SELECT SLEEP(5);
	-- insert product
          SET @insertStmt = CONCAT("INSERT INTO tbl_products_material (SeqNo, RSeqNo, CreatedDate,
	ModifiedDate, 
	MaterialCode, MaterialName, Area, MixedRate, Fabric, Area2, TimeStampSync) VALUES ", atData);
      PREPARE stmt FROM @insertStmt;
      EXECUTE stmt;
		
		SELECT 'ok' AS msg;
		
		
	ELSE
		SELECT 'NG' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductSizeGuide` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductSizeGuide` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductSizeGuide`(IN `p_seqno` BIGINT(20), IN `p_goodcode` VARCHAR(20), IN `p_category_guide_id` BIGINT(11), IN `p_category_guide_name` VARCHAR(250), IN `p_size_list` VARCHAR(250), IN `p_index_list` VARCHAR(250))
BEGIN
	
	IF(EXISTS(SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.SeqNo = p_seqno)) THEN
		UPDATE tbl_products_size_guide
		SET
			tbl_products_size_guide.goodscode = p_goodcode,
			tbl_products_size_guide.category_guide_id = p_category_guide_id,
			tbl_products_size_guide.category_guide_name = p_category_guide_name,
			tbl_products_size_guide.size_list = p_size_list,
			tbl_products_size_guide.index_list = p_index_list
		WHERE
			tbl_products_size_guide.SeqNo = p_seqno;
		SELECT 'ok' AS msg;
	ELSE
		INSERT INTO tbl_products_size_guide(goodscode,category_guide_id,category_guide_name,size_list,index_list)
		VALUES(p_goodcode,p_category_guide_id,p_category_guide_name,p_size_list,p_index_list);
		SELECT 'ok' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductSizeGuideFull` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductSizeGuideFull` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductSizeGuideFull`(IN `p_seqno` BIGINT(20), IN `p_goodcode` VARCHAR(20), IN `p_category_guide_id` BIGINT(11), IN `p_category_guide_name` VARCHAR(250), IN `p_size_list_full` TEXT)
BEGIN
	
	IF(EXISTS(SELECT * FROM tbl_products_size_guide WHERE tbl_products_size_guide.SeqNo = p_seqno)) THEN
		UPDATE tbl_products_size_guide
		SET
			tbl_products_size_guide.goodscode = p_goodcode,
			tbl_products_size_guide.category_guide_id = p_category_guide_id,
			tbl_products_size_guide.category_guide_name = p_category_guide_name,
			tbl_products_size_guide.size_list_full = p_size_list_full
		WHERE
			tbl_products_size_guide.SeqNo = p_seqno;
		SELECT 'ok' AS msg;
	ELSE
		INSERT INTO tbl_products_size_guide(goodscode,category_guide_id,category_guide_name,size_list_full)
		VALUES(p_goodcode,p_category_guide_id,p_category_guide_name,p_size_list_full);
		SELECT 'ok' AS msg;
	END IF;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveProductSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveProductSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveProductSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atSeqNo` TEXT CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	IF(p_mode='C') THEN
	  SET @delStmt = CONCAT('DELETE FROM tbl_products WHERE tbl_products.SeqNo IN (',atSeqNo,')');
          PREPARE stmt FROM @delStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
SELECT SLEEP(3);
	-- insert product
          SET @insertStmt = CONCAT('INSERT INTO tbl_products (
			product_name,
			product_itemcode,
			product_itemname,
			brand_code,
			product_detail,
			product_detail_short,
			price,
			hot_product,
			create_date,
			set_id,
			product_setmain,
			brand_name,
			new_product,
			sale_off_product,
			product_status,
			product_saleoff_price,
			goods_code,
			SeqNo,
			RSeqNo
		)VALUES ',atData);
          PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
		SELECT 'ok' AS msg;
		
		
	ELSE
		UPDATE tbl_products
		SET
			tbl_products.product_name = p_product_name,
			tbl_products.product_category_id = p_product_category_id,
			tbl_products.brand_id = p_brand_id,
			tbl_products.product_detail = p_product_detail,
			tbl_products.product_detail_short = p_product_detail_short,
			tbl_products.price = p_price,
			tbl_products.hot_product = p_hot_product,
			tbl_products.set_id = p_set_id,
			tbl_products.product_setmain = p_product_setmain,
			tbl_products.brand_name = p_brand_name,
			tbl_products.new_product = p_new_product,
			tbl_products.sale_off_product = p_sale_off_product,
			tbl_products.product_status = p_product_status,
			tbl_products.product_saleoff_price = p_product_saleoff_price,
			tbl_products.goods_code = p_goods_code
		WHERE
			tbl_products.product_id = p_product_id;
		SELECT 'ok' AS msg;
	END IF;
	
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSearch_key` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSearch_key` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSearch_key`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_search_key_id` INT(11), IN `p_search_key` VARCHAR(1000), IN `p_related_keys` TEXT, IN `p_related_keys_search` TEXT, IN `p_goods_codes` TEXT)
BEGIN
    IF (p_mode='C') THEN
        
        INSERT INTO tbl_search_key (
            
            search_key,
            related_keys,
            related_keys_search,
            goods_codes
        ) VALUES (
            
            p_search_key,
            p_related_keys,
            p_related_keys_search,
            p_goods_codes
        );
        
    ELSE
        
        UPDATE 	tbl_search_key
        SET
                
            search_key = p_search_key,
            related_keys = p_related_keys,
            related_keys_search = p_related_keys_search,
            goods_codes = p_goods_codes
        WHERE
                1=1
                AND search_key_id = p_search_key_id
        ;
        
    END IF;
    -- -------------------------------------------------------
    SELECT 'ok' AS msg;
    -- -------------------------------------------------------
    IF (p_mode<>'C') THEN
        SELECT p_search_key_id AS search_key_id;
    ELSE
        SELECT MAX(search_key_id) AS search_key_id FROM tbl_search_key;
    END IF;
            
                
        
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSearch_key_detail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSearch_key_detail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSearch_key_detail`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_search_key_item_id` BIGINT(20), IN `p_search_key_id` INT(11), IN `p_product_category_ids` TEXT, IN `p_item_codes` TEXT, IN `p_item_code_search` TEXT, IN `p_brand_ids` TEXT, IN `p_brand_codes` TEXT, IN `p_brand_code_search` TEXT)
BEGIN
    IF (p_search_key_item_id=0) THEN
        INSERT INTO tbl_search_key_detail (           
            search_key_id,
            product_category_ids,
            item_codes,
            item_code_search,
            brand_ids,
            brand_codes,
            brand_code_search
        ) VALUES (            
            p_search_key_id,
            p_product_category_ids,
            p_item_codes,
            p_item_code_search,
            p_brand_ids,
            p_brand_codes,
            p_brand_code_search
        );
    ELSE
        UPDATE 	tbl_search_key_detail
        SET		
		product_category_ids = p_product_category_ids,
		item_codes = p_item_codes,
		item_code_search = p_item_code_search,
		brand_ids = p_brand_ids,
		brand_codes = p_brand_codes,
		brand_code_search = p_brand_code_search
        WHERE
                tbl_search_key_detail.`search_key_item_id`=p_search_key_item_id;
    END IF;
    -- -------------------------------------------------------
    SELECT 'ok' AS msg;
    -- -------------------------------------------------------
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSecretSale` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSecretSale` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSecretSale`(IN `p_mode` VARCHAR(10), IN `p_seqno` VARCHAR(20), IN `p_secret_sale_id` INT, IN `p_secret_sale_code` VARCHAR(50), IN `p_secret_sale_name` VARCHAR(100), IN `p_secret_sale_password` VARCHAR(50), IN `p_secret_sale_allow_guest` TINYINT, IN `p_secret_sale_ignore_point` TINYINT, IN `p_secret_sale_kind` TINYINT, IN `p_saleoff_all_product` TINYINT, IN `p_secret_sale_status` TINYINT, IN `p_date_from_all` TIMESTAMP, IN `p_date_to_all` TIMESTAMP, IN `p_saleoff_rank_a` TINYINT, IN `p_date_from_rank_a` TIMESTAMP, IN `p_date_to_rank_a` TIMESTAMP, IN `p_saleoff_rank_b` TINYINT, IN `p_date_from_rank_b` TIMESTAMP, IN `p_date_to_rank_b` TIMESTAMP, IN `p_saleoff_rank_c` TINYINT, IN `p_date_from_rank_c` TIMESTAMP, IN `p_date_to_rank_c` TIMESTAMP, IN `p_saleoff_rank_d` TINYINT, IN `p_date_from_rank_d` TIMESTAMP, IN `p_date_to_rank_d` TIMESTAMP, IN `p_saleoff_rank_e` TINYINT, IN `p_date_from_rank_e` TIMESTAMP, IN `p_date_to_rank_e` TIMESTAMP, IN `p_saleoff_kind` TINYINT, IN `p_secret_sale_header` TEXT, IN `p_only_customer_allow` TEXT, IN `p_use_customer_allow` TINYINT)
BEGIN
	IF (p_mode='C') THEN
		INSERT INTO tbl_secret_sale (
			SeqNo,
			secret_sale_code,
			secret_sale_name,
			secret_sale_password,
			secret_sale_allow_guest,
			secret_sale_ignore_point,
			secret_sale_kind,
			saleoff_all_product,
			secret_sale_status,
			date_from_all,
			date_to_all,
			saleoff_rank_a,
			date_from_rank_a,
			date_to_rank_a,
			saleoff_rank_b,
			date_from_rank_b,
			date_to_rank_b,
			saleoff_rank_c,
			date_from_rank_c,
			date_to_rank_c,
			saleoff_rank_d,
			date_from_rank_d,
			date_to_rank_d,
			saleoff_rank_e,
			date_from_rank_e,
			date_to_rank_e,
			saleoff_kind,
			secret_sale_header,
			only_customer_allow,
			create_date,
			use_customer_allow
		)VALUES(
			p_seqno,
			p_secret_sale_code,
			p_secret_sale_name,
			p_secret_sale_password,
			p_secret_sale_allow_guest,
			p_secret_sale_ignore_point,
			p_secret_sale_kind,
			p_saleoff_all_product,
			p_secret_sale_status,
			p_date_from_all,
			p_date_to_all,
			p_saleoff_rank_a,
			p_date_from_rank_a,
			p_date_to_rank_a,
			p_saleoff_rank_b,
			p_date_from_rank_b,
			p_date_to_rank_b,
			p_saleoff_rank_c,
			p_date_from_rank_c,
			p_date_to_rank_c,
			p_saleoff_rank_d,
			p_date_from_rank_d,
			p_date_to_rank_d,
			p_saleoff_rank_e,
			p_date_from_rank_e,
			p_date_to_rank_e,
			p_saleoff_kind,
			p_secret_sale_header,
			p_only_customer_allow,
			now(),
			p_use_customer_allow
		);
	ELSE
		UPDATE tbl_secret_sale
		SET
			SeqNo = p_seqno,
			secret_sale_code = p_secret_sale_code,
			secret_sale_name = p_secret_sale_name,
			secret_sale_password = p_secret_sale_password,
			secret_sale_allow_guest = p_secret_sale_allow_guest,
			secret_sale_ignore_point = p_secret_sale_ignore_point,
			secret_sale_kind = p_secret_sale_kind,
			saleoff_all_product = p_saleoff_all_product,
			secret_sale_status = p_secret_sale_status,
			date_from_all = p_date_from_all,
			date_to_all = p_date_to_all,
			saleoff_rank_a = p_saleoff_rank_a,
			date_from_rank_a = p_date_from_rank_a,
			date_to_rank_a = p_date_to_rank_a,
			saleoff_rank_b = p_saleoff_rank_b,
			date_from_rank_b = p_date_from_rank_b,
			date_to_rank_b = p_date_to_rank_b,
			saleoff_rank_c = p_saleoff_rank_c,
			date_from_rank_c = p_date_from_rank_c,
			date_to_rank_c = p_date_to_rank_c,
			saleoff_rank_d = p_saleoff_rank_d,
			date_from_rank_d = p_date_from_rank_d,
			date_to_rank_d = p_date_to_rank_d,
			saleoff_rank_e = p_saleoff_rank_e,
			date_from_rank_e = p_date_from_rank_e,
			date_to_rank_e = p_date_to_rank_e,
			saleoff_kind = p_saleoff_kind,
			secret_sale_header = p_secret_sale_header,
			only_customer_allow = p_only_customer_allow,
			modified_date = now(),
			use_customer_allow = p_use_customer_allow
		WHERE
			tbl_secret_sale.secret_sale_id = p_secret_sale_id;
	END IF;
	
	SELECT 'ok' AS msg;
	
	IF(p_mode<>'C') THEN
		SELECT p_secret_sale_id AS secret_sale_id;
	ELSE
		SELECT MAX(secret_sale_id) AS secret_sale_id FROM tbl_secret_sale;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSecretSaleBrandItem` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSecretSaleBrandItem` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSecretSaleBrandItem`(IN `p_seqno` VARCHAR(20), IN `p_Rseqno` VARCHAR(20), IN `p_secret_sale_id` INT, IN `p_brand_code` VARCHAR(50), IN `p_saleoff_brand` FLOAT, IN `p_item_code` VARCHAR(50), IN `p_saleoff_item` FLOAT)
BEGIN
	IF p_brand_code IS NOT NULL AND p_brand_code != ''
	then
		INSERT INTO tbl_secret_sale_brand (
			SeqNo,
			RSeqNo,
			secret_sale_id,
			brand_code,
			saleoff_brand,
			create_date,
			modified_date
		)VALUES(
			p_seqno,
			p_Rseqno,
			p_secret_sale_id,
			p_brand_code,
			p_saleoff_brand,
			Now(),
			now()
		);
	end if;
		
	IF p_item_code IS NOT NULL AND p_item_code != ''
	THEN
		INSERT INTO tbl_secret_sale_item (
			SeqNo,
			RSeqNo,
			secret_sale_id,
			item_code,
			saleoff_item,
			create_date,
			modified_date
		)VALUES(
			p_seqno,
			p_Rseqno,
			p_secret_sale_id,
			p_item_code,
			p_saleoff_item,
			NOW(),
			NOW()
		);
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveSecretSaleBrandItemProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveSecretSaleBrandItemProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveSecretSaleBrandItemProduct`(IN `p_seqno` VARCHAR(20), IN `p_Rseqno` VARCHAR(20), IN `p_secret_sale_id` INT, IN `p_brand_code` VARCHAR(50), IN `p_item_code` VARCHAR(50), IN `p_goods_code` VARCHAR(50), IN `p_saleoff` FLOAT, IN `p_product_notsale` TINYINT)
BEGIN
	IF p_brand_code IS NOT NULL AND p_brand_code != ''
	THEN
		INSERT INTO tbl_secret_sale_brand_product (
			SeqNo,
			RSeqNo,
			secret_sale_id,
			brand_code,
			goods_code,
			saleoff_brand_product,
			brand_product_notsale,
			create_date,
			modified_date
		)VALUES(
			p_seqno,
			p_Rseqno,
			p_secret_sale_id,
			p_brand_code,
			p_goods_code,
			p_saleoff,
			p_product_notsale,
			NOW(),
			NOW()
		);
	END IF;
		
	IF p_item_code IS NOT NULL AND p_item_code != ''
	THEN
		INSERT INTO tbl_secret_sale_item_product (
			SeqNo,
			RSeqNo,
			secret_sale_id,
			item_code,
			goods_code,
			saleoff_item_product,
			item_product_notsale,
			create_date,
			modified_date
		)VALUES(
			p_seqno,
			p_Rseqno,
			p_secret_sale_id,
			p_item_code,
			p_goods_code,
			p_saleoff,
			p_product_notsale,
			NOW(),
			NOW()
		);
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveShopSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveShopSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveShopSync`(`p_mode` VARCHAR(20), `p_SeqNo` VARCHAR(20), `p_RSeqNo` VARCHAR(20), `p_create_date` VARCHAR(20), `p_modified_date` VARCHAR(20), `p_TimeStamp` VARCHAR(225), `p_shop_code` VARCHAR(20), `p_shop_name` VARCHAR(200), `p_shop_namekana` VARCHAR(200), `p_postcode` VARCHAR(50), `p_state` VARCHAR(50), `p_city` VARCHAR(50), `p_address` VARCHAR(500), `p_address2` VARCHAR(500), `p_shop_site` VARCHAR(20), `p_tel` VARCHAR(20), `p_fax` VARCHAR(20), `p_note` TEXT)
BEGIN
	
	IF(p_mode = 'C') THEN
		IF( NOT EXISTS(SELECT SeqNo FROM tbl_shop WHERE tbl_shop.SeqNo=p_SeqNo)) THEN
		        INSERT INTO tbl_shop( SeqNo, RSeqNo, create_date,modified_date, TimeStamp, 
				      shop_code,shop_name,shop_namekana,
				      postcode, state, city, address, address2,
				      shop_site, tel, fax, note
			)
			VALUES(p_SeqNo, p_RSeqNo, p_create_date,p_modified_date , p_TimeStamp ,
				p_shop_code,p_shop_name,p_shop_namekana,
				p_postcode, p_state, p_city, p_address, p_address2 ,
				p_shop_site, p_tel, p_fax, p_note
			);
		else
			UPDATE tbl_shop
			SET
				tbl_shop.modified_date = p_modified_date,
				tbl_shop.TimeStamp = p_TimeStamp,
				tbl_shop.shop_code = p_shop_code,
				tbl_shop.shop_name = p_shop_name,
				tbl_shop.shop_namekana = p_shop_namekana,
				tbl_shop.postcode = p_postcode,					
				tbl_shop.state = p_state,
				tbl_shop.city = p_city,		
				tbl_shop.address = p_address,
				tbl_shop.address2 = p_address2,
				tbl_shop.shop_site = p_shop_site,			
				tbl_shop.tel = p_tel,
				tbl_shop.fax = p_fax,
				tbl_shop.note = p_note				
		
			WHERE
				tbl_shop.SeqNo=p_SeqNo;
			
		END IF;
	
			
	END IF;
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveStockSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveStockSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveStockSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO tbl_stock_num_tmp(SeqNo,ShopCode,GoodCode,ColorCode,SizeCode,StockNum,KanoNum,
		`KanoNum3`
		)
		VALUES ',atData);
		
		 PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
	INSERT INTO tbl_stock_num (SeqNo,ShopCode,GoodCode,ColorCode,SizeCode,StockNum,KanoNum,`KanoNum3`)	
				SELECT MInv.SeqNo,MInv.ShopCode,MInv.GoodCode,MInv.ColorCode,MInv.SizeCode,MInv.StockNum,MInv.KanoNum,MInv.`KanoNum3`
				FROM tbl_stock_num_tmp AS MInv
				ON DUPLICATE KEY UPDATE tbl_stock_num.SeqNo=MInv.SeqNo,
							tbl_stock_num.ShopCode=MInv.ShopCode, 
							tbl_stock_num.GoodCode=MInv.GoodCode, 
							tbl_stock_num.ColorCode=MInv.ColorCode,
							tbl_stock_num.SizeCode=MInv.SizeCode, 
							tbl_stock_num.StockNum=MInv.StockNum, 
							tbl_stock_num.KanoNum=MInv.KanoNum,
							tbl_stock_num.KanoNum3=MInv.KanoNum3
							
				
				;
		DELETE FROM tbl_stock_num_tmp;
        CALL sp_product_update_order_status();
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveStorePriceJamSync` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveStorePriceJamSync` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveStorePriceJamSync`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `atData` LONGTEXT CHARSET utf8)
BEGIN
	
	IF(p_mode = 'C') THEN
	
          SET @insertStmt = CONCAT('INSERT INTO storeprice(SeqNo,RSeqNo,CreatedDate,ModifiedDate,ShopCode,ShopName,Date,
		PurchasePriceNoTax,PurchasePriceTax,PurchasePriceYesTax,StandardPriceNoTax,StandardPriceTax,StandardPriceYesTax,
		SaleOffPurchasePriceNoTax,SaleOffPurchasePriceTax,SaleOffPurchasePriceYesTax,SaleOffStandardPriceNoTax,
		SaleOffStandardPriceTax,SaleOffStandardPriceYesTax,TimeStampSync)
		VALUES ',atData);
	PREPARE stmt FROM @insertStmt;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
		
	SELECT 'ok' AS msg;
	
	END IF;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveTag` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveTag` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveTag`(IN `p_mode` VARCHAR(10) CHARSET utf8, IN `p_tag_id` BIGINT(20) UNSIGNED ZEROFILL, IN `p_all_page_start_head_tag` TEXT, IN `p_all_page_ex_cart_e_head_tag` TEXT, IN `p_all_page_ex_cart_e_body_tag` TEXT, IN `p_cart_com_page_e_head_tag` TEXT, IN `p_cart_com_page_e_body_tag` TEXT)
BEGIN
    IF (p_mode='C') THEN
        
        INSERT INTO tbl_tag (
            
            all_page_start_head_tag,
            all_page_ex_cart_e_head_tag,
            all_page_ex_cart_e_body_tag,
            cart_com_page_e_head_tag,
            cart_com_page_e_body_tag
        ) VALUES (
            
            p_all_page_start_head_tag,
            p_all_page_ex_cart_e_head_tag,
            p_all_page_ex_cart_e_body_tag,
            p_cart_com_page_e_head_tag,
            p_cart_com_page_e_body_tag
        );
        
    ELSE
        
        UPDATE 	tbl_tag
        SET
                
            all_page_start_head_tag = p_all_page_start_head_tag,
            all_page_ex_cart_e_head_tag = p_all_page_ex_cart_e_head_tag,
            all_page_ex_cart_e_body_tag = p_all_page_ex_cart_e_body_tag,
            cart_com_page_e_head_tag = p_cart_com_page_e_head_tag,
            cart_com_page_e_body_tag = p_cart_com_page_e_body_tag
        WHERE
                1=1
                AND tag_id = p_tag_id
        ;
        
    END IF;
    -- -------------------------------------------------------
    SELECT 'ok' AS msg;
    -- -------------------------------------------------------
    IF (p_mode<>'C') THEN
        SELECT p_tag_id AS tag_id;
    ELSE
        SELECT MAX(tag_id) AS tag_id FROM tbl_tag;
    END IF;
            
                
        
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_saveTemplateEmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_saveTemplateEmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_saveTemplateEmail`(`p_mode` VARCHAR(20), `p_template_email_id` BIGINT(11), `p_template_email_name` VARCHAR(255), `p_subject_email` VARCHAR(255), `p_content` TEXT, `p_use_delivery_top_info` TINYINT(1), `p_use_request_info` TINYINT(1), `p_use_product_info` TINYINT(1), `p_use_customer_info` TINYINT(1), `p_use_delivery_bot_info` TINYINT(1), `p_use_signal` TINYINT(1))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_template_email 	(
		template_email_name,
		subject_email,
		content,
		use_delivery_top_info,
		use_request_info,
		use_product_info,
		use_customer_info,
		use_delivery_bot_info,
		use_signal
		)
		VALUES	(
		p_template_email_name,
		p_subject_email,
		p_content,
		p_use_delivery_top_info,
		p_use_request_info,
		p_use_product_info,
		p_use_customer_info,
		p_use_delivery_bot_info,
		p_use_signal
		);
	ELSE
		UPDATE tbl_template_email
		SET
		template_email_name 	= p_template_email_name,
		subject_email 		= p_subject_email,
		content 		= p_content,
		use_delivery_top_info	= p_use_delivery_top_info,
		use_request_info	= p_use_request_info,
		use_product_info	= p_use_product_info,
		use_customer_info	= p_use_customer_info,
		use_delivery_bot_info	= p_use_delivery_bot_info,
		use_signal		= p_use_signal
		WHERE template_email_id = p_template_email_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_save_change_displaytop` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_save_change_displaytop` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_save_change_displaytop`(IN `p_product_id` BIGINT(11), IN `p_imgcomment_name` TEXT, IN `p_img_comment` TEXT, IN `p_goods_code` VARCHAR(50), IN `p_color_code` VARCHAR(10), IN `p_display_top` VARCHAR(200), IN `p_check_display_top_checked` VARCHAR(10))
BEGIN
	if p_product_id != ''
	then
		IF(EXISTS(SELECT * FROM tbl_imagecomment WHERE tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name)) THEN
			UPDATE tbl_imagecomment
			SET
				tbl_imagecomment.img_comment = p_img_comment
			WHERE
				tbl_imagecomment.product_id = p_product_id AND tbl_imagecomment.imgcomment_name = p_imgcomment_name;
		ELSE
			IF(p_img_comment<>'') THEN 
				INSERT INTO tbl_imagecomment(
						product_id,
						imgcomment_name,
						img_comment
				) 
				VALUES(p_product_id, 
					p_imgcomment_name, 
					p_img_comment
				);
			END IF;
		END IF;
	end if;
	
	IF p_check_display_top_checked != '0'
	THEN
		UPDATE tbl_products_details
		SET
			display_top = p_display_top
		WHERE
			product_goods_code = p_goods_code AND color_code = p_color_code;
	END IF;
/*	ELSE
		IF(p_img_comment<>'') THEN 
			INSERT INTO tbl_imagecomment(
					product_id,
					imgcomment_name,
					img_comment
			) 
			VALUES(p_product_id, 
				p_imgcomment_name, 
				p_img_comment
			);
		END IF;
		*/
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchBlogFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchBlogFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchBlogFontEnd`(IN `p_search` VARCHAR(200), IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT * 
			FROM tbl_blog 
			WHERE 
				status_ = 1
			");
			
	IF (p_search <> '') THEN
		SET @strSelect = CONCAT(@strSelect," 
			AND 
			( 
				`title_` like '%",p_search,"%' 
			  OR
				`short_` like '%",p_search,"%'
			  OR
				`content_` like '%",p_search,"%' 
			)
			");	
	END IF;
	
	SET @strSelect = CONCAT(@strSelect," ORDER BY date_ DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT * FROM tbl_author ORDER BY `author_` ASC;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchkeyDeleteGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchkeyDeleteGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchkeyDeleteGoodsCode`(IN `p_goods_code` TEXT, IN `p_search_key` TEXT)
BEGIN
	SET p_goods_code = REPLACE (p_goods_code,"\\","\\\\");
	SET p_goods_code = REPLACE (p_goods_code,"'","\\'");
	SET p_goods_code = REPLACE (p_goods_code,'"','\\"');
	SET p_goods_code = TRIM(p_goods_code);
	
	SET @update_replace_stmt = 
		CONCAT("
			UPDATE 	tbl_search_key 
			SET 	goods_codes = REPLACE ( REPLACE (
								CONCAT(',', goods_codes, ','),
								',",p_goods_code,",',
								','
							),
							',,',
							','
						)
			WHERE 	search_key IN (",p_search_key,")
				AND CONCAT(',',goods_codes,',') LIKE '%,",p_goods_code,",%'
			");
				
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@update_replace_stmt);	
	PREPARE update_replace_run FROM @update_replace_stmt;
	EXECUTE update_replace_run;
	DEALLOCATE PREPARE update_replace_run;	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchkeyUpdateGoodsCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchkeyUpdateGoodsCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchkeyUpdateGoodsCode`(IN `p_goods_code` TEXT, IN `p_search_key` TEXT)
BEGIN
	SET p_goods_code = REPLACE (p_goods_code,"\\","\\\\");
	SET p_goods_code = REPLACE (p_goods_code,"'","\\'");
	SET p_goods_code = REPLACE (p_goods_code,'"','\\"');
	SET p_goods_code = TRIM(p_goods_code);
	
	SET @update_key_stmt = 
		CONCAT("
			UPDATE 	tbl_search_key 			
			SET goods_codes = IF(goods_codes <> '',CONCAT(goods_codes ,',",p_goods_code,"'),CONCAT(goods_codes ,'",p_goods_code,"'))
			WHERE 	search_key IN (",p_search_key,")
				AND CONCAT(',',goods_codes,',') NOT LIKE '%,",p_goods_code,",%'
			");
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@update_key_stmt);	
	PREPARE update_key_run FROM @update_key_stmt;
	EXECUTE update_key_run;
	DEALLOCATE PREPARE update_key_run;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_SearchProductByGoodsCode_aragin` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_SearchProductByGoodsCode_aragin` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_SearchProductByGoodsCode_aragin`(IN `p_group_category_id` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_search` TEXT, IN `p_order` TEXT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	IF (p_search <> '') THEN
		SET @search = CONCAT("tbl_products.goods_code IN (",p_search,") AND");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details,
			tbl_products_category
			
		WHERE 
			",@search,"
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			
			");
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt);
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt);
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
		
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt,"
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT 
	  `id`,
	  `category_group_code`,
	  `category_group_name`,
	  `category_group_status`,
	  `category_group_show_order`,
	  `category_group_parent_name`,
	  `category_group_banner`,
	  `is_show_sub_menu` ,
	  `category_group_header` 
	FROM `tbl_products_category_group` 
	WHERE `id` = p_group_category_id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_SearchProductByGoodsCode_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_SearchProductByGoodsCode_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_SearchProductByGoodsCode_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_goods_code` TEXT)
BEGIN
      SET @selectStmt2 = 'SELECT tbl_products.*,
      (SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo) AS `product_detail_price`,
      (SELECT `barcode` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo) AS `barcode`
      FROM tbl_products WHERE ';      
      SET @selectStmt = '';
      IF p_goods_code != '' THEN
	SET @selectStmt = CONCAT(@selectStmt," tbl_products.goods_code IN (", p_goods_code,") ");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
      -- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmt2);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT count(*) AS total_items FROM tbl_products WHERE ';
      SET @selectStmt = '';
      IF p_goods_code != '' THEN
	SET @selectStmt = CONCAT(@selectStmt," tbl_products.goods_code IN (", p_goods_code,") ");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductByHastag_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductByHastag_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductByHastag_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_price` VARCHAR(10), IN `p_customer_id` BIGINT(20))
BEGIN
	SET @selectStmt2 = 'Select * from (';
      SET @selectStmt = '';
	SET @selectStmt = CONCAT(" SELECT had.goods_code,had.color_code,had.size_code 
FROM tbl_products_hashtag as ha,tbl_products_hashtag_detail as had 
WHERE ha.keyword = '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt,' AND ha.status=1 
AND ((ha.start_date <= NOW() AND ha.end_date >= NOW())OR ha.unlimited = 1) 
AND ha.hashtag_id = had.hashtag_id) as tmp_key
LEFT JOIN
(Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.color_slug_url,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 1
Group by p.goods_code,pd.color_code) as tmp_p
LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode) as soton 
ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode) as tmp_s
ON tmp_s.goods_code = tmp_key.goods_code 
and tmp_s.color_code = tmp_key.color_code');
     
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	IF p_customer_id <> 0 THEN
		SET @selectStmt2 = CONCAT('Select * from (',@selectStmt2,') as timp LEFT JOIN (select tbl_wish_list.product_id as r_product_id,tbl_wish_list.color_code as r_color_code from tbl_wish_list where tbl_wish_list.customer_id = ');
		SET @selectStmt2 = CONCAT(@selectStmt2,p_customer_id,') as wl on timp.product_id = wl.r_product_id and timp.color_code = wl.r_color_code');
	END IF;
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'Select count(*) as total_items from (';
      SET @selectStmt = '';
	SET @selectStmt = CONCAT(" SELECT had.goods_code,had.color_code,had.size_code 
FROM tbl_products_hashtag as ha,tbl_products_hashtag_detail as had 
WHERE ha.keyword = '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt,' AND ha.status=1 
AND ((ha.start_date <= NOW() AND ha.end_date >= NOW())OR ha.unlimited = 1) 
AND ha.hashtag_id = had.hashtag_id) as tmp_key
LEFT JOIN
(Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 1
Group by p.goods_code,pd.color_code) as tmp_p
LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode) as soton 
ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode) as tmp_s
ON tmp_s.goods_code = tmp_key.goods_code 
and tmp_s.color_code = tmp_key.color_code');
     
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_SearchProductByName_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_SearchProductByName_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_SearchProductByName_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
	-- Modified: 2019/10/28, S19102874 有限会社hapuna＆Co．ハプナ
	-- Them phan lay gia tu tbl_products_details
      SET @selectStmt2 = 'SELECT tbl_products.*,(SELECT `product_detail_price` FROM `tbl_products_details` WHERE `RSeqNo`=tbl_products.`SeqNo` GROUP BY RSeqNo) AS `product_detail_price` FROM tbl_products WHERE ';      
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or tbl_products.goods_code like '%", p_keyword,"%' ");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT count(*) AS total_items FROM tbl_products WHERE ';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or tbl_products.goods_code like '%", p_keyword,"%' ");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductByName_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductByName_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductByName_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_price` VARCHAR(10), IN `p_customer_id` BIGINT(20))
BEGIN
	SET @selectStmt2 = 'Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd
	 where p.SeqNo=pd.RSeqNo and p.product_status = 1 and pd.product_detail_status = 0';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	SET @selectStmt = CONCAT(" and ( p.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or p.goods_code like '%", p_keyword,"%')");
	SET @selectStmt = CONCAT(@selectStmt," Group by p.goods_code,pd.color_code) as tmp_p
	LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
		GROUP BY s.GoodCode,s.ColorCode) as soton 
ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	IF p_customer_id <> 0 THEN
		SET @selectStmt2 = CONCAT('Select * from (',@selectStmt2,') as timp		
	LEFT JOIN (select tbl_wish_list.product_id as r_product_id,tbl_wish_list.color_code as r_color_code from tbl_wish_list where tbl_wish_list.customer_id = ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_customer_id,') as wl on timp.product_id = wl.r_product_id and timp.color_code = wl.r_color_code');
	END IF;
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'Select count(*) as total_items from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd
	 where p.SeqNo=pd.RSeqNo and p.product_status = 1 and pd.product_detail_status = 0';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	SET @selectStmt = CONCAT(" and ( p.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or p.goods_code like '%", p_keyword,"%')");
	SET @selectStmt = CONCAT(@selectStmt," Group by p.goods_code,pd.color_code) as tmp_p
	LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
		GROUP BY s.GoodCode,s.ColorCode) as soton 
ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductBySetPaging_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductBySetPaging_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductBySetPaging_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_set_status` INT, IN `p_price` VARCHAR(10))
BEGIN
      SET @selectStmt2 = 'SELECT * FROM tbl_products LEFT JOIN tbl_set_product ON tbl_products.set_id = tbl_set_product.set_id Where tbl_products.product_setmain = 1';
      SET @selectStmt = '';
      IF p_set_status<>0 THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND tbl_set_product.set_status = ', p_set_status);
      END IF;
      
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @orderStmt = '';
      IF p_price<>'' THEN
	SET @orderStmt = CONCAT(' ORDER BY  price ', p_price);
      END IF;	
	SET @selectStmt2 = CONCAT(@selectStmt2,@orderStmt,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT count(*) AS total_items FROM tbl_products LEFT JOIN tbl_set_product ON tbl_products.set_id = tbl_set_product.set_id Where tbl_products.product_setmain = 1';
      SET @selectStmt = '';
      IF p_set_status<>0 THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND tbl_set_product.set_status = ', p_set_status);
      END IF;
      
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductPaging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductPaging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductPaging`(IN `p_skip` INT, IN `p_limit` INT, IN `p_goods_code` VARCHAR(255), IN `p_product_name` VARCHAR(255), IN `p_price_from` VARCHAR(50), IN `p_price_to` VARCHAR(50), IN `p_product_category_id` VARCHAR(50), IN `p_brand_id` VARCHAR(50), IN `p_brand_code` VARCHAR(255))
BEGIN
	SELECT *
	FROM tbl_products
	WHERE
		tbl_products.product_name like CONCAT('%',p_product_name,'%')
	AND (
		(p_price_from = 0 AND p_price_to = 0)
		or ( price <=p_price_to AND p_price_from = 0 AND p_price_to <> 0)
		or ( price >=p_price_from AND p_price_from <> 0 AND p_price_to = 0)
		or ( price >=p_price_from AND price<=p_price_to AND p_price_from <> 0 AND p_price_to <> 0)
	)
	AND (tbl_products.product_category_id = p_product_category_id or p_product_category_id = 0)
	AND (tbl_products.brand_id = p_brand_id or (tbl_products.brand_code = p_brand_code and p_brand_code <> '') or p_brand_id = 0)
	AND (tbl_products.goods_code like CONCAT('%',p_goods_code,'%'))
	ORDER BY tbl_products.create_date,tbl_products.goods_code DESC LIMIT p_skip,p_limit;
	SELECT COUNT(*) AS total_items
	FROM tbl_products
	WHERE
		tbl_products.product_name like CONCAT('%',p_product_name,'%')
	AND (
		(p_price_from = 0 AND p_price_to = 0)
		or ( price <=p_price_to AND p_price_from = 0 AND p_price_to <> 0)
		or ( price >=p_price_from AND p_price_from <> 0 AND p_price_to = 0)
		or ( price >=p_price_from AND price<=p_price_to AND p_price_from <> 0 AND p_price_to <> 0)
	)
	AND (tbl_products.product_category_id = p_product_category_id or p_product_category_id = 0)
	AND (tbl_products.brand_id = p_brand_id or (tbl_products.brand_code = p_brand_code and p_brand_code <> '') or p_brand_id = 0)
	AND (tbl_products.goods_code like CONCAT('%',p_goods_code,'%'));
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductPaging_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductPaging_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductPaging_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_brand_code` VARCHAR(20), IN `p_product_itemcode` VARCHAR(20), IN `p_sort` VARCHAR(10), IN `p_hot_product` INT(4))
BEGIN
      SET @selectStmt2 = 'SELECT * FROM tbl_products WHERE tbl_products.product_status=1';
      SET @selectStmt = '';
      IF p_brand_code<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND brand_code = '", p_brand_code,"'");
      END IF;
      IF p_product_itemcode<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND product_itemcode = '", p_product_itemcode,"'");
      END IF;
	IF p_sort='new' THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND new_product = 1');
      END IF;
	IF p_sort='popular' THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND hot_product = 1');
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	IF @selectStmt = '' THEN
	SET @selectStmt2 = 'SELECT * FROM tbl_products WHERE tbl_products.product_status=1';
      END IF;
	SET @orderStmt = '';
      IF p_sort='priceAsc' THEN
	SET @orderStmt = ' ORDER BY  price asc';
      END IF;
	IF p_sort='priceDesc' THEN
	SET @orderStmt = ' ORDER BY  price desc';
      END IF;	
	SET @selectStmt2 = CONCAT(@selectStmt2,@orderStmt,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT COUNT(*) AS total_items FROM tbl_products WHERE tbl_products.product_status=1';
      SET @selectStmt = '';
      IF p_brand_code<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND brand_code = '", p_brand_code,"'");
      END IF;
      IF p_product_itemcode<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND product_itemcode = '", p_product_itemcode,"'");
      END IF;
	IF p_sort='new' THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND new_product = 1');
      END IF;
	IF p_sort='popular' THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND hot_product = 1');
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	IF @selectStmt = '' THEN
	SET @selectStmt2 = 'SELECT COUNT(*) AS total_items FROM tbl_products WHERE tbl_products.product_status=1';
      END IF;
	
	
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_SearchProductRankingByName_backend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_SearchProductRankingByName_backend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_SearchProductRankingByName_backend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
       SET @selectStmt2 = 'SELECT tbl_products.`product_id` AS p_id,tbl_products.`SeqNo` AS p_seqno,tbl_products.*, tbl_products_details.* FROM tbl_products, tbl_products_details 
		WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND (tbl_products.product_status <> 2 OR tbl_products.product_status IS NULL) AND (';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or tbl_products.goods_code like '%", p_keyword,"%' ) group by tbl_products.`goods_code`,tbl_products_details.`color_code`
		ORDER BY tbl_products_details.`num_order` desc,tbl_products.create_date,tbl_products.goods_code DESC ");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT COUNT(*) AS total_items FROM (SELECT tbl_products.`SeqNo`  FROM tbl_products, tbl_products_details 
		WHERE tbl_products.`SeqNo` = tbl_products_details.`RSeqNo` AND (tbl_products.product_status <> 2 OR tbl_products.product_status IS NULL) AND (';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	-- SET @selectStmt = CONCAT(" and MATCH (tbl_products.product_name, tbl_products.goods_code) AGAINST ('", p_keyword,"' IN BOOLEAN MODE)");
	SET @selectStmt = CONCAT(" tbl_products.product_name like '%", p_keyword,"%'");
	SET @selectStmt = CONCAT(@selectStmt," or tbl_products.goods_code like '%", p_keyword,"%' ) group by tbl_products.`goods_code`,tbl_products_details.`color_code`) as total");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProductPaging_fontend1` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProductPaging_fontend1` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProductPaging_fontend1`(IN `p_skip` INT, IN `p_limit` INT, IN `p_brand_code` VARCHAR(20), IN `p_product_itemcode` VARCHAR(20), IN `p_sort` VARCHAR(10), IN `p_hot_product` INT(4), IN `p_customer_id` BIGINT(20))
BEGIN
	SET @selectStmt2 = '
	Select 	p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		p.new_product,
		p.create_date,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price_no_tax AS pro_detail_product_detail_price_no_tax,
		pd.product_detail_price,
		pd.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
        	pd.order_status,
        	pd.num_rank,
		pd.color_slug_url 
	from 
		tbl_products as p ,
		tbl_products_details as pd 
	where 
		p.SeqNo=pd.RSeqNo 
		and pd.product_detail_status = 0 
		and p.product_status = 1 ';
	SET @selectStmt = '';
	IF p_brand_code<>'' THEN
		SET @selectStmt = CONCAT(@selectStmt," AND p.brand_code = '", p_brand_code,"'");
	END IF;
	IF p_product_itemcode<>'' THEN
		SET @selectStmt = CONCAT(@selectStmt," AND (p.product_itemcode = '", p_product_itemcode);
		SET @selectStmt = CONCAT(@selectStmt,"' or p.product_itemname = '", p_product_itemcode,"')");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt,' GROUP BY p.goods_code,pd.color_code');
	SET @selectStmt2 = CONCAT('SELECT * From (',@selectStmt2,@selectStmt,') as tmp_p
		LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode');
	SET @orderStmt = '';
	IF p_sort='priceAsc' THEN
		SET @orderStmt = ' ORDER BY  tmp_p.product_detail_price asc';
	END IF;
	IF p_sort='priceDesc' THEN
		SET @orderStmt = ' ORDER BY  tmp_p.product_detail_price desc';
	END IF;
	IF p_sort='popular' THEN
		SET @orderStmt = ' ORDER BY  tmp_p.num_rank desc, tmp_p.goods_code asc,tmp_p.color_code asc';
	END IF;
	IF p_sort='new' THEN
		SET @orderStmt = ' ORDER BY  tmp_p.create_date desc';
	END IF;
	IF p_sort='' THEN
		SET @orderStmt = ' ORDER BY  tmp_p.order_status desc';
	END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@orderStmt,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	IF p_customer_id <> 0 THEN
		SET @selectStmt2 = CONCAT(
			'Select * from (',@selectStmt2,') as timp
			LEFT JOIN (
				select tbl_wish_list.product_id as r_product_id,
				tbl_wish_list.color_code as r_color_code 
				from 
					tbl_wish_list 
				where tbl_wish_list.customer_id = ',p_customer_id,'
			) as wl 
				on timp.product_id = wl.r_product_id 
				and timp.color_code = wl.r_color_code'
			);
	END IF;
	PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'SELECT count(*) as total_items From (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price_no_tax AS pro_detail_product_detail_price_no_tax,
		pd.product_detail_price,
		pd.product_detail_saleoff_price_no_tax AS pro_detail_product_detail_saleoff_price_no_tax,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
                		pd.num_rank,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status = 0 and p.product_status = 1';
      SET @selectStmt = '';
      IF p_brand_code<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND p.brand_code = '", p_brand_code,"'");
      END IF;
      IF p_product_itemcode<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt," AND p.product_itemcode = '", p_product_itemcode,"'");
      END IF;
	IF p_sort='new' THEN
	SET @selectStmt = CONCAT(@selectStmt,' AND p.new_product = 1');
      END IF;
	
	SET @selectStmt = CONCAT(@selectStmt,' GROUP BY p.goods_code,pd.color_code');
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt,') as tmp_p
		LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = "05"
		GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode ');
	
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProduct_byKeyword` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProduct_byKeyword` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProduct_byKeyword`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_stock` VARCHAR(50))
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.product_status 		= 1
			AND tbl_products.search_keywords 		like '%",p_search_key_word,"%'
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_stock IS NOT NULL AND p_stock = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE stock_num >0';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	IF p_sort IS NOT NULL AND p_sort = 'stock' THEN
		SET @conditionRestockItemsStmt = ' WHERE (stock_num >0 AND product_is_sold_out = 1)';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt, @orderStmt, "
		", @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, @conditionRestockItemsStmt,") AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_search_affiliate_dates` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_search_affiliate_dates` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_search_affiliate_dates`(`p_skip` INT, `p_limit` INT, IN `p_datestart` VARCHAR(50), IN `p_dateend` VARCHAR(50))
BEGIN
	
	SET @selectStmt = '
	
		select tbl_affiliate.*,tbl_orders.* ,SUM(tbl_orders.`total_amount`+tbl_orders.`shipping_cost`+tbl_orders.`shipping_fee`-tbl_orders.couponmoney-tbl_orders.thistimeusemoney) AS total
			FROM tbl_affiliate 
			LEFT JOIN tbl_orders
			ON tbl_affiliate.affiliate_name = tbl_orders.order_affiliate_name ';
		SET @groupBy = 'group by tbl_affiliate.affiliate_media ';
		SET @limitStmt = CONCAT('LIMIT ',p_skip,',',p_limit);
		SET @whereStml = ' WHERE tbl_orders.`preorder` = 0 ';
	IF p_datestart <> '' && p_dateend <> '' THEN
		
		SET @whereStml = CONCAT(@whereStml,"AND tbl_orders.created_on BETWEEN '",p_datestart,"' AND '",p_dateend,"'");
	END IF;
	
	SET @selectStmt = CONCAT(@selectStmt,@whereStml,@groupBy,@limitStmt);
	-- INSERT INTO tbl_sys_log(tbl_sys_log.sys_action) VALUE(@selectStmt);
	
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	SET @selectTotal = CONCAT("select count(*) as total_items from (",@selectStmt,") as fn");
	PREPARE stmt1 FROM @selectTotal;
	EXECUTE stmt1;
	DEALLOCATE PREPARE stmt1;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProduct_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProduct_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProduct_fontend`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	INTO search_keyword_master;
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProduct_fontend_by_font` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProduct_fontend_by_font` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProduct_fontend_by_font`(IN `p_search_key_word_1_byte` VARCHAR(20), IN `p_search_key_word_2_byte` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE search_keyword_master_1_byte VARCHAR(1000) DEFAULT NULL;
	DECLARE search_keyword_master_2_byte VARCHAR(1000) DEFAULT NULL;
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"\\","\\\\");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,"'","\\'");
	SET p_search_key_word_1_byte = REPLACE (p_search_key_word_1_byte,'"','\\"');	
	
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"\\","\\\\");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,"'","\\'");
	SET p_search_key_word_2_byte = REPLACE (p_search_key_word_2_byte,'"','\\"');	
	
	
	
	
	
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_1_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_1_byte, ',%')
	INTO search_keyword_master_1_byte;
	IF 
		search_keyword_master_1_byte IS NOT NULL 
		AND search_keyword_master_1_byte <> '' 
	THEN
		
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_1_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_1_byte = p_search_key_word_1_byte;
	END IF;
	SELECT 	search_key 
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word_2_byte
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word_2_byte, ',%')
	INTO search_keyword_master_2_byte;
	IF 
		search_keyword_master_2_byte IS NOT NULL 
		AND search_keyword_master_2_byte <> '' 
	THEN
		
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"\\","\\\\");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,"'","\\'");
		SET search_keyword_master_2_byte = REPLACE (search_keyword_master_1_byte,'"','\\"');
	ELSE
		SET search_keyword_master_2_byte = p_search_key_word_2_byte;
	END IF;
	
	
	
	
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_1_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_1_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_1_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_1_byte,"%'
				OR tbl_products.product_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master_2_byte,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word_2_byte,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word_2_byte,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word_2_byte,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchProduct_fontend_foryou` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchProduct_fontend_foryou` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchProduct_fontend_foryou`(IN `p_search_key_word` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT, IN `p_keyword` TEXT, IN `p_searchprice` TEXT)
BEGIN
	DECLARE search_keyword_master VARCHAR(1000) DEFAULT NULL;
	SET search_keyword_master = '';
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt =  CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	
	SET p_search_key_word = REPLACE (p_search_key_word,"\\","\\\\");
	SET p_search_key_word = REPLACE (p_search_key_word,"'","\\'");
	SET p_search_key_word = REPLACE (p_search_key_word,'"','\\"');
	
	SELECT 	search_key INTO search_keyword_master
	FROM 	tbl_search_key 
	WHERE 	search_key = p_search_key_word
		OR CONCAT(',', related_keys, ',') LIKE CONCAT('%,', p_search_key_word, ',%')
	LIMIT 1;
	
	IF 
		search_keyword_master IS NOT NULL 
		AND search_keyword_master <> '' 
	THEN
		
		SET search_keyword_master = REPLACE (search_keyword_master,"\\","\\\\");
		SET search_keyword_master = REPLACE (search_keyword_master,"'","\\'");
		SET search_keyword_master = REPLACE (search_keyword_master,'"','\\"');
	ELSE
		SET search_keyword_master = p_search_key_word;
	END IF;
	SET @selectGoodsCode = '';
	IF 
		p_keyword IS NOT NULL
		AND p_keyword <> ''
	THEN
		SET @selectGoodsCode =  CONCAT(" AND tbl_products.goods_code IN (",p_keyword,")");
		
	ELSE
		SET @selectGoodsCode = '';
	END IF;
	
	
	IF 
		p_searchprice IS NOT NULL
		AND p_searchprice <> ''
	THEN
		SET @selecSearchPrice =  CONCAT(" AND ",p_searchprice);
		
	ELSE
		SET @selecSearchPrice = '';
	END IF;
	
	
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products 
			JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo 
					AND tbl_products_details.product_detail_status = 0
			LEFT JOIN tbl_brands 
				ON tbl_products.brand_code = tbl_brands.brand_code
			LEFT JOIN tbl_products_category 
				ON tbl_products.product_itemcode = tbl_products_category.ItemCode
		WHERE 
			tbl_products.goods_code NOT IN (",(SELECT CASE WHEN product_code_search IS NULL OR product_code_search = '' THEN "'-9999'" ELSE product_code_search  END FROM tbl_settings ),")
			",@selectGoodsCode,"",@selecSearchPrice,"
			AND tbl_products.product_status 		= 1
			AND (
				tbl_products.product_name 			like '%",p_search_key_word,"%'
				OR tbl_products.product_name_display 		like '%",p_search_key_word,"%'
				OR tbl_products.goods_code 			like '%",p_search_key_word,"%'
				OR tbl_products.search_keywords 		like '%",search_keyword_master,"%'
				
				OR tbl_brands.brand_name 			like '%",p_search_key_word,"%'
				OR tbl_brands.brand_name_display 		like '%",p_search_key_word,"%'
				
				OR tbl_products_category.Name 			like '%",p_search_key_word,"%'
				OR tbl_products_category.name_display 		like '%",p_search_key_word,"%'
			) 
		");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code 
		");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
							LEFT JOIN (
								SELECT 	
									product_id,
									color_code,
									COUNT(*) AS is_wished
								FROM 	
									tbl_wish_list 
								WHERE 
									customer_id	= ",p_customer_id,"
								GROUP BY product_id, color_code
							
							) AS wish_list_info
								ON wish_list_info.product_id 	= product_info_ok.product_product_id
								AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);	
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
 
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchsortProductByHastag_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchsortProductByHastag_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchsortProductByHastag_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_sort` VARCHAR(10), IN `p_customer_id` BIGINT(20))
BEGIN
DECLARE dshop_lits TEXT DEFAULT '';
SELECT `shop_list` INTO dshop_lits FROM `tbl_settings` WHERE 1=1 LIMIT 1;
SET dshop_lits=CONCAT("'",REPLACE(dshop_lits,",","','"),"'");
 SELECT prihtml,keyword,hashtag_title,banner INTO @dprihtml,@dhashtagid,@dhashtagtitle,@banner FROM tbl_products_hashtag WHERE slug=p_keyword AND STATUS=1 
AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
SET @selectStmt ="select * from (";
SET @selectStmt =Concat(@selectStmt,"
Select 		p.goods_code,
                p.product_id,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.product_name_display,
		p.brand_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		p.new_product,p.is_color_show,p.is_pre_order,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_price_no_tax,
		pd.product_detail_saleoff_price,
		pd.product_detail_saleoff_price_no_tax,
		pd.product_detail_status,
		pd.color_slug_url,
		pd.product_detail_top,
		pd.num_rank,pd.is_main_color,
@dprihtml as prihtml,@dhashtagtitle as hashtagtitle,@dhashtagid,@banner as banner 
 from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status=0 and p.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') and p.goods_code <>'' and p.is_color_show = 0");
	
	
SET @selectStmt = CONCAT(@selectStmt,' group by goods_code, color_code');
IF p_sort='new' then 
	SET @selectStmt = CONCAT(@selectStmt,'  ORDER BY FIND_IN_SET(goods_code, ''',REPLACE(@dhashtagid, '\r\n', ','),''')  ');
	end if;
IF p_sort='popular' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  num_rank asc ');
	end if;
	IF p_sort='priceAsc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  product_detail_price asc ');
	end if;
	IF p_sort='priceDesc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  product_detail_price desc ');
	end if;
	
SET @selectStmt = CONCAT(@selectStmt,') as tmp');
	if dshop_lits<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt,' LEFT JOIN
	(SELECT GoodCode,ColorCode,SUM(StockNum) as stock_num FROM tbl_stock_num  where ShopCode IN (',dshop_lits,')
			GROUP BY GoodCode,ColorCode) as soton 
	ON tmp.goods_code = soton.GoodCode and tmp.color_code = soton.ColorCode');   	
	ELSE 
	SET @selectStmt = CONCAT(@selectStmt,' LEFT JOIN
	(SELECT GoodCode,ColorCode,SUM(StockNum) as stock_num FROM tbl_stock_num  where 1 = 1
			GROUP BY GoodCode,ColorCode) as soton 
	ON tmp.goods_code = soton.GoodCode and tmp.color_code = soton.ColorCode');  
	ENd if;
	
IF p_customer_id <> 0 THEN
	SET @selectStmt21 ="select * from (";
	SET @selectStmt21 = CONCAT(@selectStmt21,@selectStmt,") as tmp1");
	SET @selectStmt = CONCAT(@selectStmt21," LEFT JOIN 
	(select wl.product_id as r_product_id,wl.color_code as r_color_code from tbl_wish_list as wl where wl.customer_id = '",p_customer_id,"') as wl1
	 on tmp1.product_id = wl1.r_product_id and tmp1.color_code = wl1.r_color_code");
END IF;
SET @selectStmt =Concat(@selectStmt," UNION ALL 
select * from (Select 		p.goods_code,
                p.product_id,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.product_name_display,
		p.brand_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		p.new_product,p.is_color_show,p.is_pre_order,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_price_no_tax,
		pd.product_detail_saleoff_price,
		pd.product_detail_saleoff_price_no_tax,
		pd.product_detail_status,
		pd.color_slug_url,
		pd.product_detail_top,
		pd.num_rank,pd.is_main_color,
@dprihtml as prihtml,@dhashtagtitle as hashtagtitle,@dhashtagid,@banner as banner 
 from tbl_products as p , tbl_products_details as pd where p.SeqNo=pd.RSeqNo and pd.product_detail_status=0 and p.goods_code in ('",REPLACE(@dhashtagid, '\r\n', ''','''),"') and p.goods_code <>'' and p.is_color_show = 1 and pd.is_main_color=1 ");
	
SET @selectStmt = CONCAT(@selectStmt,' group by goods_code');
IF p_sort='new' then 
	SET @selectStmt = CONCAT(@selectStmt,'  ORDER BY FIND_IN_SET(goods_code, ''',REPLACE(@dhashtagid, '\r\n', ','),''')  ');
	end if;
IF p_sort='popular' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  num_rank asc ');
	end if;
	IF p_sort='priceAsc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  product_detail_price asc ');
	end if;
	IF p_sort='priceDesc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  product_detail_price desc ');
	end if;
	
SET @selectStmt = CONCAT(@selectStmt,') as tmp');
	if dshop_lits<>'' THEN
	SET @selectStmt = CONCAT(@selectStmt,' LEFT JOIN
	(SELECT GoodCode,ColorCode,SUM(StockNum) as stock_num FROM tbl_stock_num  where ShopCode IN (',dshop_lits,') and StockNum >0
			GROUP BY GoodCode) as soton 
	ON tmp.goods_code = soton.GoodCode ');   	
	ELSE 
	SET @selectStmt = CONCAT(@selectStmt,' LEFT JOIN
	(SELECT GoodCode,ColorCode,SUM(StockNum) as stock_num FROM tbl_stock_num  where  StockNum >0
			GROUP BY GoodCode) as soton 
	ON tmp.goods_code = soton.GoodCode ');  
	ENd if;
	
IF p_customer_id <> 0 THEN
	SET @selectStmt21 ="select * from (";
	SET @selectStmt21 = CONCAT(@selectStmt21,@selectStmt,") as tmp1");
	SET @selectStmt = CONCAT(@selectStmt21," LEFT JOIN 
	(select wl.product_id as r_product_id,wl.color_code as r_color_code from tbl_wish_list as wl where wl.customer_id = '",p_customer_id,"') as wl1
	 on tmp1.product_id = wl1.r_product_id and tmp1.color_code = wl1.r_color_code");
END IF;
SET @selectStmt2=@selectStmt;
 SET @selectStmt= CONCAT(@selectStmt,' LIMIT ');
	SET @selectStmt = CONCAT(@selectStmt,p_skip,',');
	SET @selectStmt = CONCAT(@selectStmt,p_limit);
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
SET @selectStmt2=CONCAT("Select count(*) as total_items from (",@selectStmt2,") as pl where 1=1");     
	
         PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	   
 SELECT prihtml,keyword,hashtag_title,banner FROM tbl_products_hashtag WHERE slug=p_keyword AND STATUS=1 
AND ((DATE(start_date) <= DATE(NOW()) AND DATE(end_date) >= DATE(NOW())) OR unlimited = 1) LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchsortProductByHastag_fontend_new` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchsortProductByHastag_fontend_new` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchsortProductByHastag_fontend_new`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_sort` VARCHAR(20), IN `p_customer_id` BIGINT(20))
BEGIN
SET @orderStmt = '';
IF p_sort	= 'priceAscend' THEN
	SET @orderStmt = ' ORDER BY  	tmp_p.product_detail_price 	ASC ';
ELSEIF p_sort	= 'priceDescend' THEN
	SET @orderStmt = ' ORDER BY  	tmp_p.product_detail_price 	DESC ';
ELSEIF p_sort	= 'popular' THEN
	SET @orderStmt = ' ORDER BY  	tmp_p.num_rank 	DESC, 
					tmp_p.goods_code 	ASC,
					tmp_p.color_code ASC ';
ELSEIF p_sort 	= 'new' THEN
	SET @orderStmt = ' ORDER BY  	tmp_p.create_date 	DESC ';
ELSEIF p_sort	= '' THEN
	SET @orderStmt = ' ORDER BY  	tmp_p.order_status 	DESC ';
END IF;
	SET @selectStmt2 = 'Select * from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		p.create_date,
		p.order_status,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.num_rank,
		pd.color_slug_url from tbl_products as p , tbl_products_details as pd
	 where p.SeqNo=pd.RSeqNo and p.product_status = 1 and pd.product_detail_status = 0';
      SET @selectStmt = '';
      IF p_keyword != '' THEN
	
	
	SET @selectStmt = CONCAT(@selectStmt," and p.goods_code in ('", REPLACE(p_keyword, ',', ''','''),"')");
	SET @selectStmt = CONCAT(@selectStmt," Group by p.goods_code,pd.color_code",@orderStmt,") as tmp_p 
	LEFT JOIN 	(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05' GROUP BY s.GoodCode,s.ColorCode) as soton 
	ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode");
      END IF;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	IF p_customer_id <> 0 THEN
		SET @selectStmt2 = CONCAT('Select * from (',@selectStmt2,') as timp
		LEFT JOIN (select tbl_wish_list.product_id as r_product_id from tbl_wish_list where tbl_wish_list.customer_id = ');
		SET @selectStmt2 = CONCAT(@selectStmt2,p_customer_id,') as wl on timp.product_id = wl.r_product_id');
	END IF;
      
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
      SET @selectStmt2 = 'Select count(*) as total_items from (Select p.product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top from tbl_products as p , tbl_products_details as pd
	 where p.SeqNo=pd.RSeqNo and p.product_status = 1 and pd.product_detail_status = 0';
      SET @selectStmt = '';
      IF p_keyword != '' THEN	
	SET @selectStmt = CONCAT(@selectStmt," and p.goods_code in ('", REPLACE(p_keyword, ',', ''','''),"')");
	SET @selectStmt = CONCAT(@selectStmt," Group by p.goods_code,pd.color_code) as tmp_p
	LEFT JOIN
		(SELECT s.GoodCode,s.ColorCode,SUM(s.StockNum) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
		GROUP BY s.GoodCode,s.ColorCode) as soton 
ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode");
      END IF;
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_secretByCustomer` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_secretByCustomer` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_secretByCustomer`(IN `p_customer_code` VARCHAR(50), IN `p_customer_rank` VARCHAR(10))
BEGIN
	IF p_customer_rank = 'A' then
		set @rank = concat(" AND date_from_rank_a < NOW() AND NOW() < date_to_rank_a");
	elseif p_customer_rank = 'B' THEN
		SET @rank = CONCAT(" AND date_from_rank_b < NOW() AND NOW() < date_to_rank_b");
	ELSEIF p_customer_rank = 'C' THEN
		SET @rank = CONCAT(" AND date_from_rank_c < NOW() AND NOW() < date_to_rank_c");
	ELSEIF p_customer_rank = 'D' THEN
		SET @rank = CONCAT(" AND date_from_rank_d < NOW() AND NOW() < date_to_rank_d");
	ELSEIF p_customer_rank = 'E' THEN
		SET @rank = CONCAT(" AND date_from_rank_e < NOW() AND NOW() < date_to_rank_e");
	else 
		SET @rank = '';
	end if;
	
	if @rank != '' then
		set @rank_condition = concat ("OR ( secret_sale_status = 1",@rank,")");
	else
		set @rank_conditon = @rank;
	end if;
	
	if p_customer_code is not null and p_customer_code != '' THEN
		set @condition = concat("WHERE 	(
			( secret_sale_status = 0 AND date_from_all < NOW() AND NOW() < date_to_all )
			",@rank_condition,"
		)
		AND ( 
			( use_customer_allow = 1 AND only_customer_allow LIKE '%,",p_customer_code,",%' )
			OR use_customer_allow = 0
		)
		");
	else
		SET @condition = 'WHERE secret_sale_status = 0 
					AND secret_sale_allow_guest = 1 
					AND secret_sale_kind != 2
					AND use_customer_allow != 1 
					AND date_from_all < NOW() 
					AND NOW() < date_to_all';
	end if;
	
	set @selectStmtStrRun = concat("
	SELECT * 
	FROM tbl_secret_sale
	",@condition);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_searchsortProductByName_fontend` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_searchsortProductByName_fontend` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_searchsortProductByName_fontend`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_sort` VARCHAR(10), IN `p_customer_id` BIGINT(20))
BEGIN
	SET @selectStmt2 = 'Select * from (Select distinct p.product_id as product_id,
		p.goods_code,
		p.product_image,
		p.product_image_details,
		p.product_name,
		p.sale_off_product,
		p.product_detail_short,
		p.product_detail,
		p.product_saleoff_price,
		p.price,
		p.slug_url,
		p.new_product,
		p.create_date,
		pd.color_code,
		pd.color_name,
		pd.size_code,
		pd.size_name,
		pd.product_detail_price,
		pd.product_detail_saleoff_price,
		pd.product_detail_status,
		pd.product_detail_top,
		pd.color_slug_url,
		pd.num_rank 
 from tbl_products as p , tbl_products_details as pd
	 where p.SeqNo=pd.RSeqNo and p.product_status = 1 and pd.product_detail_status = 0';
	
      SET @selectStmt = '';
	IF p_keyword != '' THEN
		IF p_keyword='new' THEN			
			-- SET @selectStmt2 = CONCAT(@selectStmt2,' and p.sale_off_product<>1');  khong phai la sales va con ton thi la new 
			SET @selectStmt2 = CONCAT(@selectStmt2,' and p.new_product=1'); -- 2017/11/21 341-★★★★★
			
		 ELSE 
			IF p_keyword='sale' THEN 			
			SET @selectStmt2 = CONCAT(@selectStmt2,' and p.sale_off_product=1');
			ELSE
				IF p_keyword <>'soldout'  THEN 
					
					SET @selectStmt = CONCAT(" and ( p.product_name like '%", p_keyword,"%'");
					SET @selectStmt = CONCAT(@selectStmt," or p.goods_code like '%", p_keyword,"%'");
					SET @selectStmt = CONCAT(@selectStmt," or pd.color_name like '%", p_keyword,"%')");
				END IF;
			END IF;
		END IF;
	END IF;
	SET @selectStmt = CONCAT(@selectStmt," Group by p.goods_code,pd.color_code");
	IF p_sort='popular' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  pd.num_rank asc ');
	end if;
	IF p_sort='priceAsc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  pd.product_detail_price asc ');
	end if;
	IF p_sort='priceDesc' then 
	SET @selectStmt = CONCAT(@selectStmt,' order by  pd.product_detail_price desc ');
	end if;
	IF p_sort='new' then 
		SET @selectStmt = CONCAT(@selectStmt,' order by  p.create_date desc ');
	end if;
IF p_keyword ='soldout'  THEN 
	SET @selectStmt = CONCAT(@selectStmt," ) as tmp_p
		LEFT JOIN
			(SELECT s.GoodCode,s.ColorCode,IFNULL(SUM(s.StockNum),0) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
			GROUP BY s.GoodCode,s.ColorCode) as soton 
	ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode where  stock_num is NULL or stock_num <=0 ");	
 else
	IF p_keyword ='new' or  p_keyword ='sale' THEN 
		SET @selectStmt = CONCAT(@selectStmt," ) as tmp_p
			INNER JOIN
				(SELECT s.GoodCode,s.ColorCode,IFNULL(SUM(s.StockNum),0) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
				GROUP BY s.GoodCode,s.ColorCode) as soton 
		ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode where  stock_num>0");	
	ELSE
	SET @selectStmt = CONCAT(@selectStmt," ) as tmp_p
		LEFT JOIN
			(SELECT s.GoodCode,s.ColorCode,IFNULL(SUM(s.StockNum),0) as stock_num FROM tbl_stock_num as s where s.ShopCode = '05'
			GROUP BY s.GoodCode,s.ColorCode) as soton 
	ON tmp_p.goods_code = soton.GoodCode and tmp_p.color_code = soton.ColorCode");
	IF p_sort='new' then 
	SET @selectStmt = CONCAT(@selectStmt,' where  stock_num>0 ');
	END IF;
	END IF;
 end if;
	
	SET @selectStmt2 = CONCAT(@selectStmt2,@selectStmt);	
	set @selectStmt3=@selectStmt2;
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	IF p_customer_id <> 0 THEN
		SET @selectStmt2 = CONCAT('Select * from (',@selectStmt2,') as timp
	LEFT JOIN (select tbl_wish_list.product_id as r_product_id,tbl_wish_list.color_code as r_color_code from tbl_wish_list where tbl_wish_list.customer_id = ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_customer_id,') as wl on timp.product_id = wl.r_product_id and timp.color_code = wl.r_color_code');
	
	SET @selectStmt3 = CONCAT('Select * from (',@selectStmt3,') as timp
	LEFT JOIN (select tbl_wish_list.product_id as r_product_id,tbl_wish_list.color_code as r_color_code from tbl_wish_list where tbl_wish_list.customer_id = ');
	SET @selectStmt3 = CONCAT(@selectStmt3,p_customer_id,') as wl on timp.product_id = wl.r_product_id and timp.color_code = wl.r_color_code');
	
	END IF;
      
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmt2);
      PREPARE stmt FROM @selectStmt2;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 	
	
    
SET @selectStmt3=CONCAT("Select count(*) as total_items from (",@selectStmt3,") as pl where 1=1");
      PREPARE stmt FROM @selectStmt3;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_secret_sale_getbyid` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_secret_sale_getbyid` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_secret_sale_getbyid`(IN `p_secret_sale_id` INT(11))
BEGIN
	-- get 0 --
	SELECT * FROM tbl_secret_sale WHERE tbl_secret_sale.secret_sale_id = p_secret_sale_id;
	
	-- get 1 --
	SELECT * FROM tbl_secret_sale_brand WHERE secret_sale_id = p_secret_sale_id ORDER BY secret_sale_brand_id ASC;
	
	-- get 2 --
	SELECT * FROM tbl_secret_sale_item WHERE secret_sale_id = p_secret_sale_id ORDER BY secret_sale_item_id ASC;
	
	-- get 3 --
	SELECT * FROM tbl_secret_sale_product WHERE secret_sale_id = p_secret_sale_id ORDER BY secret_sale_product_id ASC;
	
	-- get 4 --
	SELECT * FROM tbl_secret_sale_brand_product WHERE secret_sale_id = p_secret_sale_id ORDER BY secret_sale_brand_product_id ASC;
	
	-- get 5 --
	SELECT * FROM tbl_secret_sale_item_product WHERE secret_sale_id = p_secret_sale_id ORDER BY secret_sale_item_product_id ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_ad_getbyemailobj_items` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_ad_getbyemailobj_items` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_ad_getbyemailobj_items`(IN `p_list_items` TEXT)
BEGIN
	
	SET p_list_items = REPLACE(p_list_items,",","','");	
	
	
      SET @selectStmt = CONCAT("SELECT tbl_customers.email 
	FROM `tbl_customers`,`tbl_orders`,`tbl_order_detail`,`tbl_products`
	WHERE tbl_customers.`customer_code`=tbl_orders.`customer_code`
	AND tbl_orders.`order_code` = `tbl_order_detail`.`order_code`
	AND tbl_order_detail.`goods_code` = tbl_products.`goods_code`
	AND tbl_products.`product_itemcode` IN ('",p_list_items,"') GROUP BY tbl_customers.email" );
      PREPARE stmt FROM @selectStmt;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt; 
      
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_getlistmail` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_getlistmail` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_getlistmail`(`p_now` VARCHAR(20), `p_companykey` VARCHAR(200))
BEGIN
		
	DECLARE mailoneday_can INT DEFAULT 0;
	DECLARE mailoneday_sended INT DEFAULT 0;
	DECLARE maillimit INT DEFAULT 25;
	DECLARE mailoneday_max INT DEFAULT 10000;
	
	-- 2020-09-11 vi co nhung kh co mail sever manh yeu khac nhau, nen them option vao day
	-- dmc thiet lap cronjob 2' gui 5 email
	if (p_companykey='dmc') then
		set maillimit = 5;		
	end if;
	
	
	-- check table tbl_sendemail_sever
	SELECT numbersended into mailoneday_sended FROM tbl_sendemail_sever where create_date=p_now ;
	
	set mailoneday_can = mailoneday_max - mailoneday_sended;	
	
	if(mailoneday_can>0)then
		select tbl_sendemail_queue.*,tbl_sendemail.email_title , tbl_sendemail.email_contents
		from tbl_sendemail_queue, tbl_sendemail
		where queue_status='0' 
		and tbl_sendemail_queue.send_email_id = tbl_sendemail.email_id
		order by queue_id asc 
		limit maillimit;
	end if;
	
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_putqueue` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_putqueue` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_putqueue`()
BEGIN
		
	DECLARE total_records bigINT(20) DEFAULT 0;
	DECLARE type_object varchar(200) DEFAULT '';
	DECLARE dk varchar(200) DEFAULT '';
	DECLARE send_email_id int(11) DEFAULT 0;
	DECLARE p_send_list_email LONGTEXT DEFAULT ''; -- 2020-12-24 Truoc la kieu Text, chuyen sang Longtext moi chua duoc nhieu email S20122446　株式会社　グルッポタナカ
	DECLARE v_index int default 1;	
	DECLARE v_dcach varchar(10) default ',';	-- cac email cach nhau dau ,
	DECLARE v_email varchar(200);
	SELECT count(*) into total_records FROM tbl_sendemail where email_status=0 and TIMESTAMP(email_senddate,email_sendtime)  <  NOW() ;
	
	WHILE(total_records > 0) DO
SET v_index = 1;
		-- select email_objects into type_object from  tbl_sendemail where email_status=0 and TIMESTAMP(email_senddate,email_sendtime)  <  NOW() order by  email_senddate,email_sendtime limit 1;
		select  
			tbl_sendemail.list_email,email_id  into p_send_list_email, send_email_id
		from  	tbl_sendemail 
		where 	
			email_status=0 
			and TIMESTAMP(email_senddate,email_sendtime)  <  NOW() 
		order by  email_senddate,email_sendtime limit 1;
		
		
		-- insert into tbl_sendemail_queue
		-- if (type_object='ã™ã¹ã¦é¡§å®¢') then
		-- 	insert into tbl_sendemail_queue (email,send_email_id,create_date) select email,send_email_id, now() as create_date from tbl_customers;
		-- else if (type_object='å—ã‘å–ã‚ŠãŸã„é¡§å®¢') then
		-- 	insert into tbl_sendemail_queue (email,send_email_id,create_date) select email,send_email_id, now() from tbl_customers where emailmagazine = 1;
		--     end if;
		-- end if;
		
		WHILE v_index >0 DO
			SET v_index = INSTR(p_send_list_email,v_dcach);
			if(v_index=0) then
				SET v_email = TRIM(REPLACE(p_send_list_email,'\n',''));				
			else 
				SET v_email = TRIM(REPLACE(SUBSTR(p_send_list_email,1,v_index-1),'\n','')  );
				SET p_send_list_email = SUBSTR(p_send_list_email,v_index+1,CHAR_LENGTH(p_send_list_email));					
			end if;
		
			insert into tbl_sendemail_queue (email,send_email_id,create_date) value (v_email,send_email_id,now());
		END WHILE;
		-- update lai bang tbl_sendemail thiet lap trang thai =1 dang xu ly
		update tbl_sendemail set email_status=1 where email_id=send_email_id;
		
          SET total_records = total_records-1;
	END WHILE;
SELECT 1 AS success;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_sendmail_setstatus` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_sendmail_setstatus` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_sendmail_setstatus`(`p_list_sended_id` TEXT, `p_sended` INT, `p_now` VARCHAR(20), `p_list_sendemail_id` TEXT)
BEGIN
	-- 1. bang mail server thong tin so luong mail da duoc gui trong ngay
	if (exists(SELECT * FROM tbl_sendemail_sever where create_date=p_now ))then 
		-- update
		update tbl_sendemail_sever set numbersended = numbersended+p_sended where create_date = p_now;
	else
		-- create 
		insert into tbl_sendemail_sever(numbersended,create_date) values (p_sended,p_now);
	end if;
	
	-- Cuc edit  2018/10/10 S18101011  ã‚«ãƒ³ã‚³ã‚¦(Kankou) 
	-- dong phan nay lai, sua thanh update trang thai mail da duoc gui di thoi
	--  sau nay dieu tra cho de 
	-- 2. xoa nhung mail da duoc gui di 	
	--  SET @selectStmt = CONCAT(' delete from tbl_sendemail_queue where queue_id in (',p_list_sended_id,')');
	-- PREPARE stmt FROM @selectStmt;
	-- EXECUTE stmt;
	 SET @selectStmt = CONCAT(' update tbl_sendemail_queue  set queue_status=1 where queue_id in (',p_list_sended_id,')');
	 PREPARE stmt FROM @selectStmt;
	 EXECUTE stmt;
	
	-- 3. update lai trang thai cho mail o bang tbl_sendemail
	SET @selectStmt = CONCAT(' update tbl_sendemail set email_status = 2 where email_id in (',p_list_sendemail_id,')');
	PREPARE stmt FROM @selectStmt;
	EXECUTE stmt;
	
	
	SELECT 1 AS success;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_setting_save_parcel` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_setting_save_parcel` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_setting_save_parcel`(IN `dparcel_dispay` INT, IN `dparcel_normal_name` VARCHAR(255), IN `dparcel_normal_desc` TEXT, IN `dparcel_service_name` VARCHAR(255), IN `dparcel_service_cost` FLOAT, IN `dparcel_service_desc` TEXT, IN `dparcel_goods_desc` TEXT)
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_settings ;
	if total_records=0 then
		INSERT INTO tbl_settings(
				parcel_display,
				parcel_normal_name,
				parcel_normal_desc,
				parcel_service_name,
				parcel_service_cost,
				parcel_service_desc,
				parcel_goods_desc)
		VALUES(
			dparcel_dispay, 
			dparcel_normal_name,
			dparcel_normal_desc,
			dparcel_service_name,
			dparcel_service_cost,
			dparcel_service_desc,
			dparcel_goods_desc
		);
	else
	UPDATE tbl_settings SET `parcel_display`=dparcel_dispay,
	`parcel_normal_name`=dparcel_normal_name,
	`parcel_normal_desc`=dparcel_normal_desc,
	`parcel_service_name`=dparcel_service_name,
	`parcel_service_cost`=dparcel_service_cost,
	`parcel_service_desc`=dparcel_service_desc,
	`parcel_goods_desc`=dparcel_goods_desc WHERE 1=1;
	end if;
	
SELECT 'ok' AS msg;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getAllByType` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getAllByType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getAllByType`(IN `p_set_year_id` BIGINT, IN `p_set_season_id` BIGINT, IN `p_set_type` TINYINT, IN `p_limit_from` TINYINT, IN `p_limit_to` TINYINT)
BEGIN
	SET @selectStmt = 
		CONCAT(" 
		SELECT 	tbl_set_of_products.*, tbl_set_of_products.set_season_order ");
	SET @selectFromStmt = 
		CONCAT("
		FROM 	tbl_set_of_products ,
			tbl_set_seasons
		WHERE 	
			tbl_set_seasons.set_season_id = tbl_set_of_products.set_season_id
			tbl_set_of_products.set_type 		= ",p_set_type,"
			AND tbl_set_of_products.set_status	= 1 ");
		IF p_set_year_id <> 0 THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
			AND tbl_set_of_products.set_year_id 	= ", p_set_year_id, " ");
		END IF;
		IF p_set_season_id <> 0 THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
			AND tbl_set_of_products.set_season_id	= ", p_set_season_id, " ");
		END IF;
	SET @selectGroupStmt 	= CONCAT(" ");
	SET @orderStmt 		= CONCAT(" ORDER BY tbl_set_of_products.set_season_order DESC, create_date DESC ");
	SET @selectLimitStmt 	= CONCAT(" LIMIT 	", p_limit_from,",", p_limit_to ," ");
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt, @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items ", @selectFromStmt, @selectGroupStmt, @orderStmt, " ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAllLookBook` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAllLookBook` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAllLookBook`()
BEGIN
	SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 1
	
	ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order asc
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAllLookBook2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAllLookBook2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAllLookBook2`(IN `p_skip` INT, IN `p_limit` INT)
BEGIN
	SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 1
	
	ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order asc
		
	LIMIT p_skip,p_limit
	;
	
	SELECT COUNT(*) AS total_items FROM (SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 1
	
	ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order ASC) as data_count;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAllLookBook_GroupBySeasonId` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAllLookBook_GroupBySeasonId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAllLookBook_GroupBySeasonId`()
BEGIN
	SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 1
	GROUP BY
		tbl_set_of_products.set_season_id
	ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAllStyling` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAllStyling` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAllStyling`()
BEGIN
	SELECT 
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 2
	ORDER BY set_year_name DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAllStyling2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAllStyling2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAllStyling2`(IN `p_goods_code` VARCHAR(255))
BEGIN
	SELECT  
		tbl_set_of_products.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type = 2 AND tbl_set_of_products.set_content_for_search LIKE CONCAT("%",p_goods_code,"%")
	ORDER BY set_year_name DESC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByBrandAndSeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByBrandAndSeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByBrandAndSeason`(IN `p_set_year_id` BIGINT, IN `p_set_season_id` BIGINT, IN `p_brand_code` VARCHAR(50), IN `p_set_type` TINYINT, IN `p_limit_from` INT, IN `p_limit_to` INT)
BEGIN
	SET @selectStmt = 
		CONCAT(" 
		SELECT 	tbl_set_of_products.* ");
	SET @selectFromStmt = 
		CONCAT("
		FROM 	tbl_set_of_products 
		
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
			
		WHERE 	tbl_set_of_products.set_type 		= ",p_set_type,"
			AND tbl_set_of_products.set_status	= 1 ");
	IF p_set_year_id IS NOT NULL AND p_set_year_id <> 0 THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.set_year_id 	= ", p_set_year_id, " ");
	END IF;
	IF p_set_season_id IS NOT NULL AND p_set_season_id <> 0 THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.set_season_id	= ", p_set_season_id, " ");
	END IF;
	IF p_brand_code IS NOT NULL AND p_brand_code <> '' THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.brand_code	= '", p_brand_code, "' ");
	END IF;
	SET @selectGroupStmt 	= CONCAT(" ");
	SET @orderStmt 		= CONCAT(" ORDER BY tbl_set_of_products.set_order ASC ");
	SET @selectLimitStmt 	= CONCAT(" LIMIT 	", p_limit_from,",", p_limit_to ," ");
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt, @selectLimitStmt);
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items ", @selectFromStmt, @selectGroupStmt, @orderStmt, " ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- hoa xuan them set3 bo limit	
	SET @selectStmtStr3 = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByAll_paging` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByAll_paging` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByAll_paging`(IN `p_gender` VARCHAR(50), IN `p_age` VARCHAR(50), IN `p_keyword` VARCHAR(1000), IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @selectStmt = CONCAT(" 
	SELECT 	tbl_set_of_products.*,
		(	
			SELECT 	set_season_code 
			FROM 	tbl_set_seasons 
			WHERE 	tbl_set_seasons.set_season_id = tbl_set_of_products.set_season_id LIMIT 1
		) AS season_set_season_code
	FROM 	tbl_set_of_products 
	WHERE 	set_type = 1 
		AND set_status = 1
	");
	
	SET @selectFromStmt = "";
	IF (p_gender IS NOT NULL AND p_gender <> '') THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.gender 	LIKE '%",p_gender, "%' ");
	END IF;
	
	IF (p_age IS NOT NULL AND p_age <> '') THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.age 	LIKE '%",p_age, "%' ");
	END IF;
	
	IF (p_keyword IS NOT NULL AND p_keyword != '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " AND ( 1=2 ");
	END IF;
	
	SET @code = p_keyword;
	WHILE @code != '' DO
		SET @tmp = SUBSTRING_INDEX(@code,',',1);
		SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp) + 1 + CHAR_LENGTH(','));
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
		OR tbl_set_of_products.keyword LIKE '%",@tmp, "%' ");
	END WHILE;
	
	IF (p_keyword IS NOT NULL AND p_keyword != '') THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, " ) ");
	END IF;
	
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
		
	SET @order = CONCAT("
	ORDER BY 
		set_order 		DESC,
		set_id			DESC 
	");
		
	IF p_sort = "set_id" THEN
	SET @order = CONCAT("
	ORDER BY 
		set_id			DESC,
		set_order 		DESC
	");
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmt, @selectFromStmt, @order, @selectLimitStmt);
		
	-- INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStrRun2 = CONCAT(@selectStmt, @selectFromStmt, "
		ORDER BY set_order ASC 
		");
		
	--	INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRun2);
	PREPARE stmt2 FROM @selectStmtStrRun2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectFromStmtForRelated = '';
	SET @code_gender = p_gender;
	IF @code_gender != '' THEN
	SET @selectFromStmtForRelated = 
			CONCAT(@selectFromStmtForRelated, "
		AND tbl_set_of_products.gender = '",@code_gender, "' ");
	END IF;
	
	IF p_age != '' OR p_keyword != '' THEN
		SET @selectFromStmtForRelated = CONCAT(@selectFromStmtForRelated, "
		AND ( 1=2");
		
		SET @code_age = p_age;
		WHILE @code_age != '' DO
			SET @tmp_code_age_2 = SUBSTRING_INDEX(@code_age,',',1);
			SET @code_age = SUBSTRING(@code_age, CHAR_LENGTH(@tmp_code_age_2) + 1 + CHAR_LENGTH(','));
			SET @selectFromStmtForRelated = 
				CONCAT(@selectFromStmtForRelated, "
		OR tbl_set_of_products.age LIKE '%",@tmp_code_age_2, "%' ");
		END WHILE;
		
		SET @code2 = p_keyword;
		WHILE @code2 != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code2,',',1);
			SET @code2 = SUBSTRING(@code2, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @selectFromStmtForRelated = 
				CONCAT(@selectFromStmtForRelated, "
		OR tbl_set_of_products.keyword LIKE '%",@tmp2, "%' ");
		END WHILE;
		
		SET @selectFromStmtForRelated = CONCAT(@selectFromStmtForRelated, " )");
	END IF;
			
	SET @selectStmtStrRunForRelated = CONCAT(@selectStmt, @selectFromStmtForRelated, "
	ORDER BY set_order ASC 
		");
		
	--	 INSERT INTO tbl_sys_log(sys_log) VALUES (@selectStmtStrRunForRelated);
	PREPARE stmt3 FROM @selectStmtStrRunForRelated;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getBySeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getBySeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getBySeason`(IN `p_set_season_id` BIGINT, IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
		-- SELECT * FROM  tbl_set_of_products WHERE set_season_id = p_set_season_id and set_status=1 and set_type = 1
		-- ORDER BY set_order asc;
		
		SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE set_season_id = ",p_set_season_id," AND set_type = 1 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getByYearSeasonAndType` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getByYearSeasonAndType` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getByYearSeasonAndType`(IN `p_set_year_id` BIGINT, IN `p_set_season_id` BIGINT, IN `p_set_type` TINYINT, IN `p_limit_from` INT, IN `p_limit_to` INT)
BEGIN
	SET @selectStmt = 
		CONCAT(" 
		SELECT 	tbl_set_of_products.* ");
	SET @selectFromStmt = 
		CONCAT("
		FROM 	tbl_set_of_products 
		
			LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
			
		WHERE 	tbl_set_of_products.set_type 		= ",p_set_type,"
			AND tbl_set_of_products.set_status	= 1 ");
	IF p_set_year_id is not null and p_set_year_id <> 0 THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.set_year_id 	= ", p_set_year_id, " ");
	END IF;
	IF p_set_season_id is not null and p_set_season_id <> 0 THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
		AND tbl_set_of_products.set_season_id	= ", p_set_season_id, " ");
	end IF;
	SET @selectGroupStmt 	= CONCAT(" ");
	SET @orderStmt 		= CONCAT(" ORDER BY tbl_set_of_products.set_order ASC ");
	SET @selectLimitStmt 	= CONCAT(" LIMIT 	", p_limit_from,",", p_limit_to ," ");
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt, @selectLimitStmt);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items ", @selectFromStmt, @selectGroupStmt, @orderStmt, " ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- hoa xuan them set3 bo limit	
	SET @selectStmtStr3 = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getDetailById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getDetailById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getDetailById`(`p_set_id` BIGINT)
BEGIN
	SELECT * FROM  tbl_set_of_products WHERE set_id 	= p_set_id;
	SELECT 
		SeqNo,
		RSeqNo,
		set_season_id,
		set_season_code,
		CASE 
			WHEN set_season_name_display IS NULL OR set_season_name_display = '' 
			THEN set_season_name
			ELSE  set_season_name_display 
		END AS set_season_name,
		set_season_order,
		set_season_status,
		set_season_is_menu
	FROM  
		tbl_set_seasons
	WHERE 
		set_season_id 	= (SELECT set_season_id FROM  tbl_set_of_products WHERE set_id = p_set_id);
	SELECT * FROM  
		tbl_set_years
	WHERE 
		set_year_id 	= (SELECT set_year_id 	FROM  tbl_set_of_products WHERE set_id = p_set_id);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getNextAndPrevious` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getNextAndPrevious` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getNextAndPrevious`(IN `p_set_year_id` BIGINT, IN `p_set_season_id` BIGINT, IN `p_set_type` TINYINT, IN `p_current_set_id` BIGINT)
BEGIN
	SET @selectStmt = 
		CONCAT(" 
		SELECT 	tbl_set_of_products.* ");
	SET @selectFromStmt = 
		CONCAT("
		FROM 	tbl_set_of_products 
		WHERE 	tbl_set_of_products.set_type 		= ",p_set_type,"
			AND tbl_set_of_products.set_status	= 1 ");
	IF p_set_year_id <> 0 THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
			AND tbl_set_of_products.set_year_id 	= ", p_set_year_id, " ");
	END IF;
	IF p_set_season_id <> 0 THEN
		SET @selectFromStmt = 
			CONCAT(@selectFromStmt, "
			AND tbl_set_of_products.set_season_id	= ", p_set_season_id, " ");
	END IF;
	SET @selectGroupStmt 	= CONCAT(" ");
	SET @orderStmt 		= CONCAT(" 
		ORDER BY create_date DESC ");
	-- GET PREVIOUS
	SET @selectStmtStr = CONCAT(@selectStmt, @selectFromStmt, @selectGroupStmt, @orderStmt);
	SET @selectPreviousStmt = CONCAT("SELECT MAX(set_id) AS set_id FROM (",@selectStmtStr ,") AS tbl_set_of_products_TMP WHERE set_id < ",p_current_set_id);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectPreviousStmt);
	PREPARE stmt FROM @selectPreviousStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- GET NEXT
	SET @selectNextStmt = CONCAT("SELECT MIN(set_id) AS set_id FROM (",@selectStmtStr ,") AS tbl_set_of_products_TMP WHERE set_id > ",p_current_set_id);
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectNextStmt);
	PREPARE stmt FROM @selectNextStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_getStylingBySeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_getStylingBySeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_getStylingBySeason`(IN `p_set_season_id` BIGINT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_set_of_products			
			WHERE set_season_id = ",p_set_season_id," AND set_type = 2 and set_status = 1
			ORDER BY set_order ASC, create_date DESC
			");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStr = CONCAT(@strSelect, @strLimit);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
	
	END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_multisearchByAllLookBook2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_multisearchByAllLookBook2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_multisearchByAllLookBook2`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
	SET @selectStmt = "
		SELECT 
			tbl_set_of_products.*,
			tbl_set_years.set_year_name AS set_year_name,
			CASE 
				WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
				THEN tbl_set_seasons.set_season_name
				ELSE  tbl_set_seasons.set_season_name_display 
			END AS set_season_name
		FROM  
			tbl_set_of_products
				LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
				LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
		WHERE 	tbl_set_of_products.set_type = 1";
	IF p_keyword != '' THEN
		SET @selectStmt = CONCAT(@selectStmt, ' and ');
		SET @selectStmt = CONCAT(@selectStmt, p_keyword);
	END IF;      
	SET @selectStmt = CONCAT(@selectStmt,' ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order asc');   
	SET @selectStmt2 = CONCAT(@selectStmt,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit); 
	-- insert into `tbl_sys_log`(`sys_log`)  values(@selectStmt2);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- select total 	
	SET @selectStmt3 = 'SELECT count(*) AS total_items FROM ( ';
	SET @selectStmt3 = CONCAT(@selectStmt3,@selectStmt); 
	SET @selectStmt3 = CONCAT(@selectStmt3,') AS data_count'); 
	PREPARE stmt FROM @selectStmt3;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_byStyling` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_byStyling` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_byStyling`(`p_content` VARCHAR(200))
BEGIN
	SELECT 
		tbl_set_of_products_other.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products_other
			LEFT JOIN tbl_set_years ON tbl_set_of_products_other.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products_other.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products_other.set_content LIKE CONCAT ('%',p_content,'%')
	ORDER BY 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products_other.set_order ASC
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_getAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_getAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_getAll`()
BEGIN
	SELECT 
		tbl_set_of_products_other.*,
		tbl_set_years.set_year_name AS set_year_name,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name
	FROM  
		tbl_set_of_products_other
			LEFT JOIN tbl_set_years ON tbl_set_of_products_other.set_year_id = tbl_set_years.set_year_id
			LEFT JOIN tbl_set_seasons ON tbl_set_of_products_other.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products_other.set_type = 1
	
	ORDER BY 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products_other.set_order asc
	;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_getById` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_getById` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_getById`(`p_set_id` BIGINT)
BEGIN
	SELECT * FROM  tbl_set_of_products_other WHERE set_id 	= p_set_id;
	SELECT 
		SeqNo,
		RSeqNo,
		set_season_id,
		set_season_code,
		CASE 
			WHEN set_season_name_display IS NULL OR set_season_name_display = '' 
			THEN set_season_name
			ELSE  set_season_name_display 
		END AS set_season_name,
		set_season_order,
		set_season_status,
		set_season_is_menu
	FROM  
		tbl_set_seasons
	WHERE 
		set_season_id 	= (SELECT set_season_id FROM  tbl_set_of_products_other WHERE set_id = p_set_id);
	SELECT * FROM  
		tbl_set_years
	WHERE 
		set_year_id 	= (SELECT set_year_id 	FROM  tbl_set_of_products_other WHERE set_id = p_set_id);
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_other_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_other_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_other_save`(`p_set_id` BIGINT, `p_set_code` VARCHAR(255), `p_set_name` VARCHAR(255), `p_set_content` VARCHAR(255), `p_set_content_for_search` VARCHAR(255), `p_set_status` TINYINT, `p_set_year_id` BIGINT, `p_set_season_id` BIGINT, `p_set_url` VARCHAR(255), `p_set_type` TINYINT, `p_set_description` TEXT, `p_set_content_for_front` TEXT, `p_set_order` INT, `p_gender` TEXT, `p_age` TEXT, `p_keyword` TEXT, `p_barcode_related` TEXT)
BEGIN
	IF (p_set_id = 0) THEN
		INSERT INTO tbl_set_of_products_other (
				set_code,
				set_name,
				set_content,
				set_content_for_search,
				set_status,
				set_year_id,
				set_season_id,
				set_url,
				set_type,
				create_date,
				set_description,
				set_content_for_front,
				set_order,
				gender,
				age,
				keyword,
				barcode_related
		) VALUES (
			p_set_code,
			p_set_name,
			p_set_content,
			p_set_content_for_search,
			p_set_status,
			p_set_year_id,
			p_set_season_id,
			p_set_url,
			p_set_type,
			NOW(),
			p_set_description,
			p_set_content_for_front,
			p_set_order,
			p_gender,
			p_age,
			p_keyword,
			p_barcode_related
		);
		SELECT MAX(set_id) AS set_id FROM tbl_set_of_products_other;
	ELSE
		UPDATE 	tbl_set_of_products_other 
		SET 
			set_code	= p_set_code,
			set_name	= p_set_name,
			set_content 	= p_set_content,
			set_content_for_search = p_set_content_for_search,
			set_status	= p_set_status,
			set_year_id	= p_set_year_id,
			set_season_id	= p_set_season_id,
			set_url		= p_set_url,
			set_type	= p_set_type,
			set_description = p_set_description,
			set_content_for_front = p_set_content_for_front,
			set_order	= p_set_order,
			gender		= p_gender,
			age		= p_age,
			keyword		= p_keyword,
			barcode_related = p_barcode_related
		WHERE 	
			set_id		= p_set_id;
		SELECT 	p_set_id AS set_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_save`(`p_set_id` BIGINT, `p_set_code` VARCHAR(255), `p_set_name` VARCHAR(255), `p_set_content` TEXT, `p_set_content_for_search` TEXT, `p_set_status` TINYINT, `p_set_year_id` BIGINT, `p_set_season_id` BIGINT, `p_set_url` VARCHAR(255), `p_set_type` TINYINT, `p_set_description` TEXT, `p_set_content_for_front` TEXT, `p_set_order` INT, `p_gender` TEXT, `p_age` TEXT, `p_keyword` TEXT, `p_barcode_related` TEXT, `p_set_short_description` TEXT, `p_brand_list` TEXT, `p_item_list` TEXT, `p_show_in_top` TINYINT, `p_show_in_brand_page` TINYINT, `p_brand_code` VARCHAR(50), `p_staff_code` VARCHAR(13))
BEGIN
	IF (p_set_id = 0) THEN
		INSERT INTO tbl_set_of_products (
				set_code,
				set_name,
				set_content,
				set_content_for_search,
				set_status,
				set_year_id,
				set_season_id,
				set_url,
				set_type,
				create_date,
				set_description,
				set_content_for_front,
				set_order,
				gender,
				age,
				keyword,
				barcode_related,
				set_short_description,
				brand_related,
				item_related,
				show_in_top,
				show_in_brand_page,
				brand_code,
				set_staff_code
		) VALUES (
			p_set_code,
			p_set_name,
			p_set_content,
			p_set_content_for_search,
			p_set_status,
			p_set_year_id,
			p_set_season_id,
			p_set_url,
			p_set_type,
			NOW(),
			p_set_description,
			p_set_content_for_front,
			p_set_order,
			p_gender,
			p_age,
			p_keyword,
			p_barcode_related,
			p_set_short_description,
			p_brand_list,
			p_item_list,
			p_show_in_top,
			p_show_in_brand_page,
			p_brand_code,
			p_staff_code
		);
		SELECT MAX(set_id) AS set_id FROM tbl_set_of_products;
	ELSE
		UPDATE 	tbl_set_of_products 
		SET 
			set_code	= p_set_code,
			set_name	= p_set_name,
			set_content 	= p_set_content,
			set_content_for_search = p_set_content_for_search,
			set_status	= p_set_status,
			set_year_id	= p_set_year_id,
			set_season_id	= p_set_season_id,
			set_url		= p_set_url,
			set_type	= p_set_type,
			set_description = p_set_description,
			set_content_for_front = p_set_content_for_front,
			set_order	= p_set_order,
			gender		= p_gender,
			age		= p_age,
			keyword		= p_keyword,
			barcode_related = p_barcode_related,
			set_short_description = p_set_short_description,
			brand_related 	= p_brand_list,
			item_related	= p_item_list,
			show_in_top	= p_show_in_top,
			show_in_brand_page = p_show_in_brand_page,
			brand_code	= p_brand_code,
			set_staff_code        = p_staff_code
		WHERE 	
			set_id		= p_set_id;
		SELECT 	p_set_id AS set_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_of_products_searchByAllLookBook2` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_of_products_searchByAllLookBook2` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_of_products_searchByAllLookBook2`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT)
BEGIN
	SET @selectStmt = "
		SELECT 
			tbl_set_of_products.*,
			tbl_set_years.set_year_name AS set_year_name,
			CASE 
				WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
				THEN tbl_set_seasons.set_season_name
				ELSE  tbl_set_seasons.set_season_name_display 
			END AS set_season_name
		FROM  
			tbl_set_of_products
				LEFT JOIN tbl_set_years ON tbl_set_of_products.set_year_id = tbl_set_years.set_year_id
				LEFT JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
		WHERE 	tbl_set_of_products.set_type = 1";
	IF p_keyword != '' THEN
		SET @selectStmt = CONCAT(@selectStmt," and (tbl_set_of_products.set_name like '%", p_keyword,"%'");
		SET @selectStmt = CONCAT(@selectStmt," or tbl_set_of_products.set_code like '%", p_keyword,"%') ");
	END IF;
      
	SET @selectStmt = CONCAT(@selectStmt,' ORDER BY 
		tbl_set_of_products.set_id DESC, 
		tbl_set_seasons.set_season_order ASC, 
		set_season_name ASC,
		tbl_set_of_products.set_order asc');   
	SET @selectStmt2 = CONCAT(@selectStmt,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit); 
	-- insert into `tbl_sys_log`(`sys_log`)  values(@selectStmt2);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	-- select total 	
	SET @selectStmt3 = 'SELECT count(*) AS total_items FROM ( ';
	SET @selectStmt3 = CONCAT(@selectStmt3,@selectStmt); 
	SET @selectStmt3 = CONCAT(@selectStmt3,') AS data_count'); 
	PREPARE stmt FROM @selectStmt3;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getSeasonByCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getSeasonByCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getSeasonByCode`(IN `p_set_season_code` VARCHAR(255))
BEGIN
	SELECT 	
		tbl_set_seasons.SeqNo,
		tbl_set_seasons.RSeqNo,
		tbl_set_seasons.set_season_id,
		tbl_set_seasons.set_season_code,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name,
		tbl_set_seasons.set_season_order,
		tbl_set_seasons.set_season_status,
		tbl_set_seasons.set_season_is_menu
	FROM 	
		tbl_set_seasons 
	WHERE 	
		tbl_set_seasons.set_season_code		= p_set_season_code
		AND tbl_set_seasons.set_season_status 	= 1
		AND tbl_set_seasons.set_season_is_menu 	= 1
	GROUP BY set_season_id, set_season_code, set_season_name
	ORDER BY set_season_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getSeasonByProductSet` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getSeasonByProductSet` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getSeasonByProductSet`(IN `p_set_type` TINYINT, IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SELECT 
		SeqNo,
		RSeqNo,
		set_season_id,
		set_season_code,
		CASE 
			WHEN set_season_name_display IS NULL OR set_season_name_display = '' 
			THEN set_season_name
			ELSE set_season_name_display 
		END AS set_season_name,
		set_season_order,
		set_season_status,
		set_season_is_menu
	FROM 
		tbl_set_seasons 
	WHERE 
		set_season_id 
		IN (
			SELECT 	set_season_id 
			FROM 	tbl_set_of_products 
			WHERE 	set_type 	= p_set_type
				AND set_status 	= 1
		)
		AND tbl_set_seasons.set_season_status 	= 1
		AND tbl_set_seasons.set_season_is_menu 	= 1
	GROUP BY set_season_id, set_season_code, set_season_name	
	ORDER BY set_season_order ASC
	LIMIT indexFrom,indexLimit;
	
	select count(*) AS total_items from (
		SELECT 
			set_season_id,
			set_season_code,
			CASE 
				WHEN set_season_name_display IS NULL OR set_season_name_display = '' 
				THEN set_season_name
				ELSE set_season_name_display 
			END AS set_season_name,
			set_season_order,
			set_season_status,
			set_season_is_menu
		FROM 
			tbl_set_seasons 
		WHERE 
			set_season_id 
			IN (
				SELECT 	set_season_id 
				FROM 	tbl_set_of_products 
				WHERE 	set_type 	= p_set_type
					AND set_status 	= 1
			)
			AND tbl_set_seasons.set_season_status 	= 1
			AND tbl_set_seasons.set_season_is_menu 	= 1
		GROUP BY set_season_id, set_season_code, set_season_name	
	) as tbl_tmp;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_getSeasonForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_getSeasonForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_getSeasonForMenu`(IN `p_set_year_id` BIGINT, IN `p_set_type` TINYINT)
BEGIN
	SELECT 	
		tbl_set_seasons.SeqNo,
		tbl_set_seasons.RSeqNo,
		tbl_set_seasons.set_season_id,
		tbl_set_seasons.set_season_code,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name,
		tbl_set_seasons.set_season_order,
		tbl_set_seasons.set_season_status,
		tbl_set_seasons.set_season_is_menu
	FROM 	tbl_set_of_products 
			JOIN tbl_set_seasons ON tbl_set_of_products.set_season_id = tbl_set_seasons.set_season_id
	WHERE 	tbl_set_of_products.set_type 		= p_set_type
		AND tbl_set_seasons.set_season_status 	= 1
		AND tbl_set_seasons.set_season_is_menu 	= 1
		AND tbl_set_of_products.set_year_id	= p_set_year_id
	GROUP BY set_season_id, set_season_code, set_season_name
	ORDER BY set_season_order ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_seasons_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_seasons_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_seasons_save`(`p_SeqNo` VARCHAR(255), `p_RSeqNo` VARCHAR(255), `p_set_season_id` BIGINT, `p_set_season_code` VARCHAR(255), `p_set_season_name` VARCHAR(255), `p_set_season_name_display` VARCHAR(255), `p_set_season_order` BIGINT, `p_set_season_status` TINYINT, `p_set_season_is_menu` TINYINT, `p_set_season_url` VARCHAR(255))
BEGIN
	IF (p_set_season_id = 0) THEN
		INSERT INTO tbl_set_seasons (
				SeqNo,
				RSeqNo,
				set_season_code,
				set_season_name,
				set_season_name_display,
				set_season_order,
				set_season_status,
				set_season_is_menu,
				set_season_url
		) VALUES (
			p_SeqNo,
			p_RSeqNo,
			p_set_season_code,
			p_set_season_name,
			p_set_season_name_display,
			p_set_season_order,
			p_set_season_status,
			p_set_season_is_menu,
			p_set_season_url
		);
		SELECT MAX(set_season_id) AS set_season_id FROM tbl_set_seasons;
	ELSE
		UPDATE 	tbl_set_seasons 
		SET 
			set_season_code		= p_set_season_code,
			set_season_name 	= p_set_season_name,
			set_season_name_display = p_set_season_name_display,
			set_season_order	= p_set_season_order,
			set_season_status	= p_set_season_status,
			set_season_is_menu	= p_set_season_is_menu,
			set_season_url = p_set_season_url
		WHERE 	
			set_season_id		= p_set_season_id;
		SELECT 	p_set_season_id AS set_season_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_set_years_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_set_years_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_set_years_save`(`p_set_year_SeqNo` VARCHAR(20), `p_set_year_RSeqNo` VARCHAR(20), `p_set_year_id` BIGINT, `p_set_year_code` VARCHAR(255), `p_set_year_name` VARCHAR(255), `p_set_year_order` TINYINT, `p_set_year_status` TINYINT, `p_set_year_is_menu` TINYINT)
BEGIN
	IF (p_set_year_id = 0) THEN
		INSERT INTO tbl_set_years (
			set_year_SeqNo,
			set_year_RSeqNo,
			set_year_code,
			set_year_name,
			set_year_order,
			set_year_status,
			set_year_is_menu
		) VALUES (
			p_set_year_SeqNo,
			p_set_year_RSeqNo,
			p_set_year_code,
			p_set_year_name,
			p_set_year_order,
			p_set_year_status,
			p_set_year_is_menu
		);
		SELECT MAX(set_year_id) AS set_year_id FROM tbl_set_years;
	ELSE
		UPDATE 	tbl_set_years 
		SET 
			set_year_code	= p_set_year_code,
			set_year_name	= p_set_year_name,
			set_year_order	= p_set_year_order,
			set_year_status	= p_set_year_status,
			set_year_is_menu= p_set_year_is_menu
		WHERE 	set_year_id	= p_set_year_id;
		SELECT p_set_year_id AS set_year_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_shop_contact_info_getlimitone` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_shop_contact_info_getlimitone` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_shop_contact_info_getlimitone`()
BEGIN
    -- Author DANNGUYEN
    -- DANNGUYEN Edit 2018/07/27- D18071904 No00034
    -- DANNGUYEN edit  2018-09-10 D18090401  ãƒžãƒ‹ãƒ•ã‚§ã‚¹ãƒˆ 
    -- DANNGUYEN edit  D18081607ã€€ãƒžãƒªãƒ³ã‚°å•†äº‹ã€€æ ªå¼ä¼šç¤¾ No0001
    declare otrackingURL varchar(500) DEFAULT '';
    DECLARE ologo_name VARCHAR(500) DEFAULT '';
    DECLARE osite_name varchar(500) DEFAULT '';
    SELECT trackingURL,shop_info_logo,shop_info_shop_name into otrackingURL,ologo_name,osite_name from tbl_settings where 1=1 limit 1;
    SELECT *,otrackingURL as trackingURL,ologo_name as logo_name, osite_name as site_name FROM `tbl_shop_contact_info` WHERE 1=1 LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_size_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_size_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_size_save`(IN `p_mode` VARCHAR(20), IN `p_size_code` VARCHAR(20), IN `p_size_name` TEXT, IN `p_size_display` TEXT, IN `p_size_description` TEXT, IN `p_display_order` DOUBLE, IN `p_foot_size` VARCHAR(20))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_size(size_code, size_name, size_display, size_description, display_order, foot_size)
		VALUES(p_size_code, p_size_name, p_size_display, p_size_description, p_display_order, p_foot_size);
	ELSE
		UPDATE tbl_size
		SET
			size_name = p_size_name,
			size_display = p_size_display,
			size_description = p_size_description,
			display_order = p_display_order,
			foot_size = p_foot_size
		WHERE
			size_code = p_size_code;
	END IF;
	IF (p_size_display IS NOT NULL OR p_size_display <> '') THEN
		UPDATE 
			tbl_products_details 
		SET 
			size_display = p_size_display 
		WHERE 
			size_code = p_size_code;
	ELSE 
		UPDATE 
			tbl_products_details 
		SET 	
			size_display = size_name 
		WHERE 
			size_code = p_size_code;
	END IF;
	
	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_staticpageCheckUpadteFromTblDraft` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_staticpageCheckUpadteFromTblDraft` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_staticpageCheckUpadteFromTblDraft`(IN `p_static_page_draft_id` BIGINT(11))
BEGIN
	UPDATE 	tbl_static_pages
	SET		
		static_page_title	= (SELECT static_page_title	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id),
		static_page_content	= (SELECT static_page_content	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id),
		static_page_status	= (SELECT static_page_status	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id),
		update_date		= CURRENT_TIMESTAMP()
	WHERE
		tbl_static_pages.static_page_id = (SELECT static_page_id	FROM tbl_static_pages_draft WHERE static_page_draft_id = p_static_page_draft_id);
		
	UPDATE 	tbl_static_pages_draft 
	SET 	is_updated = 1
	WHERE 	static_page_draft_id = p_static_page_draft_id;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stock_num_updatestock` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stock_num_updatestock` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stock_num_updatestock`(`dgoods_code` VARCHAR(20), `dcolor_code` VARCHAR(10), `dsize_code` VARCHAR(10), `dquantity` BIGINT)
BEGIN
DECLARE dshop_stock TEXT DEFAULT '';
DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
SELECT IFNULL(shop_default,''),is_shop_stock INTO dshop_stock,vb_is_shop_stock FROM `tbl_settings` WHERE 1=1 LIMIT 1;
IF vb_is_shop_stock = 0 THEN
	IF dshop_stock <> '' THEN
		UPDATE tbl_stock_num SET StockNum=StockNum-dquantity 
	WHERE ShopCode=dshop_stock AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
	AND SizeCode=dsize_code;
	END IF;
ELSEIF vb_is_shop_stock = 1 THEN
	IF dshop_stock <> '' THEN
		UPDATE tbl_stock_num SET KanoNum=KanoNum-dquantity 
	WHERE ShopCode=dshop_stock AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
	AND SizeCode=dsize_code;
	END IF;
ELSEIF vb_is_shop_stock = 2 THEN
	IF dshop_stock <> '' THEN
		UPDATE tbl_stock_num SET KanoNum3=KanoNum3-dquantity 
	WHERE ShopCode=dshop_stock AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
	AND SizeCode=dsize_code;
	END IF;
end if;	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stock_num_updatestocks` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stock_num_updatestocks` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stock_num_updatestocks`(IN `listgoodcolorsize` TEXT)
BEGIN
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_goodcode VARCHAR(50); 
DECLARE d_colorcode VARCHAR(50);
DECLARE d_sizecode VARCHAR(50);
DECLARE d_quan INT;
DECLARE dshop_stock TEXT DEFAULT '';
DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
WHILE INSTR(listgoodcolorsize,d_A)>0 DO
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_goodcode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_colorcode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_sizecode = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		SET d_index = INSTR(listgoodcolorsize,d_A);
		SET d_quan = SUBSTR(listgoodcolorsize,1,d_index-1);
		SET listgoodcolorsize = SUBSTR(listgoodcolorsize,d_index+1,CHAR_LENGTH(listgoodcolorsize)-d_index+1);
		
		SELECT IFNULL(shop_default,''),is_shop_stock INTO dshop_stock,vb_is_shop_stock FROM `tbl_settings` WHERE 1=1 LIMIT 1;
		IF vb_is_shop_stock =0 THEN
			IF dshop_stock <> '' THEN
				UPDATE tbl_stock_num SET StockNum=StockNum-d_quan 
				WHERE ShopCode=dshop_stock AND GoodCode=d_goodcode AND ColorCode=d_colorcode 
				AND SizeCode=d_sizecode;
			END IF;
		ELSEIF vb_is_shop_stock = 1 THEN
			IF dshop_stock <> '' THEN
				UPDATE tbl_stock_num SET KanoNum=KanoNum-d_quan 
				WHERE ShopCode=dshop_stock AND GoodCode=d_goodcode AND ColorCode=d_colorcode 
				AND SizeCode=d_sizecode;
			END IF;
		ELSEIF vb_is_shop_stock = 2 THEN
			IF dshop_stock <> '' THEN
				UPDATE tbl_stock_num SET KanoNum3=KanoNum3-d_quan 
				WHERE ShopCode=dshop_stock AND GoodCode=d_goodcode AND ColorCode=d_colorcode 
				AND SizeCode=d_sizecode;
			END IF;
		END IF;	
END WHILE;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stock_multi_search` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stock_multi_search` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stock_multi_search`(IN `p_skip` INT, IN `p_limit` INT, IN `p_keyword` TEXT, IN `p_check` INT)
BEGIN
	DECLARE vt_kano TEXT DEFAULT '';
	DECLARE vb_is_shop_stock TINYINT(1) DEFAULT 0;
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	SELECT 
		is_shop_stock 
		INTO vb_is_shop_stock 
	FROM 
		`tbl_settings` 
	WHERE 1=1 
	LIMIT 1;
	IF vb_is_shop_stock = 2 THEN
		SET vt_kano = 'IFNULL(KanoNum3,0) AS KanoNum';
	ELSE
		SET vt_kano = 'IFNULL(KanoNum,0) AS KanoNum';
	END IF;
	IF p_check = 0 THEN
		SET @selectStmt2 = CONCAT('SELECT SQL_CALC_FOUND_ROWS
					g.goods_code,
					gdt.color_code,
					gdt.size_code,
					gdt.color_name,
					gdt.size_name,
					g.product_name,
					IFNULL(StockNum,0) AS StockNum,
					',vt_kano,'
				    FROM 
					tbl_products g
						LEFT JOIN tbl_products_details gdt
							ON g.SeqNo = gdt.RSeqNo 
						LEFT JOIN tbl_stock_num sn
							ON sn.GoodCode = g.goods_code AND sn.ColorCode = gdt.color_code AND sn.SizeCode = gdt.size_code 
				    WHERE ');
		SET @selectStmt = '';
	ELSE
		SET @selectStmt2 = CONCAT('SELECT SQL_CALC_FOUND_ROWS
					g.goods_code,
					gdt.color_code,
					gdt.size_code,
					gdt.color_name,
					gdt.size_name,
					g.product_name,
					IFNULL(StockNum,0) AS StockNum,
					',vt_kano,'
				    FROM 
					tbl_products g
						LEFT JOIN tbl_products_details gdt
							ON g.SeqNo = gdt.RSeqNo 
						LEFT JOIN tbl_stock_num sn
							ON sn.GoodCode = g.goods_code AND sn.ColorCode = gdt.color_code AND sn.SizeCode = gdt.size_code 
				WHERE 
					1=1
					AND 
					
					');
		SET @selectStmt = ' GROUP BY g.goods_code,gdt.color_code,gdt.size_code ';
		SET @selectStmt4 = CONCAT('SELECT SQL_CALC_FOUND_ROWS
					g.goods_code,
					gdt.color_code,
					gdt.size_code,
					gdt.color_name,
					gdt.size_name,
					g.product_name,
					IFNULL(StockNum,0) AS StockNum,
					',vt_kano,'
				    FROM 
					tbl_products g
						LEFT JOIN tbl_products_details gdt
							ON g.SeqNo = gdt.RSeqNo 
						LEFT JOIN tbl_stock_num sn
							ON sn.GoodCode != g.goods_code AND sn.ColorCode != gdt.color_code AND sn.SizeCode != gdt.size_code 
				WHERE 
					1=1
					AND 
					
					');
		
	END IF;
	
	IF p_keyword <> '' THEN
		IF p_check=0 THEN
			SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword);
		ELSE
			IF p_keyword NOT LIKE '%0%' THEN
				IF p_keyword LIKE '%<%' THEN 
					SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
				ELSE 
					SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword,@selectStmt);
				END IF;
			ELSEIF p_keyword LIKE '%0%' THEN 
				IF p_keyword LIKE '%<%' or p_keyword LIKE '%>%' THEN 
					SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword,@selectStmt);
				ELSE
					SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
				END IF;
			ELSEIF p_keyword LIKE '%0%' AND p_keyword LIKE '%[0-9]%' THEN 
				IF p_keyword LIKE '%<%' THEN 
					SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
				ELSE
					SET @selectStmt2 = CONCAT(@selectStmt2,p_keyword,@selectStmt);
				END IF;
			ELSEIF p_keyword LIKE '%0%' AND p_keyword NOT LIKE '%[0-9]%' THEN 
				IF p_keyword LIKE '%<%' THEN 
					SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
				ELSE
					SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
				END IF;
			ELSE
				SET @selectStmt2 = CONCAT(@selectStmt4,p_keyword,@selectStmt);
			END IF;
		END IF;
	END IF;
	
	
	
	SET @selectStmt2 = CONCAT(@selectStmt2,' LIMIT ');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_skip,',');
	SET @selectStmt2 = CONCAT(@selectStmt2,p_limit);
	SET @selectStmt3 = CONCAT("SELECT FOUND_ROWS() as total_items");
	
	-- INSERT INTO tbl_sys_log(sys_log) VALUES(@selectStmt2);
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	PREPARE stmt2 FROM @selectStmt3;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SELECT vb_is_shop_stock AS is_shop_stock;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_stock_num_updatestock_multisite` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_stock_num_updatestock_multisite` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_stock_num_updatestock_multisite`(`dshop_code` VARCHAR(20), `dgoods_code` VARCHAR(20), `dcolor_code` VARCHAR(10), `dsize_code` VARCHAR(10), `dquantity` BIGINT)
BEGIN
DECLARE vb_is_actual_num TINYINT(1) DEFAULT 0;
	SELECT is_shop_stock INTO vb_is_actual_num FROM `tbl_settings` WHERE 1=1 LIMIT 1;
	-- Modified: 2020/04/22. 478612475 | ハスコハスコエンタープライズ (HascoEnterprise) ハスコエンタープライズのカスタマイズ仕様書（近棟さん）
	IF vb_is_actual_num =0 THEN
		IF dshop_code <> '' THEN
			UPDATE tbl_stock_num SET StockNum=StockNum-dquantity 
		WHERE ShopCode=dshop_code AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
		AND SizeCode=dsize_code;
		END IF;
	ELSEIF vb_is_shop_stock = 1 THEN
		IF dshop_code <> '' THEN
			UPDATE tbl_stock_num SET KanoNum=KanoNum-dquantity 
		WHERE ShopCode=dshop_code AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
		AND SizeCode=dsize_code;
		END IF;
	ELSEIF vb_is_shop_stock = 2 THEN
		IF dshop_code <> '' THEN
			UPDATE tbl_stock_num SET KanoNum3=KanoNum3-dquantity 
		WHERE ShopCode=dshop_code AND GoodCode=dgoods_code AND ColorCode=dcolor_code 
		AND SizeCode=dsize_code;
		END IF;
	END IF;	
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_save`(`p_styl_id` BIGINT, `p_styl_code` VARCHAR(255), `p_styl_name` VARCHAR(255), `p_styl_content` TEXT, `p_styl_content_for_search` TEXT, `p_styl_status` TINYINT(2), `p_styl_year_id` BIGINT(11), `p_styl_season_id` BIGINT, `p_styl_url` VARCHAR(255))
BEGIN
	IF (p_styl_id = 0) THEN
		INSERT INTO tbl_styling (
			styl_code,
			styl_name,
			styl_content,
			styl_content_for_search,
			styl_status,
			styl_year_id,
			styl_season_id,
			styl_url
		) VALUES (
			p_styl_code,
			p_styl_name,
			p_styl_content,
			p_styl_content_for_search,
			p_styl_status,
			p_styl_year_id,
			p_styl_season_id,
			p_styl_url
		);
		SELECT MAX(styl_id) AS styl_id FROM tbl_styling;
	ELSE
		UPDATE 	tbl_styling
		SET 
			styl_code 	= p_styl_code,
			styl_name 	= p_styl_name,
			styl_content 	= p_styl_content,
			styl_content_for_search = p_styl_content_for_search,
			styl_status 	= p_styl_status,
			styl_year_id 	= p_styl_year_id,
			styl_season_id 	= p_styl_season_id,
			styl_url 	= p_styl_url
		WHERE 	styl_id		= p_styl_id
			AND styl_year_id 	= p_styl_year_id
			AND styl_season_id 	= p_styl_season_id;
		SELECT p_styl_id AS styl_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_season_delete_IdNotIn` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_season_delete_IdNotIn` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_season_delete_IdNotIn`(`p_id_list` VARCHAR(255), `styl_year_id` BIGINT)
BEGIN
	SET @selectStmtStr = CONCAT("
			DELETE FROM tbl_styling_season 
			WHERE 	styl_season_id NOT IN (", p_id_list ,") 
				AND styl_year_id = ", styl_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt FROM @selectStmtStr;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
			DELETE FROM tbl_styling 
			WHERE 	styl_season_id NOT IN (", p_id_list ,") 
				AND styl_year_id = ", styl_year_id, " ");
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_season_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_season_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_season_save`(`p_styl_season_id` BIGINT, `p_styl_year_id` BIGINT, `p_styl_season_code` VARCHAR(255), `p_styl_season_name` VARCHAR(255), `p_styl_season_status` TINYINT, `p_styl_season_order` TINYINT, `p_styl_season_is_show_as_menu` TINYINT)
BEGIN
	IF (p_styl_season_id = 0) THEN
		INSERT INTO tbl_styling_season (
			styl_year_id,
			styl_season_code,
			styl_season_name,
			styl_season_status,
			styl_season_order,
			styl_season_is_show_as_menu
		) VALUES (
			p_styl_year_id,
			p_styl_season_code,
			p_styl_season_name,
			p_styl_season_status,
			p_styl_season_order,
			p_styl_season_is_show_as_menu
		);
		SELECT MAX(styl_season_id) AS styl_season_id FROM tbl_styling_season;
	ELSE
		UPDATE 	tbl_styling_season 
		SET 
			styl_year_id	= p_styl_year_id,
			styl_season_code	= p_styl_season_code,
			styl_season_name	= p_styl_season_name,
			styl_season_status= p_styl_season_status,
			styl_season_order= p_styl_season_order,
			styl_season_is_show_as_menu = p_styl_season_is_show_as_menu
		WHERE 	styl_season_id	= p_styl_season_id
			AND styl_year_id	= p_styl_year_id;
		SELECT p_styl_season_id AS styl_season_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_styling_year_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_styling_year_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_styling_year_save`(`p_styl_year_id` BIGINT, `p_styl_year_code` VARCHAR(255), `p_styl_year_name` VARCHAR(255), `p_styl_year_status` TINYINT, `p_styl_year_order` TINYINT, `p_styl_year_is_show_as_menu` TINYINT)
BEGIN
	IF (p_styl_year_id = 0) THEN
		INSERT INTO tbl_styling_year (
			styl_year_code,
			styl_year_name,
			styl_year_status,
			styl_year_order,
			styl_year_is_show_as_menu
		) VALUES (
			p_styl_year_code,
			p_styl_year_name,
			p_styl_year_status,
			p_styl_year_order,
			p_styl_year_is_show_as_menu
		);
		SELECT MAX(styl_year_id) AS styl_year_id FROM tbl_styling_year;
	ELSE
		UPDATE 	tbl_styling_year 
		SET 
			styl_year_code	= p_styl_year_code,
			styl_year_name	= p_styl_year_name,
			styl_year_status	= p_styl_year_status,
			styl_year_order	= p_styl_year_order,
			styl_year_is_show_as_menu = p_styl_year_is_show_as_menu
		WHERE 	styl_year_id	= p_styl_year_id;
		SELECT p_styl_year_id AS styl_year_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_brands_getBrandMenuByInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_brands_getBrandMenuByInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_brands_getBrandMenuByInstagram`()
BEGIN
	SELECT 
		tbl_pro.brand_code,
		(
			SELECT 
				(CASE WHEN tbl_brands.brand_name_display IS NULL OR tbl_brands.brand_name_display = '' THEN
					tbl_brands.brand_name
				ELSE 
					tbl_brands.brand_name_display
				END) AS brand_name_display
			FROM tbl_brands WHERE tbl_brands.brand_code = tbl_pro.brand_code
		) AS brand_name_display	
	FROM 
		tbl_instagram_data AS insta
		LEFT JOIN tbl_products AS tbl_pro
			ON insta.goods_code = tbl_pro.goods_code
		
	WHERE 
		insta.is_onsite = 1
	GROUP BY brand_code, brand_name_display
	ORDER BY brand_name_display ASC;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_brands_group_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_brands_group_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_brands_group_save`(`p_mode` VARCHAR(20), `p_brand_group_id` INT(11), `p_brand_group_code` VARCHAR(200), `p_brand_group_name` VARCHAR(255), `p_brand_group_status` TINYINT(2), `p_brand_group_show_order` TINYINT(2), `p_brand_group_parent_name` VARCHAR(255), `p_description` TEXT, `p_display_banner` INT(1), `p_select_size` INT(1))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_brands_group(
			group_code,
			group_name,
			group_status,
			show_order,
			brand_group_parent_name,
			description,
			display_banner_slide,
			select_size
		) VALUES (
			p_brand_group_code,
			p_brand_group_name,
			p_brand_group_status,
			p_brand_group_show_order,
			p_brand_group_parent_name,
			p_description,
			p_display_banner,
			p_select_size
		);
	ELSE
		UPDATE tbl_brands_group
		SET
			group_code 		= p_brand_group_code,
			group_name 		= p_brand_group_name,
			group_status 		= p_brand_group_status,
			show_order 		= p_brand_group_show_order,
			brand_group_parent_name = p_brand_group_parent_name,
			description		= p_description,
			display_banner_slide	= p_display_banner,
			select_size		= p_select_size
		WHERE
			tbl_brands_group.id 	= p_brand_group_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_data_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_data_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_data_save`(IN `p_instagram_id` VARCHAR(50), IN `p_instagram_user_id` VARCHAR(50), IN `p_instagram_access_token` VARCHAR(500), IN `p_instagram_images` VARCHAR(500), IN `p_instagram_caption_text` TEXT, IN `p_instagram_tags` TEXT, IN `p_instagram_link` VARCHAR(500), IN `p_instagram_created_time` VARCHAR(50), IN `p_instagram_created_time_decode` VARCHAR(50), IN `p_goods_code` VARCHAR(500), IN `p_goods_codes` VARCHAR(1000), IN `p_is_onsite` TINYINT(1), IN `p_instagram_account_link` VARCHAR(1000), IN `p_is_video` TINYINT(1), IN `p_instagram_images_download` VARCHAR(500))
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_instagram_data WHERE instagram_id = p_instagram_id;
	IF (total_records = 0) THEN
		
		INSERT INTO tbl_instagram_data (
			instagram_id, 
			instagram_user_id,
			instagram_access_token, 
			instagram_images, 
			instagram_caption_text, 
			instagram_tags, 
			instagram_link, 
			instagram_created_time, 
			instagram_created_time_decode, 
			goods_code, 
			goods_codes, 
			is_onsite,
			instagram_account_link,
			is_video,
			instagram_images_download
		) VALUES (
			p_instagram_id, 
			p_instagram_user_id,
			p_instagram_access_token, 
			p_instagram_images, 
			p_instagram_caption_text, 
			p_instagram_tags, 
			p_instagram_link, 
			p_instagram_created_time, 
			p_instagram_created_time_decode, 
			p_goods_code, 
			p_goods_codes, 
			p_is_onsite,
			p_instagram_account_link,
			p_is_video,
			p_instagram_images_download
		);
	ELSE 
		UPDATE 	tbl_instagram_data
		SET
			instagram_user_id	= p_instagram_user_id,
			instagram_access_token 	= p_instagram_access_token, 
			instagram_images 	= p_instagram_images, 
			instagram_caption_text 	= p_instagram_caption_text, 
			instagram_tags 		= p_instagram_tags, 
			instagram_link 		= p_instagram_link, 
			instagram_created_time 	= p_instagram_created_time, 
			instagram_created_time_decode = p_instagram_created_time_decode, 
			goods_code 		= p_goods_code, 
			goods_codes 		= p_goods_codes, 
			is_onsite		= p_is_onsite,
			instagram_account_link  = p_instagram_account_link,
			is_video		= p_is_video,
			instagram_images_download 	= p_instagram_images_download
		WHERE
			instagram_id 		= p_instagram_id;
	END IF;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_instagram_saveInstagramAccount` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_instagram_saveInstagramAccount` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_instagram_saveInstagramAccount`(`p_mode` NVARCHAR(20), `p_insta_acc_id` INT(11), `p_insta_client_id` NVARCHAR(100), `p_insta_user_id` NVARCHAR(100), `p_insta_access_token` NVARCHAR(100), `p_insta_name_display` NVARCHAR(500), `p_insta_status` TINYINT(1), `p_insta_link` NVARCHAR(1000), `p_cookie` NVARCHAR(1000))
BEGIN
	IF (p_mode = 'C') THEN
		INSERT INTO tbl_instagram_account (
			insta_client_id,
			insta_user_id,
			insta_access_token,
			insta_name_display,
			insta_status,
			insta_link,
			cookie
		) VALUES (
			p_insta_client_id,
			p_insta_user_id,
			p_insta_access_token,
			p_insta_name_display,
			p_insta_status,
			p_insta_link,
			p_cookie
		);
	ELSE
		UPDATE tbl_instagram_account
		SET
			insta_client_id = p_insta_client_id,
			insta_user_id = p_insta_user_id,
			insta_access_token = p_insta_access_token,
			insta_name_display = p_insta_name_display,
			insta_status = p_insta_status,
			insta_link = p_insta_link,
			cookie = p_cookie
		WHERE
			insta_acc_id = p_insta_acc_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_mail_remind_order_history_auto_backup` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_mail_remind_order_history_auto_backup` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_mail_remind_order_history_auto_backup`(IN `p_mail_remind_id` TEXT, IN `p_shop_list` TEXT)
BEGIN
	
	SET @getStockNumberStmt1 = getStockNumberStmt(
			'tbl_mail_remind_order',
			'product_no',
			'color_code',
			'size_code',
			'',
			1,
			1,
			1,
			0,
			p_shop_list
	);
	SET @getStockNumberStmt2 = getStockNumberStmt(
		'tbl_mail_remind_order',
		'product_no',
		'color_code',
		'size_code',
		'',
		1,
		1,
		0,
		0,
		p_shop_list
	);
	
	SET @selectStmt2 = CONCAT("
	INSERT INTO tbl_mail_remind_order_history (
		mail_remind_id,
		mail_address,
		sending_time,
		current_stock_num,
		current_shop_code, 
		current_actual_num,
		current_is_actual_num,
		current_is_actual_zero,
		current_is_shop_stock
	) 
		SELECT 	
			tbl_mail_remind_order.id, 
			tbl_mail_remind_order.customer_email, 
			NOW(),
			",@getStockNumberStmt1,",
			",p_shop_list,",
			tbl_settings.actual_num,
			tbl_settings.is_actual_num,
			tbl_settings.is_actual_zero,
			tbl_settings.is_shop_stock
		FROM 	tbl_mail_remind_order 
			,tbl_settings
		WHERE
			tbl_mail_remind_order.id IN (",p_mail_remind_id,")
	");
	
	
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_media_category_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_media_category_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_media_category_save`(`p_mode` VARCHAR(20), `p_category_id` INT(11), `p_category_code` VARCHAR(200), `p_category_name` VARCHAR(255), `p_status` TINYINT(2), `p_show_order` TINYINT(2), `p_category_date` VARCHAR(40))
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_media_category(
			category_code,
			category_name,
			`status`,
			show_order,
			category_date
		) VALUES (
			p_category_code,
			p_category_name,
			p_status,
			p_show_order,
			p_category_date
		);
		
		SELECT MAX(id) AS 'category_id' FROM tbl_media_category;
		
	ELSE
		UPDATE tbl_media_category
		SET
			category_code 		= p_category_code,
			category_name 		= p_category_name,
			`status` 		= p_status,
			show_order 		= p_show_order,
			category_date		= p_category_date
		WHERE
			tbl_media_category.id 	= p_category_id;
			
		SELECT p_category_id AS 'category_id' ;
		
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_products_getSeasonByCategoryForMenu` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_products_getSeasonByCategoryForMenu` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_products_getSeasonByCategoryForMenu`(IN `p_product_itemcode` VARCHAR(255))
BEGIN
DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_product_itemcode
	INTO item_name_tmp;
	
	-- Lay het season trong bang product co product thuoc vao item!
	select  
		season_code, 
		season_name 
	from 
		tbl_products, 
		tbl_products_details
	WHERE 
		product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = item_name_tmp OR cat_tmp.Name = item_name_tmp)
		AND tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
		AND tbl_products_details.product_detail_status 	= 0 
		AND tbl_products.product_status 		= 1
		
		AND tbl_products.season_code IS NOT NULL
		AND tbl_products.season_name IS NOT NULL
	GROUP BY season_name;
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_product_category_group_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_product_category_group_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_product_category_group_save`(`p_mode` VARCHAR(20), `p_product_category_group_id` INT(11), `p_product_category_group_code` VARCHAR(200), `p_product_category_group_name` VARCHAR(255), `p_product_category_group_status` TINYINT(2), `p_product_category_group_show_order` TINYINT(2), `p_product_category_group_parent_name` VARCHAR(255), `p_description` TEXT)
BEGIN
	IF(p_mode = 'C') THEN
		INSERT INTO tbl_products_category_group(
			category_group_code,
			category_group_name,
			category_group_status,
			category_group_show_order,
			category_group_parent_name,
			description
		) VALUES (
			p_product_category_group_code,
			p_product_category_group_name,
			p_product_category_group_status,
			p_product_category_group_show_order,
			p_product_category_group_parent_name,
			p_description
		);
	ELSE
		UPDATE tbl_products_category_group
		SET
			category_group_code 		= p_product_category_group_code,
			category_group_name 		= p_product_category_group_name,
			category_group_status 		= p_product_category_group_status,
			category_group_show_order 	= p_product_category_group_show_order,
			category_group_parent_name 	= p_product_category_group_parent_name,
			description			= p_description
		WHERE
			tbl_products_category_group.id 	= p_product_category_group_id;
	END IF;
	SELECT 'ok' AS msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_settings_mail_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_settings_mail_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_settings_mail_insert`(`p_mail_auto_confirm_address` VARCHAR(255), `p_mail_auto_confirm_pass` VARCHAR(255), `p_smtp_send_mail` VARCHAR(255), `p_port_send_mail` VARCHAR(255), `p_mail_test_address` VARCHAR(255), `p_mail_back_up_confirmation` VARCHAR(255), `p_smtp_secure` VARCHAR(100))
BEGIN
	DECLARE total_records BIGINT (20) DEFAULT 0;
	SELECT 
		COUNT(*) INTO total_records 
	FROM
		tbl_settings_mail;
	IF (total_records = 0) THEN -- create one record
			
		INSERT INTO tbl_settings_mail(
				mail_auto_confirm_address,
				mail_auto_confirm_pass,
				smtp_send_mail,
				port_send_mail,
				mail_test_address,
				mail_back_up_confirmation,
				smtp_secure		
		) 
		VALUES (
				p_mail_auto_confirm_address,
				p_mail_auto_confirm_pass,
				p_smtp_send_mail,
				p_port_send_mail,
				p_mail_test_address,
				p_mail_back_up_confirmation,
				p_smtp_secure	
		);
		SELECT 'ok' AS msg ;
	END IF;
	SELECT 'notok' AS msg ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_set_of_products_getNextAndPreviousBySeason` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_set_of_products_getNextAndPreviousBySeason` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_set_of_products_getNextAndPreviousBySeason`(IN `p_set_season_order` INT)
BEGIN
	-- GET previous season
	
	SELECT * FROM tbl_set_of_products 
	WHERE 	set_status		= 1
		AND set_season_id 	= (
			SELECT 
				set_season_id
			FROM 
				tbl_set_seasons 
			WHERE 	
				set_season_order <  p_set_season_order
			ORDER BY  
				set_season_order desc , 
				set_season_id  ASC 
			LIMIT 1
		)
	ORDER BY tbl_set_of_products.create_date DESC 
	LIMIT 1;
	
	-- GET next season
	
	SELECT * FROM tbl_set_of_products 
	WHERE 	set_status		= 1
		AND set_season_id 	= (
			SELECT 
				set_season_id 
			FROM 
				tbl_set_seasons 
			WHERE 	
				set_season_order >  p_set_season_order
			ORDER BY  
				set_season_order ASC , 
				set_season_id  ASC 
			LIMIT 1
		)
	ORDER BY tbl_set_of_products.create_date DESC 
	LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_set_seasons_getNextAndPreviousByIndex` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_set_seasons_getNextAndPreviousByIndex` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_set_seasons_getNextAndPreviousByIndex`(IN `p_set_season_order` INT)
BEGIN
	-- GET previous season
	select 
		tbl_set_seasons.SeqNo,
		tbl_set_seasons.RSeqNo,
		tbl_set_seasons.set_season_id,
		tbl_set_seasons.set_season_code,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name,
		tbl_set_seasons.set_season_order,
		tbl_set_seasons.set_season_status,
		tbl_set_seasons.set_season_is_menu
	from 
		tbl_set_seasons 
	where 	
		set_season_order <  p_set_season_order
	order by  
		set_season_order asc , 
		set_season_id  asc 
	LIMIT 1;
	
	-- GET next season
	SELECT 
		tbl_set_seasons.SeqNo,
		tbl_set_seasons.RSeqNo,
		tbl_set_seasons.set_season_id,
		tbl_set_seasons.set_season_code,
		CASE 
			WHEN tbl_set_seasons.set_season_name_display IS NULL OR tbl_set_seasons.set_season_name_display = '' 
			THEN tbl_set_seasons.set_season_name
			ELSE  tbl_set_seasons.set_season_name_display 
		END AS set_season_name,
		tbl_set_seasons.set_season_order,
		tbl_set_seasons.set_season_status,
		tbl_set_seasons.set_season_is_menu
	FROM 
		tbl_set_seasons 
	WHERE 	
		set_season_order >  p_set_season_order
	ORDER BY  
		set_season_order ASC , 
		set_season_id  ASC 
	LIMIT 1;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_static_pages_drafts_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_static_pages_drafts_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_static_pages_drafts_insert`(`p_static_page_code` VARCHAR(255), `p_static_page_title` TEXT, `p_static_page_content` TEXT, `p_static_page_status` TINYINT(2), `p_create_date` DATETIME, `p_update_date` DATETIME, `p_link_preview` VARCHAR(255), `p_for_customer` VARCHAR(255))
BEGIN
	DECLARE total_records BIGINT (20) DEFAULT 0;
	SELECT 
		COUNT(*) INTO total_records 
	FROM
		tbl_static_page_drafts 
	WHERE  static_page_code = p_static_page_code;
	 
	IF (total_records = 0) THEN -- create one record
			
		INSERT INTO tbl_static_page_drafts(
		        static_page_code	,
			static_page_title 	,
			static_page_content   , 
			static_page_status 	, 
			create_date                 ,
		        update_date 	        ,
			link_preview 	        ,
			for_customer 
			
		) 
		VALUES (
			p_static_page_code	,
			p_static_page_title 	,
			p_static_page_content   , 
			p_static_page_status 	, 
			CURTIME()               ,
			CURTIME()	        ,
			p_link_preview 	        ,
			p_for_customer  	 
		);
		SELECT 'ok' AS msg ;
	END IF;
	SELECT 'notok' AS msg ;
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_static_pages_insert` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_static_pages_insert` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_static_pages_insert`(`p_static_page_code` VARCHAR(255), `p_static_page_title` TEXT, `p_static_page_content` TEXT, `p_link_preview` VARCHAR(255), `p_for_customer` VARCHAR(255))
BEGIN
	DECLARE total_records BIGINT (20) DEFAULT 0;
	DECLARE total_records_draf BIGINT (20) DEFAULT 0;
	SELECT 
		COUNT(*) INTO total_records 
	FROM
		tbl_static_pages 
	WHERE  
		static_page_code = p_static_page_code;
	SELECT 
		COUNT(*) INTO total_records_draf 
	FROM
		tbl_static_page_drafts 
	WHERE  
		static_page_code = p_static_page_code;
	IF (total_records = 0) THEN -- create one record
		INSERT INTO tbl_static_pages(
			static_page_code,
			static_page_title,
			static_page_content,
			static_page_status,
			create_date,
			update_date,
			link_preview,
			for_customer 
		) VALUES (
			p_static_page_code,
			p_static_page_title,
			p_static_page_content,
			1, 
			NOW(),
			NOW(),
			CASE WHEN p_link_preview = '' THEN NULL ELSE p_link_preview END,
			p_for_customer 	 
		);
		SELECT 'ok' AS msg ;
	ELSE
		SELECT 'notok' AS msg ;
	END IF;
	IF (total_records_draf = 0) THEN -- create one record
		INSERT INTO tbl_static_page_drafts(
			static_page_code,
			static_page_title,
			static_page_content,
			static_page_status,
			create_date,
			update_date,
			link_preview,
			for_customer 
		) VALUES (
			p_static_page_code,
			p_static_page_title,
			p_static_page_content,
			1, 
			NOW(),
			NOW(),
			CASE WHEN p_link_preview = '' THEN NULL ELSE p_link_preview END ,
			p_for_customer 	 
		);
	ELSE 
		UPDATE 	tbl_static_page_drafts
		SET
			static_page_title 	= p_static_page_title,
			static_page_content 	= p_static_page_content,
			static_page_status	= 1,
			update_date		= NOW(),
			link_preview		= CASE WHEN p_link_preview = '' THEN NULL ELSE p_link_preview END,
			for_customer 		= p_for_customer
		WHERE 	static_page_code	= p_static_page_code;
	END IF;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tbl_stock_num_backup_by_goodscode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tbl_stock_num_backup_by_goodscode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tbl_stock_num_backup_by_goodscode`(IN `p_mail_remind_id` TEXT, IN `p_shop_list` TEXT)
BEGIN
	
	SET @selectStmt2 = CONCAT("
	INSERT INTO tbl_stock_num_history (
		mail_remind_id,
		ShopCode,
		GoodCode,
		ColorCode,
		SizeCode, 
		StockNum,
		KanoNum
	) 
		SELECT 	
			tbl_mail_remind_order.id, 
			
			tbl_stock_num.ShopCode,
			tbl_stock_num.GoodCode,
			tbl_stock_num.ColorCode,
			tbl_stock_num.SizeCode, 
			tbl_stock_num.StockNum,
			tbl_stock_num.KanoNum
		FROM 	tbl_stock_num 
			JOIN 	tbl_mail_remind_order 
				ON tbl_stock_num.goodCode = tbl_mail_remind_order.product_no 
		WHERE
			tbl_mail_remind_order.id IN (",p_mail_remind_id,")
	");
	
	IF p_shop_list <> "'-1999'" THEN
		SET @selectStmt2 = CONCAT(@selectStmt2, "
			AND tbl_stock_num.ShopCode in (", p_shop_list, ") ");
	END IF;
	PREPARE stmt FROM @selectStmt2;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt; 
	
	
	SELECT 'ok' AS msg;
	
	
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_total_productbrandcode` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_total_productbrandcode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_total_productbrandcode`(IN `p_brand_code` VARCHAR(50000), IN `p_season_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (",p_brand_code,")
				) OR (
					tbl_products.brand_code IN (",p_brand_code,")
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " AND
				( 
					tbl_products.season_code like '%",p_season_code,"' 
					OR
					tbl_products.season_name like '%",p_season_code,"' 
				)
				");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",p_brand_code,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT 	SUM(sl) AS total_items, product_brand_code,brand_brand_name FROM ( 
	SELECT *,1 AS sl FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0) OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ) AS TBL_TMP  GROUP BY  product_brand_code ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,
		@orderStmt );
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_total_productbrandcodeall` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_total_productbrandcodeall` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_total_productbrandcodeall`(IN `p_brand_code` VARCHAR(50000), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SET @orderStmt = getOrderStmtForProductList(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (",p_brand_code,")
				) OR (
					tbl_products.brand_code IN (",p_brand_code,")
				)
			)
			
			 ");
	END IF;
	
	IF 
		p_brand_code IS NOT NULL 
		AND p_brand_code = 'all'
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.brand_code IN (",p_brand_code,")
			 ");
	END IF;
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- them phan sap xep tim kiem tren brand
	IF p_sort <> 'priceAscend' AND p_sort <> 'priceDescend' AND p_sort <> 'popular' AND p_sort <> 'new' AND p_sort <> '' THEN
		SELECT 	GROUP_CONCAT(ItemCode SEPARATOR ",")
		FROM 	tbl_products_category 
		WHERE 	category_group_id = p_sort
		INTO 	@itemcode_from_group_category;
		
		SET @check_multiple_item = '';
		SET @code = @itemcode_from_group_category;
		WHILE @code != '' DO
			SET @tmp2 = SUBSTRING_INDEX(@code,',',1);
			SET @code = SUBSTRING(@code, CHAR_LENGTH(@tmp2) + 1 + CHAR_LENGTH(','));
			SET @check_multiple_item = 
				CONCAT(@check_multiple_item, "
				OR tbl_products.multiple_item_code LIKE '%," ,@tmp2, ",%' 
				");
		END WHILE;
		
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND (
			tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_sort,"')
			",@check_multiple_item,"
			)
		");	
	END IF;
	-- end
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT 	SUM(sl) AS total_items, product_brand_code,brand_brand_name FROM ( 
	SELECT *,1 AS sl FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0) OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ) AS TBL_TMP  GROUP BY  product_brand_code ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt,
		@orderStmt );
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_tracking_url_update` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_tracking_url_update` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_tracking_url_update`(IN `listtracking` TEXT)
BEGIN
    -- DANNGUYEN--
DECLARE d_index INT DEFAULT 0;
DECLARE d_A VARCHAR(10) DEFAULT 'д';
DECLARE d_tracking_name VARCHAR(255);
DECLARE d_tracking_url VARCHAR(500);
DECLARE d_tracking_use INT;
DECLARE d_tracking_parcel INT;
DELETE FROM tbl_tracking_url WHERE 1=1;
WHILE INSTR(listtracking,d_A)>0 DO
		SET d_index = INSTR(listtracking,d_A);
		SET d_tracking_name = SUBSTR(listtracking,1,d_index-1);
		SET listtracking = SUBSTR(listtracking,d_index+1,CHAR_LENGTH(listtracking)-d_index+1);
		SET d_index = INSTR(listtracking,d_A);
		SET d_tracking_use = SUBSTR(listtracking,1,d_index-1);
		SET listtracking = SUBSTR(listtracking,d_index+1,CHAR_LENGTH(listtracking)-d_index+1);
		SET d_index = INSTR(listtracking,d_A);
		SET d_tracking_parcel = SUBSTR(listtracking,1,d_index-1);
		SET listtracking = SUBSTR(listtracking,d_index+1,CHAR_LENGTH(listtracking)-d_index+1);
		SET d_index = INSTR(listtracking,d_A);
		SET d_tracking_url = SUBSTR(listtracking,1,d_index-1);
		SET listtracking = SUBSTR(listtracking,d_index+1,CHAR_LENGTH(listtracking)-d_index+1);		
		
		INSERT INTO tbl_tracking_url(`tracking_name`,`tracking_use`,`tracking_url`,`tracking_parcel`)
		VALUES(d_tracking_name,d_tracking_use,d_tracking_url,d_tracking_parcel);
END WHILE;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_updateTimeSendMailRemindWishList` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_updateTimeSendMailRemindWishList` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_updateTimeSendMailRemindWishList`(IN `p_customer_id` BIGINT(20), IN `p_product_id` INT(11), IN `p_color_code` VARCHAR(10), IN `p_size_code` VARCHAR(10))
BEGIN
	UPDATE tbl_wish_list
	SET 
		is_sent_mail = 1,
		mailing_date = NOW()
	
	WHERE 
		customer_id = p_customer_id
		AND product_id = p_product_id
		AND (
			color_code = p_color_code
			OR p_color_code = ''
		)
		AND (
			size_code = p_size_code
			OR (
				p_size_code = ''
				AND size_code IS NULL
			)
		);
		
	
	SELECT 	
		item_id,
		customer_id,
		product_id,
		color_code,
		added_on,
		size_code,
		is_sent_mail,
		date (mailing_date) as 'mailing_date',
		time (mailing_date) as 'mailing_time'
	FROM 	tbl_wish_list	
	WHERE 
		customer_id = p_customer_id
		AND product_id = p_product_id
		AND (
			color_code = p_color_code
			OR p_color_code = ''
		)
		AND (
			size_code = p_size_code
			OR (
				p_size_code = ''
				AND size_code IS NULL
			)
		);
	
	
	
	
	
	/*
	
	SET @dt =  NOW();
	SET @selectStmt = CONCAT("
		SELECT	*
		FROM 	tbl_wish_list
	");
	SET @updateStmt = CONCAT("
		UPDATE tbl_wish_list
		SET 
			is_sent_mail = 1,
			mailing_date = '",@dt,"'
	");
	
	SET @conditionStmt = CONCAT("
		WHERE 
			customer_id = ",p_customer_id,"
			AND product_id = ",p_product_id,"
	");
	
	IF p_color_code IS NOT NULL AND p_color_code <> '' THEN
		SET @conditionStmt = CONCAT(@conditionStmt, "
			AND color_code = '",p_color_code,"'
			");
	END IF;
	IF p_size_code IS NOT NULL AND p_size_code <> '' THEN
		SET @conditionStmt = CONCAT(@conditionStmt, "
			AND size_code = '",p_size_code,"'
			");
	ELSE 
		SET @updateStmt = CONCAT(@updateStmt, "
			AND size_code IS NULL
			");
	END IF;
	
	
	
	SET @updateStmtRun = CONCAT(@updateStmt, @conditionStmt);
	SET @selectStmtRun = CONCAT(@selectStmt, @conditionStmt);
	insert into tbl_sys_log(sys_log) values ( @updateStmtRun);
	INSERT INTO tbl_sys_log(sys_log) VALUES ( @selectStmtRun);
	
	PREPARE stmt FROM @updateStmtRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	PREPARE stmt2 FROM @selectStmtRun;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	*/
    END */$$
DELIMITER ;

/* Procedure structure for procedure `sp_update_productnumerical_bystocknum` */

/*!50003 DROP PROCEDURE IF EXISTS  `sp_update_productnumerical_bystocknum` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_update_productnumerical_bystocknum`(IN `p_shop_list` VARCHAR(1000))
BEGIN
	SET @selectStmt = getListColumnForSelectingProductList();
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	SET @selectFromStmt = 
		CONCAT("UPDATE tbl_products_details INNER JOIN (SELECT product_goods_code,pro_detail_color_code,",@getStockNumberStmt," FROM (",@selectStmt," FROM
		tbl_products, 
		tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			 GROUP BY product_goods_code, pro_detail_color_code) as product_info) as product_tmp
			ON tbl_products_details.product_goods_code = product_tmp.product_goods_code 
			AND tbl_products_details.color_code = product_tmp.pro_detail_color_code
			SET tbl_products_details.num_order = 0
			WHERE  (product_tmp.stock_num = 0 OR product_tmp.stock_num is null)
			 
			");
			
	PREPARE stmt FROM @selectFromStmt;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
select 'ok' as msg;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `STANLEY_sp_tbl_instagram_data_save` */

/*!50003 DROP PROCEDURE IF EXISTS  `STANLEY_sp_tbl_instagram_data_save` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STANLEY_sp_tbl_instagram_data_save`(IN `p_instagram_id` VARCHAR(50), IN `p_instagram_user_id` VARCHAR(50), IN `p_instagram_access_token` VARCHAR(100), IN `p_instagram_images` VARCHAR(500), IN `p_instagram_caption_text` TEXT, IN `p_instagram_tags` TEXT, IN `p_instagram_link` VARCHAR(500), IN `p_instagram_created_time` VARCHAR(50), IN `p_instagram_created_time_decode` VARCHAR(50), IN `p_goods_code` VARCHAR(500), IN `p_goods_codes` VARCHAR(1000), IN `p_is_onsite` TINYINT(1), IN `p_instagram_account_link` VARCHAR(1000), IN `p_is_video` TINYINT(1), `p_instagram_images_download` VARCHAR(500))
BEGIN
	DECLARE total_records BIGINT(20) DEFAULT 0;
	SELECT COUNT(*) INTO total_records FROM tbl_instagram_data where instagram_id = p_instagram_id;
	IF (total_records = 0) THEN
		
		insert into tbl_instagram_data (
			instagram_id, 
			instagram_user_id,
			instagram_access_token, 
			instagram_images, 
			instagram_caption_text, 
			instagram_tags, 
			instagram_link, 
			instagram_created_time, 
			instagram_created_time_decode, 
			goods_code, 
			goods_codes, 
			is_onsite,
			instagram_account_link,
			is_video,
			instagram_images_download
		) values (
			p_instagram_id, 
			p_instagram_user_id,
			p_instagram_access_token, 
			p_instagram_images, 
			p_instagram_caption_text, 
			p_instagram_tags, 
			p_instagram_link, 
			p_instagram_created_time, 
			p_instagram_created_time_decode, 
			p_goods_code, 
			p_goods_codes, 
			p_is_onsite,
			p_instagram_account_link,
			p_is_video,
			p_instagram_images_download
		);
	else 
		update 	tbl_instagram_data
		set
			instagram_user_id	= p_instagram_user_id,
			instagram_access_token 	= p_instagram_access_token, 
			instagram_images 	= p_instagram_images, 
			instagram_caption_text 	= p_instagram_caption_text, 
			instagram_tags 		= p_instagram_tags, 
			instagram_link 		= p_instagram_link, 
			instagram_created_time 	= p_instagram_created_time, 
			instagram_created_time_decode = p_instagram_created_time_decode, 
			goods_code 		= p_goods_code, 
			goods_codes 		= p_goods_codes, 
			is_onsite		= p_is_onsite,
			instagram_account_link  = p_instagram_account_link,
			is_video		= p_is_video,
			instagram_images_download 	= p_instagram_images_download
		where
			instagram_id 		= p_instagram_id;
	end if;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `STJUNION_sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `STJUNION_sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STJUNION_sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STJUNION_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `STJUNION_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STJUNION_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STJUNION_sp_Product_GetProductPreOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `STJUNION_sp_Product_GetProductPreOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STJUNION_sp_Product_GetProductPreOrder`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_pre_order 			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr_run = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr_run);
	
	PREPARE stmt FROM @selectStmtStr_run;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `UNION_sp_Hashtag_GetAll` */

/*!50003 DROP PROCEDURE IF EXISTS  `UNION_sp_Hashtag_GetAll` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `UNION_sp_Hashtag_GetAll`(IN `p_search` TEXT, IN `indexFrom` TINYINT, IN `indexLimit` TINYINT)
BEGIN
	SET @strSelect = 
		CONCAT ("
		SELECT * ");
	SET @strFrom = 
		CONCAT ("
			FROM 
				tbl_products_hashtag");
	SET @strWhere =
		CONCAT ("
			WHERE 
				status = 1
			AND (
				(NOW() BETWEEN  start_date AND end_date)
				OR unlimited = 1
			)
		");
	IF (p_search <> '') THEN
		SET @strWhere =  CONCAT(@strWhere," AND NOTE like '%",p_search,"%' ");
		END IF;
	SET @strOrder =
		CONCAT ("
			ORDER BY 
				hashtag_title");
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
		 	
	SET @strSTM = CONCAT(@strSelect, @strFrom, @strWhere, @strOrder, @strLimit); 
	PREPARE stmt FROM @strSTM;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @strSTM2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, @strFrom, @strWhere, @strOrder, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @strSTM2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STJUNION_sp_Product_GetRelatedProductForMediaByGoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `STJUNION_sp_Product_GetRelatedProductForMediaByGoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STJUNION_sp_Product_GetRelatedProductForMediaByGoodColor`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1			
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),") ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	-- -===============================================================================`stj_ecphp`
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `VIREMY_sp_getAllNewsFontEnd` */

/*!50003 DROP PROCEDURE IF EXISTS  `VIREMY_sp_getAllNewsFontEnd` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `VIREMY_sp_getAllNewsFontEnd`(IN `indexFrom` TINYINT, IN `indexLimit` TINYINT, IN `p_news_type` VARCHAR(15))
BEGIN
/**
 * User:hoaxuan
 * Date:01/11/2018
 * Note: them store nay cho kh harmony
 */
	SET @strSelect = 
		CONCAT("
			SELECT *
			FROM tbl_news			
			WHERE 
				status = 1
				AND (
					tbl_news.public_date IS NULL
					OR tbl_news.public_date <= CURRENT_TIMESTAMP()
				)
				AND tbl_news.news_type = '",p_news_type,"'");
	SET @strSelect = CONCAT(@strSelect," ORDER BY news_date DESC");
	
	SET @strLimit = 
		CONCAT("
			LIMIT ",indexFrom,",",indexLimit, " ");
			
	SET @selectStmtStrRun = CONCAT(@strSelect,@strLimit);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("SELECT COUNT(*) AS total_items FROM ( ", @strSelect, " ) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	SET @selectStmtStr3 = CONCAT(@strSelect);
	PREPARE stmt3 FROM @selectStmtStr3;
	EXECUTE stmt3;
	DEALLOCATE PREPARE stmt3;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STRAWBERRYJAMEC_sp_Product_GetNewItemsByGroupCategoryId` */

/*!50003 DROP PROCEDURE IF EXISTS  `STRAWBERRYJAMEC_sp_Product_GetNewItemsByGroupCategoryId` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STRAWBERRYJAMEC_sp_Product_GetNewItemsByGroupCategoryId`(IN `p_group_category_id` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListStrawberryjamec(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_group_category_id IS NOT NULL AND p_group_category_id <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.category_group_id = '",p_group_category_id,"')
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STRAWBERRYJAMEC_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `STRAWBERRYJAMEC_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STRAWBERRYJAMEC_sp_Product_GetProductByCategoryCode`(IN `p_category_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	
	DECLARE item_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	SELECT (CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
				tbl_products_category.Name
			ELSE 
				tbl_products_category.name_display
			END) AS name_display 
	FROM 
		tbl_products_category 
	WHERE ItemCode = p_category_code
	INTO item_name_tmp;
	
	SET item_name_tmp = REPLACE (item_name_tmp,"\\","\\\\");
	SET item_name_tmp = REPLACE (item_name_tmp,"'","\\'");
	SET item_name_tmp = REPLACE (item_name_tmp,'"','\\"');
	
	
	
	
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListStrawberryjamec(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
	
		
		
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	
	IF 
		p_category_code 	IS NOT NULL 
		AND p_category_code 	<> '' 
		AND p_category_code 	<> 'all' 
		AND p_category_code 	<> 'other' 
		AND p_category_code 	<> 'sale' 
		AND p_category_code 	<> 'new' 
		AND p_category_code 	<> 'new-arrival'
		AND p_category_code 	<> 'recommended'
		AND p_category_code 	<> 'restock-items'
		AND p_category_code 	<> 'restock-all-items'
		AND p_category_code 	<> 'pre-order'
		
	THEN -- item_name_tmp
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display = '",item_name_tmp,"')
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name = '",item_name_tmp,"' AND (name_display IS NULL OR name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_category_code,",%'
				)
			)
			
			 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'other' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.product_itemcode NOT IN ( SELECT ItemCode FROM tbl_products_category WHERE IsShowAsMenu = 1 ) ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'sale' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.sale_off_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'new' OR p_category_code = 'new-arrival') THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.new_product = 1 ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'recommended' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_recommended_item = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND p_category_code = 'pre-order' THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_pre_order = 1  ");
	ELSEIF p_category_code 	IS NOT NULL AND (p_category_code = 'restock-items' OR p_category_code = 'restock-all-items')THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND tbl_products.is_sold_out 			= 1    ");
	END IF;
	
	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionStmt = '';
	IF 
		p_category_code IS NOT NULL 
		AND (
			p_category_code = 'restock-items' 
			OR p_category_code = 'ranking' 
		)THEN
		SET @conditionStmt = " 
			WHERE stock_num > 0 
		";
	ELSE
	
		SET @conditionStmt = " 
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0)  
		";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		", @conditionStmt,"
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into `tbl_sys_log`(`sys_log`) values(@selectStmtStrRun);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	-- SELECT * FROM tbl_products_category WHERE ItemCode = p_category_code;
	-- Get category info
	SELECT
		tbl_products_category.SeqNo,
		tbl_products_category.RSeqNo,
		tbl_products_category.product_category_id,
		tbl_products_category.OrderNumber,
		tbl_products_category.Name,
		tbl_products_category.IsDisplay,
		tbl_products_category.IsShowAsMenu,
		tbl_products_category.create_date,
		tbl_products_category.category_banner,
		tbl_products_category.ItemCode,
		tbl_products_category.TimeStamp,
		tbl_products_category.memo,
		tbl_products_category.slug_url,
		tbl_products_category.category_status,
		tbl_products_category.parent_id,
		tbl_products_category.show_order,
		tbl_products_category.ecsite,
		tbl_products_category.category_group_id,
		(CASE WHEN tbl_products_category.name_display IS NULL OR tbl_products_category.name_display = '' THEN
			tbl_products_category.Name
		ELSE 
			tbl_products_category.name_display
		END) AS name_display,
		tbl_products_category.category_header
	FROM tbl_products_category
	WHERE ItemCode = p_category_code;
END */$$
DELIMITER ;

/* Procedure structure for procedure `STRAWBERRYJAMEC_sp_Product_GetProductPreOrder` */

/*!50003 DROP PROCEDURE IF EXISTS  `STRAWBERRYJAMEC_sp_Product_GetProductPreOrder` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STRAWBERRYJAMEC_sp_Product_GetProductPreOrder`(IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(255), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = CONCAT("
	LIMIT ",indexFrom,",",indexLimit, " ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.is_pre_order 			= 1 ");
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStr_run = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
	-- insert into tbl_sys_log (sys_log) values (@selectStmtStr_run);
	
	PREPARE stmt FROM @selectStmtStr_run;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	-- INSERT INTO tbl_sys_log (sys_log) VALUES (@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
END */$$
DELIMITER ;

/* Procedure structure for procedure `STRAWBERRYJAMEC_sp_Product_GetRelatedProductForMediaByGoodColor` */

/*!50003 DROP PROCEDURE IF EXISTS  `STRAWBERRYJAMEC_sp_Product_GetRelatedProductForMediaByGoodColor` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `STRAWBERRYJAMEC_sp_Product_GetRelatedProductForMediaByGoodColor`(IN `p_media_id` BIGINT(11), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	SET @orderStmt = ' ORDER BY  	CAST(product_active_date AS DATE) 	DESC,
					product_goods_code 	ASC   ';
	SET @selectLimitStmt = CONCAT("
		LIMIT ",indexFrom,",",indexLimit," ");
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM
			tbl_products,
			tbl_products_details
		WHERE
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo
			AND tbl_products_details.product_detail_status 	= 0
			AND tbl_products.product_status 		= 1			
			AND CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",(SELECT CASE WHEN related_goods_code_for_search IS NULL THEN "'-9999'" ELSE related_goods_code_for_search  END FROM tbl_media WHERE media_id = p_media_id),") ");
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = CONCAT("	
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code ");
	-- -===============================================================================`stj_ecphp`
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISUGA_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISUGA_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISUGA_sp_Product_GetProductByCategoryCode`(IN `p_items` VARCHAR(255), IN `p_search` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_key_content` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:23/12/2018
 * Note: rieng cho tabisuga 
 */
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'TABISUGA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- ---------------------------------
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.no_display_list 		<> 1 ");
	-- ==================================================
	IF (p_search <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt," 
			AND (
				tbl_products.product_name 		like '%",p_search,"%'
				OR tbl_products.product_name_display 	like '%",p_search,"%'
				OR tbl_products.goods_code 		like '%",p_search,"%'
				OR tbl_products.search_keywords 	like '%",p_search,"%'
			) ");
	END IF;
	
	-- ==================================================
	IF (p_key_content <> '') THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.goods_code IN (",p_key_content,")
			    )");
	END IF;
	
	-- ==================================================	
	IF (p_items <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN (",p_items,"))
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN (",p_items,") AND (cat_tmp.name_display IS NULL OR cat_tmp.name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_items,",%'
				)
			) ");
	END IF;
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	-- D19011706-No14==================================================================
	SET @selectItemOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					ItemCode as item_ItemCode,
					CASE WHEN OrderNumber IS NULL OR OrderNumber = '' THEN 
							9999
						ELSE  
							OrderNumber
						END as item_order_number
				FROM 
					tbl_products_category 
			) AS tbl_item_order
				ON tbl_item_order.item_ItemCode = product_info.product_product_itemcode ");
					
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	
			product_info.*,  
			tbl_item_order.*,
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  ",
		@selectItemOrderStmt,"
		
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	/*
	IF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;*/
	/*
	SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @selectItemOrderStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		*/
		
		SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISU_sp_Product_GetNewItemsByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISU_sp_Product_GetNewItemsByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISU_sp_Product_GetNewItemsByCategoryCode`(IN `p_category_code` VARCHAR(200), IN `p_customer_id` BIGINT(20), IN `p_shop_list` TEXT, IN `p_sort` VARCHAR(50), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductListKankou(p_sort, '');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
	CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = "") THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt =
	CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details 
		WHERE 
			tbl_products.SeqNo = tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product			= 1 
			");
	IF p_category_code IS NOT NULL AND p_category_code <> '' THEN
	
		SET @selectFromStmt =
		CONCAT(@selectFromStmt,"
		AND tbl_products.product_itemcode = '",p_category_code,"'
		");
	
	END IF;
			
			
			
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
	SET @selectGroupStmt = 
		CONCAT("
			GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
			
			
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================
			
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, "
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		", @orderStmt, "
		", @selectLimitStmt);
		
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(concat("orderStmt: ", @orderStmt));
		-- INSERT `tbl_sys_log`(`sys_log`)VALUES(CONCAT("selectStmtStrRun: ", @selectStmtStrRun));
		
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			WHERE 
				(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
				OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) 
		) AS TBL_TMP 
		");
	-- INSERT `tbl_sys_log`(`sys_log`)VALUES(@selectStmtStr2);
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISU_sp_Product_GetProductByCategoryCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISU_sp_Product_GetProductByCategoryCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISU_sp_Product_GetProductByCategoryCode`(IN `p_items` VARCHAR(255), IN `p_search` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_key_content` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:23/12/2018
 * Note: rieng cho tabisuga 
 */
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'TABISUGA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- ---------------------------------
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 
			AND tbl_products.no_display_list 		<> 1 ");
	-- ==================================================
	IF (p_search <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt," 
			AND (
				tbl_products.product_name 		like '%",p_search,"%'
				OR tbl_products.product_name_display 	like '%",p_search,"%'
				OR tbl_products.goods_code 		like '%",p_search,"%'
				OR tbl_products.search_keywords 	like '%",p_search,"%'
			) ");
	END IF;
	
	-- ==================================================
	IF (p_key_content <> '') THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.goods_code IN (",p_key_content,")
			    )");
	END IF;
	
	-- ==================================================	
	IF (p_items <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN (",p_items,"))
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN (",p_items,") AND (cat_tmp.name_display IS NULL OR cat_tmp.name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_items,",%'
				)
			) ");
	END IF;
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	-- D19011706-No14==================================================================
	SET @selectItemOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					ItemCode as item_ItemCode,
					CASE WHEN OrderNumber IS NULL OR OrderNumber = '' THEN 
							9999
						ELSE  
							OrderNumber
						END as item_order_number
				FROM 
					tbl_products_category 
			) AS tbl_item_order
				ON tbl_item_order.item_ItemCode = product_info.product_product_itemcode ");
					
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	
			product_info.*,  
			tbl_item_order.*,
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  ",
		@selectItemOrderStmt,"
		
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	/*
	IF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;*/
	/*
	SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @selectItemOrderStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		*/
		
		SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `TABISU_sp_Product_GetProductByCategoryCodeNew` */

/*!50003 DROP PROCEDURE IF EXISTS  `TABISU_sp_Product_GetProductByCategoryCodeNew` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `TABISU_sp_Product_GetProductByCategoryCodeNew`(IN `p_items` VARCHAR(255), IN `p_search` VARCHAR(50), IN `p_sort` VARCHAR(50), IN `p_key_content` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
/**
 * User:hoaxuan
 * Date:23/12/2018
 * Note: rieng cho tabisuga 
 */
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'TABISUGA');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- ---------------------------------
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	
	-- --------------------------------------------------
	IF(p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1
			AND tbl_products.new_product 		= 1 			
			AND tbl_products.no_display_list 		<> 1 ");
	-- ==================================================
	IF (p_search <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt," 
			AND (
				tbl_products.product_name 		like '%",p_search,"%'
				OR tbl_products.product_name_display 	like '%",p_search,"%'
				OR tbl_products.goods_code 		like '%",p_search,"%'
				OR tbl_products.search_keywords 	like '%",p_search,"%'
			) ");
	END IF;
	
	-- ==================================================
	IF (p_key_content <> '') THEN
	SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				tbl_products.goods_code IN (",p_key_content,")
			    )");
	END IF;
	
	-- ==================================================	
	IF (p_items <> '') THEN
		SET @selectFromStmt = 
		CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.name_display IN (",p_items,"))
				)
				OR
				(
					tbl_products.product_itemcode IN (SELECT ItemCode FROM tbl_products_category as cat_tmp where cat_tmp.Name IN (",p_items,") AND (cat_tmp.name_display IS NULL OR cat_tmp.name_display = ''))
				)
				OR
				(
					tbl_products.multiple_item_code LIKE '%,",p_items,",%'
				)
			) ");
	END IF;
	
	-- ==================================================	
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	
	-- D19011706-No14==================================================================
	SET @selectItemOrderStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					ItemCode as item_ItemCode,
					CASE WHEN OrderNumber IS NULL OR OrderNumber = '' THEN 
							9999
						ELSE  
							OrderNumber
						END as item_order_number
				FROM 
					tbl_products_category 
			) AS tbl_item_order
				ON tbl_item_order.item_ItemCode = product_info.product_product_itemcode ");
					
	
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	
			product_info.*,  
			tbl_item_order.*,
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  ",
		@selectItemOrderStmt,"
		
	) AS product_info_ok ");
	-- -===============================================================================
	
	IF (p_customer_id <> '') THEN
		SET @selectJoinWishListStmt = CONCAT("
			LEFT JOIN (
				SELECT 	
					product_id,
					color_code,
					COUNT(*) AS is_wished
				FROM 	
					tbl_wish_list 
				WHERE 
					customer_id	= ",p_customer_id,"
				GROUP BY product_id, color_code
			
			) AS wish_list_info
				ON wish_list_info.product_id 	= product_info_ok.product_product_id
				AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	SET @conditionRestockItemsStmt = '
		WHERE 
			(product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	/*
	IF p_category_code 	IS NOT NULL AND p_category_code = 'restock-items' THEN
		SET @conditionRestockItemsStmt = " 
			WHERE stock_num > 0 
		";
	END IF;*/
	/*
	SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @selectItemOrderStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		*/
		
		SET @selectStmtStrRun = CONCAT(
		@selectStmtStr, "
		", @selectJoinWishListStmt, "
		", @conditionRestockItemsStmt, "
		", @orderStmt, "
		", @selectLimitStmt);
		
	PREPARE stmt FROM @selectStmtStrRun;
	
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr, "
			", @conditionRestockItemsStmt, "
		) AS TBL_TMP ");
	
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
END */$$
DELIMITER ;

/* Procedure structure for procedure `THETENT_sp_getProduct_TagInstagram` */

/*!50003 DROP PROCEDURE IF EXISTS  `THETENT_sp_getProduct_TagInstagram` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `THETENT_sp_getProduct_TagInstagram`(IN `p_good_code` TEXT, IN `p_color_id` TEXT, IN `p_customer_id` BIGINT(20), IN `p_shoplist` TEXT)
BEGIN
	
	SET @selectStmt = CONCAT(
	"
	SELECT * 
	FROM (
		SELECT 
			tbl_products.goods_code,
			tbl_products.product_id,
			tbl_products.product_image,
			tbl_products.price,
			tbl_products.product_saleoff_price,
			tbl_products.sale_off_product,
			tbl_products.product_image_details,
			tbl_products.product_name,
			CASE WHEN tbl_products.product_name_display IS NULL OR tbl_products.product_name_display = '' THEN tbl_products.product_name ELSE  tbl_products.product_name_display END AS product_name_display,
			tbl_products.brand_id,
			tbl_products.brand_name,
			tbl_products.brand_code,
			tbl_products.slug_url,
			tbl_products.is_pre_order,
			tbl_products_details.color_id,
			tbl_products_details.color_code,
			tbl_products_details.color_name,
			tbl_products_details.size_display,
			CASE 
				WHEN tbl_products_details.Individual_Color_Name IS NOT NULL AND tbl_products_details.Individual_Color_Name <> '' THEN 
					tbl_products_details.Individual_Color_Name
				WHEN tbl_products_details.color_display IS NOT NULL AND tbl_products_details.color_display <> '' THEN 
					tbl_products_details.color_display
			ELSE  
				tbl_products_details.color_name
				
			END AS color_display,			
			tbl_products_details.size_id,
			tbl_products_details.size_code,
			tbl_products_details.size_name,
			tbl_products_details.color_slug_url,
			tbl_products_details.product_detail_price,
			tbl_products_details.product_detail_saleoff_price,
			tbl_products_details.product_detail_price_no_tax,
			tbl_products_details.product_detail_saleoff_price_no_tax,
			tbl_products.product_itemname,
			tbl_products.product_itemcode 
		FROM 	
			tbl_products 
				RIGHT JOIN tbl_products_details 
					ON tbl_products.SeqNo = tbl_products_details.RSeqNo
		WHERE 
			 CONCAT_WS('_',tbl_products.goods_code,tbl_products_details.color_code) IN (",p_color_id,")
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code, tbl_products_details.size_code
	) as tmp_p
		LEFT JOIN
		(
			SELECT 
				s.GoodCode,
				s.ColorCode,
				s.SizeCode,
				CASE WHEN (SUM(s.StockNum) > 0) THEN SUM(s.StockNum) ELSE '0' END AS stock_num				
			FROM 
				tbl_stock_num AS s 
	");
	IF p_shoplist <> "'-1999'" THEN
		SET @selectStmt = CONCAT(@selectStmt, "
			WHERE 	s.ShopCode IN (",   p_shoplist ,") ");
	END IF;
	SET @selectStmt = CONCAT(@selectStmt, "
			GROUP BY s.GoodCode, s.ColorCode, s.SizeCode
		) AS soton 
			ON 	tmp_p.goods_code = soton.GoodCode 
				AND tmp_p.color_code = soton.ColorCode 
				AND tmp_p.size_code = soton.SizeCode
	");
	IF p_customer_id <> 0 THEN
		SET @selectStmt = CONCAT(
		" SELECT * 
		  FROM (",@selectStmt,") AS timp		
			LEFT JOIN (
				SELECT 
					tbl_wish_list.product_id as r_product_id,
					tbl_wish_list.color_code as r_color_code 
				FROM 
					tbl_wish_list 
				WHERE 
					tbl_wish_list.customer_id = ",p_customer_id,"
			) AS wl 
			ON timp.product_id = wl.r_product_id 
			AND timp.color_code = wl.r_color_code
		");
	END IF;
	--  INSERT INTO tbl_sys_log (sys_log) VALUES (CONCAT("selectStmt: ",@selectStmt));
	PREPARE statement FROM @selectStmt;
    -- SET @p1 = p_good_code;
	SET @p2 = p_color_id;
     EXECUTE statement;
    END */$$
DELIMITER ;

/* Procedure structure for procedure `YELLOW_sp_Product_GetProductByBrandCode` */

/*!50003 DROP PROCEDURE IF EXISTS  `YELLOW_sp_Product_GetProductByBrandCode` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `YELLOW_sp_Product_GetProductByBrandCode`(IN `p_brand_code` VARCHAR(20), IN `p_sort` VARCHAR(50), IN `p_customer_id` BIGINT(20), IN `p_shop_list` VARCHAR(1000), IN `indexFrom` INT, IN `indexLimit` INT)
BEGIN
	DECLARE brand_name_tmp 		VARCHAR(200) DEFAULT NULL;
	
	-- -===============================================================================
	-- Get brand name for search
	SELECT (CASE WHEN brand_name_display IS NULL OR brand_name_display = '' THEN
			brand_name
		ELSE 
			brand_name_display
		END) AS name_display 
	FROM 
		tbl_brands 
	WHERE brand_code = p_brand_code
	INTO brand_name_tmp;
	
	SET brand_name_tmp = REPLACE (brand_name_tmp,"\\","\\\\");
	SET brand_name_tmp = REPLACE (brand_name_tmp,"'","\\'");
	SET brand_name_tmp = REPLACE (brand_name_tmp,'"','\\"');
	
	-- -===============================================================================	
	
		
	-- ----------------------------------------------------
	SET @orderStmt = getOrderStmtForProductList(p_sort, 'Yellowdivision');
	-- ----------------------------------------------------
	SET @selectLimitStmt = 
		CONCAT("
		LIMIT ",indexFrom,",",indexLimit, " ");
		
	-- get select fields from function
	SET @selectStmt = getListColumnForSelectingProductList();
	-- --------------------------------------------------
	
	
	
	IF (p_customer_id = '') THEN
		SET @selectStmt = 
		CONCAT(@selectStmt,",
			'0' AS is_wished ");
	END IF;
	SET @selectFromStmt = 
		CONCAT("
		FROM 
			tbl_products, 
			tbl_products_details
		WHERE 
			tbl_products.SeqNo 				= tbl_products_details.RSeqNo 
			AND tbl_products_details.product_detail_status 	= 0 
			AND tbl_products.product_status 		= 1 ");
	IF 
		p_brand_code 	IS NOT NULL 
		AND p_brand_code 	<> '' 
		AND p_brand_code 	<> 'all' 
	THEN
		SET @selectFromStmt = 
				CONCAT(@selectFromStmt, " 
			AND (
				(
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name_display = '",brand_name_tmp,"')
				) OR (
					tbl_products.brand_code IN (SELECT brand_code FROM tbl_brands as tbl_brands_tmp where tbl_brands_tmp.brand_name = '",brand_name_tmp,"' AND (brand_name_display IS NULL OR brand_name_display = ''))
				)
			)
			
			 ");
	END IF;
	SET @fullColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 0 ");
	SET @fixedColorSelectFromStmt = 
		CONCAT(@selectFromStmt, "
			AND tbl_products.is_color_show			= 1
			AND tbl_products_details.is_main_color		= 1 ");
			
	SET @selectGroupStmt = 
		CONCAT("
		GROUP BY tbl_products.goods_code, tbl_products_details.color_code ");
	
	
	
	-- -===============================================================================
	SET @getStockNumberStmt = getStockNumberStmt(
		'product_info',
		'product_goods_code',
		'pro_detail_color_code',
		'pro_detail_size_code',
		'product_is_color_show',
		1,
		1,
		0,
		1,
		p_shop_list
	);
	-- -===============================================================================
	SET @selectStmtStr = CONCAT("
	SELECT * FROM (
		SELECT 	product_info.*,  
			", @getStockNumberStmt, "
		FROM ( 
			SELECT * FROM ( ",
				@selectStmt, @fullColorSelectFromStmt, @selectGroupStmt, " 
			) AS all_product ",
		" UNION   ", 
			@selectStmt, @fixedColorSelectFromStmt, @selectGroupStmt,"
		) AS product_info  
	) AS product_info_ok ");
	-- -===============================================================================	
	
	
	
	IF (p_customer_id <> '') THEN
			SET @selectJoinWishListStmt = CONCAT("
				LEFT JOIN (
					SELECT 	
						product_id,
						color_code,
						COUNT(*) AS is_wished
					FROM 	
						tbl_wish_list 
					WHERE 
						customer_id	= ",p_customer_id,"
					GROUP BY product_id, color_code
				
				) AS wish_list_info
					ON wish_list_info.product_id 	= product_info_ok.product_product_id
					AND wish_list_info.color_code	= product_info_ok.pro_detail_color_code ");
	ELSE
		SET @selectJoinWishListStmt = " ";
	END IF;
	
	IF p_sort IS NOT NULL AND p_sort = 'instock' THEN
		SET @conditionRestockItemsStmt = ' WHERE  stock_num >0 ';
	ELSE
		SET @conditionRestockItemsStmt = '
		WHERE (product_is_hide_while_out_of_stock = 1 AND stock_num > 0)
			OR (product_is_hide_while_out_of_stock IS NULL OR product_is_hide_while_out_of_stock = 0) ';
	END IF;
	SET @selectStmtStrRun = CONCAT(@selectStmtStr, @selectJoinWishListStmt, @conditionRestockItemsStmt,
		@orderStmt, "
		",@selectLimitStmt);
	PREPARE stmt FROM @selectStmtStrRun;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	
	
	
	SET @selectStmtStr2 = CONCAT("
		SELECT 	COUNT(*) AS total_items FROM ( 
			", @selectStmtStr,@conditionRestockItemsStmt, " ) AS TBL_TMP  ");
	PREPARE stmt2 FROM @selectStmtStr2;
	EXECUTE stmt2;
	DEALLOCATE PREPARE stmt2;
	
	-- Hoa xuan: them de lay thong tin brand D18101601 No4,5 181017
	-- Get category info
	SELECT *		
	FROM tbl_brands
	WHERE brand_code = p_brand_code;
END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
